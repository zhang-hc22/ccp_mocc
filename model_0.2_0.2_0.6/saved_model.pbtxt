saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\203U\231\275\355\347\206>\021\024Y:Tx\351\274\331\217->\300\243\242>\320^E=(v\205<\002\305\217\275Q\3063>\260\t3\276B\311Y<\t\024\264>@}N\276\022\256\212>\227\244\203>\245\324\317\274B\334\322=\037#$>\036=\340\276\213\263\017\276\371+%\274\016\300\315\275\260<\222>\t?\016\275\357\235\014=\362>\212\274\313\370U>\315S\264>z\364\224=\331\013&=C\200\037=\261\017D>\003\373+>\355\033\004\276\224\375[\276\207\211n\274\"\344\305\275\313\210\027\275@\032+=\004\306@\276\250\222\310\276\037t}<\374\004\241\275_\336U>J\373\025\275\200o\234\274\240Z\377;D\030a>i\267\026\276\343|}\276\220c-=g\371\313=\221%l\2761b\237>I\316\314\274g\252\276<\211\355\025\275\016Y0>_\3408\276i\243\024>\232\254\277>\316\356\376<\302\376\036\275h\366\264\275\0238\376=\220\322\374=\364\326\331=\036\346\247\276m\211\226\275LBv=\320\272\006\276\234O\205\276\027\235\026\276Z\247\256=\r\334\344=2\003\t>\313\343j=x\035\340=\234\013\202\275=L{>\3266\247>\211U\342\275Lr\023\275\267h\n<d\3078>\301\275\311>\024V\334=\344\267\320\275\210\006\221\275\356\007*\276J\344\034\276,\374\250=\353\343\035\276\330\270\224\275\024\261x\276\'\247\243\275\345\002\340:\324\246e>\270\236z=#G\024\276\257\355R\2766\355\000\276\233\247;=\252\353K\275\230Q\271\276\212\370W>lnc>\353\033\342\275\354\316\246>E\355t\276\307\261/>p\371W\276\247lZ\274\336\327\224=\037\014\003\276\2142\006>\336\340\037=\336\262\242\276\302Y\224\275\231\005\302\275g\215\334=9\2332\276\331\231\004\276\354n\237\276\201\334\325>\001>\033>\267N\026\275-J\013?\234N\215\276\337\271\372={E\263<\306\322\254\276w\307\025>\023/1\275\301/\372\275\353t\246=\315\205\004\276\362\3451<B\303\237>\020\304\334;(\205/=\344\023\373\274\325?\225=mu\263\275\353\326\263>&0\256=\033j\217\276\020\027\243\275\310\036#>\355\002\244\276\217\206\233\274\021W\314\275\004S}\274`\301\240>\0024\375\2752D\216\275\260s\320\275=3\335<va\330\275\231\332e\275[\230\372=\025\220T\276\232\2307\276\312\310\022\275\340\363\210>$\241\202>&7z\276-:\312\274\355P\317\271@\321G>#\rR\276q\036\206\276=\316#> R\227\274\020?+>GI\260\276d\321\n\274\230,s\275\343\340\233=.?\307\272\244 *>kf4>}\360\365\274\343A8\274%\220\262=\324e\\>~\220;>\316Z\375=\256\336\307=\204\356\322\274\324><>-<\352\274\353e\035>\331T\374=/\302\204\276\032\255\'>\213\373\337=h\243\372=\000Ol\275i\024S\275\024\324\002\276j\334\216=s\352W>\002\266\000>\361^]\276s\314*\274\326\317(=\376\336\244>\\\366\217> *\027>J\211\217<\033[p>\230-t\276\266&\200>\367\270\303>\030\300~\276\004>\244\275\021\313\000>\027\201\215\276\022k%\275~\301\003=\017\354z>\037\020(\276\220\315\353=\2043U=\317l\217\274qO8=\364\r\336<MZ\354<\025\324R\276m\235\321\275\206\327\'<\362\242\245>\311\313\215\276\336\001\276=\246\276\311=/\017\036>.pa>9\236F=\242t\265=\210\241\231>\024\331\316\274\212\250f>\310\213\032\276F\217F>\2248\243\275\351\207\257>\002\006[\274\205\217Y\276\205\272\256\274\231\023\273\274\252\277\t>I\265\374\274\260\304x\276\371I\263>R\'\312\275t\327\023>\217\302\212\275%k\031>\231#\251\275!\265&\276\211dN\276\333\250\207>\372|\224>;\334\272\275\271a\022=[\252\200\276Oiz>r\255f<\326vp\276\020Q\273\275X\366Q>:\202\247>\013a\231=:\216f=\031\3412\2768rj\276\"g\214\276`\326\345\276w6.\276s\226\232\2765\330\371<\337\274\003>\250\274\231=\221)V<\362\250e=\342\031\267=\250_=>\\;R\276\204\035\211\2765\224\260\274\017S\207\275\335\\\'= \337\035\276\346\354!\275\270\350\212>\022Vj<\262\202|\274gA\017\276\311\376-\275\331\242\001\276\005\324\030\275\030\227\345=N\033d>\036%N>\356N\213<\310\307b\276\017\364.=\304\353\254=\226\217;\276y\212\n>\353\342\316=U\035\372\275\247\025\325<\005\363J=\331\350\001\275\343j\337>\306-\204>\006\272m>O\314\007>\036\225\001\276[\321\265\274\351#\224\275^\251\006>d\370\246\274\3770?\275\257+\243=\345\004\247<\206\013B<\036?\216>b\365\214>u_\\\275\002/\246>\301\000>\2740\2516>\001\202\254\275Y\2770>7\257R\274\215)\267>C\006\270\275\203\237\032>h\0278>\246At>\353\207b\276m\270\341\276\035\'\343\275%(,>(\223\205>\365e\r\274\3736\003\276\233\001\220=\314\244\350\274wH\262<\335\204\207\276\003s?>\355\374q=\033Uy>s\370\215\275n\355O>b\310_>\243\362\277>\362\013\245<-0\312\275\201\227\373\273\327\303\222>\251\320\200<\025\352\245=[\005.>\262\203\235\276\2054\351<\275h\016\2756I+=g\213Z\276e\307\024>\326A>\276^A\213\275<\354s\276\242\3301>l\320m\276\352\322\261\2756\253\250=\022h\\\275qF\230\276\013\272.=}\370\026\276e\246\200\275\267\'\250\275\250\323N=\261,\245=\363r\263\275\356\333\251>\320\267\302>\277\370\3759\tD\232<\031\267\033>\017\010n=\335\036\340=\224\217}\276\353d\016\274\301n\267<9\266\032>\370\361\001\275\225\214\006\274M\002\236\275A\271n>\274\3327\276J\217\351=\312\215W\275\242\243\302\275i\300\365\275>\306\357=\206\331G\275\352&\204>\310\033&\276\354>\002\276\373\273a\276\235\261\025>\034h\370=\2622V\276\023D\261\275\270\337\271\276\325\215u\276p\035\313\274\026\210\212=P\3107=\022}\216=\031I\203>=?\242\275Ag\032\276[\251o=\223\221\201\276\205X\343\275\336\246\205>\232Ld=\331U\002?\027\2137>\300Ez\276\272la=\336g\014\276]t\207>\"\337\216>\302]\000\276\272 \240\276\337s.\276\217\301\330\274\235n\016\276\312o\\>\200M\271\275\003\237\270>\240\243t>\275\214>=\347/\177\275}\257~<\310\302\330=\022s\036>jg\031>m@m=\020o\">y\303=>*\244v>\256\251w\273e\351\013=\266\357Q\276\274\265\251\276]\030\266=k\272\010\276kF\324\274\375\252^>\336w6=\274\3532\275\313X\252=0\255C\276Et\236\275l\351\247\275\276\201s>\334\363^\276P\345\226\274\354V\256\276\364\014\277<^\275A>\217\211\255\274\341Ts=\216\243P>\'\013!>=\267\376\275`\247X>\307R\261\276Xb4>J\377\274\275\214WW\276\325bG>\3062|=\267\201E<a\265\226>q\374\231>)U\302\274\212\227\027>G\302\203>WM\243\275\326\363\354=aA\315;\236\n\324<\216\\F\276jFj\276\350\336\201>\340\226I=\337\330\210=F\201\346>J8\306\275\365.\360=A\201)\276\001\374n>\312\276\350>\263(\353\275Z\342z<l5\370=]d-=y\025=\276U\325\351\275\364\231>\276\007ua>K\243\255=M\301K\274s\"\316\276\272\0245>\210\325\014\276\257T\202>\ti\234\275]#\001=\232\2470<\3513\322=\314\000\206\276*\311)>\213\360(=\326\006\317\276\310oG\276\233\360\000>\256V\236>YZ\333\276\272\247\000=\2525+>\235RQ\275\250\004\270\275\022\206\036=\353\010E\275\0208\\>a\224*\275s\230\241\276\322\203i\276c:\363\274\030=o=\341=\352\275\274\230\270=C\t\203\276\354 \272\274U#\336\275\312\365\374=\006\272\354=G\327\301=)=J>\344VT=\303c\277<\220\266}\275\255\233x=\223\034K\276\257\227\034==\236c=%N\224\275\3434~>\325<!=\325\331\372\275\2661\230>P\262#>.\023\242\275P\361\037\275\034Kk\276i\233\270\276i\353[<a\033\316=\276\315O\276\276\241g\276\233\361\233\274\315$\265<$Z\272\275\334g\301=\275(\302=dE\n=`\330\036\276_\257\352\274\302\027\222\275\243\264\226;\255\272#\275\260\322\230\275+\027\230\276\231w\235\276\016.%>\214\266\356>\252\357\004\2753\034\263<{\302\243\2765\271\356=i\273\223\275@u#>|\355\204>Gb\311\276Z^\201=\271@\241>\\,\254=\223\274\014\275@q\252\275\312\322\220=\r$\254\275\355\247D\276\240\0254;\200\255l=h\213\311\275\325\223\247=n\026\246\276\222L\'\276\250N\351=\2312\226=@\207\227\276\303V7>\216\305^>\207\316/>\rmN>\213\016\374<\t\340\r\276\225\366\202\275\032_R>\246\013->\376u\361=\222dp=\217\353#\276\22550=/\032\250=\024B\022=u\031]\276rR\224>\213\254h\275L\337\360=E\316\017\277\2649\r>\240\314\342>W_R\275\252\027?<\370\314\267\275\342P\016\276.X\242\274\277\225\217\274\006\355\316=1\377\n>\332-\"\2765\2649\276 \275\026\276G\007\235\276\270C\221>\2060e\276\306\260\371;\'\336\306\275\364\264\337=\224\320\312=\036t\361\275\240bd=6\177\251;\264\356\327;=\270\263\275\321\307\020>,!T\276\347U\023\276{k\326<\205\200\325\274\340\344\004\276\334\371\265<\243\2346\276?\367\376\275\357(\032>1\313(\275\003\261\026\276\371{\003=\350Hx\276k\016\035>\270C\200>\231\002h\274,\307\230=?\3528>\211D\305>Yf)=m\350@\273\031V\305<\004\017j>\305 \352\274Xx\346=P\311\244=\350%\234<\301F\310>\356\272\220\276I\323Q=\370w\221>\212`A\276\302P`\276\232\262\034\276?\226\231\275\306F\271=\230\314L<\310B\255<\311LS\275\266]}\273\255&@>\255\374,?\364\226\245=\\\342<\276\t\234M>\350?\211<F+\213\276\024\216I\275\3350\243\276\221\366\364\274\001\335\202\274\363>c=\214\346\t>r<&\276\"\037\322<\237\234\033>\302f\347\274`\226\347\275\360\261M\276\231G\240>R\377\020\276\003]\027\275\2161_>P\220z=\253:\276<\315-\006>J_\r=\320\254U=\300-\224>g\020\261=\346]\004\276(\324\313\276Y\314\035\275\360\214A\275\017\257<>c<\373>dl8>(\r\301=\304&\262=8\262\203\276\257\352p>\035\224\265\274\036M\303=Dv\212\275C\177;\275\211\310\022>.\220\323\275\332o&\275\364\2142\276\345\272<>\002E\330=\034\3727\276\233\366\247=\232^\"=\013\374\323\274Y\207d<\214`\363\275\014\214\266<%<\033>\\W\307=\336\213\036=\246:\254>\350s\204\275h\204\270>!\005q\276b\035\364=~\257\225\276\263\001A=(\340\013?\365\000$\275dQj>\321$\020\2750\357b=\024\374\377\275\000_f\275\234\3514>\271\t\376\274bsL>L\223\362<\020X\271\2752\207\210\275\322\027\375=\307\343\252\275\261\250\341<\220h\215\2761\003\207>=<K>\n\311\374=a\362\265=&q\271\274O\247M>5\037d>\203\030]\274\035\r\020\276\021D\347\275ZG\256\274\261\264\020\276$\247\236=]\201\313\274\227yC\276g\261\021=\370\225S>\022!\240=\250\234==\341,\022\276K\221\341\276\"\177\215>+\021\344\275f\000p>\'\346\304\274\200\360k>\314\312\202\276\203\"\376=(P!\276\"\241Y\276\334G\234\275`\357\327=\3676\345\275\023c\206<\013\254\276\275\261\370\033\276VA&>\"oT\275d%\313>9&\005>\236\343\244\276\261pN\276\373\271-\2768\211\247\2764\201f>B\370\342=\030M\222>\210M+\273\3438\374\273\274P\227\276\200\222\366=sm\201=Z\001\375=\302\246\014\276\207\014\013\275w\232\014\274\034\261$\276\031d\224\276\'(=;\364C\204><\253\264>\271o\310=\360\363\211\275\250\375\n>\014\310O>\244\010E>\324\355\355\272\316y\002>\335\200S\276\333\024\017<\302yM>B\332\340<\3375\233=\360\335(\276\264\202 =!\312\326=\'\375\017\276\244k\256=\372LN\2767=\356=\3617\257\274\264a\361\275N\262\235\276\224.~\276\231\365~=\310\202\003<\3278\365\275\3004\210\275\311\007\265=\014\344V=\270\375\023\276\\\013\321=\263\0016\276\030\325e>D\307\300\275\031Q\260\276\t\304\334\275x\276\241\276\023\316\037>\331}\016=g\220v=9zA\276\342\r\343\275\363\367\330\276\004\024A9\374~<=\346Kf>\347\341\245;\214\267\212=\016\365i>S\n\014\2764+T>\217\375\321\275\224\360\250=\317\371\253>\201\253\033\274\254<\310\275\345\337T>>\003.=\220\355D\276\333\264?\276>Th>\027J\376=\271\2647\275\223\025S\275&\3739\276\334\351O\276\037\324\301>\\!>>\261=\247\275\211[*\276\235v\370=\177\356\256=_\333\262\276\210\331\215=/sX\276\277:\200\275\030}\306\276\237\3444>\304m\232=\357\034v>\322\270\213\275`\270\325=\320\372\224\274\352Kg\276\323\222\314=CA\251\274\321\323r>\354\364\"\276\305\252!>\0028\210\275\177Z\370\2759\300\237=\336J\203=G\177K>J7\325\272\261d\003=\362w\316\275\203\321\373\275zK\214\276\201\266l\276=\237\242\276\t\325/=\022\267\004>\026Pj>\345\207\273<\337,=>\021^\250\274\332\220\220=\210\315\256>\006h\215\276+\220\350=r\3017\276R\256\340<\250\323{\276\237\315z=|\360t=(\240\246\275>\037\222>n\204\270;\370oi>\316\013\227\2769\266\227\275xg/\275\274Rv\276\017\206^>Xt\367\273\366a\370\272\207\036\003\276\212\274T=\030?(;F\226\237\274\365\235\350\2738\360\241<\002h\306<\244\270x>\241\220\t>\206\215\020>o\322\037>\307Z\006<^B\270\276vF\037\276\227\026,\276\324\347\274\276^!t><b\214>Z\\\265\275\225\331P>k\2541\276\235S\017>K>\023=\337~8=\212#\004>s\346\300=:\324\310\274\034\264~=\207d\242\276\301K1>&.\335=$\257\203>d\347W\276\276<\216>{\336{=)v\344=\376\203E>\374]\247\275L\304M\276\246\347\311\2750]p\276!\177\235\276\256\030$=\010\341\221>(FE:\036\013!>?\342\"=\303\300u\276\264W3>\202;\003>l\021\247\276\271\025\266\276\327\302\034>\304 F\273q<\n\276\336_\277\276\306\010\252\275\334z&>\303\305\221\276\254\335\016>\313\331\213>\002\350\335=\264\313D>\212\254\234\275\225\360\001\276\354\033J\275\222\353\014\276\243\245\250=L\277\031\275\216\3133>l\224a\274\312\360\201>\364)i\276Ow\361=\022,\234\276\271\3472\276@f\203<\211\376/\276\003y\246=\351\3232\276\333\356\210=\303\370\217\276\275\360\004\276\3348\213>\326\213\307=~\2515\276\266\341d>:\221,\275\304\324\265\276=x\313\275\237\036\212\276a^\347=\303\200\324<e\2113\275\246\255\232\275o\rV\274\223sI>(\003\025>\355\330\260\275\315@\366\275\222\346\240\274\006L\324\275\235NF\276\356R=>\331\223\020\276#^1\276[\256{\273!\207\257\276 \016Q\276@A7>\317\'\256>)\n\260<\002pV>\224\375\223>w\214\254\275\242\373\201\276\227}n\276\005\351\261\275\230\007\024\276\257\210\302=\034@\222>]\341\334=\030\"\224\274C\017h>E%\002>A\237\335\275n\264\232\276\351\177->e\340z=t\375\377=\007\237\304\275 \200\201\276B\207T\276\037\2362\276.\262\312\275\n\373\017\276\337\000S>\357J\023\276BW\202>XD\217\276\251\215T\2761\214|\274\274\000t\276\261}\242\2764\013\202=\014\260H\276\357\233\223\275\3748N<\004\365o=;\301I\275=\001s\275\240\310\003\276\250^\212=\204\365\021\276a\2711\275\254\020\204>:\311j\275\022\271e\276s*\205\275i\022\232<\205\016C\274\276C\003\276\r\301\272\276\367\'3=\277\376\001\276\032\214\031\273kR\001>a\022\211\276U\'j=\370&\032\276\332\340<\276\223\256\241=\333Tx<:\310\234>\305\026o\276\306\t#>\260\2612=\315i}>\035\2570\276\264\221\322\274\325#\216=/\340\246\275\330x\006>\316\0258=B%e\276\0263\375=M:\224\275\246\300\203\275\347,[>\313\212\037\275\023(\211\276\350\r\003\27565\227\275\274/z<\r7~=\230`\310\273\226E^\274P9\201=\022\2004\276\256~\224\275\347\366\024\276\355Dz\276\206\262j\275*\177L>5xm=&\262\212>\263*\244\276Q_}>\254s;>\236\274&\275+\327\262\275\273I\304\275?Y\207\275\2015=\274>\332\277<Oh2\275\177\n\013\276\377}\377=,\205T>\270@w\275M\262\252<x\007:>\005H$\277\210cV>\336z2\276s\267G\2762\3050=BT\330\275\t\004\312=\027H\003\277\251\264\002=\237\221<\276,\274\022\276b\336\355=\245\204\265=\032#\372<\177@\353\275\310R\340\275\352e$>\225V\265\275O\334\344\274\332b#\276\032\266\244;T9\r=`\226\210\272x:k\275\016\027<>P=l>\213N,=\352B<\276\037O\033\276.\315\025\276a\035\">\243\013(>\212\357_=\350\030I\276e)\217\275\355\246\225>Rz\206<\336\250\240=\211/\202\276p\321\315\275 TS>r\333V\276\031]z\275\000,\220>0\316e\276\300\347\310\275D+@\273\267\237\247\274n3\327\276ds\376=\2061u>\264\241\216\276\266\300\227\274\277\'R=\224X\346\275\007C\267>Rl\354\276\035\232$=mj\273\276\375\036\256\276\304\330\027>\321iz=\362\275,=\300\005\206=5V\n>M\305?>R\235\253=\361n3>\216\3633\275O%:=w\373\372=\"\240\354\275N\214z>?\335D>\372LD>\267\211\377=h5I\276[\243\260=\335\232u\276J\350\211=rC\274\276\330\t\373=\027\362\370\275\315\014\340=Fz\021>\335/\252>\262O\374\275rm\'\276\347\300\234\276\013\316\227<\033\254\'\2763d\331=\216\t\235=\3341\304\275\\}\327>?\213\221\275\223\204\233>7cl\274&\273\023\2751\357\034>\235N\203=?\001\010\276\323\242\365<\247\270\017\276\343S\341\274D\010\340\275\243\351N>EK\345=\361c\332\274\036h\344\275\302\232\003\276\202u\207<\211M\342=\302\321\007\275\332!k;\326\005\224\273\340\017\311<D\246\325<c-\276>\267*\204>7\276\301\275\002\202\245=\026\357\320=\0051\266>Ck\247\275\357g\022>m?\307<\303f\316\2754D\203>\365\026\200>\243p\236>-50=\247O\302=%\226\365\275\275Q\201\276]P\247\276\'\245\007>\311\203\360;\211#-\276\217A\222\276 \031\035>6\341\222=\324lg>O\313\227>\3444\037>D\314\263:\360\252}=jJ6\276vkx=\261\251\014\276\333\362I>\333$\205\276\245\023|<\245>,=qL\301>\240\003\027>\000Sq>\337\273\010\274\032\337K\276\353\257->Vh\340\275\001\030\217>\333)\264\274O\223\'\276\262EK\275\016\225I=o\240\202\276dV\242\274\014NU=O}\321>\350\270\304>k0C=\022\356L\276\334\005\273=\366\217\030\276\231\036b>W\3543>\326i\270>6\230\253=\376\227g\276\266fz\275\307\211\r\276\204s0>\321\231\211>\234\255\211\275\247\254w\276\027\2067<C\033Q>\246<\247=\202\314\336=\r\027m>\257\205A>\250\352\242\275V\206\367\2752\3048>\264h\322=\215\037\021=\265_\216\274y\023{\276\213\276i\274\217\200\002>\351R\301=\307\033\013\276\te\246<\356t0\2746q\232\276\307\200B=\360(\324=Q\333B>j\311\214<\336\267\204\276\177<\330\275y\030\243\275\220\346\036=\265?/;T\276\343\275\351\226\320;\262\025\037>\2236\313\272\363\274\325\275\325\334\361<Y\230@>\032?\034>aI\026\275\273_\000\276\223]X\275\245\217\275>\302\352\350=N!\010?\017\304U>\010\317\3769gQ\206=\013-\210>\'\332[>\220oB\276\274\313\315\275z\360\343;Z\"\034\276\255*k<\233\035\234=\206Q\263=\322\201\242\276t\347z>A\241\010;^\313\304>\375\002/=\366\264}=\016\262v\2767\236*>d\366\021\273\222\303)>\211\202\207=/\357f\276TxA\274\n\375\314>R\007\376\274\313\2656\276\231M\">\341\344\321=\227\347;>5\205<>\346\005\231=[\026\321=\311\032\006\276:d\211>\311[y>\021v\206\275\364\330\010>_\035\337\274\241\267;\2761}c\276\036W4\276\230\037\265\275y\334\r>)\322\211>\360i)>\3529\022\276{\232\351\274\026T\365==?r\275\201\311\203\275\236b\025>\241\036*\2729\254r<\236\224J>j\326\316=\026\320\356\274\355\002\302=\210\211\030\275\367\336\002\276\204\322\205>\264m\002\276;\021=\276\343\354+>\347\355\177=\307Mn=\3558\244\276P\262,>\302P\335\2753\275w>\305|\207\276\267\324}>\3554\036\276\313.V=\303\217\266=0d\234\276\330wK=\344\243\000>\300\230\201\275\003\207^\276\027\244\240>\177V\240\275&+\214=\377S\223<YE\204\276\312\373\017\273U\301\257>\257\227 >e\351\236=\334\314\032>\320s\210>\016\003;>\240,\370\275\220\013F\276~\341_;\304\301b\276\210V\275>\263\257\211>\322\'\311>_k\205<\030\307\376\275aM-<\234\266\270\274C[/\276a\367\007=#\001\362;\364\261\277\275\274\323h\275-)\357=W\232\201=c\277E\275E O\276?q\376\275\216\"\244\276E\215\007\276N\354\t\276W\371Z\276~=\272\276\204\026\036\276T\026\236<\003\336L>!\354\365>\264\n\240\275J4(>\274\332S\275\372\313j>\351\010h\274\351 \201\274\243\344\220>p\375\200\275\313\360\242=$\026\037\275\276\240!>\277\363 \276\0051\000?C\305\215>\243\274\021>\264w/>\247R@>\347\336T\276\335\257}=j\007\224\276v\242\222\276\254,\325=4h\023>\200\246\027>\337\002\'\274B2\232;L=\241\275C\\\303=\253M\030>\347\357\223\276\273\227\230<\rW\022>*\311\372<\'~\217\276\030k\205=\226\n\307<$\021A>\032\216\310:C\301\347=\300A\333=\247\310\014=\330\271@>\316\037>>\010\210r=\337~w>\\\263\331\275\025t\201<\355\365\004\276v\"\311=\256\375f>\300,\217\275F\374\252\274\232\037\207>>\327\244<p\334%>\262W\233=)g\336\275K~\301\2759xV=d\220\364=\321\314\265\276\352\266i>\371\236o=\322\230\203>\261\001Y>\231\303\235>\234\177s\274\355l\200\276\232\256\205>U;p>\3620\326\271\\\037h;\312?8>\313\226\340\275\305\\\226\275\033\365\013=1\334K>~\272\227>\362\331\265<\177!\254>\311\344~\275-\275y<\326\325\200=\323\227\255<\333\372\221=\340\266R\276t[\252\274\023\177\270=\255\216\270>K2\364\273\231o\365\275\216d\032\276\010#\301<F\273\261>\372\t\266\276E\277\024\276l\305)>\200ee>\r6#\276\347\222\311=\351o\032\276\035\315\233\276g\322O\276\034\264\\\276cl\201\275\200\323\006\274\000\"\327=5\210\324=\277(\204\275\231\376d>\335\336\014<ESz>\033\317\252=F\201Z>\330\235\035>\220\317\254\274\370BD>\236\351T\276\341s\237>Y\3125>>U\211\2760en>~\327n\276\207\363\270\276\302\014\002\276\350gn\276\322\254\220\272\223\r[\276\204=i\276\0000w\276\021\177\023>Q\223\236=s\333\271\275\225\303\323=\345&\315\274\\\334\n\274\034\327\277=zC\243\275\272\014\235=\273D\235\276\346q\201>\024\323\361=\343WX\276^\370\213\276\326W\021>$\220\351=\rd;>\224\\7>\233\324W>\216+\301\275\200TG=\231\273\363=R\235k<\030C\000\276\0378\304\276-K\033\275\020\313\000\2760p\240=>\233/<\237\3221\276\350T0>j\210\217\276!T\246\275\323\306V>\316\010\244\275@ \263\275\3356\201\275,G{;/\3262=>)\034\275\376?\274\276\177\004\205=\345\276\255\276\253\273;=\337dO\276\231\345\351</\304\032>\275\n\221>\271\277w\276\242\346\367\274\361\022\316<\275pC=lY\355=!\204`> \024\335\275\227\333A\276R0\264\275k!\000\277\263\373\221<c\244E>he&\274\337\327\2009uz\204>R\335\243>*\256\226=\221\265E>L\271\024=\334}}>f\325B\274T\033\220\274n7V\276w\337\306>6\3678>>\362w>c\336\201\275\303}\006=\266\273\022\276\364$Q\276\214\033W\276b\305}>!\031\245=\007n\016\275\004\265\305\2756\226\023>(\004[>\243E\247\276\'\r\002\276\300\212\326<\206DT=\235\263\221<\000EE>\tU\000\275\367\3353\275\254\205:\276b\020/\276L%\010\276\241nH\276\247\245-\276\2279/\276\343\361$>(\026\017\276\005\200\277\275\273\033/\2747s\307=}ZU>\331\211Z=\315%K\276\030\007x\275\'K/=3!D\276$\303\255\276Nl\351=vK\240\275e\t\265\276\361yS>,\302X\276\212m\225\275\354\231\005>\264\215\265=I\204\200\276\254\014\273\275\253\004A>_a\213\276\022B==\377\375\017\275\213$;\276\232\247\360\276\217\377`\275|\317\036>\311NP\276t\245e=\354\321(=\020\366\254\275\177\324\030>\362>I>N\304\020>\245DM>)\202m<\t\261D\276y&\216\275b\202\222\275r\377\315\275\343`X=b%^\276\031\321\303\275\202i\217\276\227\277@=s\241\243>\240\223\326=M\031+>\314FM=\373\325K>\032\375\343\275\031\034\243==\252\200>\307\227\200\276\330s\312<Dd4=\306\221\331=\001I\213<\370\274z\276\246\223+>\340\345\242\275g\367c\274\344O&\276\360\222\321\275\010\202Y>\322\265\276\276\200\325M>\367\257\245\275c.\230\276g]\307=!WH\276\200\261!\275\t\314\n\275hf\201>&\005f>\270\033\235\276\345\336\010\276\315\211>\275TA\376\274\353b\364\274\311*\350\275?\366\020>g\251\336\275\r\2154>O\340\215\275\250\233\242\275&\2344=nc6\276N\311v>\267\314\344=\202\3724>t\265l\276t\335\237\275$\245\025\276\354\2479\275\323\221\017>}\243\353\273\342\310\210>l\311\333\275MWb\276V P>\266\336\343=\273\315\000\277\332\306\227>\010\310\305\275\345\017\231\2754)\300=\275\251\005\276$i\345\272\237X\312=\330i\251\276\"O\311\274V\222\205\2760\316\246\2758]\014=\003E\221\276\222A\202\276\224\214\010\276\2254\201\275\344\3048>\266~\177=\261\177M>s\362\367<\374\'\'\276\256\307\257>\264\364\213\274wWO\276\211>T>Z\351\264\275f\341H>\340~\032>\342\002\250\274\371\2229>\364\232\322\275\352R\211\276\005\322+>\n\347\277=\025\353@\275Up\316=\010\256\234\275\347=\"=4D)>\027(]\276\263\215\307=\001\332@\276\276\271\247\276w\242\202>\376\037\237\275,\017%\276-\376\025\275f\301\256\276\221h*\276\227IT>\023\005x\276\336R`\276\357\333\275\2740\231\240=\301\267\224\276G\035\024\275\314\307,\276+W\207=\007\026\037\275\2135\255\275\375\025\215\276\260\236\006\276L,&\274}\251\024\276\36043>\331\210>>\3165\266=\201S\225<[\352\254=\345aW\276\2746z>r3\013>\0172\322=\223\222=>\207:\002>\374\226\377\275U\013\271\275\2153i=\323\362\030>\tr6>2\303\262\275i\336,\275]z\033\276!\r\355\276v\276\017\276\004\240\236>\301\272\360={\300\335=;\310\200\276\316\344\236>:,\205>\226\304&;\222\361\343<t\365\314\275\2117\177>\204\256\246=\016\343\345\275\276\245\243\274\223Q\326\276\'\211@\276\351\330\310=\341G\206\275\025\311\203\276\360\202\336\275o\246t>\231\245`\275\326\370\342\275\355;\313\274\352d\'\276+\353b\276\234\231\021\274R\203p\2761\037\310<\254\327\374\274\231.\307\272\202\253\232\275\366\352\020=9\352\261>\220\006H\276h\220I>\036R\272=\347X\255=]\302Q=\275\242\005?:%*\276r\257\002\276\266\016\247<^\302\314<;\247\255=\'\220\"\276\376\267\r\276v0w=\251{\233>\031\243}<\330\272\253\275}\324\312\275.F\224\275\375\177\365\275\227.\356\275\034\346 \275\302e\354\274c\262\347\274[\261\260\274\251\223\020=\271k_>\323\311\016>7\317r>\202hS>\252\247\347\276\356*l\276Q\236\234\276\007\037\003\276\315ES<\302\314\201>\023{8>\266Y\023\276\365\365\237=2\247\301;\204i\301\274\274\320V>\333\004\022>\220m#>J\330\376<\366\236V\276\331\0257>\332x\247>l\216\213\276NP\201>\201 \230\276\376\237\014\275\325[\320\275M\334\221>\217^\343\271\251/R<*\"Y\275`\336\246>E\363[\276\003i\201>\266\317\207=\267\302_=\212\013\002\276\332\300\254\275\010\016\257=\215W\260\274\001\375o=b\204\215=\260\332\210=E\3225\275\231\t\016\276>\253;>\330\\C\276\r\224l>\246\232\021\276\200\037k\276\2265\301=p\016\020\275\231\307\241>9K\347<\313g\016>\301\ty=?\370\370=\350T^<\354\023\006?GZa\276\220^\333\274\367\312\373<^\214\230\274\233\307\255\275y\253\221>\002\321\332\275K\347\231=\347\354v\274\276\035|\276+:s>\006Z\203<x\346\235\274\024P\244>\245\026\200>0\303\224\275\213\307\216=\352\356\\\276"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\247\2654>\372\315 \276\260<\305\276S\210>=\016\214z\276\326\377d\276\315H\272=\234\326\316>\344AP\275\276\2156\276u\251\351\275\350\242\256\272Bm\246>`\311\245<j\310\003\275\023\261\261\275ks\202\275-#\207\276>XS\274\032c\223>\364\265\330\275Z\021\325\275e\247\256>\001\362\330=\203\262\232\275SN\265<\241r.>\r\323\2229\276v,\276U\323G\270\020\000\000>\005\332\326\275\024w\003>TTt\276\313mj>}\273\300=\2642t\276\316\177\331\2758\376$\276tj\'\275\207\016y>>\366\212<\017\361,\276\016T\227\275;\216\034<\025\271\364<\205\216\205\275\363J{>\035\211\020>\241\021\345\275\213\303\036\275H\006G>\326\336P\276A\316p>\222?\304>R\225\025\276\034E\243=\364\305\241\275B\241\007\276\002\270\340\276\254\232\034=N\241\014\275\361\2316\275\321\246\002<\235\355\246=\240l\340\275+\316\221>\311\252\217\274\317O\321\275S\346\232\276E\342\336\274N \n>g\206\036\275\364D;=\344\016;\276-)\233>\021\243M>\360\217\205=\311\220u=%\365\235\275y\212\362\274\340\2449>\036\367v<\314\345\210>+\022\200\276;\017\251\276\254|\263=\201C}>\013\274&=m\333\275>I^\000>\247:f\276&{w>0:\352=\355\266\243\2751Zk>>:\034=w\2520=\222J\245\276\305\353\345\275\375t\002>\030A\243=\033\347\354=$aM>G\256)\275&\306\025\272\225\031\236\276\240\244\027=\214U\001=\203z\350=\016t\271\275\312\205\334\276*\361@>Y\274\001\276\375l\007\276\322\023/>\272\202\227\276\215\350\"\276\3352\246\276\244\316\t<BL\376=\262=\360\274)\030\030=`\025\257<r\203 =\331\215V>Q\010,>)\260l=\200Z\003\276\016\313->\234\177\357\2758R\370\275~\177\262>\354 \027\276\030?x\275\026\324\211>\341\"\013\276\257\306\364\272\221\367\261\275\326\037?\276\221\340)=\226\364$\276\327\377\031\276N\336c\276\243\324\202=\006ec>\014\000\031\276P\341\013\276\202\213\307\276\375|\340=\222\226y\275\213\310@=\211R\362\274\271\373\004\276\376\374\r>\026A1=sQ\264\275p\226\214>\250k4>ex\301\276\205\3540\276\313nB=\301\336#\276\211Tp>\346\237g>\306T\203\276!\270\">\233\302\226\275\216\205\241\272\317S\276\274\324\034L>@\3242\276>_\374\275\017\253\306\276\235?\241\276\205`\251\274\005x\026>\342\216\303\275\014g\261\276\362\266\342\273k\306\354\274E\265\006>9\306\277\275\300\355\203\274\223jy>\272?\205\276]<7>E\331\351=\r\316U\275\336\203\n>\324<\305\275\240\371\304\275/\213\003=S\034X>\337\177\220\276&\2367>\317!\252\275\242\255\326=]\017Q\276<\214\320\275=\270\336>2D\'>\236g\217\276\237\177\215>\346Q\252=G\214i\276\326\034\022>BYX>q\304\275=\000k\271<\346\237\n>\023\2254\276\232\177\272=\214#\266\276T\311q=\3278\005>\316l\375=\255U\006\276\20556\275.[)\275\202\336\205<\235&0\276\3351\354=l@\207\276eP\004\276\267\355\272\275\005\357\300\275$\235\325\275\250@\362\274\377\222\253\275\006\273\224>\231L\214>*mE\276\352~\203=\244\355\331>\204\347\207>\357\210`\274p\'\031\276{H\315=\212\2028\276\313\344z>\216v\271<-3\007>\301\301\023=\242T\227\275H%\263<_h\235>\276WU>\006SC>M\310\010\276\313\370F\276n\001\336\275\372}t=q6\272=\203f]=M\'l=8\337?\276\214g\247>\311\202.\2762\313\200>I\265\306\275)\277,>\2334D=\370 W\275H\002\257\275/\330\315\275\316k\365\275>\014\317=x\232\212>*\220\242>=\337\203>\356\355\226\276\023\223#=\375#\">\342\375\335=:\002\246\275\216@\233\276?\222\256=\221*k>\333\026\235>o\364\310=\325\337\350=?\343\227\276b\320\031>A\260*\276\206\206\264\275:D\274\275f]T=\025\013*>\252}\373\275\372\034o\275Ch\322=y\365\004\274\333\365\021\276\025\367,\276U\317\313=-\265\334\275[\n\345;\034+\013=U\026t\275\305\366\321\276.cA>\343\3505>\204E\032\276\032\275\r\276\202Ki>\023\223J\275\352\352\243\276D\313\026>X9\365=\331m\235\274\265\177\324\275c\300\201\276\201gO\276\2349\257>\240\020t\273*\016\023>o \273\274\216!\231=\263\021\022>\343*\207\276\305+\002>_1c>\010\361]\276\2026(\276\027<%\275b\003\357>\001\257\213\276\t\023\255=\0348D>d\325-\276m\374\356\2746\212\224=\212C$=%\337a>+\301o\276F\316\354\275\241w\316\274\231s\006\276-9\034\275\177\224\272=\345\002A=\260\256\355=8F\367\275\023\253\030\275.\335A\275,\262\035\275(\215\274\274]\023\217>\220\340J=79\334\275\313\225\223\276\336\270&\276p\001\204=a\'\335<\237\347\364=\247\013C\276\207\226\t=\244\271\n>\311tE\274\006\r\265\276\333{j>r\355\364=\243\332\000\277\365\340f\2760\220\257>\342\261&=\177c\016>\274/\236\275:\336\242\275\341\252\002\275\004\352\226>\360|\r;\370\031\225<\247\2371\275I\021\017\2757Z\226>\325\371\330=\372\354\360\275{\262\232\276>@\262\275\272\374:=\021hf=]h\234\275\234\027\357\2758\276\375\274x\313c>p\301\250:lMJ\276\035_\233\276 \324\204\276\037\2464=bSX=\333\245\005\276Iyr>X\206\300>\300D\324\274{\315?\276\034\244\034>jCE>*l~\276\251\177@\276\205\t\217\274\234\032{\275\371%?\276t\216\206>l\3363=\245\036\253\276\350V:\275\372\240;>E\022\271\275B\253\320=p\022\">t!J=e\315\340=\210\254\241\275\203e7\276i\311\370=\201Io\276\256\031\317=s\362j\276\004<\005>\303\3745\276\377\375\251\275\035B\272=\277W\335=\037\251\343=\345`\252=\000\340_\276\362\262B=\374yV>\rCP\274%f\251>\n\217x\273P\267>\274,H-=}\211s\274\273\343\247>h\315n>\0063d\274\267=\007=A\026m=\177\316\261>\362\353\205>P\354\212\276\327#l\275r\367%\276E\301\220>np\231\275\034\204t=\311\354\371=\330\366\322\274r\312\323\2766\320\203>dZg\276\3469\240\276jp*\276\221\303\207>,\372\274\273\307\004\227\276ulb<y\275\225\275?D|\2765\322\354=\'hU=\212\361\201\276\201\331)\274\255\212\246=\341|}\275\007\307\232\275f\006\331\273\007j\355=\373\373\263\275\371\267L>\002\355F>\217\025\030>\267v\037\276\212\244}>t\375}\275K\242\321\275=\220\356\274\254J\'>H\311\354=.\026;=PU=>\024,p>\026\005v\276:\014w=\273\346O\276\317\232Z>\341l\365\275 \225\010\275\261!\006>j\312)\276P\352\355=<\007\252\276\027\340\034=\373\tj\276\364!\246\275#\271 \275A\021\227>\300\213J\275*\014]>i\356\232\276\371\213\017>\215\261\206\276\t\003\270<\307\211\r\276\276\2176>\235\035\371=I\270v\276\031\tl>\373q\207\275\376\017.>\334*\002\275\2220\313\276\rm\206=\337~?\276\274\345x=\014\304\020\275\276WM\2763\335V>,\0002>\rw\324\275\017\255\201>\373\021\223>P^s>!q\315=l\254p\275\245\220\327=\275\347\234>\205\030\332\275\020\007\016\275\211\314\327\276_\375\245\275t\204\244\275\3468u\275\377\226\204\275\304l%=\237^\272\275}\241\r>\325\241W\274\260\352$=:~\216<K\373\266\276_\377\271\276\242\275^<\016\321\036\273\354\220\321\274I\341i=P\006\272\2765\354\'\276\355\272\227\276\373\"\223\276\361\215\350\2744\334\003>\003\376\254=\305%(\276\255\021\302\275.\tG\274=\226\354\275^\333\230\276;\246=\275\235\017\216\275m:;\275JR\236<|Z\233>\325\253\366=j\002\335\274\376\220E>\333\333I>\022u\371=g0>>\213\264\207\276\337[\223=\202\246\020\275\216]\023>A\245\365\2756J\355;\201\343\327\274\245\364}>\336\0239=\033\230m\276pX\236>=^\350\274\321u\205=i\300$>\r,P\275\2469\214>?\371\003\275\261\205\333\275\006\325\200>\2660\257\276\203\365\307=\376^U<5\271a\276\255\273\033\276D\321\317=1W\215\276q\207\242>\206\031\207<\271\204\311\275\362_\311\275\342\221\316=1<\362=\377\362\204\276huQ>\233\337(\276\3471\330=\014\372\260\275\356\212\260\275O\227\274\274{\027\335\275\037#\026>\235\263R>\263(\326\275Z\234?\276\217\372\203=V7\265\275C0\200\276\2723\023\275\200\311\245>9\330\230=\t\372\033\276\264\300\227\276\030\254\311\275x\345\021>\220\206M\274\327\210\022\276\245_\202\276\177\226~=;K2<o\250\235\275\224\311\215=#e\320<f\273Z\276^z0=]\354\021>\303\216\025\277\373\002\376=\216LL=\001\337\006\275\214\255\014\276#\224\301<La!\276\272\r-\276\202\302@>\336\341_\276C]\244\275\231\345\360=\014\213H\274\305\331\035>\350\365\037<\2264\202>\031-\312\276\005\315\325=\nk\342=6\331)>\225H\227<\023%\257\276\355\210\215\275\267\264\205\276\217n\013>\371d\321\275\316\263a\276\343\336\004=?\227C>wx8=F\352\267\275\350\'\n\276?\254\227\274\373\264\203\275\311\241\026>T\313\273=%\t\230>9\311(\275$\250f\275\375\257\t=\226&\246\275e_\010\277\303\334\363=\022\217\355\274R\001\276>e\371S>_\365#\276\273\177\203>\330m\354\275\366g\266\275d\260\301=\274k\032>\361;\246\2761\225\216\274\231\r\r\276Z a\276q\300\275\275.D\t\275\243KO\275\354\333\373=\332\3224\275Z\213\250=\"\302B\276\243\256\276>{\303\233\275\261$R>\026\227|\276\300\335\267;Pf\204>#\347\226=\323%\303\275\302\310\220\275\021\226\310=j\320\303>\302\270\002?8L\n\2768\247\034\276\333\216\010\273x\261\335=\257q\014>\307\002\261;\202\322\275<A6\370=\210o\010\276\336\207w\275\314x\201\276\277q\325=\226\237\253\273\342\365*=\234v+=!M\331\276Q^\270\276?k=>\263\232K\275kC\313\275\035\205\023>\322\320\235\276\253g\272\275\301f\013>\341R\205\275\\n\313\275\3102\">\304\322%>\221(g=[{P\275;\272\006\276\022\370<\275\371\333\213=\311_\201<1%\333\274Rv2\275\212\203\027\275\270\0005\275c\036\203\276\304r\002<#0\345\275\214\243\205>v\264\221=3O4\276/\3176\275\257$\'\275\000\237\232\276A\236\207\276G\355A\275\226\341;\276\225\005\245>\336\367\346=\217\250\274\276\200j\243\275\n\276\245=\037\263\222=F\267\024\276\254@\222\273w\366\235\275QR\370=\274\271\354\276\207\214|\275\225\336O\276\234h\'\276\016\031\356=\355\207\363\275\177I\333\275\303\304\325\274+\245\364\276\225:\004>\260\371\335=\202\017\030<\253\364\375\275\203>\205\276\320\376\345\275\177t\026\276\300\027\214=\036;\225=\"f\226>\t\2276\276^\227/>\236\356\203\276\026,\036\276\212\216(\276\3508\250\276\332e\203\276\365\242\213\275\243\031\037\276\200FG\274\274(\274\275o\244\363\275$Vg<\234\322\030\276/\261\007\277\035vK\274\346z\005\276\332\245i>k\2202>\217\276\217\274\217\345\331<\236~F\276\216\266\372<\220\312\260=\034\351\r\276\204\363F>\357\305\335=\241\325\'\276\022\276\206\276\337\230\231\275~|2\276^\301.\276c\326\214\275:\215\327<MVl\276`$J\275J\n2=\211\363n\274\224C\177=\223R\244\275\256v\301\276\0102\241\276K\016\367\273 \306R\275\004\315\250<u\t\013=\2549\025>\300\013\261=\201d^:\273\313\265\276\022sJ\275{\002:\276N\317E\276?\005\373\275C\340\313\275\037\211~>\302\271\025=H\265\236=\231R1>\"\266i\276`5\000<\223\215\327\276\025\324\023\276\370\200\317=\356-\241\274Y\027\227\276\ntz\276\306\260\027=\307R\010\276~\222\206\275\230\246H\275\316\333\200>\344\"\300\276\321\024z>\360\334\022\274k\300`>\361\t\003>^D)\276\365[\333\275\263\010f>\342\300->\206\350\355<\322n\213\276\275\'\003\276\371\354\222\275\255\014^>\n\325\227\275Av\002\276\272\204\223<\275\222G>\250\224\207\275f\034\346\273\000&];\\\337j>\356h\026>\224gF;(\255E>\231\314@>\241\347v=\324\3406\276Hq\"=\004\371K>\322\211\271= \306\222>\000U\031<\275?\001\276\030y\236<Q\027\215\276\317:\322=\241\262\241=b\323\311>\317\275\217\275v\265\213\276E\2756>\240#I\275u\343->\305R\205\276\203\3466\274\270L\244=\007=\363\273,\322.\2762_\261\274\324Pi=\000\215%\276\277\027\016>\226!\340=v\203a>\365\310\216>G.\005=k\005\002\275:#\204=\342\371\307\276Q\360\032\276\000\330\246=\333\250\365=\347W\255=\004%\257>\260\351\225\275\034fP\276\373\340\003\276U5\215=\227;\014>\214\374\300>\211\026\337<\2707\203<O\344\261<\236k\372=\023\312*\275\273\376w=\346g\204\276u.3<l87>\275=\003>\306\212\320<\264\2347=\300\0176\276|\223\234\275\267Rk> \205*>{\275\231\276\033l\004=\223\317{>K\207\022>/fh=\206x\206>\375\357\305;\013/\310\275\037\345\367>\270\2409>\213\362\246=\352\023\214=\303\321!<\006\315\307>\360\007[>\231\234\230>\223P\341\275\327\306\337=\246\203P>\373\254\003>\353\243\316>\027N\t\276$\342\n\276\363\276\262\275\255\r\362\275\036\021\222\274\250\227\256\276F\352\365=A\340\334\275%\tQ<\024\010z\276Zm\244\276\331.M=z+z\275\n\262\373\275\331\205\014>\221X\203>E\353\201\276\221\nt=\351O4\276\264\357\241>\001X\234=\013\275l\276\364~\202\276\005\312==\']z\276(f\256\274\373\311)\276\317\035\332\274\352\034\211\275w\266+>@\330I\276\337\334\020\275\257\252]\276_\352\345\275%\220\006>\352\374F\275\230\235K>\271\004\252\275\345\207\221\276I\302\337\274c\272\277\275\325\034\314=\200\215a\274EB\200\275\207\000\215\275\220\352\360\275\254\372\374</\034K\276\270sF\276\313\375l=`\343\023\276\222j\257\276\360\006\237=\037E\017\276\325)\001=Y\247\205>r\352\332=\245\360p<\355|\306=\201\240\264\273*ku\275\374WD>\025\317\236>X\234j=R\244\303\275]\246\272\275bL\311>\255@/>z\256\274>\031\255\254>\026\367\007>\211@\016>\210\370\024\276\010\024\025>\321\337`\275\242\210\252<\230(\274\276\323\344\225\271\315\362\027\276\231\336\250\275F\250r\276\367p\241=i\310k\274\247\274\223==X\212\274\237\003\215\275\236\250\265\275\204l\224>\303\255\230={\364\372>\276\332Z\275\344|\344\275\365\'\346=)\226x\276\024\353\211>\247\255\253\275\301\247\310=\233\257\204>7\037<\275s\304-=+\201\030>u\262\325\275#`\327\273\257{\311=\223hy=E$\366=5x\344\275\2748->\272\221\017>\335~\240\276\356\322D\2761y\225\276\023\177*>\277\371\270\275\257\377\230\274$/\326=\276\245*\276>2\362>:6\260\275\255@\036\276\335\324=\276\335\345\027\275\206\214@>I\014\323:\335\240->\356\371Q\276N\2104\275\356H\022\276\265\227\267\2766\\\350<\341\337:=\352\330\035>\360\344\177\2763(\372\275\267]\0379:Ja>\264\003Z\276?\322$>\350\205q\276\n\201\307<j\247L>\000\315G\276\251\266\246=\342\220\344\275\020\330/>B\350\234\275\313\310\r>a\342\200>$\226\214>\376\246\202>\203 U\276\355\210\324\275\237\251\025\276\226\371>\275\251\244\214\276&I1\276\347t\207\275\345\250\224\274\026e\256=\022\\\212>\372\317\370\274B\t\376=\306`\230\276\334\0210;S\216\357\275\244>\345\275\320/\310\275\351\025\035\276U5y\276\260\377\317;\233\303\t\275\231\177\006>\307\343\035>\253\020\261\276\314\267h\276wu\000\276kJK>\026p\004\275\245n\252\275\371/\024>\032\340\212>/\010\204>\030\206#\276^\3223\276[\021\333\274\200\237\247=\312\243\223\276\341)\215=\003\262\327\275\033W%\276\275\374y\276\270\020\322\275*.\262<g\207\321\275\007\201\177>\256\237*>i\220\036\275+.y=\227\372\'>\331\336W\2767{\324>\314[7=\034\351t\274[\003Y=E^\034\276`\375G>\2753\'\275\0072\322>\023\237\250\275\303R|>m\031!\276RV\260<\006mL>$\361\021>Vn \276\277\030\321\274\251r\350<g\242\307\275lq\001\275\216\334,\276\336\231\017>\273n\031=\356\0342\275\241\363\274\276\3608w=D\332>>\277>o>\350\345\017>z\276\032>\027o\002\276\223\035\255\276\257\353\273\275\343\336\222\276\344\2159\276R\277\314<\364]\027>\251\334q>\302\030\372=.=\201\275<{R>\034F^>h\315\311\275\315V^>\344W\211=\033\266\007>\212\206\317\276\203\000\220\275\361\255<\276n\205=<J\271\311>\3721\335\274\307\341\014>\'fA\276\341\301\030>m\243\303\275\306\005\276=?\314H>\231\214\017=\203\2455\276rY\200\276cI\217>\313\342\250\276\257\205\361\275\330\322\331=\004\036\373\275N\0220\276\375\233w\276X\227\r\27659\276\275FX\337\275\337/B\276\000\363\'\275\016E\244>NH\200=M\362U=#D\203\275\375h\257<\020\000i\275\003\321\016\276|\024\021\275\234\265s\275\232\354\274\275e\300H\276\215\207O>\3333\n>\024\007W>I;\271>\206A!>\316f\242\275\316\337\307>\202\242\000\275\020r(>P\231L\275\254\227J\275\246\265\030=\270\347\342\275F\"\364\274m\300\211=c\t\337\275\275)P\273O\303r>\346 \220\275\214_5<0\311\275>^\033\263>Mr\201\275\274\216F\275T\030\205=\317N\351=\261\034\304>&\003\321=\347\305\237\275\234\033\300<\217{\273=\217\232\007\274\243\340\330\273\237\330.\276\2443F>\203]\355:\226\022w\275Ra-\276\244\324\033\276\310X\221>/\360%>k\342\306\275\221\311\253\276i\332\231=\037\261;=^1\177\276x\2547\276\221\202\340=7\253\'\276\311KD\276\303\356\014\276\261W\364\275&W\001\276\rYh=\254\306\205\275\017>T>e5\022\276\216\313\306\275\245\363\243==\377X=\332\375\266=%\270\241<\260\013\\\276\311\316\210>\t8\257\275\006O\260>@\267\236=\266\353T\273Dp\216\275\023[\270>yk\242>\006\300\005\275\337\343n\276\276\3654=\364_\022>\3760\266\275\254G+>\022\270M\274#\367\240<*\036\201<\353\343\210\276\275\330\n\277seF\275\206\273\003>\301O\230<\313)g>\001z\031>\025\307\t>V0\201\276\231A\325\275\221\265\213=&\n\313\274tz\322\274\013\362o>\261\362\224=J\263\332:\267\371\367=\362.Z>l\2427>\350\327\010\276\370\265\234\276R\007\210>~\033\251\276\3149\003>{O\202\276\216\255T=\342*\306\275\"C\303=\351\2025=\277\2719>\034A\372=\365i\032\276\rt\004>\300k\220\275\267m\237>]P\226>\337&\006\276~[\t=7\016\010\276Q\337K\276\373\273J>\374\317\202\276\365\313\222\274\001\225\246=\236\255=;(f\t\276\354H\007><N+>V\336z\276#Q\307\272,\310\205>B\355\366\275\020\2166>\302-\037=\003\203\221>;+\342\276\350  >qDw>i\216D>ub\027=wk\\\276\313\022\013>\354\355\350\275\277\023N>\212\234\356=\207\221\371\275x\231\002\276fsm>\222\023\024=5o\005\276_P\273<\234N\310=\266\302\232>[\3573\275\350\364\326<\212\231\250\274\311\327\254\276`\343\300=\211+\355\2756\326\254\275\243.\033>\354\233\006=\217V\376\275W\375,\274\322 \376=\245\246\303\275_.\216\275\317{\037>\317\202j=j\332X=h\010\022=\202Z\325>\222M\221>\361\250\002\276\031\3414>U_A\276?\236\227\275\223\220 >\243\260\317\275fn\254\275\243\344\365\275\226#\242\275^B\310<=\033\304\276\363h\030\276\372\034\214>\243!\210\276 JD>{\231\211\276fZ\276>-\0271\276\205[\326\275#=\226\275\367\371/>\rkf>)Eg>\243\3424=\322\225\n\276\366\352\022>b:\333\274\362\262x\276@\312!>\301\026\330\275\010mG=G1\371<[ \325>(\335N\276\351\3644=AD9\276.\226W>\302;\230>N7V=\nLg\276w\217%\276\230\246r<\270\372 \275\224\254\216\275\377c`=T\014\210\276%\264\\<\257\027\035=oE\300\276:\343\325\275\356\347\273\275ah$>\341f\024\274\217c\024>_U\207=\342\265\375=\371u.\276\335\3207\2754DH\276\247c\210>m\310\343;\353\354\024\276\364\306r>\257\204\221>\357\250\362<\241\357\322=\200[+>b\323\354=\331\252\315\273\346@\212\276F\201\036\276-\306\374=}\352\260>\311n\331\275}.\333\276,g(=\227\310L\275p\206\361\275\037V\004\275\362\310\020>\276w\231=o\370>=\201\032\214>\351O+\276\3215\204\276,\007I\275\307\252\006=\203\004\220\276&\357?\276a\334:\276p\304a\276\243DF>B\324\324\274\222\"\307\274\020.L\276\024?\275\276qN\353<\214x\320<\306\235\330=2\260\016>\'<]\2761\213.\276\ra\210=\240\020\274=H\335\017>]5\225>\356\3477>\234\0036\276\030\210\257\275\347\371\201\276\203\212k>\257\243\017\275\035q\326>@\277#\276V\007S\275\t\363\375\273/\te>`\225)\275.i\020\276\233\245\032\276\244\327e=?3\332=\237\304\203>\340r\270\275\016\254H\276c\3577\276\022\332\200>\303\272E\275\016\350\204<\\\260\200\274B~a>\036\204\315=\031\332s\275\364\014q=\264\020.\276\035\313\035=\251\217\356;\004\204\250=\021\024+=\352G<>\373m\274=\371\274v>,\214\321>\324\2175\275\232\247\231\276\017+<\276\326\244G\275D\270\275\275\367j*\275\314\370\032\276-\013\273=\204\343\315=\020v\262\275\2224(\276\314o/>h\311@=\241W\027>0\227\236\276U\225+=\307#\007>8\367\233>\022\365s=9k\030\276\346\037\346=\277\2245\272\020^7\276\343\215\022\276*\363C><\\\262>6F\360>w\2479\276\323\025j\274[\270G\276^m\036>\'\351#\276_\244\311\275\217\242\260\275[`\353\275>+\342\275%\000p>\312\361\374<s#v>X\203\275=\210wC\276\017t\273\276+\031&>\000}\263=\225\340\247>w\330\216>c\321\361\274\321a\331\276\312Z\205\275)\346$:[\\\013\276\235\213\022\276:\010p=\303\305J>\202\332\270>\037(\003\276\217\317\310\275\236\277\212\275\356\376\013>\035:\230=\355nr>;\316T=\367\300\236\276X\214\343>\264\003b>\255D\202\275\323z*\275\300\031L>\002\327\">p\326H\275\301\252\214>6\355\030\273\212P\377\274\374\205\236\276yi\275=\221\270*=!,$=\014QH>0\366\201\276}\266\205=\007u\273\275\007,@\276\2563\305=U`2\276\210\240M=\326\332\325\275\021+\371=x%\3759\261\256\267=2P\220\274\260\334\352\274\007E\362\275d\366\227\275\025\222\255\275\275\341 \276&\305\332=\007S\277=\207\231\370\275\361\362/\276\243\375\253\275S\350m\275\245{\024>V\277I=\264\212\207>id\302\276\206\335\207=\215\320\344\275Ws?\275\017~\177\276\033\020\260\276\301L\222\275\"\250\365=\345\325\263=I\235\330\274d\204\204\276t:\273\276\346J\250\275\227\241!\276d\3331\275\036\014v=\000S\016\274\207\'K\276\374\354/<\242M!>L,\226\276\034@\304>\260\030\356=\016b_\275\263\257\024>\277+\270<\214\232\017>d\214\262=\244L/>\356\334\026=2=N<\311\325;>z\213\020>\212\353\213\276\275\330\232\275\376\276@>\315\312\004>\325\353\237=\0310\021\276\250E\373<\240\260G\276\275\352,\276\033t\367\275\206\313\023\276\311\017\260=\030\330<\276\014l8>\251Cc>\312U\210\276`~\311=f\016\022=^m\006?4\030\345<\352\253\013\276tq\023=\375\306i>\255!?=\337\255\030>\304\036\020\275\275\311\340\274\243\345\010\276\022\225X\276y\373}\276\301\203\354=\035xg=p\341\324=\024\314\317\274\205\335L<\002\350:>\361\336\301\275`\215\214\276+U\271\276\375\024\375=\252\353\\>\364\263\265\2766\362x\276Z\374\226>\335\340\217>G\357K<\276@D>\010~\020\275@6\340\274\216IJ\276\255\016\025\276\355 `\276\355\261\213>\244\244U\276\234u\017>\024\260\023\275}v\301\274\211\336\207\274\254\255\r\275\377\356)\276BdD=L=\300\276\333sY>]\370\315\276_\030\353=\262T\363=G\2546\275\333\245\n\276]\031\360=\363*\365=\345%\317=\314\321p=\277r\033>>yy>%8\254\274i+\314=\332}\355=4f\246\276d\276\232=ae_>\225\016\372\275n[O\2750\374D>R\"\353=N\275\025\275\242\324\354=\023)q\276\234\227\267\275E\277X<\247$3\276@\"\274\275\330\276\014\275\347\321\032>\341j\000>\372\300\000>\266\032\001>1\001|>\2048\232\276hec\276\255`\220=\240-f\276\"\360\260>P\245d\276\217@\343\275|)!>\355hL<}\t\357<\344E\013>r\245\275\275@\351\254\276z\340\017\274\035J*\275\007\271\275>%\345\344>\275\025=>F\341\311>\016(\206=\324\027\021\276\257N\031>m7\365\274\tm\274=I\231t<\200,\007\276=\2240\276\237\363\256\274@\305\251=\353+5\273\354\345x=\252w\022>?-7>\334:\220>\207\341\203=\360\204E=\223$\255=\20752>\0363\332\275_\316W>\256\2708>^8\r\276#\245\243\276\231\326\260=h\3147\276\346\204\360=A\036\343\275\351\"-=\177\273\321=\317\273\224>`\225\000\276\226\366\300<\030\356\227<\263h\301>L\263\221\276=\233(\274\016\033;>]:~\274\242\2616\275\'\250X\276\267^\225=\213\353\266\272\372\210Z\276\341\3300>\350\305\334\275t:5\276\272\216\215>\206\310\t>\006\343#>\227O\234=\030\320|\276\013\003\367=\004J%>\352B\245>Ao\023>7c\206\275\n\330\333\275Be\301\275D\n\\=s\211\304;\312Y\031\275\315;T\275u\002\221\275&\213\200>\255FE>\333\010*=\305\177\216\276\321\t\024\275\273b(\275\311\021\250\275\276\002\273>\302G\203\274\257df\276R\210\r\275\237\340\203>\273\352\210\276\022\313n>]\221\230\276\374Z\251=\331\263\247>\205#\026\276\246=\331=\r\247\240=c0J\276bA&>i~\242=P\300\372<B\261\356\275P\327U\276\324DA>\021;\025\276\217(j\276\352\033\022\276\246vy\273b\001\255\276\374\375\356=|N\243=~BO\276\324|K\276g\311\376\274\314\210\272\275|\201\257\273]k\013\275L\021\340\273\342=\226\275p\372\375\275C\274l<Ve\020\276\360\231\275=\005~\215\276r\226]\275\260a\217=a\206\256>\314J\205<Z<\327=K\313\252\276`~\332\275\205\0045\276\363\310\360=\225\026:>\226\347\034\2763\377\361=4\000\204\275G\340j\276\217\251c\276\370\027\337\276+\3012\276\243\350w\276\230\371\261>\3633\331\273\307N+\276\230\376\214\276\357\233T>\0074#>/\236\032\276\356\377F\274\211{\356=\316\314\010\276\005\336\212\274\235\351\262=\034\342\345=\242\345\325>\253f\211>\035\273\206>\"\3027\276\301:h>\302\263/>\272b==\034_%>\276\277\233\275\312\t\021\275\277\257\007\276\371n\346\275\347%1>\205p\020>\304\177{>\371\344%\276\263s\000:Z\353\233\275\205\037\361>\335\204N>LEz>\346\254\007\275\305\024\025<N\270\205\276\303\216\212\275M\025\251<\224\264\326\2756\031\214<4\233\265\276\314\"\010=\024<\007>\002u~=k\257\207\276\353\202E<9\240\233=-\005\001=DU\244=mE\233\276\332\217I>\331\3605<\367\316\366\275\237\216U\276W-y>\226\215R\275{\273\207\276/\220\307\276\372\006\355<\250\235\032\274T\331C=\371\354\025\276m\221\375=\025\316\262\274\375\312\253\275\257~\320>7\273O\276\325\353\027>h\002\324\275\032\356\202\274\331<0>!\364=>\360\224N\276@\257\n\2751\025\311\275\007g\232\275\322r\016\276\"*\027\276*J\312\274L\316\276\275\032\3246\275P:=\276y=\317>\264\021[>`$\233\275\217\204\">;\203\000\276j\"9\275\324\004\204\276\"o!\276\330$\004=\017w\214\275P\005\342=\272\234 >\021\223\375=f\303,>\353\177>\276.n\005:\224B\t>\352oq\276\272\307\275\275X\252\350\2731\t]>\3214{=&X3>\000\177\313\276\025G_\276\377\317`\275\321u\362\2753\005\212\276W\2210>\337\023\\;\007\376\203>\201\325\005>\333\377\252=\221\021\222\276 4j>\321\362.>\372\'\236\275uN\253=Lq.\275\234v\255> m\320>\362v\022\276\256~.9\373\260\217<\224\322\304=\352\241\025=\204\001\006\276hDv\276\272\027\355\275\360\216\221>\262>\326<\032\257\006>\271\037\037>\346\035\007\272\276\026B>f\2278\276\224`%\274/Y8\274f\255\327\275\234\250X\276\321:\341\275\210\304\261<a\326\307\275\347m\036\273\226S\270=\220\217\376>\034\3757\276\035(L\276\371\3654\275\234\247X>n\177\320\275\232<.=\312\263&\2761\370@\276\353\326G\276@\023\304="
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\376=\031>\360\004h\274\266qx=\373\352\026\276\227\016U\276\355\271\340<\223\360w>{\035\200\276\301\3549>T\001\207\275Of\273\273d\277\206\276LID>J\206s\276\217\220\026\276x\007V\276\266;\372<\262Ag\276\313\206\010>J&$\2757d\222\276\"\232u<\366\t\245>J\031\241><\023_>\320\360d>E\256\327\274+I\322\275\224M\240>\2702C\276R\262a\276\261\325Z\276L\244h\276\201\232\265\275qGA\275\005\250L>j\013G\276\277\303\274=A\354\242\274\357h\000>\326\'\220\274\313\031\326=\365\320\031=\243N\226>\361\031\037>\035m\373\274\374N\264>\327\031j>ON>=\312b\300\275_6\260<\026\362\202<]\277\013>\331\232\030>\"\261\025\276\355\211\223<kYG=\020\226\307=\223\323|>\"0\234=\211u\207=\000\212\344\274\277*\003>\037m\376\275\0223\021\275\302#3\275\3372\240\275\344\036D>\335a\364=\016n\302=*%\341\275\220\224\367<\341\260\320\275\322\003\024\276\022\245\240>\265M>=k\275\324=\025c\274<\n\2055\275 \317\306\274zL+\276q\366\t>}\377#\276\033\030\372\275!G\350<V\207\221=\316\310.>\016F\032>\204xd>\272\310\024>K \313\275\213\216F>#z.>\242\026\266=d>-\277t\233\377\275a\023\345\275\361T\006>q\337\352>\\\310\224>}7\213=dZ\207;\0278\">\014I\022>\311?\307<a\200\034>?\304\230>$\370\273\276Ap\264\275\266Y\203\276)\265\244=p\275\026\276\206\317v\276j\210\247<!\275\230\2760/\004\275\177^\277\2760\013\277=\025\304\372\275\323\033\003\276l\225\251>\035&\303\275#0\230=\327Z\316\276i\021\312<7\324\236=)+$=w\226O>\022\221\373=\222\242\224=\363\365\243\274mR\260\276\016\031\231=\227\005\264=\325C\224>\271\025\340\275\314\246.\276I\341\251\275\222\235\246=E\020\224\275\270\260O\275\332JB<\260\035\214\276\351X\322=\344x\006\277\344o\231>\217\263\007>\361\366y<\312K\264<h\002\220>\017\360\202\276\274bK:\326B\262\276E\337\371\275\373s\271\276\370\340,\2760\031U\276\245\302\021\2768\275c\275l\243\206>\037\201\204\276\231V\366=6B\203\276\321~\207=a\263<>\031P\315\275\032\033\363\275\307\325Z\276D]\261\275\363w\264=\241\247\260\275\301\261H\276\030\212\205>\215[\213>&\357\265\274\026\272\203\275\301r\020>.\002\033>l<\217\273\363}W=\nM\216\2755\340\307<\3763\313\272k\024\226=\371\325X\274&\351\r=\337LT\276\224v\204\276\003\023\r>\342\014\241=\035\327:>{\315\220\276\304\366\353\274\315\350\240\276\014 x=1\032\204\276\217\007\255=\004\215!\275\212\320\264\275A\251\004\276\022=\267\276\317B\226\275\360\r\222=uPU\276$\316T:\231}\364\276\337\261\310=\031\234V=\236{\277=\330\3473>$\213&>Z\271\006>o\031\274\275\357\302\336\276\270w\254\276\313\033&>\005\n\331\275\256N\006>g\315v=\377@\212\275:{|\275<}\005>}\334Z=b\nx=Lv\340\274\321F\267<\226\333\224\276Y\325\226=a\262\226\275\360\375\306>\026\266\037\276g\362P\276\236hE\276\366eE=\277\234{\276t\003\303\2753\007I=\320\347\237\275W\277@;N\364\310\275\326-!\276\030\350 \276\247\305\254\275#j\267>\244\341\031\276\275\261\324=|\235\251=q\026\235>\230,\375\275\256*\031\276\367P.\276\373|\310=-(\333=\275g\022\276\333\024\024\276\352\037[>\356\331H=\220D\267=\001.!>C\3234\274\351\022^\276\216\335\243=5jJ\275!+M\276\215\341$\276+\345\360;\277.{\276\251n\331\275\334\005\036>\237w\007\276\370\207\\>\254\2174>S\366\362>\017\330\342\27597\364\275&\237\036=\241\366g>F\262\307>\025\336\255\276\215\3361\275b\366\340\2747\333\036=\276yW>\005O\t\276l$\212\275\000\3710\276\270\312\225\276\024^{\275c~\344=\033\314\222>\356|\237\274\321\375+>G=\016\275\260\034U=g\003/\276Qz\013\276g\347c>\373\2377\276\376\025\024>t\020\240=Q\321z\276>\303\243=\2750\350;\331\002~=\233)\311=i\306E>\211\306\235\276\240\005\202\2746\"\027\276\320\266\025<@\013\310\2766\303\024>\342\352\004\276\306C\240>u\262\024\275c\327L=&\342W\276j\371_\2768c1\276l\246N\275~T\211>\016F\227>\354\200\003\276\277.@\276\003\235\n>\342\232:>\270m\247=\363\206!>\212h\260=\020\\k>\253\201\001\275\235\rM\276\303\260\253=\225\207U\275\214\332\036>\253\265\316>\264\271\000\276|\245\241\274\333\272?\276\343\0230=.\0364\276\367\377q\276\r*\t\276h\337O\276\3043\013>Q\nw\276\313\350\025>,\234\356\275\336t\374=\271\225\013=)#\037\276!F\\=8\032O>\246\350\376\275\335\356==]0z>\274hB>OL\255\275\t\0232\273\257\031\244>\345\307\347=\n\372D=\364\t(<\261\026\306\275\371?0\275\337\343\326<J>\030>\"\2023=\227\355\267\275<Y\235>\215\230\004>$.\251\276\364\336\302\275\224sw>\241_\241\276\366\207Z=FN%>\347\352z\276\201\315Z\2767:\224>*U\'>A\345t=\034D\232<f\253o\276\004\035m=\221\327`\274Kw\204>l\362f\273\030\240\221\276{\227w\276[\343\220\274E\007\257\276Y\0166\2762\270\234<q\372\214<\026\305t<8O\353=9\373\341=\375z\243=C\324/=\255\002\205=q.\275=XX\203>W)\264>\023zn=~a$\276pJ\215\276E\032\000\276\215\243\270>\222\301\212=\327\n\n\2756\321\033>G;N>\315X+\276<\267\307\275\342hv>\222*W>=\247u\275\251\271*>\242\206\236>\251\272\255=\002\304\362=T\222`\274\334\334/\276\301>\374=\032\251\033=\323\234\325=\320Z\344\275b\017\264>\017T\210=\311/~>s\321\222\275\024,\255\276\256\241\374\275\321\245\300\2762\217{>S\311\007>\0162\300\275\323P\021>\333\330D>\364\032\002\276l$W\276\346\014\314=\362\354\244\276\241\203Q\27692\375\275\346\216w>\302\343\211\276\344\031\240\275|.\376\275>\317w\275\256@\035>\350(A\276\325\277>\276*\377\000\276\343\263\232\276\336\232\200>\016\301C>2\312\215<\326\375\350=\226\025i>\224\345\032>\202\236J\276W\232;;G\352|<\tu\230>J\242\207\274z\271\235\275s>\013\277\217\362+>\310\304\020\276\317)\205\276]\037\242\276\3102T>\321J|<\276>\200\276\360\300*\275\235\035\235<\354\005&\276\316\344#\276\001`\204>+\032C\274\373C\243\275\005\272\243>RCr\276\311\304\017\276z\221:\276\026\227\030\276w\333\245;\325\027C\276\3356\362\274p=\234\276\032Yw\276\017\305\237=\374\200a>P\235i<\230\235\024\276s\315\276\275\241\352=>\274\277\236\275\200+N\275x\342\372<\305W\327\275G\325\245\275\000\357P\276\265R&\276\325Y\272<\247\336\032><\200\240\273A\014\222=r9#=\265-\364=\237\220\271\275\350/\220>\264&\211\276\236\226\010=]\020\370=FT\\>\200A+\276\256\270\014\2765/\201\275y\004q=\342\020\341<b\361,\276\302\303\317\2769\310\203\275\226a\215=\265\227\302=\274\275\266\275\221\322\350=\242X\007\275b\035}\273\2106\004\276\223\201<=&p\330\275{\337\277\275\244\367\021\276\255@\347=i\n\264>\264`\215>\303\331\345>\t\036\322\275#\372\335\273\223O8\276{\301\004\272\334\227\271=Q5\241=a\366\301;\002\355\262=A\243T>\356\r\n\276R\346N\276\017\236\365\275&\343\357=~j\203\276\027m\236=\351\247 \276A\026 >\346\276:>FY\214<A\035\301:\331\353\337=\252\267h\275\276\356\260=\374\002O\275\r\214;>+\312\200==\2177\276\256\217\354=\350\004\014\275)\032\234\276N\033A\276\243H7>\220m5>j\n\350=\356J\220=\226\2210>~\022N\276\014K\344\275\217\000\276\276\230^Q>\262\263\226=0\0047=FUx\276\205)7>\260\247#\276\275=\037\276\177x\\\275O\242\314=\261\355%>\220rQ>\213\314\226\276)\333\r=]\375\260\275W\324\215\276\262Z\027\276\0141\237\276\231\201\020=\215\225@=\275\231\275\2763\'\014\276\272\303\263=\205~R>\256\254\006>UF\201>\202\031\332\273AlF<\007*\001>kq\002<g\010U>^Q\232\276\177\306\214>orN\275\275\027t\276Aq\265>\220\234\017>\202\355\034\276\211\211\324\276\324\330\021>\345Iw<\345\324^>SoQ\275R\327l>\256!\371\275x\266&\276\275\027\217=\200\004P\275Dt,>\357-I\275*\344|\275\215\353d\275*\200\234\276Xj?\2769\344\226\275\270\016\337=QJ\203=\364\2569>3&D\276>\002/\266;\310i\275\312\252z>\375l,\274&\277\022;\201\202\031\275(\'f=\355\214\004\276bE@\275T\246l<\354E\017\276\224<,\275\225\222\204\275\326\377\006>\263\277J\276Y\303)\276\212,h\276.%[\276\263\031\255\276\300\031R>f\301\036>;\234f=;{f=\303\216>>\352\334\220>J\305\204\276\177\227\r\276F\351\302<\222\222\301>\320\330\313<\225<\373=O\242)=LQ\263=P\032p\276S\210\344=\335\355\313\275Z\206\255\275Y\0177\275\037ar\276\357\245+>A\037^=]/9;\n?\030<\231A\001>\315\tX>\206\222\207\274\344\3309>\353R\017>Vs\201>Q\030F\2769L\205=,uE\276pY\037>\254\345\344\276\024\\\246=\006\232\266>\374\\\355<\316u\367\274\314\034\377\275\334\254Y\276\003Sh>\342\031\303=\2306r\276\304\327+>\204j5\276\367\335v>;\230\367\275\301j\031>&?\336\276\3170\020\276\000\270\336\275\256\221\221\276\250\005\321\274\321U\264>O\3071\275\264m\373\275\244\276\035\275I\202\365\274\r\034\035\276J\332\033>\177,S>W\345\206\276%\331}>\024vr\274[\004\334\276u\234%>\230\356\202\275\367d3\276\355\036\353=\341M\210<\320\254\300=\300r\231\275W\303\177\275\370\310Z\276\035\201\373\275G\331\363=\242\214\211\276(\026\250\275G\024\331=G8\361\276!\204x\276\330\275G\275\350,\t\276\260\264\226>\266[\236\273\034\367d\276E\222\200=\035}>\275C\007\017>\035~\036\273\341z\262\276Kve\276\212Q>=\336!Z\276\333\371\242=w\326\000>\305\205>\276\346U\013>\301<\373:G\333\323\274\010\312 =d\003\320\274_\2553\275/\377n\276A\374l;\361\250\300<\037d\243\2767\256/>\000\374\247=l\t\322\276\351\007\\=\036\342U>%\231\263=\323]\217\276\225\342!\276\343\202e=\257dS>N\223$>\303\231\201>\3411a\276:\310\204\276\211\317:=\374\221\342\275\342L2\275\252\330-=\235`L\275\226\211\255\274\356\345c=!a\303=\301z\304>\372c\335\275(\206\001=\373\016#>\202;\020>\215\362\201\273\221%==l\366\217>\004\307\030\274\\\007\220\276.\373\312=j\2573\276\031I\026\274\255\303\021\276\215\2108<\321\375\224>\234\375\242=m\030\347\275\377,\333\273S\220\204\275\327%=>\337w\236\276d\357F\274\274\344{\276\244\031\301\275\354\303\241\275\306\024 \273v\375>=\000\371\220=\211\336\235\274\236r\310\275Z-e<o\353O>\302\216V\276\277E\230>ls~>\0026k\275e\262H\276\007F\315\276N\305*\275\303^\353=\353\213\005<\003\001\030\276\202W\353<\374e\256\275\276\336\204\276U\002\257>\304\270\237<>dl\276N\236o>#\324^\275\351\277\202\276T\000\273\275\014\310\234=\313\\=\276\254E\025\275o\016\301\273bv*\276\256\371$\276\314\006~>s\347\227\2750\275\216=\252\232\275\275\301\023\205>4\314\256\276\260t\307\275;{\344<\203\247F>0\022\317=\251\230\323\275\302\232\217\275\322vK\276\364\0004\276FtQ>\376\273\325\276\315\376u> \340\312\275\3065\207\275\350\272F\276R\\g\2764\237\215=9\343\266>}5\276\275\006kT=u\212P\274\3044\253=\320g\227\276\210\321b\275\3519\322=\360\034\206>\0175\317\275F\347~=8!\215>\037P\351=h\027\006=\004a\352\275P\027s=;2\206\276\330Y\206=\313)\320=X\317\242\275\t\334v=M\000\347\274\306\344\244\275M\005l>p\026\013\276IT\225=\356\322H>l\335\310>o\377\207;\"\237\231=\301\021\013\275b\331;\276a\327+\275!\313\244>\215\030\014\276\023\032;<\311{V\276\257x\007=8\010\211>\244O\303\275\273\024\245>]P1\275\350t\362=\206\232\037> B\340=m\245\322=\306\034\001\276\321\023\214\275\214^\036=*\202+\276^\221\350=<\260\250\275Q\004\274\275q\262;>,F\245\276U\017\312=\262\306\037=\214\205\237>\023\3418>i\340O\276\026~\007\276kc\274=\261bw\275\013\376\010\276\24382\276\360\204\336<Q\347\027\276\272\032\213\272\207\354\007>9{\004\275X\323\240>\000\273\203=\305\372K\276\362O\235=Ut5>\2502\212=\347t9=]\221K>\375l4>\313\346\266\273{?\033>^\234u>F\007\223>\252(\344\2751T\345=\341\032\245=\013\005\007>\276\tU\276\373\033\326\275\272E\253\276\354\244\353\275Lr\310=\230\350\276\276\267\222&;NF\022=\265\021\255\275q\003\224\275\233_c\275\320\001\207\275\360\242\010<\265W\"\276\213\242\224>|+=>\300\336\250\275=\202d>\360\244\275\274\223\002\203\276p=z\276\322l\022>\246\373\252=\276\005\356=\221\036r\274\030\300\323\276\321P0\276T\311C;y\266\223\276\310\021\222<\2121W\276\256\217\024>\325\341M>\241\021E\276\003\274\230\275u.l\275\3042\r=\270\252\263<n\320\235>\372\020\027\276!HO\276\203\375\002\276\357}z\275\3154\202\274>@\200\274w\005\243\274\005\353\023>_&>\275\030\335A>[D\241=X\210\276<\211[\226=\374\362\315\276g\031\332\276!\021\236\276k\371\261;Ib\006\275\226\323E<\2422\031\276\324t\204\276\020\270K>\261\031\222>`\313D=\001\332\347\275\324(\256>I\301G\275F\305\211\275\201%\035>\216\322\372\274\205\300\377=\332\"\277\275\371\362\022\276\371\260\316=\263OS>\243\235\372\275\3469\242=N\330\272\276\244\022\362\276\253;\301\275.\003\203\275\310\362\263=v\273e=&=_>dxo>,\275\315\275\307\313\212\274\300\304\222<g\345*>\013\363\314=\277\370\236\275\314\342\204>`\266\374\274\221\365\240\275\360\305\354>\001\256\014<\216\007\304\275\rn \275,N\213\276\302\031<\276\000o\025=\246\327\241\276\025\205\246=\376\247\035>\345\204\220>\336\354\027=\033N\276;\217-\202=\376l\254>\027\355\030\277\'\233s>\334\277\027>\027\t\265<\375\221;<\0306L\276\317c2\2742y\'>\326x\226=\223:\256=\371\014\347\275\246\202\334\275z\227[\276A!\322=\306\371I\2766\035E>H\353%\276\262\003\256<p4\006\2764\205\252\275\230LC;\r-\023=\324\030\344=.\244\302\275\214\202>=-\\\243>\257]\276\275P\305\226\274\220\'\366=)\320.>\002c\324<H\312~\276\346l<=\'\356\265\275Zl8\276\334\264B\276UR4\276\367\300P\274C\244\352\273oUC\275\'E\307<\177\016l=\3555V\276\226>\274\274\277\372\250\276o\312/<\252n\330\275 \030E=\373\371\037=$\272\"\276\005\325\344=\315\277|\275\332\322O\276\221\203\216\276E\341\221\276\270\322\261;\301N\347=\313g\007>c\355<\275\006\017\322=Qh\347\275\300\310\215>\271\337\344\274/\271\005>\001~P<t\327@>d\020\254>\'\273\350=VKz>\237\334D=\014\253\270\274 =\231>o\276\022>9L:>\266\226\350\275LT\266=8\363\032>u\363\226;\306$,\275\002h\001>\331\336\252\275\007\017\313\276-\276j\275\275d\212\276I\251\213>\374\276\026>\241V\212\274\300\223a\276\200\177\350<\261\335\254\275\261\333h\275\345\371I>\034\360\247>\025`A>\245Y\324=\261\245Y>vF\251\275\251\335\202=\212FN\276\366\312\204\276\250\202\200\275\366\246|\276BP<>60\237\275\tX\346\275m@\027>\206\r\264\275n\272\362<\3463\177>\362\335\316=I\304\375\275o\241T\275\227\302X\276n\321\304\275\265@F>D\342O\276\375p,=1\206\316<-<\303=\336g\021\275{\022J\274W]\027\276\'`o=\022\203\\\276\311\033\207=\350\303\264\276\332\261/>\352L\324\274>\253|\274\220q\315>hv#\276\216\346\352\276\254\020|=\212\226\243>!b?\275q\017\361<\371_\017<\202\327\002\276\\\032\001?a>\367=w>;\275\034KU>\317\202\201\275 .\267<+\370l\275\350\004\255=\rb\236\276\013\021m\276\265|/\276\254\256\014>\337\336,>\364\010\007\276\320:\276=1\034\177= \0070\276\230wt\276_.o>\340\375\033\276Xy\262\272~\372\323\275\306L\334=W\317\210\275{=\222>s=\032\275l\2524\276\243\0377\276\0235)>\022\022\201=\000_\226>\303\330\251\275k\r\321\276\363\344\247>]\237!>\350\305\257\276A\314$\276\241\007\254=\252\237\233=\235*\374\275\372\216w\275\222D0\275\027++\274\326w\202=\221\037(>s\0209\276\344\345\004\276\021\206\020\274\034\270\237\276y{\021>\177[\005>C\303\216\276\235\227v\276\322\021e=WDX\275\273?\016>sN\337\276\215\200;>\226o\337;\353\325\037\276\335\022\254\275\270\010>\276V\220\034>\223\323b>\207~\033=u\247`\276\006\340\267\275s\246\301\275\211\202\026=\210\323\364=\315B\246>\306l\325;\304<k\276\024o\035\276\230>*><\271\235>\027\244v\275\364\025d>\370\020\334;.R(=\242(-=\302\225h\275\020\265\301=>\321\333=\002\371\016\276\r\246\266>w\230\213\274\304\252\307\276\357{\314=\357DW\273\377x\'=\202Wa\2762b\270>;\302\253\275\364K-\276Iz\231>U\272\">\016eu=N\024\177\276x\351\242=\n\325\360\275.R\037>yl\275=bc\360\271\343V\246\275R\3416>.\367\210\276\301\313 >\232\376a>D\326\204;\260@\352=\357L\242\276\266\377\202\276\271\310W=\273\n]\275\240\223\324\275\022\035\314\275nJM>\023g\367:H\246\033=\025:\254>\3166\213\276\257\357K\276t\252\006\2764V\271=\376F\305>4\346r\276`\272`\2760\027J>\204@\247\276\005\022\345\275\265\345\315<\233K\017>![\">\301:\346=\211\304N=*\031\247>\214\362\351\275\035C\265>6\250\220\275\3778\226\275\305vZ>\306\356m>\235\223\313\275\345\254\225\274~\365\247\275\316\305{>\334\020i\274\2617\370\274\316\353\205>\223\005%\275\010\022\325\275\265\375P>\266\351\214\276c+V\275\304.5>`\352\205\276\236%\362\275\263\371\264>\010\222\311\275\331\356d>4D\302\275\211\266\323\275\024^\000\274\013~\241\275\322\343\234>\244b2>I\257\227\275\303\240\244>\207\225c>\234H\323=\t\321\243<\242#\210\276\233X\345\274z6\344\274)\253\003<|\355\346\275E-\223>^b\361\274\375\323\340>\214\340E>\265\363\026\276\232HV>\264n\345\275b\232_\275\235n\200\2762T\005>\027n4=Fz\242\274\373\201\023>\264,M\276B\276`>(\003\224>+\014\351\275\240\346\343\274\212\"6\276\216\033\326\275`\341\216\275\013\005^>\322\261-=*`\214\276\300\270\356=\214w\267=\305\303\200\275\312J\251\276\236\327\263\276\246\242d=\306\2028\275i \016=\335\230\025\276A@\001\276\263d8>+TP>\317\t\323\275\t\330\245\275l\232\265<\026D\253\276\034~E\275\340\307S\276\253\246@=\331\362\"<e_\331\275\372\271\310>\343#\226\275s\r\006\276<{\261\274\300\267\031\276\341\027\304=uU\230=\000b\231=W[S\276\016E\376>=\316\r\274W\365t>\341\256\016<\230\305\370;\344\2337>\242\361\017>\003\\\211;+Jz\276f\021\033\276f\224\202=\321C)\276\000\036v\274\027\034\032\276\010\301\241>+\023\276=F\344\266\274Q\343\036\276\336\301\275:\254>|=\264!\022>]@\030>\330i\260=C\256\226>\337\313\343\275K[U\276\t\350I\276\213\256\216=\341\\\017\274\375\220\347=\237Q\000\276\016\227\025\276^\357;\276\021\316\036=:V\021>\265\270*\274)\334L<\022pV\276\343\034\025>\351\230H\276|m\344=G\267\'\276\013\000\307\275mC\326\275\304\261\201>\035S\263;\253\250\376\275\311M\273=\313^\003>E\250\234>\246R\203<\360\335\245\273\221V\213\274nx\t>\330\206\207\276@\"\320=\251\027H=\216_\306\274\351j\235\275/\257s>\362te\275\014;\025?\275\006N<6\345\240>\254\254\027>\315\2145>c\211\000>L\234\344\275\334\261\263=\207W\014>\243\345\344=\354\004\340=\205\321\214;4~q\276\231\314A\276&\202q\276\221\246\\\276x\216`\2767\014\220\275+\3016\276S\025o\276\031U\322=\206\227\227=[\365\365\275<s/\276AlC=\277.\343\274\315t\362=\303\231\241\275\350\320\233=\332V\341\276x \\\274\273\371P>\000?\334<\005\013\030\276\332\036\010>{d\201<\203\370\233\276|\023\205=>:\245\275\241\275\312>\355\241\314\275;\'\007\276\302\206u>F\243A>\243\235\312;\310\3152\276O;\007>P\245=\276\265o\252\275\241&\240<\251\347\\>(\303\252\275\266\256b=\356\340\201\276c\356\230>\305\031\224\275x\221y<D\365u\276\314[(=\256L =\2615\300\276$\2548\276\243\3348\276\313\236a\276\352~-\275\002\347\237\275q\034\027\276\253\324\227=\346\240\343=\216?\201\276\001\230\203\276\202\216\205=K\203\"\276\001\266\'=d\375\205>w\354\"\2779\256^=U#\030>ZZq=\333\366\272\275\333#k>\343|R\276\000\207\234\275\003&\270\275D\024-\275\013v\026\276\0376\026\275\330\206\010\274\277/\376\274\262\302\232\276\326\020\200\275\027X\031\275zh`\276\323\323\006\276\030\021/\276\014\344\335=\324SW;\0031\207\275\223N\364\275\201J\t\276\231\316\215\276\227\240\304=\313\306\360<|\312\317\274\216rF=\304\3530<\204$m\275\335U\013\276\355&\310=\327\200\327\275\353\317\010\276\355\251%>0\"\347\276D|\321<4Z1\276t\241\226>\367\260\030=\203\3467\276\371|J\276\243s~=\230\334\340=\342\2025>n\013\202=|Ka;\357\nI\274\263\311M>\233\315\005\276\243\350\300\275\373\311,\275\240\364\214\276\227\262\000?\006+\005\276\227\235U\276\342\027\223>\306\312\277\275\234\335\334\275\250dR>0\203\324=iv\200\275\333\234\375\275\340&\241=\311\265\030>\360\245\220\275|\206C\276\344\300\034>\016HT>\334X\020>\261~#\276\363\247\247\276\35751\275\313\330\002\276\034#\331\275\013\010\217\274\034r\264>E\300\351=I\225\003=\367\215\217=\266\372e>\204zC=\242,\333\276\207\006\\>\025\236\313=\217l\r>z91=R\367%>?_\303\275Y\330\227\275R\336\204\274\247i\305>\3663\372\2744Z\237=&\367H<V1V>\3404\224=\025\031\320=\317\274\023>a\177M>\264\205\024>Y\262&\276\375\002\030\274\245\372\212\276\306X\203<\324\247<\276\031\216J><s\313>\354\033\277\276B\221\036\276\265\344\301=@\345\355\275{hL\275\260T\316=L0\251;\224P\207=\003\353\362\275M\226)>\000\260\320\275I\332\'\275\001\340h>\254\334\263>\361\017R<\347\3258>\316\213\236\274\021\310,>c\327\217>%\306\324>_T$\276\344\004\343=4a\206\276s\315q>\330\263\236>M\tC\274\202\220\263\276\341 $>Rl<\272\274\266\236;y@_=2_D\275\360\\^\275\002\017\243=\210\n\232>\360\336\216>P\000\357\275\n\275\212\276_b\365\275+ \310\274\344\017\327=\343\322f>\262\264\347\275o\330(\275\347\273\020=\340s\030>V\3554\2764\230}\275\n\227\252>\025\227:<G\356S<\315\202\001\2765%\215<`m\021>\247\350\r\275\271}f>\242\312\267\275\327\355f\276\277\303&=o\024\207\274\261\256\256\274\'\212\'?\231\214\306\275;mH>\251\023|=\214\274\033>8\3745\276<\333\n>\375\304\266=j\330\033\275^\325\272\276\245-\240\276qa\257=\356S/>\211\027q>o\247x\276\335\025\245>p\271i\275)\214\317\274$\253\261\275\016s\013>\235\263(>\261|\n\276\n)%\2753\346\313\276O\240\231>=\312H>`&B=f\254\200=\002h\333\275\312j\021>\200\307\340<\033O\306>\244e:\276_\273\025>\226E~\276G\020\206=\260\2146\276^\325>>\321\237n\275\2339\205>\346Q2>\302\224\332=\023\263\334=\246\377\034>H\354\347\273\332\232l< \247\025\276\034M\300\274d\224\242\275\217\332n\274\300\354n\276\246\256\217<9\214\350>\262h\235\276\332\036\244\275\220\022\242\276q_\016\273x\360,>\355\330\221=\346$\275>\333r\315\275\245e\333=f?\n>\232\263<\2743:\267\275\001\333\330\276F\004\310\274\325b\244\275-\366`>DX\312<\314\320\237;F\031&=\310\254\276=\3716r=\210\014\226\275\376\231g\275K<\263\275\243\354\363=\357\017\211\274\024\326\303\274\270\037\227\274G;\233\2765\320\027\276\367\243u\275;9$=\303\356\217\275\314^h\275\265\321\212=\225o\010\275\212\226T=\000\214\276>7\334R>I,N>\343\315m<=\365\215\272j\\\211>\350\024 >S\026\004\273U\200\240>Wv\270=\273\230\n\276X\345Y=\3318a=~\310\005>m\312j>hU\313=\375\254\222\275\313\307&\276\337\007\\>\036\316T\276h\301\341<R)\321=\200\031\242\276\232\035\344>w\342\320\275\217\244=>\346B\236<\212\227\375;(\014v>(\033\352\274\032\366\257>_Hz>\226\017\220\276>\005\275\2750\320\000\276\3324\224\275\325\254\357=\274\221[\276\013\254r>\0065\302\274l\205\003\277\037E]=cJ/\276\266\231\000\275\037\226;<\024?B\275\241\272\255=\t\276_>\321a\302=\362U\252<\330\033-=\335b\367\275v\2571=\317\027 >!\325\201\275\2637\275=\315\360\332>{\260\221\275\233W >/\005\227\275\344\361@\276Y\211$=\357\302@\275\261\365\'\275-\214\300<\032\260\202\276kFV\275\237\337\217\276p[S\276j.\035=\304\365\341=j\320\207=4@H=\373\210m>\004&}\274V\232\206\276v\025\256\274\326U\343\274\344\320\033\276U\316\235\273^\252\351\275~A\342=\2263\"=\320\221u\276^\010\271>(\354\'>\233\262n\276\022\271\272;\270\324S>\354A\211\275?0\254>\322x\274>9\217\030\276\215\363K\275\265<\024\276\216W\332\275\260\350\216<\214_M\275/\315\020>\3460\226=4\344\322=rjh\276\034\214\345\275`!\344=\024_7\276\234l\222\275RL;\276n\342\224>\033\351\000>\352r|=\375\240\'>\306\022\310;f+O=\304\277\332\273\373\251|\276\024\305\271=b\220\265\275\222\341\004>w\2540\275\333\033:>\261Z\273\275\247\004\244>\362^\020=\274\372\234\275 \036\030=(s\000\276\257\304\r>La\347\275\0041\231>\3259\\<sJ\031=\343\300\'>\276\331\022\275\311\216i=\227`\'>*\202\014\276O\265\221\276\324]\010=f\370x\276|\272\036>C\315\313\275\321\\\213\274\321\231\352<\036~/\276\253%\032>\207\024\314\276m\243?\274\317\3558=\264\031S>\277\330\235\274\271\021S\274\201\2352=I+^=\351V\223>cB\304=A\005\203<M\024\254>\215\251\215=\327\246]\276\020\373\272<\337\004\220\276X.\266\2752[r\276s\373\311\275\335p$\275\335\260\207>\214\204\311>\034\353\374\273\322\242E\276[\302$\275CG\034>B\250\310=*\261\313\275\254^w\276\rpU>\341d?\276\005\211\205>\2032\016>\267\206\200=\3342V\275L?f\276\363\027\006\276\361\262\225=\266e}\275\341\242W>>\231\241=}\273U<ZL\347\275\327\324j\276\235\343\026\276\352z\211\275a^\002>\274\"\013>\027\250\360>\355\253\203\275iG\n\276T>\216\275\356\271\373\2755\000\237>\333K\215=,0\254\276\274y\n\275&\000\236\275\225\241\211\275A\001\207\276\225\254\210=\330\330\231\276H\262>\275\236\r\032>\010\013\213\276\272\261\\=\272E\270;\244\r\360\275\212xe\275\342\256>\2767\234)>,\377\237=\231#\202\276T\031\204\276"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "}3\377\276=\231)=\n\312\001\277\335\257\t>l}\021\276e\260U\275P\273\222\275\326\005\376\274\253\356\337>\026 \307>R\033\234\275\n\375\036>N\313/\276Q\006\207>\300\235\365<\3604\314=\237\325\206\275V\347\241>.\261%>\301\374k>|X\224\274\325Z8\276\342\275\376\275\230\323~>=\216&>|\361\217\275L\005\314<.\006\277\275\331\006\242\276~G\007=+P\324\275\2128g\275Lvf\276d\235\217=\000\233\377\274\227\377\016\276/\036\244=-!\246\275|\366.\276M\336\212>\236~\003>^7\027>d\220\203\275\322}\216<M\025w\275\365\217\252\275\3277B\275\234*\004>\324&.\276W\224W\275\304\370\002\276Y7\235\273\312\251\030=\036\333J;\317\264\322\276\014\350\237\276\3518\'=\246\210\333\274\240\262\377=0\375p=\225\312\000<-\344\000\276q\030e\276\025\350\204\274\032\363\004\276\323\330\253>\2530\270\275\347\034\001\276\300\214\243=p\377\213>\353m\025>\007\377P=\237;\250\275:\2705\275j:4\276\210\233\325\275\335b\255>\r\263{>\250\317\001\276\237~\231\275B{Q\276\341L\222\276\333\270\216;\016\250g\2762\265\033=jQ\006=Z\2565>\202\014\221\276\221\360\256=\207\344\014\275nU3>\363[I\2761\260b\276\2048>>{\224&\276O\375\362=\342)\257>\361\365\300=Lm\217\276\227zX>\342\177\200>]\367\276\276\313\263\224\274\000\350\204=\236\331\"=\367\253\275<\203d\000=\337\263\273\274U\226->c7=\276B\331K\274o\225\311\275\027\306#\276m\233T\275!s4>\323\242\247\275A\t\252=\337-\021>\251%\240\275H\334\021>\216\036\224\276}2\260\2766A\234=u\367\345=X*\210\276\006\332\222>\212\360\020\275\036\363A={%\003\276\214s\254>\245bj=\317j\202<u\306+\275\353\311\214;\027\265V\276V\233 >!\364\017\274/+3>\223\250\000>v\353\010\276\346?A\276VF\317\274^\276\262\275\177\0132>\'E[\276\250\310I>b,\356\273\374\201\224\276\243\207\260\275\373^\316=z\300,>D\334!>\373e\233<\242\321~\276\037`\354=\025/\013>/\327\002>\231\330\274\276\034.\t>\177C\366=\240\3521\276\231u\"\276\314\004\242\275XI\">\363\256w\276l>\361<l\201;\276\272\023\231\276\036p5\276H\026\n>\213L\333\276\n\252/>\036\255^>\321a^\276p\0160\276oW\327\2754\203\032>\332\370\n>V\010o=\016&\007>\037i\247<0hc>\210\032-<(C\241\275\342\313\273\275\351\026{=\367\344M=\330\336\202\275TTM>\216\006\250<Q\035\037>\351-f;-\354\352>L\343\221=\333\207\024\274,`\013\274~\326G\275\301\237\030=_\221\244<}O\201>e\272\344<,\0100=\264\005\222\276\235\r\223\276\032@\010\275V\326u\275\235\276$>\275\347\241=\233\216\007=\361f\202\273{\223\373\275\350R*>F\006\200=K&\265\276$,T\276\367\030K\276h\003\016\276\272\304B>\237h\002\275\354\223\225\275\202\222\"\275\006\332\030\276r\243\366\275\267]Z>\010\207\234;V\351m\275|\006Q>7\363\000>#K\231\276!7+>\250\213\013\2738Zi\275\222\310\256\274N\336\030=\035\243\341\276\204 m<\352\220n\2765\345R=\2527`\274\350\226\277>\031I\020>KF_\275h\261\334=B\260\232\276\tw\001\273#\376E>\316n\266\275\3672\023>\324\227\223=\177\327\236>\322V\'>_\311W>\022\247[>\230{\007\275\360d\340=\322:.\275\022y\362<\260}\357\275\200\204\033>\325/\004\276\2426\301=1\247E\275\333\336\352\275\232\240p\276\322\201\243<\006|E\272\321\373\376=\376\335\252>\332\361\004\275ts\007>\361tw<\031%J>\3165\312=\226\256\244\274\333\003\337=-\273\024\276\006\036\023>E\267\014\277\355\304\010\276\234\003\311=2p\253=V&\373\274\002\016\005\276\376\370D>H\216\211\275#)\025\276\006\216\202>6\301\376=D\362\207>J\3620\276&H\206\2765[\212=\225\t\251>n\327<>\221\260L\276\311\252x=\362\255\033\276a\231\010\276\035\273\003>\222\225,\275hb\200=\353\211t\275\214\326\362=\366p\034>\3721B\275\245\204\227\275\254\316\177\276EG\251\276\216\316\200\276\374\020B\274\334\267\300=\373\275\360>2\205\'>\352b{\275\272\005\207\276:\337\363=,\017\233>\314\3527>s\\\263\276tt\207\275\210Eu>\247b_=\347d\332=\036\206r>\357\334\252\275\216V\256\274\367\216\025>\235\204\305\275\tg\235=\325~\211=TrV>\331\276v\276\362>\345=\344\263\020\276N\030\004>\347\234_>f\263\262=\216\267\202>l\316y>\357\247\r=\220\306\033\276O%!\276\374x\021\276\344\355+>l\377\254>\277\t\200>ED-\276\360\315\016\276SbE\275\331:N\276r\014\266\275^\343\250\275:#\253\276\031\372\371\275\364\315J\276\016\320\007\276\251\"\345=\325\206\025>/p\243\276\343\300\242\276x6\241\275\365\354\204\276\177u\333=\327\220\215\274\300\364O\276\250&\355\275_\265\306\2765Nl>\323\340\332\275\304}\177:G,\225\275N\3254>3\230\017>s\r\031\276\250\236\224>\272\241^=b\005\374\275\272)\351\274&\221\351\275&\016\240\2748\316\276\275cH\001>\221\036\204\275\321\340\200>q\177M\275F(\n\275\213\361$\275\357\301Y\275\3605\353\274\265:7\276Ju\244\275\367#\'\276\034]\035>\177\360\251\276y\314E>\025\3421\276\207\"\242>\372\014\206>\314Z\354\275\\\355\266<\236H\005\273\210\270\225>s\241;\276\341@\234\276\244\305\004\276\362\315\200=\315\230\202=\235[\241\275XT\245=\227\317\026>\326P\376>\376\266<=\245\352\330<o1\214\276~\034\003=\217\326\260>\336\037=\276\217\363h\2762\226W>J\240\232\276\345\023\274=\220\223\346<\003\t`\274s\202^>\216\300\272>\350\341\'\276\036\253~\276\313\364\232>\234\237\257>\345\243\353=\225L\235>\264\220==\204k\323=\267)\027>\177\251K\275\203\215H\275\360%M=$W$\275\"=:\275\352\024.=\027tw\276\227}(\276][\346\275\036B\007\276\272\255\007=6\024\351<\265\253\247\275\223%+\276\371\003\344=\256T\257=>\016\032=\207\306%>)PU>\233Vs>\025\336\207\275\263\250W>\276Iv\275U\022\002\276\033\n[\276:\247\035;\333\227\016\276\232\247\361=\225\013\306=\016AD\276f\344\205\275\353_\251>\336\202\276\275\022\037|>\212T\304>\353`\275;\263\357\317=\262\225\004>\022\337\330=\250\335B>\207\210{<\311!U\276\236\037\224>H\226X=\027\325q>\330\001\200>\257\nh>\300w\266=\207k\370\274\376\226\177\275<fO\276\223\376\214=\325\231x\275\313\334\317\276\327\300`\275l\377\023\275t\016p\276\27383\275D)5<\3012\224>\014\246\363\275\014\351\353<\005\035P\275\356P\322\276\357\253%\276\312\307`>\000f8\276=u\225\276\313\317\344\275\243\244\322;*\361!=\220\t\357<\031\000Y\276\247\345O=\255\303!\274\004\265\245\276\003\315$\275\245\300\244<j\036\376\2746\232I>\370\261\304\276\224\201\242\275\322\000\300=I\340S=\365F\023\276\032\017\234=2\241L\276J\032/\275\'\034\211=\260|\230>k\027[>\366@\250>\266P\265\274:p\017>\311\233\027>\032-#=\202\254\020\276$\2320\275\016\326y>X\374\351\2752\323\226\275\266\026\204\273\365p\222\276\307\207\306>\230E_=6\324\352>\033l\220<\225\013\214=\216\037\277=\310iQ\276\373\373\273\275lE\245\276\262\247\244=&XH\276I\255\200\276\037\331\222\276_\300\206<\007\225\327\274\026\275t\276\035\006\002>\025v\205\276\336\252\221\2759\212\310=\224\033\302\273=dM\275r\2579=M\220\263\275\372uY=\317\314\236\274\212\257\224\276\006\027\224\276\311\202\213\276-\201&=\212\342F\275\315\247\204\276\267\010\305;\325\205t>?ED\276\362\014\r=l\372\224>u\262\n>\370\252(\273\371\356\037<\2370\031>\271x\023=e\331\n\275\351)v=\227q0\276D\350&\275\225\036\035>\350v\347\275\214>t>\tC\260\275}\003\361\275\223`\005>\204\034)\276\301\301\202\275\"8o>\276\013\247\275\027\335\304\275\325\310\201>$\207\264>\346\324\313\276@\314F\275\270\354\262>z\300\310\275\307\317\002\276\203\2120\276_\260\021>\274\320\007\275P\351\233>\315qh\275\177C:\276,\303\217\274\202\317^\276\341\267v<\264B\023\2755\374!=\273-\234\275\220\\\'>MY\203>\365\361\352=,\336i>GG\312\276\200F\330\275\226\367p\275L\310j\276]$V<\373\270\242>\227\223\017\276\223X\002\276\256\000A\275\340\372W=/\317\304>j\266(\276\255\260W\276\314\333\244>\200\354D=\037\355\200\276*\273\316\275[\365\217=lf\203>o\332\r>\343\270\004=\025r\007\276\016C}=\005\000\324=\300;\\>\272\313\356=\364v\273\273QY\305<\030\030:>\374\244J\276\2764+>\324*\331\275\376\032\217>p\353:\275\374p\350=\021\204;\276\342/\247\275};\244;!\300\027\2760\013\306>,2\007=\323\205|\275\234\313(\276\355\264\231=P\360Z\276b\351\222>\341Y\032\276\010T\222\272\253>\261=\341g\311>\001\026\332=y\010\022\277\033T\331=\377\237\031\276\034^k\274\031N\023\276\200\214e>\2249(>\372\317\214>X2\300=\246Q\367\274\226;\262>)[\230\274l\376A\275_\366\n>\256\021\341=\\\326\231>\313Zo>e\320#>\352\365\010\276\220\203*\276\030\264\265\275`\256l\276t\212\254\276\312\221S>\317\2353\275\274\341\034>\233q\251\276Mf\341<\305\370\002>\2475\007=\362\\Z>x\225\'>:\241\250>\030\312x>\344\372\363\275\035&\212>\342\267}\275^AJ\276L\0264\276\350\365\365\274/\355\026<\340]>>\'\002\351<o\203\332<\200\232\355\275\351\223\n\276\235\272\001>l_\235\275\027\355\026\273\365\261#\276w\342>\276\227Dm=#\330\273\275-\336\206=q\325\301\275\371\363\025=x\273\321=\030jI\276c@{\275D\013\267\274\006oF\276\356\260\303\275P]\317=\213\221\215\275In\014>?Z\245\275\026\302==H\'\265=\013\203\237\275\233$\022>\204\214w\276\372/\033\275f#\324=0\366\231=[\024\337=\373\336\334<\231\0214\274=\247v=\246\340\247\276\302\252\\<qU\200\275<\001V=8\323!\276\253\251>=\321\200\030=1\021\213\275\210qn=k\374\346=\000\212P\276eOY\275\206\027\031\276Yjd>\025P\245\275\307\233\273\275Qt\344=\241\303\213>\324E4>\201\037\013\276\343W(>8\3107\275\314 \232\275\243l\330=\035\274\210\272\261\245\273\275\241\375\301>\370j\236>R}V\276\275\225\355\275<7\212>x\245\322\275S\201\277\276\357X\267\275c\346\024>\224s\316\275\242D\204\276\352\376\034\277\320\237\245<-\263\343<=]\361=\255\341\371\267\361\3610\2762\330%;\273[\340\275\204_ >\267\267\346<a\243j=\322\037\214\275W\004\317=\366\346o<\251<Y\276N\031\204<k\321\007\276\247v\202>\303j\201\275\317\263\366\275/\331\246<\206e\362=\351\365>\276\243\"\251<\n\006\364\275\343\373\006=$)\353=\371\335u\276\273\270\271=vj\255=P\307\033>\333OR=\251\272\207\276+\346g\276\326M\327\274\323\020\321>\227c1\276\363\367\346<\314\002\254\275*\325\034>\255\353P\276\253Ft>\365\360\224>pY\334\273M\035\331>mk|=\233`\002\275\376n8\276)\345(>aB\365=\024\213\310\274f\347\214\275\2019\273\2740\207\263>\277\357.>}\204A\276D \016\276\030\354f\2760\364~=^\210\304=\376\033\035>m\350\323\276|C|>\0330M>Y\265\025=\031)\324>\247i\004>\307\266%>Ol\235=\235\236\372\275\317\001}>x_\324\274\213\033\251\276r\025D\276\307\020\320\275q\000\311\273\266v\032\276;\2500>[\372\204=\301\371W\275\022\213\025\276\337.$=\211}\277\274\027\352\325\275\377Z\237>\216\303(>\365/->\321\213\230\275 \355\301\276\277\334\034>[d\262\275\233\031\370\275\013\237$>G\234\344\275\254\346\273\275\315L\205>\020\213\207=\312\204,\276\t\253\314\275D\037\032\276\266\216\306\27556\375\276\006\332\004>\267v\347\275\202hd\276\314\"\210<\325P\205>\3724\354=\253b\231\276\346\222=\2762\326\222>\357;\247=\3715(\276#\340\201>\264\276\031\275\036\230P\276;v\240\276=\324N\276\375\355(<\014ho\274j.\200\276\2130r>z\277\303<e{\254=\325~\004>\317\356\252\275\267\236)\276p=\301=\272=J\275\353@Z=\364=T=V\t[\276x\276\375=J\212\234=V\272\352= \037_=\313\270\014\276%\242\034>yE\023>\010\203\034>\014l=\275\"`x>\310\350\236>\003\332C>\330W\257=\306\245 \276\253\367\354\2743\260B> ,\016=b~\260=\3371\315\275OK\300<@[\254<\323T\267\276\027\331\273\274\376\335&;\000u\366=\241\007/=\301\234F\275\325\350\261>\251\244\315=n,\253\276~\346\276\275}hj>\330\316\244>\270\016\'>\222A\206\276)\377\005\271Z\004;>\266\022!=\274\311\204>-FE>\226\265b>\005l\276\274\373\203p>\r\357\032=\223\352Z\276\344\n\005=\271\211\003>yb\236>w\226\226\276N\254\\>\265+4\276\334\202\262\276\320[\320\2769\251\262=\250Q\222;i\350\002<\274&\255\276\272P\251=RA\005>\213\347\023>\010>\262<\316\371\"\275\345\t\217=\313\241\206\276M@\261=\027\310\323\275\240gp\275OW\257\276\201eY>K\024P\276T:M\2763L\346=\260\253\347=\014\364\235\274\377D\222>\276a\234=`\204\313\274\331\035k\276\215G\334\275B\261\313=\331\230\226\276\211MS\275\362\333\226<\004\032+\275\332\020<\274\234\316\370<\016\257\026>\n\021\200=zF\226\276\372\301\311\275x\233\233<\347\212\202>\312\341:\276\224\356\370=\013\264\002\277\242\\\341=\206\370F=g\365\372=\357\304\013> \016\024>\035\016L>\345\310\230\273\254\016\316=\255\3014>%\331U\276\275]\361=\205\021E\275&6\037>\374\207\007>\366H->\260\321\202\276\003\313\347\276\304\344b\275\335\200\211<\341\325?>\2345\003>\242\245\253\275\024\236\303>\203\223\372<H\234\000\275\372H;\275\375\362\325=:\033\226\276\300X!;H\021\212>\356\256\014>\034\312p\276%\236j>\360\016\265\275t()=\032\312\361\275\r\270\331\275t\031\026\2761\316\351\274\t8\222\275t\250\235>b\312\355=?\r\220=~\324\001=\207\275\035=X=$>\024\r\267<e\220b\276\313\207\360=\013\215L>3\245l\276O\005.\276sd\246\274\220\350\030>s\345\235>X\377n\276\326\0169\275\301\347\340\275\257\020\237<\373\222\304>\036C\327=\311\202\003\274*\203\324=P\204f>\373\3371\276\rS\232=$\226\275\275_l\023>\2516\221>#6\352=\025\341T>e\311\205=\032\021\334<s\0346>\334\002o\275\344\226\220>\311\214\202=\225\247\310<\260\313\252\276\3574\213\276\351\277\203=^\311\345=\225\3278>MiS\276\232\2201\276W\224\342>J\303\024>&?W>!\222\275\275)$\032\275I\003k\276\366\312~\276\376\357\310\275y\306%\276\374\256\355=\367\373<\276\306\221z\276`\240\207\276\227< \276\340\270\017\276\260+?\276Z\027%\276:\016\215>:\317q=\245Ys\276#\033l>J\3247>\302\214[>,\327\277=P\\B\275\235\217\276\275\2777\231>k\235\t\276\351\2638\276s@\236>A\201\206\276(\235\304>\217\234\013\276N\243\355=\033Yl>\207\344*=?U/\276(?0\276\247D\306>\034?-=o\022g=Q\230\277\274V2\r>\326j\354\275{\216<\276\205.\214\274\007\261\217\276\251\201\023>\236_\237\276+\304\005>\226\340\261\275\214\021\330\275-\374\017\27671\305>\33385=\026L3>6\022A\276\020\212\010=2\245\367=|\2003\276\2652\005>\327\356\275\276\3424\337\276.@S\275\266\362\320\275\001\232-\2768\303\312\276\243\302\324<\244\304J\276\362\371\235\276{\313\200\275\343\313#\276;\322\177\276\216I\334=\nZ};\256\326\222\2754_M=\017s\302=\307\354)\276\317\014\037\275\021\2364\276\036=\274=\302\345\226\275\250Q\303=\250\376^>\344;\353\273\310\203C>\343=\006\276\200m\231\276\235\305\205\275F\307O\276\266\312I\276\237\325<\276\240\252\034>\274\307\334\275\372k\224=\225\313\226\275\343s\257\276y\t\276\275=\245D\276\223\263(=\033\316\350=\023vX=@ \t>\253\\\022\275\361\004_=\0256\375\275\365\275\242\275w\321\t=\304\003\337=3!\"=\036x\232>\305t\026\275\351\226\343>\217\017\025\276;:\010\276\322/\014\275\345\033\340\275x8,\275$\3625\276S\205\200\276c\330m>\374\034\314= ^\223>c\2164\276\327TA\276i/\024>\276\274\245\272\302\350\227\275\237\376\370\272\372/w>\r\242\351=FP\004>\225\317\274\275\353\223\213;r\214f\274\327\364\250\276F\363\177=\373Y\001=\013\332\204\275\004\001\245\275?s\t\274\206\343\224\276\246 \236=\375\210\341=y\325E\276\205\366E\276\t\252\311=\014\312\311=\212\013\023>w\322\231=\036\302r=\340\"9\2762\032G\274\350\2633\276L\"\274\276\236\211\211\274\313\362\003\276\023\220`=t\277\214\276C\254\211>\360\362r\276\300\223\373\275\312\364\254\275\266\275\311\275\230\222#\276\232\220\235>\261\001\313>\373P0\275wa\240\276\226b\352\275\027\2149\276\324F\356\275\3246\030\276\352j\266\275\264\332\243\275\273\t\343\275\000\027\001\274}\352\267<\255\231\025>)EV\276au\013=?Gv\276t\355y<6^\275<\272h&=.\373!\276\221\243\2158{D\266\276\340(\270=\237\364b>\027t\336\274\\\271\036>$\363,\276\264\261\322=s\311V=-\264\323\2762X*<|\260p>\206\3464\276\"\000?\276\\b\221<\241\272\217>>\310Y>)R7>\315\364\217\276\333\026e>\346\024W\275\360\261\226=m\366A>\204\'\373=\3147\363=\244\020_>Tq\211\276\006\230\021>\020E\016>eB\320\275\370\261\"=m\205\t\276\307\370\0059\004|\264>4\342/>\371\2603\2768\203B\276\234r\201<)\211\255\273\037\275\334\2726\332\245\276=m\241\276\243\021V>\261X-\275\022=\t>\211\207\204=\226\362\205>\361\270\220>s\230\003\276\274g\005>\206\';<b\220\326\275\227\207\336=\320\3622\276\000\315\200\276\311\360\022\276\377\234\270<\n\006x>\364\226\306=\210\235\237\275!\331v\275\025\341\360=4\256\221\274\274^\264=\372\242\013\276,\373!\276:\177\370\275\311\343%>\356\236\231>\233~\206\275\347\231\245\274v7m\275\267\2730\275\214\342\253=\"\321\343\275\270Y\263;\022XA>\332,U\276;b\207>\245\266\036>\344?&>\007X\226\276\200_\207\276\347\357\315\275\313w\230=\275\273\206\275d\'\016\276\342s\014\276\262\344\332\276$j$>\257\363\016\275D\226\036>\276ec=\366r\331>\013\370\031=\316We>\302\2406\276\300\364\240=\235\307\363\275L,6\2765\357\211\276\213-\n\275\263l\252\270\247*\034>\2409\213\276\241\0230\276\220\001\317<\teH>{ei>WP\261\275\211\245\020>n\317;\2766\035&>+\211\213\276\214\224\331>\216F\332=\264\371K\275V|\331>\034\352\232\275\215\335>\275-Zu<\324\201\216\276\036Q,>\212\323\367<\2154\342\275\366\313&\275\352\244\272\275\313\236\331=)FZ\276\222\014\310=\300\353t\274J\271\017>o\027V\274.\262\306\273\344\007\217\276wY\255=\346\302\356=0\002\267\275\221\376h>\311\221j\276E\226\243>^\261U\276Nd\310=I\3000>\010;\300\276m\r\365=\020:\340=\031]\306\275^\264c\276\307{S\275\210\263\010>\301\2017\275._\235\275\032A\035\275C&\"\276\335\227\017\276\026t.>\201\004_>\245o\263=\013\216\230\275U\322\371\275\016\226\265\276\'L[>wr\036\277/P\376<4&+\275\264\204\217=\035c)>o\035\307\275\006\036,>r\211\233<\2211\325\275fx\314\275Y\351\017\276\375X\003>\365\250U=\006K\352\275p>u>\306Z\261\275\215t\212\273\214\363\037>\\yL>/\361\352\274\226G\344>#\350\023\276\272>\231\276 \022\257\2754\001\364\275\320\023\000\276\253\360\217>\247\030+>\244f}\276W&\033\276\326\340\022\276Og\254\276\352\354\032=\252\353\201\275,\212G>\217\317\237\276\266[\215>\234\302\236<?b\030>\014\357\221=\307\311\207>\211\347\023\276\246\231s\274\247\376\353=\315\336\213=N3\316\275L\000\216>\027\301\222\276\n\031\362=\230\202\206\276\211\375p=ekK=\357\224q\276CL\255\275\265\363\261;\025\255\036\275\212\235\272<\217\007\270\275,\213\302=\272\353\305\272\354\310\273>\212\032\326<5\352V\276\202F\314\275M)\210\275;\257\235\275;\312\320>&\r\267=g?\n\277pe\225\274H\376_=\270j\006\276D0\004\275\226\321p\276m`\\=w\246\243>\014\366\355\275\t\241\334=\345\022~\272\206\024+\276\342\027\017\276\304 \230\276\340\307\335=\257!Q\2754\361\220>\267\256\233\274\370$\211\276\3069?<\222\3772>\205\301h\276Z\004W=\021aP=JY\260\276\367\327\230=\233\033D=\177\307\232\275\326\364\0369\034\025\035\274F\031\017\275\374\262Q>\314\220\022>x\313Z=\332\202!\276]pf\276Pz\024>\230\022\357<\333\204`\276\332\363.\276\r\030\n\276\234\315\013<\037\3109\274\307\261\323>\376\032\372=\260\244 \276$P\213\276\356N8\276\323\n\320\275\362!<\276\003\376\244=pL\206\275\254\013\350<\272\007\326\275\315\223|>\356\317d>^\260b\275\316\265\255\275H(\033\276\263\3466\275\2408\267=\251\200\237\275m\316\361\274\336\312\301>LbN;\324*\333=\36209\276\034O3=,\252\205=\300\234C\275\340\276\263=\257t\375\275\206;\241\275\341\301\021\275\215\002\351=\256\277->\344\237\014>\210J~\275\220_\335\274\227oG\275\\N,=)<\265\274\345\376\231=\334\333\203\275\002\021\363<\032H\247\275\257\331\375\276\300\351o\276\300w\322\275e\246\014\276T\036z\276\004\030\213=>\250D\275\310\211\253>\\3O\276r\365\327\275\007\344\212=\034\236\362=a]\003\276L \203\276\301=\217\276\356\370\201>\344<\225\275\035\305\212>h\211\200;\230\024A\276\3235\334\275\331^+=\204VZ>\375z\257\275\273H\213>\233SQ\2750l\'> \017\243>\027\341\224>\036o\014=\326\321]\276\350+\340\276\0041+=\266\307\000\276\272\205#\276\340\377/\275\225W\264=m\331\376=_o\"\276\362|W>\231\"&\275\370\260\221\276\035\355\204\276\265\324\017\276F\327\210\275rN\026\276\016\220T\275\224\2365\276\260\2021\276r\260o\276|8\256=\360Z]>\362\026\220\276mT>=\007R\200\275\026\265w\2765_\">\177\376\317\275\277K\211;-\021\223\275\340\216\037\276N\251\034\276m\241\332<\322\r\232>E\204\236\274\007\366\242<\013\317w=\327\366%>\254U\231\276~P\'\276\2372C\275\t\363\027=\360\2525\275[\341\327<M\237\256\275p\335\205\276\267\007\r>\317\275\253\275@\267D\276\356\202G>\267P\225:\344g\310\276V}K=\255i\227\276\356l\203\275b\371v\275\223\221_>\351\005\312<`\306\236\275;\376\262\272\004\262h\273A\372`\276\005\177\204>\\9\210\276\3472\250\276\232 \246\274\240\322\010\276\251\"\331\273\261\202/\275\035\257\302=\206\375\360<#\265*>w\223\326=/\2731>\213\313\000\275\313I\'\2755)\224=\002\037\250;\3235,;\250P\230\275\2700N\275\226\232\246>\321\270\272\274\356a)\276\r\364\016>c?\351=$\316\242\274KL-\276.\364a\276bip\276\313\005 >\373\304H\275\3504\022=\265\251\212>;3\257\2758\365A\276\ro\322=7\354\304\274\214\037\010>+\344\307=O\371M\2763\023\231<o\261?>S\304\033\276\327bW>%7H\274\210\275\273\274F\376\330=\337\3176>\236\312\324<\245\320\256\275\346\3710\275\252 4>\203\030>\276\350\362(\276-\361\034\275~\232u\276\302\002/\276\020\262\004\275$\242a\275\223\"\237\276\230d\n>e|\253>\032\356\035>5\010\001\276\020)k=\240+#\275\343\260G\275\211\374H>\020\206 \276C\3041>\t\253E\275\205\016;>\331\375\223\276\223#\034\276\267J\311\276\244,4>\033\372\242>K\0172;\325\2416\275\'|\360=\360\201,\274\313Sh\276\264B]>\313\232\034\276\323\334n<\241^\324\275\271E\r\276N\224\236>\317d\023\275\013\361\003\276\262\367\231=X\226\245:w\005\275\275\322k\203=AYP\276pJ\340=\206yh\276t\210\032\275M\'=>b\361i>\307\007\205\275\217\377~\276\333\3410>Jc\302\275\271\007\220\274\365t\r\276Gia>\370\303==\321\350\310=\305\344\325<\233\314\215\275\243\014\265=\364k\217\275d\177z\276\304\024\317\276v\215\252=\231\341z\276\201\263\n>n\334\212\276f\213\334=\375\200e=*\253\r>\220\221\305=\005\376\377=<E.\276Q\252\031\275*\214!\275\237\341O>\334\351\344\274\272\303\211=`\255\202=\322\223 >\366\n/=\342\026\016>\273:\214\274\235\311#>\372\326\r\275\377\334\023\276\212^\250=\214\324\210\275F6\202>;<P=\226\005`\275\275\254$\276\330F\232\276I\224M\276\211%;=\240\230\014=\376\306\000>\020Z\324>\236k\241>\026\037|\276\343\026\221\274v1\005>F\215\254=\270\037G>\364\013\351\275\276kf=\212\234\216>\023\357\260\276\273\217\310\275w,(>\020\031\227\276L\2309>\035\355\316>P+R>R{\324=\330\316\016\275\010\220H\275QG\247\276|\210\021<\n* >\036\032$\276\'\377\207>\220\366M=e\224\016>\311\253\357;\336%\034<^\247X>\325$\217\276\372\2410\274\332\2115>\300\235>\276\266E\206=\001\217\221\275\304M\034\275\037\365\374=\246=\365\275p\251h>\233~8<\"\0104>\021\002\034>\224i\203\274\361M\211=\221|\252=V\324\201>\365=}>\021\266S=%\0241\2766\265\200=:\241\267\275\223S\322\275w\337\"\2768\355=\275\004\357\320\276\362\300\375\274\233\025&\273\024!\035\276n\351\255>\003R\324\275N\254Z>\340\032\325\275\211e\222>\001Y\213\276\271\304\222=\210\353\t\276\236\027\357>p\024\326=a=\370\275\357K\243\275\253\036^\276\005\036_\276\217e\227>\325\272\003\275?\356\254\274\211\355\335={\316v>b\237D\273\323\201L>kE1=c\243\225\275\374b\351=\205\326\"\276\251\322\212>m\265j=\356\264\006\275\300\307S=\337B\031=\300p\316=\225\013\'>\252,\316=\313\376\213\276!7J\274$)\000\276\340\023\244\274_\020\266\275\214~\034>\321\016\224\276\304\025\245\27666\241=I:\036\276\025\200\274\275\207\253u>\177\300f=1\017U\276\347\267\222>W?\312\275AM-;W.1\276)\352\335\275?h\010?[?\203\276m\357\241\276I@\024>\254qe>=\324\320<\362\236U\274\343\313/>#\225\000\276\003\336\231\276\325\321\267\275\325\335\312=\332?L\276\216\266\263\276gk\226=\355Y\004\276}v\275\273.J<>p\307\203=\261\264/>&k*\275U\002\203\274\245\306\035>VWF\276\377\301(\275(\\<\276\225\200\\>\257;\201=\321\353C\276\234?&\275T\261\200<\301\261\206>\340\223\341\276\306\254B=\202\361U>\204\202\007\276c\272\006\275\305\007\230\275\271\006\345=#\264\002=MmI>\306-\365:s\r\020=\260\231$\276\237\340h\276\244\362\361=\273\215\335\275W\2014\276Kv\024\276\350{\003\276\307\245\307=\275\3523>\032\223\363\2755\035\213=\241\3740>\375\316r\276oz\254\2750e\007=<\317\340>\334\365\310\276\010D\354>A\223W\276T@\361=(A\031\276u\325{=\256\241\241\276:\362->>3\353>\241\256\307\275\331?\246\275]\363&\276\234\363\347\275\354\353\236\276T\273\225\275\302c\204=0\014j\273M\325&\276m&~>|\212\234\276}\351v\276\241?\024>\354\242\003\275u\010\214\276!\244\322=\216_\215\275\343\303T<\273W\316\275Y3\t>x}\260=_^\273=\3720;>\024\0374\276\273\252[<@\3111=\t\272N<#\333%>g\276\245=\323\"|>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "G\337^>\265\257\356\274\235[\243\275\247SM\275C\022\004=\022\206/>\t\026.\275{\200\274=\312QK\276\211\276\365\275\334k|\276\017\2063=P\372;=\321z`>\304\023?\275\323\246\027>\341r\347\275\353\211\305=}\343\327\276\250\325\'\275\2459\236\275\231\006\203>\215r\250\276N\nB\276\253\243\364;E8\214\275\264\260\033\276\034\243\324\274\225\301\250\275Z\234$\276L\315\207>%\216\316\276"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\360\177O\272\335\213K:r\273\2409\030\213l\272~\217\354\272\212C=7\034\345n:\356\2648\271\353\025\224:\032\302\242:\023\333n:\213\322\303:\253\237\257:\266\201$\273~\224\024:\0067\\;g\240\025;\005\277/;\215l\036\273:m\311\271EE\241:8#g\272\271A\242:\035\277\234\272F\313\273\272\347\371p:\237Mx:q%\271:$)u\273\274iy\273\tU\363\272\006\307*;"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "S\234\364\272\337r\217\272\210\234f:\032\203\211;^<=:g\3046;\236t\025\273\310S\373: 1\2129PG-;\321\232\363\272v\230\3219\277\246<\273q*\225\272\031P#:t\341\005;Xv\033;Yx0\273\264\203\371\272x\353\252\272\030\242\3609*q\371:IP\245\270\0217\314\271\364\274\010;\371\032\202\271\030\017\220:%\207\26596\037I:c\206X:\032T\217:\230\241\013;"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "+E$\275\261\217\377\275\224|R>\250\206\246\274\350#~>\3372;\275\020\367\311=^C-\276\037\003\230\275f8\273>`\177.\276Z#t\276S\221\342\273\322\251\364=\301gq\276\305\235\006>#\2204>\002+\217>\374\r\333=\333\354\\>\302\034y\275h\367\350<\323\341\205>\213\270\312;\237A\321\275e\271\342\275\"_\265\274\220\345\337\275\237\302\003\276\352\273\347\274BwB\275\037\241R>\270\241\343\275\215Xf<\317\203\177=\365\347\347=\321\240\212>P\210\240>\247R\240\274\302\250\341=\354|\267\276w\263\203>\365\275*>\363+\272<\346\2549>\010|\331=\207\302\211=\350\372\255\274\304\003\262\276\345\t\205\276\320\244B\276\370\337X>J\026\366=LC.>\303)3=D\355\035>\226\201\360=\te@\276\227\270\217>\361\177\230=JU\235\276e\235\313=\257f\004>\217\363\251\276\206\362H>6\216\210\276\305?\006>\373\217\355={\230T\276\306*~=\204\225\006\2764\373>=\324} >\200\\\033=8B\230=1\337J=\312\245 >o\020\345\275\340\232\327\275\352\t\342<\325\003\242\276\303B7>$B\033\276[\335*\276{\224L=\033\266\006=?\r\203\276 \353A\275\034\214-\276\205\033\177\276D(\"\276\006r\020>\330V,>\026&@\276\334B\010>\017QT>m`7=\210w\316\276\272\t\253\276\2305S>\213\014\213\275\037\347\360<\351\251\002\276:\325\227;7\274\326<\336\210\001=\312\210\276\273\352\031\341=tgA\275Bs\276=\005\211\320\276(\007\204>\n\020\232\276\317v\026\276\224\n\334\275\021\363\235\275qF\224\275`\237;=g\302\225\276R\264\333\275h\177\265=\001\355K\276i\024h>t\363\362\276\313\345->\203\'\326=\361X\237\274\013Ar\274]\374\030>\372\220\010>=\037\'=\212\363\\\275\332B\226>r\236W>\033\006\216>\271\234\205>Hs9=\021\352=\275\010\363=\276\244\201e\276\";1>\201\023\'=\351 \220\276\224f_\275x-8\275}C?\276x\334q\276\242\276>>&\276z>s\t\336=\333\016\242\275\367\227l>%e\235\275J\314X\274Z_9=\374+m>q\201O<7\367A\276\347\013\252>>\220\234>\361 \214\274j\224\311\274\242?\334=A\227|=\33074>\345q\246>h\226\245=\2717i\275\207v\037<\n\022\234\276\372)J\276X\371\032\276u\321\r>\002d\035\275f\211\275\275\3307\226\276\326\353\023=Ai:\275\256On\275\301\366.<c\3713\276\211\324 \276Z\362\033>\303G\252=\316zl\276q\032\233>\035\311.<HD\001<t~\260>\364\373\201>I\261m>\276\342\300=\341eO=\202\357\n\274\265\320\227>\2377\204\274&\243`\275}\231\317\275\263\\^=\235\250\010>\'Y\371\274\346\376\324>\252,9<\247\277\">\305\025\222>v\251\263>\275\233\313\274Sb=\276B\372\242=\200\235\025\275\312&\223>\347\354\262\274N\314\245>Z\0170>\316\334\200\276Z\003\212=!\'\221=\017\324\234\274\202\026\024>\237\006\267\274,\030\027\276J\376B>m;\031\276\216\036\260=\263\270\232\276Ke\240<\233\036\211\275e\374\035\274|z\267\276~\360\222><\223\250\274\321K\021\276\2328\t\276y\346\250>\354\314\023=\270\356\240\2748\377\032\276\032B0\276\341c\341<\246\376\263\275X^5>\317f\037=\375\013\007>|\\\221\275\302|\321>eC\033\275(\302\023\2769\260\303\2752\334\032\276p%[>\345\230\022>\024#L\276\333\226\315=\2752k\276\013\027*=k\221\201>\226\323H\276w\t\371\273\207\245\210\275k\345.<\025\221\307=\027\032\033=\000\260t>A?0>\244\264\027>\272:\213\274\220n\200\276=S8=\203t\305=\360\305\204\2761\026\307\275\232\n\033<\014\350A\276\035-\006\273\346\317\033\274R\303n\276)3\261\274w\205\234\2768\332\324>\357\037k>\240\301*>B[\213\275i\226\223>\021\334\230\274)\365\265\276\357\236\314\275\223\022,\276\\\371\360\275\352k\216\275j\217\333=N]\241\275\276\227\206\276?^\235\276G\300T\275i\366\342\275\347\366n>\230\330\331\274\242\2072\275\033M\352\276)Ed\276\262\344\226=\006\367S>T4\350\275\367&\021\275\210\323=>k\243\334\275R\320\212\276q\204,>\373\021\376=\200\354F>\331\213\263\276G\365D\275IJ}=\2514\037:\330\037\372=qL\'\276H\235\304=\315\t\351\274<\002\301\275\261m\335\275f5!>.\352\266\276\242\001.\276\r\305\207<\227\252Y\275\340\340\r=\347\035\345=\327\253\205\275\310G#>\326\021\365=\235\352\306=\303\212Q<iV\274<T\342B>~-\344<X=$=%\216,\276\025\325\237\275\226G\213\276\337\273\026>\240\002\352\275\313\035\026>\216\016_\276\022g\024\275\216\231\\\276\270W\350\274g\206\216>oJ\362=\336\346\\\276\030K\252\275\244\277^>\363\242\205>\374\247g\275m\233t>\262\177k\276e\226-\276K\nQ\276\336G\214\276\304F\244\276\270\320(\276\215!Z\275X+Z\275\375>\261=\363\347\211\275\333\375]>\323\310\031\276\021\010 =\232\263A\276=$\003\276\365\361\271=\260e\206=\373T\002>\300iL>\036\216\200>\025i\325=\376\355\303\275\301\037\222>\214Pk=ls\311\2762d[>9\253\235=b\207\201\276\022\252\033\273x-\307\276\316\351\341\274\212\242\254\275\301V\203\275Gv\216>jCS>\242\242\022>\271\334\210\275J\n\t>\250V\204=\330\373\000=\366\037\303\276\260\210\275\275\342%\201=`5+><\272x=xh-=\251\234 =\227d\301\275\n\023\354\275\260\264\207=\031\236T>`\236z\276\367\336\010>\235M\002\276\357<\277>\016\341.\276\2542#\275\245T\035>{u\"<\006M\007>\327$\215>\233\324\355\276\035[\331=~6\222>\260\r\220\276\027\267>>K\251\242=\024\007\203\275\343\266\257<\232\3366\275h\036,\276\030\034\302\274\237\337\307>\2139\270=\001\217~=\r\250D\276\352t\007\276^\215$\276\252\227D\276\277=\257=\251h6\276\022\331\212\276\317k\017>\367\225\374\275\234\003\263\276C\375:\275G\220\030>\352\361\261\273\010$d\276\311\003\264\274\340\236\035\276\361\204\341=\215\271J=\016\366`>\357\264\325>\221\314n\2767}\006<\232\\:\276\255R\270>\322\226\262=\225\002l=\340\017\362;5h\224<\006X\332=\\\350\222>\211\266\312=\224{\221=\237\031D\2760\306\317\274\363\030d\275oW\233\275t\322\033\276\324\323$>_\020/\2769H\211=\237D\363=\271\362\033=\235j\035\2764\271a\276\2620\355=\344\000\374<\370\004\200\275\272\211\200\274\306\236-<\215\245U>%\211Z\276x\177!>n\223\274=\312*\266\275\277\001\202=\326=\372=\005}\255<v\213\251<\214\264\027?,3y=\031BI>s\245\205\276\307\213y=q\201\013\275\014\364\356\276.RP=(A\303=m\237\375=\016P)\276\323\331\030=@\235\256\276[\300\277=\024;$<ao[\275z\224\352\273X5\000>\347\223\'>\211\3102>C6\212>\240\312\217\275J\356F>\010\325B\276M\215\320\275\260SD>\300\034_>AL\014=\205\332\321=\336\021]>\376\374\"\276\303\271\375=\0215\216=\010@\003>\261\021\206>\275\177\234\276\260\'\031=\307\234\252=b77\276\2735\237\275\304\314|\275T\365{\275!\255\360\275\213\342~\276\214\243\320<d\033\234\275\244\032\242>\237\307m\276\013\346\r\276u\252F>\316\273\263\276\312\240\307\275\350y\"=a\261\007>\274#\244\274H\001\017\275|\316W<\243\257\021>\365\362\236\274`V\033>\236\315\256\276p\333=>\261\346\354\276\262G\247<z[$\276\310r7\276DCP>\335\354\313\2757\3619=\357\010\226\275o\313q>\265\366\232>F\004\305=\233\204\033>\273%\326\274\024=\230>\305\222\234\275cIO\276%\021!>\016\2568\276!\363\315=\337\363T>\022\307\207>Q\355B>x\225\371\275\205\326q\276&\034X\270p\337p=\353\230U<\321U\210=1\030\026\273R\027\320\2751\226\345>Hb>\276\347[v\276z\232M=*d\370\275v\311\327<\361\325q=\330\356\001\276\306\3334\276e\250\270=x_ >@\020(\276\346\217\204\275t\305^=/|\027>\352\217\315\275\365]\234\276j\023.\276\325\334\304=E\"[\276\321% >\207\3270>L\332\236>\341\374^\276s\265\265=\230\344G=\373\031\004=\335\263\254\276Q\262\375\273\r\266\220<\270\270\356<v\306\277=\352\273\033\275k\242\245\276\222\314;<6\233\225\275\204\353 >\276)4\275\'\224+\276\231\210\323\275\024WB\276x\2649>\266@\014\277\353*\266=\203\204Q>\005\000\"\276\230\213k\275\013>\034<#:\033<\276T\022\276\337\0235>\302\177\003\276\235\220o>\202\322{\275\376i\006\275\177\'x\275\033\221?>I\200\222\274{\006\261>}`\240>\231\002\226=\3107X=\262_\326\275\t\270\220\276\236\214\021\276\247u\222=`9\200\276*\311\305\275\240k\256\274U\356>>\242r\255;\030\275\235\276eQ\266>\314c\312\274V\333\315>g&\013\274`>\205>\3100\225\276k\035\231<\224\364\213>\201\307\234=\3413N>\215\211$>\244\343\t=\220\326\222=\177\331j\276\352J\213=\031\307\007\275\343T\200>\224\376\'=O~\037>|\327i=\304x\013\276\365\207\234;F\223\005\276\037\024\031>\355\360A\276\014\217b<!cC\276&*a\273y\t_>\370\361\265=|\373~>n\334\014\276\231\370\360<\016\264\n>3\356\014>\013l\252\276,\213K\276w\317\343\275/Q\205\275#\004F<\232\214f>\221\0060\276\336\316\003>\213\341$>d\037\n\276S\007\226\276\242\354\304\275\246M\027\276\035\320\247<2\271\225\276\374\240+>\262\2268=\316L\227>L\010\216\276\276\240\266\276E&v>\301\355\016=?\367\324=7\376\030\276>&Q\276\316\336\215=\2135\370=\302}\"\276\020a\254\275\337\227d\275\371-\331>\330\241\324=\004\034\235\275M\006\314\2748=\023>BK\237\276p 3\276\250;\001\276\354\261:>\014\350\216\274\224S\273=\026\314\022\277\227\310\002>\333\022K>Xy\250>\221\005>\276\276\257\375<\223\352\r=l\221R>v\266\260\275`_\r\276e\001?\276\014my>\203\310\332\274\352y\024=\236\230\177\275?\210r\275\024\221\264\274\303+\036<\264\302\240\274B\027\314\275\234\273?\276\271\343^\274\215u\002\274,\324.\275<\001I><\270z\275\363\236\360<\271\221\260>\022\201\237>I.\330\275_lS\276r`\351;\0357b\275\010\336==\343z\212\2765v\361=\316\323\333=\330\302\243=8\256w=IP\000>v\212\336\275\330[)=\363\373\323\275\323\351 >\320X<\276W\332\261\275\213\346\257=-\2362\276m\220\241=\233\362\350\275I\233\232\275\330\364,\276r\225\306\275\260S\266>l@\200\276@\"/\273\353\214\225<\315\230\036>\'\225\000>Z\377\020\276\023\204\262=v\247\032\276\020\376\202\274k_\201\276\244p\320=b]t\275?\243\202=%1f\276\313Mn\275\017\355U\276\241\273G\276\207\"\222\2759w\225\276\203w\235\275R\014\026=\033\251\331\275\211\332\033=j\004\333\271\251\252\240\275\255L\231\276f\325<>\010gM<\226\352\006>\247\267)\276t\"\235\276\005\335j<\352\264#>\301\304\256>\004\351:\274\232\326$\276\354\241\'\276i\354A\275\351\t\034\276\306\036\026>\266\275\226\276\354\330\272>\251\027\256\276/\\3\276\014=\230=Ey\255\276\231\345\226\276\250\264\233\276\217\316P=\357\0207>4\311\026=#b\202\275\322\342\006\275\342o\001>F\256\216=\312\216\247=\222\244z\276!\265\221<\364\250\217\276(m\255\274\013\204\004\276\2050_>\327\357\204\275\263\332\005>\203\266\232\275rp\262\276\224r=\276\r\"\n>F\302\t=\245cG=ZS\325>\302\216S>\332l\340\273\322\036V>\003\324l>\336\002z=g\257\201>\364\224\347\274/p\213>UI\036\276\t\203\272\2750\232p>\3452r\275r\220\246=\034q\305\276\310\004\327\275Pdc\276Gr\023\276\311\2207\276\241;\347\275\265`Y\276\007\2639\275\202\210\305\275Cv1>\332\035k>U\'\026>^\010\206\274\246@&\275\336\306\200>b\371\373>\312\260\315\275h_\335;\025T\016\276H8A>=f\034=\256\263\212<\237ge=8\t\260\2744\346\222\275\004\350\007\276\241Q\000\276\340\345b\276D\223\213>IY(\276\340\322m\275\354\366\215=\360c\216>\201\237\376\2757\360\023>x\024V\275\261\317\315=\3626#>-$\200\276\303\033\241>\342{\231<\030o\\\276\267\362\034\275a:\311>c\356\"\276\246\001k\275f\223\372=\214,\016\276\327s\257<\230\235\033>c\367\263\273Gw\003\276^\311\344\276\3044\233\275\350\263)\276j\221u\276\341-\313\274Wg\322=\231)\304\274^\3046=i\255\323\274\025: >\036\231~>#\030!\275\255Tf\2758\215\310>\026\335\271=\226\266h\276\315\010\323=\232\317F;\216@W=\004\026o>s\236\343\274\037\013\231>Mw\315\275F\305\016>j\261\201\275\227%<>x&|\275\251k)\276H\205\000>\326\346J>o\031\026\276dR\301=A\352\211\275\217\262\276\275\221\236\242=,AF\276C\"\303=\335\243\020=\006\313\206\275z\231\217\276\256\200O\274f&\006\277\0023\234\273@\271\206\274\177\005m\276\312?+=\000\037\341\275\227\373\252\276\243\271\332\275\3754\277><\260\020>?\337\t\276\246\267\356\274\037\211\036\276\312\230n\276\377\343\352\276\250\032a\276s/q;\352|\200\274\302\252\227\274\016x\206\276\363\222{>\237\304a>\215\341\023=\314\202\356\274\326\321\032>x\207*\276\37772\276\024\377\001\276m\373\013\275\014\217\314=]\316K>\236\254\263\274\245\212+>l\325\306\275<^\245\274\377\272B\276\r\361S\275\206\331P=W\331\214<\273\357\367\275\334\233\211\276i+\364\275\272\263\203>@>\225>\303[\231;\277\322\264\276\222\255I\276g\352\224\276\2629|>\345A\344\274\234\303H\275\321\367\212=\3756}\275j\372q>\373/\023>c\037\310<\277!I\276B\242\260>\2579\016\276\223\024\263<iM\031\275\020\366\037\276L\301!<\363\r\325=\242\317\372=\317r\245=\223\2616\275T\2441>=i\034=\275\373\306\275\225r_\275\354\250{>\007u\030\276\024T\024\276\214\345~=\315\303\200\275}\211N\276A\316\t\2774\200\264=\254\273\322=\311Bu>V\267,>\243\014Y>\022r\r\276\356\363\341\275#\214\231\274\1770J=\024.%>i\302\221\276\332\211\222>\350%\300\275\327o\032\276\356\003\007>\372\3076=&\353\301\275\353\314\031>\363*\006>\307\216s\276\356\344g\276 \257\324\276\315\334\226=pr\254=\364B\224\275\332\265U\276$\3250=\0238\341=\257\206(>/sL>\2228\017\275\261\023;>#\266\317=\002\036\225\275\'\343F>\026\241U\275d9)>@\363\323=n\314\252\276\231D\221\275\204\221\240\275\323\201\226>\225\337\335\275w\201:\276CaJ\275\344\247\203\276\234\361v>\346\014\205>\235\356)>Y\'\265\275\243\nM\275~,k\275\336M\r>\214\201]>\361\343o=\034I\240\275Ai->K\027>=\201\025\022?\213\272\272\276\204\232 =\331_\210\275\2659P>(\226\236=\257\361L>@\030|=$\251\033\275\322\'\">,\275\240=\312`1\276\322;\'\276\202\3623\275\331Q\224=\343\037\324\274\243\253)>\\=\234\276B\303\204\276\010`8=\002\"\202\276!n\301\275_G\315<\264\301*\275g\3042\276\003\360\214\273\317\206\233=\010x?>\330:\002\276+O\'>o$\024\276:u\t\276\356g\376\275\014\207\371\275\304#x\276\205T1>\362\005\r\275m\023A>_\310x=\230p!\275\212\254^<xnI>\222Y\300=++\223>`s\252\276O\262m>\035\026}\276!E\034\276s\242/\276\302G\227\276\243I\230\276\202\213\226\275$t\230\275\227\036\"\275o\030\232<\\$\304\275w4d>^\001\215=*\277\221\275\212\343\206=\364\"\312=\350\0139\276u\r\016>(\361\341\275\014\014\205\275\356\350I\276\246V >\302S\244\276\272\232\205=$U\013\275\224zH>\221\310B>?\370J>\213\020J\275M\341\037\2769\023\305>X4\351\275Q\034(>5)\002>@\374+=\212r\025=kq\377:#K\003\275Q\374n\275\354\250F\276A\250\327\274\223\365\212><\321\357=b\246v\274\000\352\026>\261\033\277=\021\\\345\275//\355=\237\\\037>\237\213b\275\353\214\202\276$\264\316=b\037&>\354,\004\277\324V\017=\334\257q\276\250\203\342\276\225D\200\276[ww\275f\371\260=V`\217\276\377\214\244=\306\307\260=K\203\n\276\031\367e\275\255/\202>\275\317\227\275\341E\201\2755\n\253>sL`>\023\341\014\276\245\363*\276u\372\252\274<\327Z>\254\247\036;\017`O\276]LV=\305S\262=\352+{>\227\226\263>\032L\357\275N3\215\276t\221`\276\234\360K>N\315^\275\253#\022>\307\0348>\214f\274\274\317\316\261\275\3520\237=\035\367E\276G\037 >\361\236\010>\311\335 \276\360:\217>c\325\026>&\323\223\275#`;\276+\252\237;\336\224\001=\305\240{\276g3\337=\334\230\250=\304\315&>\247\037\346\276\027\003}=\t\310\241=)l\033>\351\2030\276\216$X\276\312\206p\276\277\225\036\276kM\241<\030\347\271=\245~\376\275\020\302\222;{XU\2767\025z\274c\346F\275\023\257\261\275\236\013;>7\000\237>\253\357\306<\274\035\222\276\230\363{\276\332g3=\036\307\301\276v\245W\275\277\221\306\275\364\014\376\274`h\211\275\254:\376\274\221k\314=*\262\037\274\020\233\212>\202g\243\276\026\251\210>1\334\020>V\326\356=\342\314\365=~\222\232=\033\335\030\276\255\024\233=\300\032z\275Y\272\014=\304?.=\316\250\363=\272\277\277\273\255Z\227\275R\317T=\016Z\221\276#\373?\276\352\317t=\020\245r=d/W\276\361w\364:6v]\276A\034\017\275\272\367\031>]\325+\276;\267K>\216\316{\276\266\351\212\275\023+\035\276QM\005=\025,\336\275\352\034W>\243r4>z\320#>\037\276<\276s\307\241=\265x`\275>\276f>\260\325\322\273\267<p>\304\331\371\276\254\300\317\275 \3076=\201\255\371\2758\203\204=\200\300\233\275S\210)=7\321\017?xE\277=\202,}\275\347\275\323\275\307\365:=\250\017]\276\307#\372<\334\353\037\274\342n\r\276\020\220?>\023)\326\2754j\272\273,\001\204\276\2318\203\275p\330s>+t\206\276\331\0003\276\213$\244>uB\330>\030D\225=\264i\031=\232\017\331=\265\2770>a\224\253\276A\236*>Ie`>\257</\276\314\025\251=\232a\235=\256;+\276C\332\210\275\362\'\333\275b@\017>\316\335\216\274930>b}\177=\302p\000>\202\017\024>a2\333=\371Z\272=\344\\\026>w)\337<\365\240\247\276\006\220\237\272\006U\231\275\203\374d<#B\037>\241\367\005\276w:\306\275\241S\357=\264\242\324=\t\315\002;\026\252\372\275\010:\022=t@\226>\322\361\027\276\365\323\341=\322b0\276y\237\004\274\225\021\256>\014\006S\274\217\365j\276l\366\200>\365\262Y>h\004M>y\335\r> 2\207=\270\330b>C\243\256\274K\004#>\005r+>\237\010m>\333\212\304>\330\337\033>\257\206\031>\332\377\300\275\201\372\204\2748\321I\276m\361\034>lb}>\366\254\332=\024\222\266\276l\327\024\276\301^\021>\t \363>\214 \t=e\202\317=\027~\207\275\227\321q\276.\355w\275\351\022i\275\204u\033\275#k\221\274\3203&>\263\032N\276\032\266\260>\206\312\231\2741\265\030\276\222\260\020>\363\3202=VQ4\276\257\312\364\275\215\270\241>m\343\302\275\265U\214\276\255\344\365=\221p\003\276\315\241G\276p\322\351\273\307\254\251\275.\336#>\252sv;\367q3=\262\231=\276Y\375\232>b\251\371=\027\257|\274\245li\276\300r\206\276D{\023\276L\225\217\276\t\373\333\275\230\2070>\275\215\366:$\327\205>\261\037\206>\241\275\010=\257+B\276\367%\245;H\262\201>\\\315C\275\263L\204\276\333\257\233>\006\007\237<\200\267+<\261\3150>=0/>I\023D>\244\371\265<XB\203>\244\352\275\275\361\357@<\354\'\234\275Vp\034>Ves>\000\337\272\275\302\373\233>\330\270,>.\257\033>\023\346o>\354\013\243\276P\016L>~3K\275\200CV>\337\214\204\275\034G\003=\257J\360=\234\253\201\276\240\026\201\276Y\346\234<\324\327\017\276\375\333\033>I\376\026>\347\t(>\300\021\207=\361h\214\276\3413O\275\333On\276x\315\355=\255\230o\273\017\337\016=\252yS\276\205\232<\275\002\341\014<\267\206\224>\0073\260>\252a \276\335\255_=\364\267\255=\377\360}>i\315\233=\231x\213=\222\256\233\276\337\277\352\274\211\010O>\003\256\026>\204_\037\274\2252\030>\200\277\026\275\002W%\275\307Cm\276C\245<>\245\314s>Xu=>\0201t\2768,\220=\323\'|\276\376N\273:\264\264\">TG[\273\377\311\026\276 +\217\2764%\013?\303\033\347\275g\261\200\275Q\307p=:\001\255\275\270\362\360\274#\305\273>\200$\027>\371\013#=\356}\030>S\270\321\275<\242\\\276\303\374U\275\267\256\233\275\253m\245\276\326D\354\2765mu>m\236\201\276\177\344d\272\3533\032\276\252F}\276\357b\225\274\310`\200=\362\232`>\320\017\234=\306\352I=gS\327<c\003\354=\216\014\206=\313{\335<`\242.\276\007\366\260\276\262\203R>:T\202>\251BZ=\366\031\343=\257\275\243=\241\330\200>\331\350t\275\323$\227=N\022\301\276\020|\337=a+\333\275\304\315\004\275\243\320h>\022NE\276\272d\227\275\004F\235\275n\332f=\234\216\214=\352\222\275<\262\200\255\275}a\217>\205y\220\275\331*\277=z/J:\334w=>\367\371\326\275\277\312a>\364\320\223>\007\320\353\275V\260Q\273)\214j\276\247E\324\275\025\371}=\372L\301\274\315hz\275y\r\201\276\340:\223=,#\274\276\310\264\274>~z\315\274\001\365\277=\272?\007:\320\201@>C*\356\275\232\303\271=\325\276\031>Z/[>\021y\220\276\335\275\r\276\231\344\301=\354(\202<\315\016\244:\220m\340\275\223\337\246\276\342(\333=\226\370\214\276\346\014>=\211oC=rn5>+\240\010\276\237~\264\272\022:B\275Luo=\"\225\315;s\005$\274L\367\005=\240y\014\276VK\370\274\273>#\276\201\324\207\275~\010(=\214\301\203\276\024vr\276\242\263\243\275z\"\271>\334\261\010=\270\256\252=q\263J>\031\0143\276tmx\276Q\251a\276D\214\204>\211\337\256\274R\327\373\275\351$\373\275 \034\021>S\005\243\276\2460\345<\356vL\276\020\004\312\275\353\243\257=3:4>\311\014r>#E\230\275*v\"\276\360\373\256=0{\026>\226O\355>\202~\005>P\024\003\276\360v\300\276n\233:\275\177\365s\275\255\276\215=3\214B>PV\302>\233\233O>\201\320\337\275\377\177\225=]/=\276\217\371\335=\200\014\217\276\372\225m=\224\220\265>3G\245>M\031\342\275\374\262W=\353\350\033>\304%4>G\227\342<\352\313y=\237_\313\275\025\rl\276\005\227 >\330\205\371=\306\306\341\276\\\371B\275\025\n,=\272\253\007>4\217\225\275\247\202\177>,\t,\275\026\246#\276K\017\206>\271\267\006>r\n\272\276\212\274\203\275\371\025\232\276\3430\032>|\376\177;\250/\004>\347\343\270\276t\013Q\276\353\326\204>h\215\263\274\213;\352<\335\200\020>\rI\346\276\250lh\275t\201\373<\002\206\300<\307\336\272=n\014Y\273r\275N\275\276\324j\276$-\340\275\341m+>\367OD>bR[\275\201n>\276\035\274\321:\'\230_;dVx\276Y b=\302\026)> C\341=?\323\023\276\220\240\225\275\r\2733\275\300\204\376\273\364\301\004\276\274\326\327=9\312\r=\364`\n>\372\246\323\276\216^\023>\322\300\333=\253Iy>9\213\237\275\032\271\037\276\207::\276w\214\356\276\034\376U>\025\023\277\276\351_2\276\355\211\037=B\2019\275b\213R>\250s\251>\353\253\002<Si;\273n\351Z=))?>:\216p\276\333\323\021\275\306\216\314= \234<\276t\t)=|\340@\275\202(\021=\036\223\306=\226\026~> tT\276\003\247f\276\272>`>\0141\211\274Gey>\236/X>\212\350\251=\270\307\213\276\240EK\276M\200\242\274;f\231\275\300\006%>\017\301\326\274b\214\234\275#\203\223=i=E\275\251\373\224=\024\035\227\276w\326\305=\365\014\226>6\003T=\0357\001\276\034\270l\276\304%\345=H\327H\273\376\244J>\261\345\013\275\330\030\312\275\003[\241=\234VD=\302p\225<\304\303\215>\003\256\t>{\007\322\275Gw\250=V\250\034>\216Q/>\270A\211=\336>\355=J@8>\353\0220\276I\034\314\2765\320w\276\377\343\264\276-\305\327\274\320aA\275\n\231\262=\312P\244>\334\207\263\276\300\252\235=(\1773<\234\2702\276\273\273\202\276[\244\034>%\315\363\275\344\220\210>\332X:\2760x\021=!T\234=\004\212!\276\037\234\366=c;\307=\tE<>N\353%=\t\017\273\274~\333S\276\347\013\235<}\201\t\2765^~\275\214\241T\276\014\352\371<\330\317]>.L\360=[\227O\276\311\351\257\276^\360\016\275\237d\352\275\362\230?\276\031\242v=;+\250\276\372(\014\276\'\241\216=\354_\301\276\220x \276\377A\016<h/V\275\341\350\276<\214\246P\276N\336\215>_\005\006\276<\354\030>-&z\274i\330\201\275\nZ\375\275\324*\317=\036\2128\276z\253\t\276\227\313\260=\242\330\035\276\343\275\312\276b\257\\\276\262\357\362=;\275\206>\307~\212>\037\334\361\275\332\364F>_r\223\275\353zh=)`\213\275X\275\017<\250\022#=\225\347o\276\347\257\313\2757/O>+\365\331>\240\321\251<\206\005\321>\254G\333\274C\2500\276\200\021\234>w\364\373\275\205\265V\276\201-\020\2758~A\2762\002\020\276\010b\271=\217\005\361=dk\006\274$0\'>\354X\367=>\345\006\275\005\3404\276\204\210\020\274\343\224B\276\023(\273\276\2459\313=e\313\317\274\314?L>\362\277\265\275\321\326\324\275\243\236H\276\007\346><~\333\265\275\342\227\016\276\003\020\230\276\207`S>\260\221L>\313\205\214\274\3031\'\276\273l~\275\032\366\276\275\333\246!\276B\247\243\275\032\037F>w\035\346\275\275\'\216\276\332\355o>/.\300=\302\013\350\275\201\357\267;/t\352\275=d\225\275\220}\004\276\'\223/\276.\307\376=8v\031=\254^\220=V\223\367\275F\251\037\275\353\035\206=0\212\215=\003\224\334\276\302z\321\275n\226\030=\306j\310\275RR\327\274\354\215\025>\031Q\252\276o\204\370\272\216i+\277\372\235J\276U\220#=\3348\267\275\364\245\235<Xo#>\241 c\275\030\200\003\273\217\276R\276\264\252\034\275\375A\351>\367\266M\275\247=\344\274\037\276\204\276.hd\276gMT\275Q\235\252<g\007\235\275k\322d>\017\245 \276\212\337\374=7\210\351\2757\'@>z5\345=\030^k\276\242 }=A\303\233>.E\201\273:\207\016<kb\025\274\256+2>F\000 >n\313\317\275j\364\276\275\354\353\201\276\200\231\221\276s:\213=\324\242\213\276z\003~\275N\312\336\275\020d\220=wD\370\275 n \276[\262\236=\036\010N=@G\033\274z\353#=\334\277\304=\261*\250\276\215\022\026\276\274\325?\275}\357\275\275\021a\263\276\241E\345<\312\217X=o\215\034\275\031\266B\276Ck\313=\321W7\276\370\356\244>tv:>\201=\256\275\036k\263\275\333\260/>\206\331\t>\000q4>\207\252\002\276\273B\324=~|6;\031\232<=\346\275*\276\005\257\017\274\227D\264\276\262{\245=5]\304\275\343\007?=2P\204\275\302@\307\275)\201\207>\275b\213\276\365\371\216>a\257\337=z\001v>\013B\254\275\017`\036\276x\006\227>7x\217\276\214\021\027\276\"\014\004\276\243\027\325\275b\201\355\275\376\364f>\304\324\364\275\306n\003<\317\225\301=D^\232\275\025r\225=\304\251Z\275P\315D\276b\375\203=\300\307\033\276n\242\305\275\320~\332\275r\363\r>\313o\342>B\365\315=\334\345~>\310\204\212>\317\215%=04\376\2741\035\322\275\371\306\254>T\332\016>\316\027\243=\267\262M\276\264_@\276\210e\025\276\355_\262=\350\326j\276\277X#\276\347\204\324=\213\375\364>\343\210a>+V\234=f\276\271\275\316\2031\275\365R\273;\363\271}>\242\243\266>\"PG\275\306\222\017;\217\233\223=\262\035V\2764\r\024\275\360\034\306\273Z\007\320<\226\353\222\2756\370\021>;?\035>\341j\333=e\210\343\274\336Y^\276\315\336\337<z]\002\276\267\017-<\\\203\034=C\373(>]t\250\276\230\037B>\034X\263\275\305\340\272=L\000\261\275\362\316\207\276\344z\205\275n\345\016>w`\331\276\363\227\027\275\037\005C\276M\2166\276\272\202\201\276k\317\347=\351\201\306\275\371\021m=\2377\020\276\302\350\030\276c\353V\276\235\374\306\276\002V\363\275\347\006C\2768\241\221\276E4w=\2368\201\276x\252A>\037\014\260=\025\372R=\367\353\276\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\224\305p\275N]\263>E\242\274\276^=\243= \203S>\0044r\276\300\035T\276\014\\\220=C!\240>C\374\274\276\216!\230>\331R\222>Nb\232\275\267\034\205>\321\325\020\275\367\350\025>x\027\355\274\347\344\207\275\256\033\032>q18\273\252\265+>Q\240,\276\026\377\301\276^!\206\276\351)\t\276\263\343e\276\366j\267\2767\301d\276\002\365\203\276\266\352\215=\204\307\317=\026\254*\276n\3132\275_23>\322<\201>\327\350[\276\354O\210\275\255\233H\275\205\207\223=\224[\206=F\236\265<\237(\271\275\256\246\t\274.\313\341=_\257\366=`I\016>\236\025\231\267\017NB=\227\027\327\274\034n\241\274\253Q\316=b.t\276\204\341r\275\001\344S=\345\r5\276a\375,\276ZH\210\275\267\330\000=\023\265\202\275\023r\004>J\371\215\275\354#\322\275\266\234B\276\235\335\225=\2565\303\276Z\326\005>\002\2329=\243\210\301=Ko\034=\317\257)>)W\274\275\024\014\227\276\214G\300<\371\334<\275\236@\035=\3548\213\276\261r\241>$\016\340<.\373\360\274\213mD\276*\025\226\274t\272\200\276E\2553\275E\345+>\260$\223=5\301\201\276\272:5=\222\014\313>#\225\245<!\372\245\275\221\307\350\275\0239\344\275\r\337\035>\357#\240>V\233t=\217=\340<\026\2555\276\254\000*\276\371\256b>\350\017\"\276~\264\311=\203\343\000\275\325\024\345=\202\352*\275\360\322H=\320\303\275<\034j\215\276\3301Y=E$\033\276yz\223\276HP\331=\366 )\276X\233\311>\255\t\255=^\277\347=w!\211\276\265Z&>\0365v\276\315M\312=c>\215\276\307\304\242=\373o#>\311\262\007>J*{>\355.\375\275\316\310<>\003\3460>\003\234\000\276R\025V\275\343\212\202\276\335\251\027\276\302C\251\275\350\225\333\275s\233\220\276\216:\230>$\\f\275\217\225y>\035=\253\276\n\244\237=T\201\r=\244\225\306=<t%\276\337\016\364\275\330\3044\276\215v\210=\236b\217=\013\t\276>k\321\310=bh:=\273\217=\276\364\004\216\276\026\271C\276I\252\226\275\034\367\316>\026\000\360=\247EY:\270\177~\275\243\265V>\026^!\276q\250\253>2\360\214\276@\303\225\276j\241_=\215\364H>\246\332\326=\336\020r=+)\376< \2333\276+\337\246=],\004>\264H$<\262\201\236\276\361\007\'\275\235\313\\\276n\261#\275\342\353\200\275\361O\304\274\277\274E\276^w\026\275\'\377[\274k\3172\272\320\2337\275\246M\254<\322\256[=\366\323\257\276\177s\233\276\230y\030>\255\247\236=KCl>\271\254+=o\n\022=\223\226$>\345\336p>\004\030\017>\270c.=]\020\014>\351\034\014>\236\002\260\2752\270D>\013b&;a\335\270=\317\236\003=\345\016\032\275\213\306\207\276\216T\254={f\244=\330\370f\276\020\004\001\275K\376\007\276\211u\334=\367\375;>\177W\222>\177\017\323\275\013\'j=\344\035\225=\013\3628=\247\342\036=\010\326\273\275\017\346\204\276\276\245,>*\246R\275\031\013\223\2762\350\244=\222\025\233=\032\333\327\275\246\316\261>@\307[<\242\346-\276\250\235J\276\263\022\223=\177{\037>\254E\244<\315\303\240\274\233\304\025\276#\303\216=\220\372\032\275\305\215\306\276c\034M\2749\272\001\274t\231\352<\004\246\270\275\220k\225>\207b.\277\023\213\203\276\212\245\361<R\277\201\276\245\301\324=.\222\301<\204\277\207\276\306\006\002\274\324\266s=7eh\275\032\237\255>>\207\340\272\337\376\270=\313\017\006\276\271fz;L\226\216\276\375m\277<\020P9>\241\3379>\246\366\177>\233\332_\276q\260\354\275\201\021\260\276\023\333\230=\370\271\225\276\330\254\264=\010\372W\275\315\200\220\276\342\321b= \307\000\275\037\332\010>{\336D\275\305f\373>\221o\214=\014r=\273\310\214\005=|\271^\275\036x\"<v\022\314\275o>\227\276\207Gc\275\005sZ\276a\275N\276\316\275\267\275\215\321`>_@X>\341F\364=I\344z\274\330|\034=J\212$>\265\340 \276-\320\376\276\250\246B>\365\363\216=\274)\222=3\245\014=\017K\344=\330!S=Z\016\204\272\376^\232\276}\231s=\230\365\033>\307\361l\276$$X\276^l\202=\033\277c=j[\010>\202\000\325\275rG\256\275\237\322[\276u\0310\276(Y\241\275\237~ \275B\221\r>\356<\230<\317\302j\276\350k\346\275K\275\205\276y\r\333\275\265\302\251>cm\323;\353\001\311=\') \276\220-\027\276\234\265\274=\212P\350\275\216Y\034\276O\331\341\276\361>\037\276\036\374\272\275\213L\374\275j[\013\276\272\2645>\206\330;<\352\205\303=]\376\376\275 K\004\276\205\341W=\010\300P\274\315\324\274\276\345}[\275\204\205\340\275|\3669=$\202\240\276\010\212\271>\254\200{=\334r\346<\302\207b\275lb\025=\346\336\221>\270\201\003\276\006\373C=L=T\276\327\327\251\275\014\224&\276\201\033s\2764\226\022>\300\326(>\271\323?>\321\210\027>d\257a>M\216S\273\235\t\027\276O4\255>8\345G\276\026\223\230\276h\333\025>M-(>a\216\205=\250M\211>\347\030\311<\374\026\027\276\243\332\"\276\243\277\245>\000\372\233\274|\363g=]\321(\276\021\210\276<\016\331<=\327\303V>l\370\315\275A\'C\276L\005\255>,5\030>\203\216f=\313\321\315>O\366\307=\020F\022\275\337\326 \275\272GR>[\253\004\275~+\270\275l\335\251=*\252\021>=\323\315\275\377\211\243\276o\210\327\274\243HQ=\307U\017\274\260\201\255<\265s\245\275\311!;\276\222\254\003>\343\303\224>h\021\271=m\254/>%\220\263>O0#>\330\020\366=\034F\001\275F\227\223<c\330\257\274\337u\351<\320\374\214<|\375F\276\306\"\200\276\210\244\212>\250b\267\276\373\331\267=p\337m\275M+l>i\232\342=g\211\271<\274\271\305\275\261lC\276\231\271t\276\322W\340\275\\\"\332=\326\\]>\304\017\200\276GJB\275\257.\324<\276\206\344<h\007n>\024\351\224\276\330-)\276\366\024\022>\n\354\247\276\363\364\242=Y\341\256\276\214\250\225\276>\211\010>\332\347\353<V\232^\275\004\3465\275\364\375v=\206\361\006\276\016\022Z>\254\026\227=9\037\367\275\326PC>[D4>e\310\206>@\303\246\275\313\341\326\275\307\272z\274\334F\241=X_\313>\342Y\212=|\361A>V\351V>Rwm=\007\314\027\276\273X\343>~`\013\2762\t\210\276\315\270\342\273\213\205\255>\256\330\327\275\256j\235<\302{\223>*ok=L\357\224\274\002o\263=\313\225p>\234eL>\342^\027\276\265\005P>\025$u\2744V\321\272\272 \244;\205k\215>\236\255\315\275,\307\026\276\204\252\266>6\207\301=\212*b>\177\270U\276Ry7>;\245\202\273Gw\260\275\037\r\023\274\322\2011\276\301\242\324\275s[&>4\031\222=D \005>?\210\273\276\250(4>T$K=G\213\322\274\267#\330\275\203\224r\276\240\204\240\275\325\271\376=\340\025U\276\302\202\325\275\201E\347\275\376J\251\2740\341;\276\013\331\235<\233\206\374=\002\023\227\275\327\340K\276\021\374\313=9\242Q>\377/\215\273\322\335\257>pQ9>\351\357W\276\0213\271\275\027E\237\275t\247\220>R \347:3,e>\247=i\276U\353\223>\207\211\t>\327o\001\276\322KR<\300?\337=\355\262_\276Xs\235=~}\360<\351(S=\005@W\275\327\022h\276\252G\264<\247\345\313=\207\306\263\275z:n=\307\r\362\275\312$\221>\033\211(>\364\226\024\276@P\322\274R3\266>\313H\262\2762\276\216<Nt\006\277:\235\235>7\337%\275\301^\303=s\031\326\275#g\226\276\266\034\247=\t\007\257\275\204\342\341=\325D\n\276\221\177\014<2\343\017>\023&h>4\302\302\275\177\273!=\221\203o>\202\013F\276JX\035\276!\356]<\207x\371\275\005}[\275\217AC=\311\215\250\275i\343\200>\323\3106>\355\033*\274\235\367\320\276}H\227>\245\220\006\275yY\255>\031o+\275\301/\234=\3339$=\003\234\363=\220\230\336\275\030\340\310=h\2530> ?\246>\034\255\265\275\277\236!>\207B\211>\265\204\244>NZ\330=Z)\t>\211\"\334:q\'\347=\032\214u\276\354>\202>{(u=l\005\017\276\355s6>\213-c\273\322\260m;\304\272\255=\350i\334<\226\000\301\275\276\337\321\275\272\320.\276_\n\'\276 \274\265\275NoI\276Cxb=\201}\234\274p\\#\276\007\036m>0#\240>\270h0\276X\374\337=|\224f>\035!\245\274\362o\332\275\030\224K\276\330@\300\274\030\033!=\334\313\r;\377\203:\276\205\003r\276\317\013O\276\036\013B\276\007A?\276\345<\317=\273\204\231>\300/\\>\320%\252\276[a\025\276-|\262=\312\371\005\276\374\323\201\276l\303U\273\232\262 >\262\373\000=\301\254\270\274\024\267\374\2742E\001\276\246\252\371\274w\361\203\276\345\307o\276\"\320\r>P\001\340=\035\352b\276\036\263K\275\222\217X>\234\356\'\276]F\274<]\344E<\333\357\235>\323%\305=\320\021\277=\200\232\216\276n\367\036\276m\205\037=\256\211:\276\331#\372\275\355\350\206>\356]\230>\242\2151=-H*\276\276D\037\276]\nD>\327b\333=\323\210u>x\244b>\310/\353=\331\033\301<\247p}=6V\232\2762\2713\276h\307\230\276nX>\274I\373V\276\\\"\027\276\260\330\021\276p-\002?\300A\252\274\005Z\200>\377\255\320\275\000\207\"\276Q\255`>:\207\246=aq\007\276\260&l\275s\177B\276\232j\"\276\211\272d\275tl7\276I\035&\276\361}m<\274d\213\274\211\303\260\275\0322j\274#\351<>8\302j>\200c\224>fl\250=\272\217g\275\3304\314<.\322\353<\263\330&\276IP\030=b#\235>\225B\241\276\202\2571\275\027\252\365=\2029\016<\375\010n=\323\302\014\276\205\346Z>\301Q\321\276\'\3563\275\312>\215\274\203:\277=\244cN>?\032x>j2\356<\205\347\343\275\233\003\r>=\336\230\274D\254\362=Ve\025=_$\212=\315\271\204\275N\206z>\321 \234\275\004\310\372=\224\245\022\274\221K\t\276k\241\001\275V\222\362\275J\356E\276\240\230\232;\303\373\213\276\265D\317=Z\303{=\026G\245>\377\337n\276\307~K\276\312\227\036\275r\304\230>\031\220?><\300,\275k/\327>\n\324J\274\266\366\260>\351Ko>\003\2410>\363\'\305<\265\264o=\277\225\325\276L\354\204\276\254\253\261<P\271H<\\rH=i\324\203\275:\315\022=%\306j=eR\'>\240\257\260>J_A\275\002\205\321\275\344\364\211\276\335\340\354=\037\265\203>\375\320\003\276\231&\316\273o\274\271\275\335\247\310\275\277,\355\275\306\027\262\274\322FP\274\027\342\256>\201\367\277<\320\360;\276<\301\252\275\264\342\270<\214\235\225=\377\210\257\275C\236u=\014aJ\276\003\347\254>d@\036>}\353,\276\025\330\037\276\013\344\261=Z\326R\276\251\330\212\276Y\307\225>|\367\240;\376\371\267\276\325\201\245>IEm>\247U\r>\230o\214\276\316\234B\276<5\030>\010\241(;\334a\002>_X^>\202J\312=\204\311\360>e\320\303\275\266N\341=\237\253\322\274.\276f>\301\007\014=\277}\240\275\026\347\364\275(=\317<\366\202t\275k}\356=!f?\276R\026\227\274\366\000<\275/\205\236<\366\273!>L\335\231\273i\266\251>\201@\235>\264\320D\276\267v\027\276{>\010\275\215\300\020\274\3716\217<\276Y\037>\237S\236\276z\031\375=\246\000\220=\252\207`>\\fM>S\324\232\274\275\333\313\275\032\357D\276\253hf>\264_:\274\267\371\">\364rU=42\002? \354\210\275\\S\334\275\235\225\203<\263\\R>\274\355`>U@O\276h\345\311\272\263q<=W\354D>\274\315$>[\341\305>on\222\275`o,>\205_R\276\266\223\272\276|q=\275p\326\224\275\255\373\223\275\253\273\277\276\2431\016\276c\205J>\311\253\301\275\177=4\276\311\326\205=\301V\306\275L\200\231\276;)\236<n\206S<\332_$>\331G\003=\362\3160>\243\211\013>\024=\251=g\373\005\275\016s\274<\317\250a\276\327Y}=\337\321U>\302\207>>\036\243#\276\213m\227\275<\3728>\002\310L>\367\001\200\275\010E\200>\323\326\372\275\272i\010>\r\323\026\276\016M\027>\0002\342>kck>\210\037\263<.\250\227\275\251d+>\216\244H\276\315jc>a\3708\275??\225\276\201\311?\276\337\034\005\276\362-&<\223 q\275&\271\010\275P\326>\274\371\020\014>\375?.\274\337M\350<!\352u=w/\032\276\344&o\276\266\224\352\275\266\272\200=\240K\366=7\206,\2760\252\310=\3322\343>\365\305\313\275k\272\023\276\220\n\254\274s\273\t\275\214\260\215\275\376\313n\276\357Z\206>\253\320a\275\033\375\202\276\315&\367=V\022A\276*g\035\276{\216\342\275\217\350\360\275\324c\010>\273b\343\275\377\032\342<\276\276O\275\362\355\262\275\231\336\371\275g\312\201\274\203\265\245=S0w\276\366\004$>\277\276\301\276\257\026\005>5q\265>\035h\014>\206n=\276\260[\">g\243C>O=5>\275\000\232=\315\276\035>a\035\226\276)\315\236>m\367\t\275\345\337|<\372\021\007\276\262\231\252\276k\304i>\346\023\230\275\030=F>@q\233>\207\016a>\253\240L\275\002\371\332=\201tY\276\235\321}>v\317B>\030\332=\275E/\241\276Z\3232>\203\320\207\275D\\0=\375y\251\275\317 \221\275,\233@>h\256\236\275\263\027\201\275\340S\260>.e)\276\005\263G\274bcI=\222x\033>%2\253\2760yX>\276\201R>X\323\256\275\016zG>c\201\226\275\031\301\252=\232\313\345\275`m\210\275P=\004>\265\303$>\331\271\332\274B\'\223>2\343@>\220G\314>\211\260\332=\356\376\205>\317\203c>\350\351\244=?\227V\276\021\036\377=\205\005\014\276+\033e\27655\r=\210\027s>4\236\376\2750Mc\273-\t\272=\262#\313<\354\n\242=\354\313f=\3111\231<\316\270\221\275 \017a\275\376\345\252>#\001U>\376>0>}\013\310=W\0027>9\324#\276\252\027\001=\343z\013>_\311\326\276?\317O\276bX\270\276o\316\305\276C,\346\275~\301\360=@\r\250=]\205\003>\241E5\275\200\201\201\276\"*\307<\341\025\260>[\034\007>\203\230\t\276\013\037)>^\027*\276Z/\213=\276\r\177\275\274\223C\276I\003\374=]\363e\276\371K\236>\273\242\375=\314I\335=u3,\275\277\211\365<v1\227\276\374\262i>\317\227\227>\010\343b>\312\303\2509*m\206>!\325\232=\360\332\020>\337t@\276^\272S\275\357tB>\251\305\272\275\030\256z=O&\213=A\3123>1^&=\006\207\002\275Qo\026\275\357\021\204\275\330`\250>\331u\320\273\206\342\377\275b\032\375\275\003\313\267\274\312\224\213>\234i\267=$1\225;\363\030\035=\014@\002={c\207\275Y\276\233>\314\375\224=&\036\230=M\244\200\274C\205t=B\233i\276\'8\211\276\204\334\357\276h\366-\276Bp*\276\231\251t>V\274\034>3~\002\275\276\216k>N\361P=?\321Q\276\371\346\210=.#7>\360\343\350\275{\004\030\276\372\270\005\275\376\315\013\275\200\324A>\211g\r\276\214en\2750\351\304>\305\2047>\303W*>\234\343\224\275\325fE>\207\3545\276$\3431=;\346\213\276\266\027,>\325Xo<3^\213>\223\246\262\276c\331\345\274yK\330=\\Q\366\275\243\327\234>\032\330<>\363p\\\275\024dB\276\037\201\273=Y\324\322;u\311\201\274Tst\274/5\035>\277<\240>\324}u\276dI\031=\352H\013>\370\267\325\273\273\241(>-\237S\276\004m\206>\026\320o=\330\303\252;\312Q:>L\336\010\275\316\357\222>\305\2218\276\002\244\212\2750\014\200<V\010\035<\346\010\211>\253\244\006\274 V\'>,;>\276\342\245G>\330\201b\276\"\305c\275\210T\253\275\355\324K>\347\347\224>\274\004\267=dk\025>?<\325\275)O\363=\233\"2\275\323y\366\273)y\n\276\271j\023>\251\265\"=\2737P\275\022\020C\275\251\373\253\276\026y\n=\312 \230>\314}t\275)\353\202\276\364\251L=\256\004\222\276#\032d>o\317_=\005\246I\275a\313l\276\3632%>X\001F\276\306\200\007>\021\371\325>n\203\326=(\275$\276%\371Q>Bc4>C\270\250<\314K\274=\025w\023\276\'Y\361=\327:V\276\353%\233=ad\264=\361\341\255\276,~\243=Q\251K\275\025\346\220\276\315\307\204>Z\331!\275\026\037\252>\302\030\004\276\326k\372=A\347M\276\000\262k=\251\320\237\274\ro\232>HQQ>n\032\230\272 F\303<id\027>\360w\243<\202i~\275\216\210\245\276\007\356r\275\034M\362=\235\217\216<\326\005c\276`\204\234\273e$>=\353\243h\274\205*\332\276Y[\266=\350\314.>`\r\363\272\0175,>\037\253\003\276)H\322\275\350\273\230>*=\330\275\307OV>\205\314\274\275\224\032\027=\245:\224\276\2026)>*\025i>\323\022>\2764\362Y<\"\230\336<w\230$\276\331?\025>\005od\276H\314M\275\325gm\274\301(L\276\213\002\\=\211q\335\276\276\017a\275Sa\323\275\332\301\201\276l\254\212>Z\225\342=\353\021\254\276\341\017\220\275E\031W\276\224\002\303\273\274$:\276\211\224\270=\212\324\221=i\277\236\274\206\370\334\274\3157\001\275\307\216Z>\356\361J\275Q\266\223>\350\205\250;%\032e>\237\217\341=\207\036\321=RZ\271>c\2659\276\317\321\216>fmG>\234\306\221\275U\036\201\275\221\020u\276\003\345|\276\373\360\232\276{\255\344=\313\326\345\275\365\340\244\275\016AY=\2364\322=\362\221\223\276\355\006\243<\342_9\275\302\314\314=\323\261-\276\371#2>o\n\367<\242\351\312\276\346\027\372\274\241\232\357<\242\247h\275\342pv\276\240yY\275\031\224\214\276\321AB\276\357\202\277=sF\020>+\236\213\276\027\2528>\266\030\205>5\274\004;\236M\006>\306\375\235\275\275\035\002>\"\357P<\302C\322\275)D\371\275\244g9\275\014\331\272>\003\252.>)\213\004=\031w2<l\211\216\276\315VL\274:\315U\2765\340\223>cw\305<\202\366.\275\342\306;\276\270r\301\274\316\001U\276\370\277\244>\253Xv\276\361\266\230\275N\250\036\276\277\306\244\275V\252i:\006\263\220\276\033\261~\2754G\302=/\350\"\276\231\003\233\275$(\374=\235Y\335\276\203\333\341\275\361\274B=\221\351\347<\311\222\021=\247&\366\275\243\340\">=\236\007\276\274\220E=v\032{\276\001L\266\274Q\341G>\032\346&\275\213\363\216<\334of=\327[Z\275\037\002}\276\010\212\326\275\324\022\013\275\332u\214\275\235\006\233>&\201\345\2749\372\360\272\203\017\203>\tGN=md\301>\252v\251\275\343_\234\276V\262\350\273\030\030\032>srT=B\360\310\276\322\017\203\275`\353\304\275\3471\330\275yA\303\274\024\214\206\276\321\017\370\274\250\331S>\231\207\234\275M\230\252\275{~\241<\211f\257=\362\365\222\274\334\177F>\273!\320=|d\371\275\177\354\037\276#\364=\276\377\'#\276\004\003\001\275\225\310\221\275s\021#?i\r\023>M\265[\276\232\277\273\276\211\346S>\276,\235;b\303\315\275\014+\004\276\307\260\211>\360\255\032>\323N\032\274\212\003I\276x\304\304=\032\307=>\357\267\230\275UKH\276\n\353\250\274\210\320(>\026\357\232>u-@>G\025^>\017h\222\276\346u,>#\237!><U\t\276B\224a\276_^e>\2336/=i\327!\274\272\222\277\276\302]\216:\247\244\r>\026/\352\275\244\\\223\276\235\254\252>\277\230g<\243\336\247=\226X\301\274\334r\266\275\245[\003>\307*\207\273\177<\216>\003\313^>\340g*>Y\210t=\305\377P\276\353m\002>\010\355\350\274\350%%\275\020F\306\274W\200 >Aw`\276\014B\311=\3166\323\273&Uv\275\374\\\320\275\033\314\220<\376\236\301\275\026\254\211=\342\010n\276\035\022L>\274\'\024>\330bw>fd\334\275H\344#\276lW\000>\207X\236\276r\3716>\231\014\214>\261\020\264\275\324\241\216=0c\n\276!\235&>z\017\242\276\342\241\202>\204a\222>\211\274i\275\266\354T=\006\342T>\005\366\226>3\235\341;\332\021\224\274m\246\221\276\ta\007>\345\341\257\275\253\353F>x\2205\276|b=\276\221\010K\275\030\005!=\201Q<<\024\326\213\275\327\2726\276\264\271w>\316\004\001\2740\3337={\0146\276h\n0\276+\312^\275\332\323\244\275:@\215=\035l\250=ZO\n< \207g\276\337\223\221\276/~\203\276\003\273|>\275\234\246\275\224j\225>\006x~\276\335\301\203<\305\330\260>S\030l\276hE\t>\210\177^\276\205F\242\276D\266\276\274\360\345H>Oz\313\275\344\216\030\276c\276\231>\371B\027\276\236\366\264\275\221\300\r\276.\374\"\276\266\234\237=RI~>\270\273X=\354H\021>\034\036\362=]\301$\276(3<=\251+&\276\3551\201\276\006\211\341=\210\336Y<\246\2430\2765\311Q\276\273\3257\276\262)\002>U\272a=\307\2177=T}\325>\221\321\340\276\217/\254=(\237l=\215\377\334\275\260\251\227\276\027\331\236\276\376V\373\276C\356\244>@8\025\276\366\316G\275p\023\352=\204\367\021>\301!\327<\0132\330\2747\035\266=\265A\321>_8(\276\276]\037>*\202\305=\346\202\222<\3240\260\276K ,=\354\365\364=\210i\000>\336\216s\275\234n\361\275t\016\335;-BQ>\262\365\216>)\371\030\276\366\\E=\315uQ=\274y\317\275~\254x\275w\266b\275G-\302\275)<\244\275\276q\211\276L ,\2766)\346\275\034r->\016\254c>y\216\202=\222\021\331\273\345)*>d\225+\276\252\020\030>\227e\315\275\350Un\274\n\007D=}\243y\276\364\355\374\275w\255>=::n\274\276\335\257\275\005sP\276\346&\243;\251\035\212\2769\253\252=\355\231\r\275\373\336\367=\336#_=\262\0329>\273\346\211>\265\362\021\276\262`\263\276\335\240s>\324\361\363\275K\256M=Z\034\232=\251\335#>/\355\006>\314;G\275\231\003\023\276kLL\274\233\265\210=N\214\235\275=\336\311\275\270\244\352=H?\025>\343T\214\276\203m\271\273\013gX\274\260g\036\276\264*\217>L\317\220>3}L\276\361Y\177\276\340\317Q\276\336\355g\276\312\324c\275\315(\244;G\341\021\276S@~\276~\261\273=\303(\233\275\000\325\r\276\205\315\340\275\"\302\013\276\320\336\222\2732\205\203>\231\347\212\275 \016B\276+\367g>\244&\364\275\355V\362\275;o#\276e_\355=\014l\341\276\022\367\221>|\263\203=-\033\035\275}\3423>\307g\024=\372\273\020>\217\216\236=[u\211>\202\320\227\276\'\203\037=\237>\027\276\203O~\274a\005\002>/\257\261>\312\331\030>\363\0062>G\261\367=V\374\307=\303\300\235>\211\252\001>]\223\356\275\370%\007\276\341Ak\275x\273\007\274]T\216>9J\223\276\332^\200\275\254Z\325=L\322 \275:[\007\276\3746\370=\306\205\033\276\355bc>\315\006b\275\377\364H\275\2514q\274\013\351\235\2765M\335\274b\007j\276X\367Z\276\206\314\251\276\013\334\337>\3569\242\276\374mo=\246\320d>\363\234\207\276HQb>\247?.\276\000\266]\276+\376u=U\030\023=\213~.\275\017\3213\276\246\201\205\276\2136\022\276\321\222A\274O\337\214\274vA\211>\014S(>:\341&>\3063\316\275\245\205 \276\252F\307=\204xm=f\335\371\274\325\254\'>\205\265\201\276b\372\232>D\'\323\273n^\010>\255\340\301\275\373*\341=\323\t\325=\017\350}>\215\3708>\350\020\023\276\014\031s\276ad->\257\330\216\275\256\2365>\325\305`\276\345A7\275\007_\327<\225\301\252\275\366\350>\274\242\r\013>@T\225\275I\n\357\275\271\215\035<\"0\024>O:\332\275\030\362H<\021\375@\275\246\025\232\276\367\211\204\276\305\257\220\276Qz&\276\320\017\005\276\333F%\276\202xK\276\316\235\267=\255\020(\276\317\357E\276x\354\313\275\311\nW=\371\213<\276\241\000v\275\017\266\260\276\370\331+>\213\022.\276\006\211N>\213\242\334\275\213w\301\274h\260\307\276 bX\275\326\023\255\274a\021\234=\237\374\377=\320Y\334<\266\250\267=\314\227\230\276\274|\263\275\371\0370\2763V\325>\213J\224\275\366\244\304\275\234\215\211=\r\206#>r\303(>m\301\374>\000\357\311\275\235\022\264=z+\245\275{\001W\276\222\007\023\276\355,\t\276\216\270\304=\370-\245\275Vta\276\362\235\222\275\232\005]>\331\330\201\276~\302\007=\025\225\254\275+0\242=Y\275\235\276\313|%\276\312\356\352=F\342\310\274\253\367B\275\304\325\210>\336<\002\276\315\237\333\275O\267\365\275\273\201\202\276\024Z\235=#n5>\202p{\275`\320\027\276\221!\246\275K\004\323>\243n$\276\367L\267>\276\317\271>\266P\022>z\302\016>\362\227\200\275\202F\220=\202F\313\274\207A\360\275\207\014\272:\nV\250\274a;\246\274\225mZ;!\370\310>\201s$\275B\351\002>\004\351\207\275zsY\274\022\024\202>\275i%\276\035\333\033\275\014\272\310=\374\343\340=\3671)\276m\233\225\275\256\245\227\276\204H\201\275a\260\372\274je\325=\0214\223\276\331\235\320\276*i\032>@Q\001\275)\335\022\276\326\274U=Y\035\220<\215\372d=\003\032_\275\224L\365=\303Fo\275\301N\344\275\025X\004\276\312x\366>\033u.\276w\325n>\244\267\302=\364\340\005=\303_\325\275\2601\234\276\337h\335\275\004\"\004\275\255>\244>#KH>Y\251\347=\316\214y=\365\027u>\214cw\274&\177\241\274\332\202\267>\365\257\270=\032/\301\275\223H >X\362@<V\230\221=\345\361\304=?\363\326\275w\247?\276\031\\\301\275\252\203t>1\203\243=\272/\237\276\247\363\355=@\222\272>6\211\355=\031>R\276\215\252\337\2751\030#>\354IE>\246\305R\276z8\220>\246\352\372\275\204\021\335=\221VN\275l\224a=QB\230>\275\317\334<\353\220\005?/\001M\276\247\342\201\275zCp=\250\350\342\275Z^j=\340@\240;%e\014>zAI>\2572\224>\n+\200\276Q\220\000>\017\223T\276!G\006\276\203\3106=\315\231\216\274\255\343{\275\217y\227\276\017:\336<\365\226\013>\227\001Y\275h\332\036\276w\373\032>s\215\324\275G\t\002>v\234,>bf(\276\016\315\204=\210\331\216\276\257M\242\275\357\271\267\274N\360\022>\212\301\221>\321\333\033\276\311\244\006>\315\217\222\276*Gv>Z\351m=\216\373\\\276\372;\344<O\311\330\275\203\344 >0L\203>\254\024\237>(^*>\346\037\316\275\253\257x\275+\007x\273\201\276v\276C\333\261=E,\000\276&U<\2769\356\243<#\375\024\275\363\241\207<\354ai>)\344\002\276\323\330)\276\031\351\363\275,\t8\276|\377\n\275hY\301\275Z\241\204=\205/\251<\335\355L>\004\002\244=\203\374\212= \207\341=d!4\274\336Q\362<\350\004(\275B\257.\275\255N\032=\201\366v\275\004H/\274\017\261a>\312\t1>\003\377J\275PN\360\275\211\247o>\251j@\276[@\016\274\003\357\356\275a\342\206\2759\360\350\275U\032\023\276\312ea\276\330\004\304=(\362\017\276\301\016s\275v\000@?\257\252\256\276s\260\353=GR\020>\017\'\247\274W\325]\274\006\221\036>;`\226\275\237\035+\276\334\350\001?\357i\013\276\027i\272=\367\260\251\276\233\333\000\276\371\246\350\275\025\2261>ZK\025\276[fa>\350\355\275\275\006\310s\276\001q\355=\360\2733>\000\336\027\276\200/\245\275T\226B\276.%i=\252\314W\276\023\363>>\361\177Y\275U\211\226\276\200\255!\275\212\374\"\275\247\376\322\276U\224\">\273h\220\275;\225;\276E\010\347\275LaJ>\240\247^=\014\272+>b\241\320>4\324\004\275\373\302\"\275\366\275\"\276\351\361\215=\354\323\247=\331n\340\275\331\322\262\275\363i]\276\022\257\337\274\241*\376=-U\336<\205R\344=\371\302\027>a\0174\274\030\203\016\276\306\331\177\275\375\232\225\276\211\337\010>\232\005\013> \3230\275\374\206\335\276\215\332\177\275\313ki>?\375\013=/\233\246=\'\251F\276\366\352\264=#\272\021=\021\004U\276\003\212c\276\211\024R>\374\270\247=\320\3370\275I\331\321=w\375\255\276\3049 ;VE\177\276\361\034t\275\033jV\2754\351f\276Z\255B>\276&\201>\252Y\234=T~\310\275\0356e\276=\217\313\276\323\246\211=\342\263c\2749\257}\275v\235A>\216\263\306\275\246\335\341;\016B\364\276?\361\253\275\300\231,>t\305Y\275Cr\252\276\021*\016\274V\276\232\276\\K\014\2747R2>\237\356\355\274m3\325\275\2336r>\035\224\036>\205\351\336\275\2210@\275\033\253\376=\304\302A\276\334\245\t>\035G\312=\022\214\016>8\266=>)\327q\276?\337\323=F\"/\276\332\021\302\275\331A\362<st\203\276\342\005|>\032.\240=\255\254]>\360\0228>\331#>=l\026i<\037!\206>\231\343u\276\325\354g=\002\004\031="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\375H\256\276&l\242>m\026o>\270p\323\276\314\335\033>\344\r\244\276\303\021\372\274j]q>W\035:>\001&\333=D\314\n>\3661\324\276\004\370@\276G\034e>\355\330\031\275\243pM>\216\246\204\275\332\242F=\333x\246\274\n\200J\275\255\300\267=\"\022\362\275\230\\\335=\375\207!>\233\211\255\274\036\317p\276\245z\010\276 \3430\276\207\215\344\275\357a\023>;\032\014\276\t.F\276\326\326{\276\325\006R\275).\002>\302\035\000\276`{?\276\203\222\322\276\247\363/=,\231+\276\250\312\242\276\324sJ\276c\201\230\275,\3436=\365w\032=9Q\343=\241\266J\276\362K\246\276,\205n\274/\3507\276W\327\207=\367\024\354=\353\251\267\275\273\016\000?\342\344`>R\010\226=\376\260l>\r\016\317=\256x\364\276RP\357\275\277\023\275=[\346\001\275\034\020 \275A\312K\276M\323\007\2765\262\267\276Id7>\020\312\214>\201jP\275\0140\332\275\177^\245>_^\223\276R\3365>\353\345\022>,KU\276<\035e\276`\016#;\231\346\357=\017J9>[\217#>/\360a=\013O\270\276\326\261S\276\342M\333<\027\222=\276A\342\037>;uz\275\036\275==\020j\021\276[\025b=\263 O\276\347\323X\276+\371\032\276\322\264)>\316\334\235\273\245\354Y>\350\273\241\275\220h\216=\265\263\250>\354\325\205=\276\317d>C\256\204=\250z\243=\204\243A\276\341L\323\275;\207\346>\020\342\250=\327\326\244>\261\257\225\276\257\226*>\276j\r\276M[\036\276\021&[\2751:$\276\306\323\360>\301\206\365\275=\246\372=\306p\374\275\373o:\276]\342b\276`\237\267<_\236\250=Z\271r\275U\207\233\274\334~\013>i0\000\274\ni/\276\032\274\256\276\311a\016>\326\352\223=\344\'\323\2748\251\276=,\241\212=\373\245T\274\320\\h\276\t\213.\276\210*$>\206\312\330<\377\r)\276\004\3456\276\264#\363>\304!f\276\326\377\355\276\353\342\341\275\t\331\270=\245A0=\027\201\236\273EH\004\276\334\2606\275CG\230\276\3423\016\276\255\2744\276q\2552\276\301\223w>l\377\264\275\264\345B=\372\201\261\275\257\277$>H\374\000>\267\370.\275\234\247\325\274NDT>\304\013,=\232O\n<\371D5\275\255\203k=\302Q\305\276R\037+>9M\240\275\254dO>\327f2\275%\370\264=\350\240\024=?\334\205\275\003\307\244>\271h\345\274\352\223z\274,\216\r\276\261\303\203=\034\365\201\276\237\010\244=\343t\317>}\227\021\276\253Y6>\005B\334\276\332\250V\272o\251\204>\247\275\227\276\n\370\220\275\367#3\276\360=@\276\231\326@\275>\302\024=8\304\320\276w\305\230=\262\t\023\276\234:\246\275\247\300\204>\215\267\310=\3732c<\236\027{\274\177O\340=\323\331\362<\037B\"\276\244\304\254=\030@\006=\233\037F>\241\314\032>\234\2173\276\022m\036>\351\244u\275\234\264N\275\245\023\345\275\244oI>\250\'B>\003<\364=wE\341=\370ig\276\237\250\362=\231\356\346=d\224\n>T\360\243>9:d>-\216\203\276]\277Z\276l\217\200\274\233*@>p\2158>\351\302\240\275\363c\247\275\271a\'\276\232\300\230\275(\343G>!\252\233\276\367\004+\276\317\244\313<\342\0242\275\334JI>\340!\213\275+J\236<\311z\242>4\300->*\013\274=\203\342Q\276\226v\033\275B\220(>\2749\312\276\233\346}<;%\224<\253c5\276\300\213\343=\033\"\'\276\304P\370=\244\367\r>\253\332`>\260\336\265\273\254\305\351\275\r]\364=K\343\235\275\245\030X>\373O\305\275\017\205\354\274\006l\330;\314\261\301\275\247K\017>\377\310\212>\335I{>\237\265\\\276\\\302P>\347#\004>\224%\246>5K\202=9\377J\276\237\206\017>&\tG=\226M\227=\023\224U=\203\205\244=\271B\300\275\244\340\314=08\200\275T\020P>\311\1778\276y@\275>\035e\227\276\226&\022\276\274\362\347\275-Q\205=R\254\276\274\320>\001\276R\0317=\t\355C\275{`\315\276 3\273=9#\261\276\342$\237\276\262\204-=@mS=\336\004>\276\342\375\246;\334y\202\276\034-\003\276\360\216O\274\'J\037\275N`\211\274\350x\344\275\231\364\253>\276\3557>f\232\'\274~H\200=c~\251=&\356\241>\200%\335<\331\337\240>\006\373Q>ax\010\276\231\225Z=f\007\334\275D\275(\274\336\247r>\254M\t?\233\331\343=\024\321\262\274(\212\n>\356\031\354=\275:g=|P\253\275)\240\023>C(\335<\202\211X<\310\204\334\275\214\016\237\276\324\243\231\276\226\346\014=\347\036\027>\212\320\233\2761\223/>Y\352~>h\037A\274\315\024\235>\0233\245=\363\226\316\275i\273C>I\275\206>\274:C=\351\374\211>[\332B\276\r\266q\275\314\327\356\275]\240\261;\340\343\342=\204\374\236\275\016\360\001\276Z\340\234\275\027\326\323=\202\231\345=\343\264\200\276\251$f>\230h,>\221\212\336>\273\237\263=k\340\277\275\017\257\237>\235\253\216=\230\303\216\275\006_6>G\037\230\276\220B\357=D;\202>\333\336\007=\323#|\276\362\336\247=\340A\200<\302\232P>\307.\276=\t\275\347\275n\"\213=y[\350>\276\214\001\275\204\032t\276\323~\223\275\335\304q\276\300\017\230\276j\345\031\276\004\263\301=\243V\321=\255\021g\276\006\005:\276)\362\002>\tE\n\2763~\215\274\374\005\357=\316\341\244=\017Q\204\275\202\022\003\275\257\"g\276\346\354\333\273\350\025\t>N\336\267\275F\315\256\274\010\204\177>$\301y\273\216$\016>\263R\264\275\266\324B\276m<\013>f,\342=mU\322>\210\342\341\276\232q\211>\262\302\370<\035N\331=\001/\022\275u\030`\275\314\303.>\027\311g<o\343&\276]\352\343\275<\210\277\274\224\357\263=\222\240\002=\361L\200\275\364\217P\275\352;\213\275\036\366\303=\026d\303<\331>-\275\372\216\223\276*L\036\276\221\"\233>\250\203\r=i\353\333\275`5\245\276\343\255s\276\236\237\341=`\316\301\275\315\200\252=\3155\014>{\214\206>\373\377\207\275M@\253\275&\376\364=\343\352\230>\351=\252\275\222\360\245\275p\274\r>\002\025\221\275\300]\356=o\331\360\274e\270`\275\355/5\276\326df>\'D\343\2749\206\007=\246\341-<u\335\234>\376\031\206\276\32733\276\322\000\336=h2;\276[_#\274#\003\231<s<(\275\220\215\210\275|<\035>\317\021\276\276\005\342\032>\203s\263\275M\233z<\353\306\300\275i\314X\275\322\204\020\276\277\246\346\275\340\353q=\313\265\240\273\237S#<EB\256=\030%\010\277~\361\304>\215\372\313\276\353\n\341\275\\\245\341\276\034\341\275\276\026\024\321\275\264\010\276>\232UM\276|=:\276\3138\362\273\251\216\305\276\206\'\020<\021\014\221<\035\307D\276\273\372\374=\337\t\204<\000\356\340\276P\355\232=\244\tU=\271GK>\362\206@=\211ME\275\300\305\204=u\020\014>\'\254K\275\360\342I>\000\231\270\275z\256\010\276:\"\004\274-\367\036\276\340!\217\275\205XU<oK\245\276\217o_=\270L\224>\330\241\000\276\345|O=ng\312\275\\\3644\276\007,H\276!\271\250<S \213\274\013\372=\276v\327\251\275!_m=\261\230\236\275\245\344\274=\201\032\004\274\037Dz>\237\273\334>\311~\021\275T\027B=\266>\321\275\234\330\221\276\232\251_\275\210)|\275 \216Q\275\006\262\221\275\253\215\260>!\252d>\202\374s<\3315g\275D\205\251\275H\316\351=>\342\231=\340\273y\274=\007\316=\245\220\273\276\341\334L\275}C\302\275\271\322\262\275Z\352(\275\234\245+\275\020\220\245;\347\326\007?\035\271\322=\202\376Z\276\207\272\016\276\316\312\200>(\3733>\216;\"\2756\355Q\276c\257\002\276\364\305\256=\252\307\333<\220\351\231\275Ge\264\275\253\376\030\276\206w\374\275\r^2\276r\003_\276\3676R\276T\345\031>\312G\263\275x\326N\276M5\027\276\346\322\022\276\"\377\246\276\316{\215\276<&\330\275\312s\331\275g \310\275\317E\204\274A\'\224>Bez>\026G\033=\237\177E\276\275|\363\274\316\t\217\276\264\271\227<\032\247\302\275\202\206R\276\344\342\236>\3165^\276\2448\010\275\367\217\036>\274\023\023\276\023\004\363\275\311\364V>\2304\343<\215\017\205=\224V\337\275\\\377\035\276\274\240b=e[;\276;\302\337\276V\247\277\276\024\213\352=yn\365>\2164T\276\304\2128\276\347\202$>\334\260j\276\030w\030\276\374\262\267>\237\020\006>Y@\024=\236\336\271\276\017~\334=\347\242\000\276\211n\347>\210\343\203>\237A><\303o`\275:g\001>\305C\212>+\316\266=\255\371\211\273\313@\262\274\260J\260>\3406\016>\366\037\356=\310\226Y\276,|\211\275}\177\227\276\203\004\017>\312\242\240=\354\254\206\2760\006o>\343\216.>\3263\263=\251\373\221=\r\253\362=\273\362\200>\220F\305<\316\214\360=\'\026J>O\313f=\177\253\321\276j=\343\275\0020r>\315\336t\276\317\224\316\274\302>3>\254\321\341\274\020vl=\026\363\370\275d\024\316=\2052\327\276\261\255\t\276\263\377\300\276\231\332j>n(\326\276\377\006t>E\346\341<SB\206>\355\323\377\274\302\326\013\276K\326\016=\205\022\245\2757\227\230<=Q\254\274\316I\312=\350\253=\276\327\235\254=\346\330\202=Q\244\234\274P\310\251>r\211e=\373(,>*\024\006>8\230\240\276\221\343M\276\027V,\276\301\315\207=\350@\022>\322\207l\276\264\317h>\274\317=\276NJf>)\334Y=W\320f\274\250\366%>p\013N=\261\3144\276\343n\306\275\243\321\216>W\377\242=\371bH\276\253\210\277\276\364A\255\275\034ym>\303\333\267\276\266\200(\276\357\261\252>\244\206\300=\334\343;\276\016\324\366\275\311,\372\274\3254\023?\3141\252>\007\020*\276\220\354\013\276l\257\007\275z\234\261\275.\203I<\323\365(=U\351\331=\267\224\265>L\262\336;Fy\205> a\257\275\t\025\'>bV(=\035\354\242\275\007~\343=\344\036\013\276\261I\204;\347\265\320>\204\324\245\274$QS\275n\325\325\274z\031L=Ny\006\276s\004\257>\343\363\373=?\214O\274\217\232\233\276\021\026L\2761K\"\275}\321\001\276\366\241\"\275O\226\177\274K\034\242\276\256C-\2764&\325<\241\211\211=\304#>\276,//\276\n\345\270=\004\317>=\337n\346\275\272\302\256\274\352\252(>\220B\326\275]b\276>\330\307\254>\265?\373=`f\201=gt\033>}\275\033\275\274\027\346\275\363.\024\275\016\355\206>\305v!\275Soy>\313\332w\276\233\267/>,\021\031>\272\177\265\276\332Wm>\275\246\225\275\356\366\264=i\372$\275\205:\000\276\306\237\251\274p-8>\020\0176\276|5\337;\314*\036\275\'\214\022>\232\360:>\254r\271\274\344]=>\333T;\276;\255\320\276\361Nu=-\372t>\255\202r\275o\342\270\275\"\331\337\272\206\364\300=\333\274\341=x\325\331\2759g\251\276\264/K\276\332o\001>\271\321\306=\211\313\350\275\235\372\306=D\276e\276\327|\254=\360\267T\275^\306\013\274\234\013\235\276\363\316F>\301\205<\274C\336z\275\275\327\003>\010\360Z\275\\n\365\274\024l\227\276f8\377\274ty\226;\334\360\027\276g#\220\276QO\007=\201)|\275\303\343\014\277\223X\323>\251\036d<k\356@\276;=.\276r\271\313<w\377\276\275\276\3015\276\310\036\371=\337>\036=M7/>\2771\201\276\344\351\231<\300\245\201\276M\330\t\276\356\247\323=\364\014\353\276\3015\311\275L\360\021\275\326u6\274KA\343\275k@\325=G/L=\324J\301=\235F\276=\266R\317=\246\2542>\25389\275Pom>d\276\210<\212 \203\275`O=\276-\277\235=\275\005n=MY\206\276\320\343}\276\2413\021>Rj#\276\362\024\202=U\226\223>1\377W\276F\332\246=X\306Q\275\263\3227>\243\307D>\021\201\373\275*\340\006>1\272\215>\004L\225=\217\377\201\276$\327,=K\210Z\276\213\203\363=\001j\263\276\234\370\"\276\312\3467=[\230X;\273\340\213\274\314\245L\274hz\374=g\257|\276\211\264\350\276\250\365\227<\213\374\227>\001\212\241<!\326r=\310%>\276{\376u\274f\007f>\372\327\355\275\345\365\353>N\256@\276n\245\260\276\\\355D\275\013\327r\275y\007\205=\324\"\301=^p\346\275LO\204=\"\3525=\344\210=\275\036v\257;\323\010(\275\261\301\373\275\242\264\271=U\271\310;n\2400>g&\205>\220\374\304\276\346<E\276\375\205M\2765\342\345=\206\320\227\275\013\032:>B\373\205>HXb\276\034\006\n=\222\366M\275G\031A\276Xv\213>\367\306\270\276A\203.\275\306[4\276lt;\276\314 \310\276\361\347\353;t\tJ=D!\226>\231\313\033\276\026\372\\>vfu\276i\t~=[\353s=z\214K\276!\241|\276\266\2455\276\246\031\373<\322N\212>\253\325\305=P\327\205=H\257x>\325\307\346=Z(\254\276\234\'\304>\000\253\026\276`\0266\274\213h@\276u\262\202=\033\240\004>\340D:\2765?\230=:\027\232\276u\335\266\275\2444\253>\264V\274>\205\t\275\275 \t\031<T\203\023=\363{d=\036\325h=Q\236u\274\020\331\375=\0220\365\275\324\245\252\275\0378\247\275\\\002\220>,%2>\317p?>K2\035\274\262/h\276\373\352\207>a\251[=\024m\206\275\227\n+>$.Z=v\033\253=\347\312\223=H\364\200\276m\324\252\276R\302b\274\205\335\215\276\026\237b\276\276@\030\276\221\201.\276\0347\004>\026\302\244\274.4\233>W?\272=\303\016\016\276r\212\273\275\376\240\243>\313\230\301\273\r\343,\276)2\375\274<\266\344=K\313\023>\231\351\004>\036\264K\273zl\214>5\205\372\274\335\272\341\275\"9\000>\025\224\032\276Dh\233>\231t\231=\272\r=\276\217\007\302=\217\361\304=\237;;<\306@\036\275\372%<\276\321\037M>\261\036=\275n\267Z>\212\236\312\274\207wP=[N\240=\355=P>\320\214\233<\211\2615\276Lb\014\276@\342\233\276\264\361\247\276\313\345\303\275\240\352\020>p\331\034\276\347\201\253<\231\037\327=\277\347G\275\342\234\000\276L\275\223=%\262\207\276\376\\\275\276\222E\256=\213Y\300\275\245\004\325\274u\243&\275O\221\254\276\275b\306>\210\2059=\333@\213\275T\346_>\022 \375=\332\177\031\276\017\246\206\276\n\257\010>sn\205>z\321\341\275\252\261\366\275\267\227k\276c\036\323=qO&>\321\333\256\275\247 A\276\346\374\343=\340\000\306\274\351\260\260<\266\202:=\232\261\305<c\227*\275\311$\020>>aG\275\254\235\321\275\257\305L>\037\032\256\274\312\264\266=`r\272=\227\007Y> <\274>N\177\352<\000\252\272;2\212a>\225\377_\274\310\035\206\276\312\014\323=\353e\237\275m\036\236=\306\341j\272}*\243>\024eL\275\262Z\204>\035U\243>&s\236\275\336el>X\343\271\274\264\247\252\275<\024\332\275\373\227\014>\236\353\343=\310^\235>\240\257\005>\270\316\310<W\216\356\275\263\026\214\276\'u$\275\262\037\'\276t_X>\000\005\370=K/=\276\263\n\035>\t\233\002>\224\017\272=\"\036\200>=Ps>\337u\234=\275\020\036>\227\261\006\275=\362E\276\241\312.\276nn\027\275\361\355\270\274E\236u>*\357m\276\010\244\317=\206\346\251\275\253g?\275\213\\\303=\256d\006>s,\000=\310Q\221>\350mt\2767j\025\276\206\363@>\020$8\276\037!\024>\002\2028\275\005\376%>\211\344\212>\001\335}=m\237\371\275\026v\274;=\357\236=\231\356~>\275\243\203=Y\217V\274\037\250\300=\222\316\352\275\231\014\212>\0056s<L\002\266\275\255b\312=u\032\362>\021\305\225<\223\310_=H\363\331<\2228|<\265\316\254>\326a\222\275h\203\021\275\336\230o>\260v\270=\037\331\375\275%\010\267=\343#\373\275vaI\275\344\260h>\227\340\260=[\3532>\021Y\356<5\022[=\331\243K=\354!\276\276\236\247\316=\224;\235>0\243\263\275Q\236\031>\314X@\276\026\270\204>\315\000&>\360\017\026<X:@=\236\000\201\275\216\034>\2758%\253\275\214$\322=\\Z\033>eS\210\275\n.\350\275\334\267i=Zw\005>O\353\t>\36743\276\250\262\231>&#\372\275\272g\014\276\340\232\366=\002A\251\274p\304\025\276\010\215\357\275\217\3611\275mTe>\355@\264\274\036\230F\276I\310\000>T\007\004\276\224ed=K]\010=\363\277\213=E\343\004>\220\025\032\276^\010C\276\335\350\252\276\244\2575\276L(\203\275\314\324f<\021u\342\273\237\231L>\237-\245>\275V\225\275\276\255\266<^\363\000>\363\316\244\275\231\255l\276`\366\017\276\274u\177\276\246\000\243=EN\031\276y\2271>0\341\364<\372_\317<w\351\\\276\243Eo=\213\030%=\351\212\250\275\t\373\005=\0300\000>\036\257h>\347\'!\276\373\240\310\275\325G\321\274A\254>\276\324\310\222\275\274\010\002>\344\257\245\275\316\272!>dq\201\275\357\223\000\276\334\302\010>!\246s>\252\2005\274\327\274\217\276\376\2735\276\372\203i>\037![>9\341\260\275!x\350=\263$\035\276A\344a>\010v\024?\232\027\311\275I\204\025\276\236C\024<\217\255>\276\235v\371\2751(\024\276\221BZ\275\331\244\';\276\235\007\276\300\263\270=<\360\314\275\375\274?>\266\030\034>\214:\204=\374>\320<\333\320\t\276\344\321\213=\337\022\367<\201\307J>\237p\202=\242[\n<\202\333\322=0\302\265=\233\005\356\276\374\204\004\276\350\324\037>\000\346\244\276y@\202\275\363\t\340=\213\203&\275lU\215\276\274\224*\276\200\255@\276\235@\014>iwe>n0p\276\266a\233>\030\362[>V\036\312<DK\361\274\253%\333<\330\350\222\276\256\3351\276O\005\243\2759:\264\276WA:\276z\036d\275\263a\364\275\356\212L\274jJ\204>lR\001=&b\363>\332\377\365=\274UM<^\310b\276\230\344\037\275\305?\206\275\245\265F>\334\256\244\276\217\200\203\275\241]n=\242\235\205>\312\307G>}\332+\276\312\234\360=\222\361\220\276\250\335\214\275\351-\374\275\314\0235=\244\212:\276\024\207\022>\271\334.>k\225\002>\246I\200\275\365q\330>cE$>6\256\207\276\004&S<}\223\313\275q\377\337\274\311~\032\276\263\021\372<\210\025\206\276\200\202\332\275\203\312*\2768%\356=\364$\201\276\265#j\276\034S\324\274\201e/=r?\006\276n(\232=g\333[\275I\331\373\275\303,\007;\356\205\020>x\205\016<\322\361\027\276o\"\260>\\G\332=,\020P\275\032\254>>\020\221>=K\201\204\276\243\013\305\275\021\217\020=\302\370\313<d\211\214\276Y^\230>\330\356\203=C\244\007>+{\331=C\001\203\276\216\217\226\276\250e\316\274\365\220\232<\215![>u\t\211\275\242\213\211=\331\336\324\276\224\017\216\275E*F\276hE\227=\311?n\276\300\217\177>\257\241\332<\\n\r\276\032\367\024=\tR\231>~!:\274\2310\037<On\271\275\224\255\037\276\000\305/>\'\007\331=\036t\372\275x\322\207\275\244\332&\276\024_\201>Gj\037\276UF\363<B:\326\276\376?\036>\346\320;>\377u\024>\246\313\322;]\rH>\r\'*\276\2258\244=z\335(>a\323E>\342\301\301=\371\2301\275\215\247\215=\214\262\023\274\264T\007>&\336\204\275\010\211\243;s1$>\n\265\363=A\316%\276pan</\005{>m\345Q>%\356\253=\216\024\303\275#\231\263\275\020\261\361=%\033+\276\274\032\320>\344\026\252\275oi\014=U\021\302\275\227\252\301>\003\362\207=\357\020\207<\201\267\251\275:\336v=B\022\206\276I\313x\2750\037\033>\305U\005>\206q#\276t,a=\"\271\241=;\007\005>\240\310\'\275j+\202=\3546\335=\344\256k=M\2131\275X\304Q<\251\037\024>\2136\300\274\203\335\343\275\275I3>{3Z\275\370p\376>\217qS\276L\252\366>\376\275c=\200\203\177=\201\257\345=\266\005#\275<\201\236\274\261\233\210\276\210y\010=\030-\242;?\305t<\352\317;>\202\370\215\275\311\324\277\276\310\017\240\274\337\010`\275^z^<*\365\'>=/\266=\271i\262\275p\335\242\275\2409\177\276\334\325l>\350g\'\276\367?\327<v\226\344<O\3500\276\306\205\034=\237Z#>cxP>\306`\217>#\261\261\276=\2172\275+\206h\276\323B\035>\205\223\246\276w\275\234<\272\217<\276\375^p>\320(@=\247\232\306\275\361\nv>\\E\222=A\203\266=\213\322\373\275\345,\336\2751\305?\276\305\223g>(\314\021\273\024\204\336\274B\327\344\275\025B\236>\007?v\276\324\207\306\275VI6\276W\345t\276|\367\270\276\375$\246\274h\3456>\014j\360<\255\326<=\367\275\255\276\310gF\276\263k4\276T]O>g\261o=\226\275^\274\323\014m\276\233\311\006>kf\203=\331Xd=L\267\217=\335\363`>\232c\032\276\034\331J=\222r\254=\010\004\013\276\317\024K\275\270F\347=\337\232r\274\237w\271=\327\247x>\200\034\235\276\3519\276<{#\n>P\370 =\202\246\313\275\206\024\255\276\255\221\227\275Z\270\316\275z\007\230>\375\377A\276p\027\346=\364\274><+\000O\276\000\271\212\273\n3<\275\310\334->1\375)>\356\237\214\2768^B>\233k\225\276\247\r->a\201`>q-%\276\350-\247\275\000Tk>\207\013\307\275\033[\002>\235w\364\275%\276\000\275\315\234\270=\242r\351<\035\230\205=\251\264\n=wM\027>d\310p\276m\001\241=}\346\242>v\210\335>\025r\240=X\356\372=$\246\232>Fkp>\317\"!>:O\347=\273\323\251\275\375\227\374=\354\333k>Z5\275<\327\303w=\243W3\276\t\257\372=\311\320g\274\031\255%\276\214\357d>i+F=Z\350\326\275;\316<\276#\200H=\377\341Z>\214`E\276\'x\223\2769m\262<\036N\346\276\224\233\206\276\200Hm\275\213\360\030\275\255\214\346;\355\310\212\275\340\361\203>\326p\273\276\266 G>\203w1\276\260\022\262>AV\206\276\377\243\211\275\341\302R=\326GZ\275\323b\372<%\332O>Z\363\256>\265\323b=\nn\013\276\243\202n\276\000\016\362=\000\337C<\261\371\231;h\236\204\276dJ\376\275\317\323\375<\312\217\005\276\035h\002\276N\002[\275\355\355\243\274\n\013\314<\023u|<\241\022\351=\357\027\221\273\n\326\023=s\311\211\276\004q\200>\243\027\263\275;\217!\276.\371\027<\264\224\233\275\333\372\302\274\342/\270\2759\320\260<\237\361\001=\235S\266;|\200\020\275\265%\242\276\204\340\350\274\253Qr\275k\356\\=\217\220S\2744\252\275>\014E\262\276\312\372\351\275\226\002\242>\321o5>5\346\343=;\332\360\274\360\3756=24\245\2747\204\264\276E\307&\273\320\256\363=\301\034\207=,x\005\277\215er>\367\212\303=\313pA=\177K\233>o\242)\275(\337\n\276\014\025\032=|\207\207=\340\r\372\274\323O\355\275J\t\203<@\021\302\273\013\377\203\276\275\343\005\275\374\263l\276\020l\343;\260T\235\276\026\374\013\276u|\017\276\234\260`>Zl/\276L\321\203>\212\346\261\276W\177\212>\324\3053\275\334d0\276\240\267\255\275@\230#=\226\355\032\277\nK\365\275\017\020\023>\233(^\276\273\322\010\276\374\257r\275T_\356\274\007^4=\344f\t\276\330\362\237=O\224p>f\005\023=1B\205=\345\313\207\275\235\024\366\275\345_\331=\231*\262<\001\t\360<\037\001\263\275\254\212V\276\026\036\303\275A\013\244\275\303T->\274r\236>\206\310*=\007D\341\2749^T\276\010\027\001\274U\307\022=\003\246\006=\274!\333\2750\006#>TP\244\275\263\'\262\276\355\214.\276\020\311F=\343\'5=-b\030\276\r\276+\276\225\207[=<\376\340\275\337\203\212>\342|\220>\376\036\'\2760p\211>\223\364\242\276\320\007\247=\n\t[>\204\006\300\275\311[\023\276xM\264<\246\234C<\335\266/>\372\351\231=\217Z/=\235\251\362\275\035\"f\276\350\244x\276\347\333\204\274\246\317\240>-\214w\276\232i\r=m\021\352\275\206-\003;\005\222\024>\245\227\262\273v7(\275\007\211\016>\202\366!\276V\264\251\276)G(\276\200#\034=\270B\016\276\372[\201\275g\204\321>\260\206\215>\016kn>\231\304A>h\314(\275(%:>\331W\366\275Q7*\276\026\235\275=\314\267h>\346{\221=\037\202\036>&\307\367=U\337\272>\221\251\220\275\356\240+\276=7$\276 \334>\276z\376\341<\026\343\235=.\366\201>\310-\001>1\346#\2768\232\320=\246\371\333\276\2204W=\350\325\020>\366\037\"\274\2371\225>\3716L\276\025ph=\010/\t=\270\331\r>\020\207?=\321\223\020\276\215\314\333\275\026f\236\2750\211\304=\271\324E> \225\200\276\032\314n>\334\021\235>\274]\037\276w*s\276\214}\315\2753z\310\275\326oN\274\324 \272<uv\245>\'i\235<\235M\014\276\022iO\276\230\336\273=\323\354|=\343}G\276=\201\221\276\017\234\266=\265B7>\227\246\201>c\265\266=(\034\220>\260u\201=X\371\023\274\336 (>\230\362h\276W\265\n<\"\312\014>\021\272\357=\250\271_>5\2359\276*.\376\275\267S4=$q\034\2756Y\014>\026\036\000>^\023\261\274Z\226\247\2755\345j:C$\007\275sC\221<\206\275v>\250\327p>\256\200\223=\255\177\313>\020s\345=\265\236s\275\200\\\003>g\243V\274\211a`>\331\3707\275\355}e=\364d\204\274\360{\200\276\352\001/\276\007\'\267\275\335\354\004>\232\212\240=d\351\257\275\215\253\204\276\353\034\002\276\302\250\221\276*;G>\233\201c\276\005\360D\274\274.\235\275\363\210G\276\343+\212=\354\345b>\317\342\351=\315\237\000>\250S\200\275\026\336B>:o\221<Bs\335<\016\1772\275D\345\017:Z\336T=Q7a\275\272\022\210=\267\336\357=\331\201\364<(B\236=:\301h\275w\024K\276_\245\033>\331Y\307\274G\267\204=h|\237>\"\3518\276\302\330\365=\360Py>\351a\242>\354\224\214\276\305\241\341\275\212\220>>\321\367J=l\372\263\273[R\304>[\266\261=K\270\302\274Lc\301<8\342\355\2753\267\000\276\277\224\213\276\215q\234\2752H\301\276\217]I\276.\343!\275\205\357\313\275$D\206\275\367\023\271<]\177\242>=\271\250=\027\2559\276v\2654\275\267\354\024\275\351y\201\275\321\247\235\267n\316\244>\332\031&=\251\340G=84&\273\253\002\000\276\024g\177\276\032\033\033\276*%\311>\250\302\242\276\210p\215=\2025q\275\010g\246>\254m0>Y\364\232\275\0339\241\275s\234\211=\3046\226\2764\035.=\265\010(=2\032\r>\304\366N\276\225/\257>!(\226\276\207\204z>\000!\300<\001J\010<\320\366\022>\237\240\253=8g\317=w\002\315=\357x_\275\274\274R>\340\025\014\276rk\350<\036\376 \276\376\275L\275\265\305\217\276_8@\276\231\375\374=v\022A\275\033Q\232\2763\324\r\276\227\277W\276\370\245\200\276\2214\374\274a\005Z\276\310\263\235=\177\035s\275\271\000r=\003\350H\276\310\342\222\275\365\271m\276\013\324\321=\245*,\276#\356\302\273\304n\220\276yu+\276\214\326|>J#U>\327\377\235>\022/o<\321\327\211\276\335S\242\274\366\323\364\274\375%R=e\216\256>\230\205\356=\021\260\346\275d{q\276\233:@\274Q\3351\275\350\263&>I\177O>\250\367\302<\263\023\220\276}\010\335=(=\233\275\325j\303\274\034\312\201=z\300#=\t\350\013>\223!\005\273\337\252\375>\372\203\022=,\024\377=\216M\330\274JT\277\275;\271\250=\355\r\275\275\243da>(_\205=}\362?>vmZ>]W\311\276\205\310z\275\244\355\265<\270\222-\275\251%\222\275E,\275<\301\034\"=\223\013E<\242\2238\270\301\nn\274\235\340]\275\211\340\356<a\214\267\276o\030F>\317!9=\246\177\021\276\250\305\352\275);=\275m\004c>uSj<\000SA>\274\0217>g\267\034\276\366Q3>\237K\014\2752\0065>\330\321\222=!p}>\177k\263\275\302\020\205\276\211\261\";\203A\241\275\221\356\226\275V\034\326=\246\246/\275[\2040\276\345\303\367\275\310\272\025\276\2656\313\276\006/V\275\220\376k>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\305\374h<\304\270\n=\274\000\363\276:\205F>\035\362\236\275fz\333;l\366\276=\3533&>%\362\376\275\263\226\026\274+\177\237\276\261\222\334\2768\265Q>\361_\254\276 \207\213=\374\031E>48\032\276\371\010\035\276UT\213=HG\244>\237\031\262\275s\317)>\010\007\200>\r8\203\275\005\307\302\275\223\244*>\234h\354\275\254\365\023<\356\035\n>3?\021=)~\360\274SM\363=\005\265\210\276T\245\204\2765\273,>\207F\224\275\223V\267\2718^\343<\275\002\034>\032P-\276\235\234\030\276X\211i>\316\014\333\275\354D@>\267\323>\276=\227g<T\376#=lD\224\276!\353\271\276 \033l\276\316\036\350\2754\360\034>\033\345\247>j\270\220=\013\022\351\275\020\263\021<\363\220\215=\242\335T\276\341\244j>\301-\025\276S\0371>\355\033\336\274N\013\006\275R\376\\>\222\020\010\276#H\322=\234\240\212\276\272\244?\275\271\352\232=j1\302>lKP=t\337\232\274R^\353=){-\274\327\300\225=5\312\267\2766\376\000\276\037%\216\275L\234\317\275kX\002>W\t*=)7\224=3\2041\275\320\327]>\356\252\033>w\245\354\274\335]\246>Z5\271=\303?\214>\020\372\007\276\226Jm=\305o\227\275\236\207\036\275\217\024F\276X\310\244>\360\374>\276BX\013=Vpy=\301\001\022>\352\255\244>\326l`\276K\201\277<\007S\013>ue\351\276\241\252=>\025\335\006\276y%\225=\244\025l\276\364\360\237>\363\3208\274g\016\205\275Bz\250>I\2625\275\247\342\200\274\310lq<%\014\224=\031{\013>\r\r\247=O\002\216\276X\326[>\022\245\227=\346\312g\276\225\314\237<\237\343\013\2760\247\326=\353\376\352\275=:\354=\251\027\211\273\241\366+\276\345\343\206<u\223Z\276|r2>\005\374m<\220\033\032=\2772\226>\244\250\356=\316y\223=\366\371\001\276[9{>e{%>\006\321M\276]\326S>b\020\207>\177\372\376=\300@M>\006\235\005\276\020\007\216\276K\333\000>\217g\315\276}\242\226<\220\262\262\275\024\215V>@\324\215>l[ \276\207\270J\276\340h\320\275\316\253&>\301a\214=\177\322s=\246v\017\275\007\216\010>\036\037\035>\340\276\027>X\201r>:\255\253=*8\016\2760dE>\305=\211>\237\0307=Q\331\276\274\210\335[\275\362\252\036\276\267\004\367\275\273\331\223>~\347\231\276\213\353K\275H\314\210>\000\020\217>\372mV>\322,\346=\004\335@>[\213A\276V7\035=\372\335\222>\206\273\322=S\330\035<n\205\257\275y\315+=c\337\243\275+\321\355<\216+\220\274\317\332P=\021\301\205\274\003\323w\275?\355$>\237#\341=6fE\275j\361:\274\004\334/\276j\304\327\275\237E\237=\006\316\312\275Z\377\207\275\225O\014>\237}\204>\344\306\256\275J\323\031\277\257z8=$\232\017\276\270\036\002\276\237\262\211\276\376\330\264=\312\357\222\276\356:Q\276yK\020>u\334\342\274\244*\244=@\224\004\275\032\235\212>t\337\307\276\342\367\345=\215T\017=\274\330[>2\246\316>\243s\226<\"\'\324<gI\207\276\033\341\013>l\211\303<\267F\300\276[\027\375=_\215\212\273A\263\361=\221T\202\275\275\263!<+w\323\275\263\360\202\2758\324\226\276qm\226\276Hh~\2762,\205\276(\017\003\276\247z\205\275\020$\305\275:i\242\276;]\215>\346\004\020>s\031\363\275\362\322@>ud0<\\\206\225\275\307\200\025<\214J\232\276\224\305\024\276\214\223K\275\355\261\255<e\211\213=\236\211\217\274\3237`=\363\177B>\342\037\274=\346\024%\276\'\377M=\2708\303\275\264\026\234\276\212A\025=\201\023\005>\266\332\200\275e\365#\2762zb=%h0>]C\364=\301\365\276\275\214\263\321=4\367\332\275\310\355\264<*I\">\007\221\266>H\364j>\232\177\364=\265M\n\276u\032\215>_\232\273\275\022\310T\276\027i+;\320\270\234\275<\002\r>\256P\335\276l\017==\263\n\203=5\020\222\274\252\225\343\275\307\342\253>W\246\377\275\210$q\276\0136\335\275\256\n\276=cc\323\276)-F=\240\320\242\275\226\351u\276\246\033\036\276h\263\021\276t\362k=\321\265\030\276\202b\276>\332B\213\276\\\246\224\27644B>\301\034\026\276\307i\323=\202\340l\275\345d\240>\242\243c\275\0025\213\276a_\317=K\004|\275\324c\314=$\363\010>B\'\272\275\233\202\343=:\376\t\2736\035%\276W\370\200=\025:-\275EXP>\217\230\t\275\035*\222\276\326\240d\274\275\2046\274\343Z\326=jt7\274\221\370\210\275r\266\232>\001$\357\275\363\352f\275\351\340A\276?B,>U\027o>\022\370\253=\262+\222\276Q}O>\r\251\355\274\332\014\241\276+u\204\2765\360\334\274\244\371\236\275V\354\266\276\323\352\312\276\360\332\030>\305\346`>\"\306\373\275Id\016\2762@\321>Cu*\275x-\230\275\255\235\221=\033\310\256\273P\305e>X\247^\276\201\r%\276E\327\276=`?\347=]\250f\275\326\232\021>,x\030\276\037\340\337\275t\220>\276P/\244=I~\254=\024\317_\274\303\330\236\275h_\335\273\035\352\r\276!\2422=(\326\237\274\260\224\001\276$I =.^\007>\017\251\000>+H\237\276\177\330\025\276/\230\214\276\345QT>\3315)>\326\251Y>v\rw<\366LX\276\352\370P\276\010RC>]\347Q\275D\263\347=\253\336\303>#\2753\276y\330u>i\370\216=s\177l\276\211\363\'\2765\340\275=\260=.>=\016\356\275\355\002,\276k\302M>D\006\225=\231\225#\276\031\275K>-\2746=\014\322{>\244\353\245\275#\352\217>g\260\t\276\'\016\241=\247\370y>0\037=\275\036\177\002>;`|>!\346\032\276\332g\264>/\355\032>=I\311\275\237\306\240\275\374\017\210\276\204]^\275\033^\270=\241\022\005>\265\202\360\275\332\017\274\276\024\236\337=!\213\311\275r\330B>\312o\321\275\300u7>\307\\\230\275\333\224/>\225c0\274\344\246\266>\247\234u\275\211\t\314\275\311X>\276\227\301n\276\301U\027\275\352\260\007\276\277K\312\276\370\026\030\2760Cp>7T\214;r_a=\227u\325=\231\315\316=\371\363\223>\0053\277\276\324]\007> \220s\274\320\257\277=\263_H\276\221@#\275\225\355\226=\261\361\005\276h\367\274\276\222\230\232=\037}#\276q]/>\337t\310=1\256\213\276\213\377@=t\361\234<\320\'\000>\367\036\n\276\335\257h\275\'9\037=7\n[\275].\n>z\327\355>5\275}>f\346\224>v\020\203\276\035\027O>\322Q\220\275\25758\276}X;>N\247\253\274p\324\246=\224,\216\275H2\210=\306S\">\";{\275G\331\353>\343\352\374=\342\313;\275\267\026;\276\036\345\237<#|\213;\027{*>\0050\340>#*\270=\t{r\274\313\341;\276\"\300O>\304G\306=\262v\030>r\331T>\344\234\320>\364\036\221\276(\031t\275$\330\377=\275\025\226\275@\331\212>0er>\277\262q\276\266\004[>\342\036k>\323\343\250=\2247\026\274\230\202L>\3469\245=)\354\212\275f&\000\273\016N\330=^\303\370=@\322\315\275\347\335\226=e\261\220\276/I\263\276,\\x>\010E\t>\306\361\245\276+\217\347=7\321\276\275c\207\245=\033Ni>\317\014\257=\371`C=z\000B=\267\355i<\227\0328\275 ~%>\350q\375<\020[\203>*\377\347\275W\312\225\276\322\205g\276\026S\273>\370<a\276j\016\267\276HRx>iDC\275\223\350\233\276\212\336\334\274\234F\370\274\333\325\335;P\202\271\274\3526\304\275\242\245\241\275\2565\217>\302;\214=\310\306\332>QP,>#\025:\276\021\265\351\275\364\006\231<\327\222\347\275}\331\201>\004p\237>\241\000=>\247h\327\275(\342\217\275e\315+\276=\200\324=\304\323\313\275\024\376\373\275\033\270\260<N(u>\245\007\336=\201\205\t>\342\373\343\275\026U\243\275\\2\363\275=`\014:\232\207\341\275Z\323\003>\013\017V\275\223\274~=\216\216\222>\341\356\226\276\034\356\210\276\317\003u>j\245\036>\220\225\226=l\376:\276J\322\002\276\367\371Y<\363\034\316=\223\305\374=\177gV>;<\t\275\026\265N\275l\365\202\276t>&\276\365\365\220>T\022\326\274\021\007\022\273\217R\341\27307\\=\'\225\314<\354,\267>2q9\274G\316S;T\216\037\276\217\241\235\276d\003\013\274\013W~\275[3c<\243_\222\276Pj\244>\3309\014\274\016\335\211>?\345\236\274\2104\036\276\375G\264>\356\343\245<\007\340t\275\274\021\211\276I\r!=\005ZB\275\262\307d>\302]\021\275\241T\374\274,\344\215\276EZA;bE\305>\035D\270\274\334\315\352\274\233\313\375\275.\316_\276\263\177\303\275\376]q\275%I=<\254\256\267>~\305G\276\264c\026>\003X\376=\265\326\343\275\"\277\224\275\206\t\223=w}\211=\317W\323=.r\205\276=\224\335=_w\347\276\315\316\343\276\330\205\2339\246\037\031:\361X\016>\232\277~\275Z\365[=\206\332\207=\222\235x\275]\357\017\275\264\221Q>\212j\357>\023\212p;\025#\317\275kt\343\273\272\274\201=8g\016\276\357\343\251\275A\366\355=\002\024\332=\266\227\367\274\t*\331:\024\031\031>Yj\033\275\275\205)>\255\003#\276\222\344\212\275\367j\n\277\027\031\211>\334\307\215\276\320\252\001\275-_%;\0009(\276\017\223\232>(\365H>\204\000x\276\266P\232\274\"\2354=\230\023\323=\360\325\356\275\037\340\203=O3A;j\205\302\275\004\243y<\242ZQ\275ac\307;\216x\225\275\3436\220>\211\276\271\2758i\313=N7B>-t\236\276r&=>IS\212>\271]\241>\207]7>_5\374\2745\302a\275\273\2517>YJg=<\351\346\274\027\005\225\275\254\317\344\275|<\313\276\370\214\362=\337f\234\275}\2442=\215\"/\276-\0002\275\000\362\330\276-F\212>\364\356\257==\253]>\240\300\317<R`.>\262\321K\275\263\206\305>\300\324\356=\275\357\213\275_,\251\276w\027\247>\312\311\000\276\247\311\353<%*\374=\324S]<`\014\034>x^\\=\250\371)>N\366-\2764r\341\275kQ3\276\217\020\204\276=\377\252\274\251=c\275f\267o\276|!e\2760\2514\275\243\030~=!\213\352=\202d\215>\374\273\224\275\202)>>\233y\270<M\263\034<M\317\336\274C\005\007<H\322\233>\204\227\275=\327\343\t>\366l\004\276\"\221\274>\246\334\301\274\255\341\005>\301\236\230\275\232\227\\\276$\331\264=_A2\276%\362\202\276_\177\013\275W\264\002=\020l\241>A\356D\276\343\035\033\276%q(\275\313\327\233<h\334\016>\214\237\020>\247\247x=l\2065\276\267i\037>\215\202<\274\361F\312\275\277\266\203=\227\027\020=\231\247H\276\316\207\232\275\361\225m=M\371.\276\035|\250>\341z\031\276\232\370\257>\276\ra=\350\206\276=_D\0309q\341\005>+\317;\276\302\322\216\276]\233\312\276\r!k\274\177\255\227\276\344-\226\276`:\245\275\220}\310=U,\225\274\345\330\277=+\203\002\276\242\304D\276\233S\220\276\375\231_>\013\305;>{\\\001>\230\032N=F\271!\275\271Cr\275\3172/\274\037F.\276\366\241\024\276\365\275\323;\002\325i=\363\257\302=\245\301\005>\031\353\272>w\346\020\276\275\231\240>\031\310>>\340$\013\276\223x\312=W\372\"=/\257\204>\224\013?=\245T\211=*\206\363<h\2705\276\342\333;\275s \332=\342\365\235>w\205\346\275\255&t\276\311\306\020\277\033N\364\274k\025\237\275\r~\356=P\'\210\276\374\331E\276\216\221<>\364S\377\274\354X\311<\301P\314=\272\264\372\275_\366)>\213m\347\276f\252\352=\335\332\177\276\007r\251=\323j\267>\'\022\255\275\035\200\261=\243\n\377\275!\247\021=}\373k\276B\3769>\313\260\227=u\2525>`\226\016=\336\213\250\276\245\373\345\273\243)\230\275\300\337W>\337\274&>1_\205>\223Q\266>KD\230=\274\024o>*C:\274p\000\235=v\244N\276\277\325\201>\323v\204=\372p\205>\316\231=\276t\250_=\232F\032=y\316\242\276\333\2631\276x1p>\316\256#\275\2750\307<\037\260\304\276H\014\013\275 0W>\324\327\013\276o\2452\276pI\353=\226\372\202\274\220!\374<\213\001\244\274\363\366\033\276\355\202\365\275G\253\345=\363\034|>} \244\274s.\220\276\247\371\360=hl\313>i\362\300\276\277\222c=nh/>\'5\253\274\331.\254\275\321(\267\275\370z0=\226\354\221=\320\306\024>\006\033\262\275\207\036\207>3\0065\276Oe\032\276\022,a>\267p@\276\226\305\244\275\264\006f\274d\316\240=\331\310&\274X\033\263\276D\353@>\262\344\211=<)\377\275\377\'\010=\304\tP\276.\213\212\276da\316\275H\302\207=\260i\247=F\225\375=\006i\224=\014rQ\276\031_\005\276#\323:=F\222\231=Sa\241<}X\002?\360\031y\274\331,\217\274\241%\227>BP\027\276\t=\271=\250W`=\214\223o\275V\340,\276|!s>\000J\233=\205\265\203=\300\324\210>\034\326\246>\274D\027\276\3004*\274\004\372\327\275\247\330s\275n\0349\276{\221\016>\254\006\231\276m\341\215<+\367V=\211\331\035\276\3767\306=!\246\r>\210\037\014\2763v\240\275\367\"\206\276\026\002B>?=\235\275{.E\276\222\3064>\230Xe=\032\300\355\275\251\300p=CQK=\203T\227\275i\016\366\274\207\217\205=\364J\257=\266\'\030=\203Q\330=\'\344\004\276u\257\332=\307z\350=\307\345F\275\253rN=\314\300\330==\361\276<\0133\221>$6\003\276\232\261\200<Mj8\275\263\362\021>\366\327*\276.\211\272\275_HJ>^y6>\240x)>\321\337\206\276\326~E=\003n\275=\316B\211\275\234\370\330=+\345\001>\327\002@>\306&\337=\312(\331\274\340\307s\275\017\352\301\276\345\331\363\274\260z\222\276/\217>\2767w\026=\327B\300>\303s#>\347\342\253=\256RI>\362\"\365\275\225\272\344\275\n\024\027\274\246\251\306\274\366\026V\274\341\300 \276\260C\356\274(\212\277\275\027\276{\275e(\323=:\031u\274\355\310(\275\007J\233=\271\323\017>\253k\360\273\376}X\275\2103\377=\254\206/\276V\014\203\275\336\037P\276S\343\247=k=O\276=*T>b+9>\237\322\222\276J\322[=L\323\302=vCI=\037\251j\274$C\232;D\231g\276q\206=>\331\271\246\276\304\\\333\275\362\005\036\276\347t\321;\0222?\276\021\177\340\274\316\222y\276s\017\273=Phb>\303\315><Y\376\205>R\345\304>#\246\217\276s\347\235\276)\365f>>\177\202\276\264\033\237\275\240w\216>[\303\221\273\327\3744\276=\346\225\276~Z\247=\202U\276=E~\230>\311y\210\275qWe=P\234G>\314z\234=\n{0<\244~\021\276\235\216\204\276\277\213n=\006c,<\013\366\347>\302n\312\276\373v\330\275\375$\366\275\0303b\275=\364\\<\374\366\204\276\301\002\205\276Y\355\221<B\327\271\275i\007\267\275\365S\234\276q\tn\276\020`\203=\027\r.=Q\302\014>\374\'E\2722\034%>[\'\272>\022b7=2Vo\275\\o\210>h\274\025>\351:=>G\203v>\\G/\275+-{\276d\006\005\275\'\301U\275\212=@>\007}\230>I\206\343<\347\303.:\244TI=\355\r#\276~\353\356\274\014\265\227\276\232\302\r\276\250\202\243>\324\023e>mQ\323\274\013\014J\275\331)\316<q\324&\276\3031F>\253\342\304=\337\2567\276\n\255k\275\300\026\030\276S\256\255\275\346\244\226\276\321\343D\275\206,\265\274\300\236\347=^\216\377<Q\204e\276\023\177\034>C\210\306\276\365\324\335\273\267r\007\275^\240\203=\017w\252>\010\350\261:\207j\017\276\272\267\226=k\033z>\226\236\272=D\334z\275[\336\027\276f\307\320=^\3704\276\327\273\205\276\321\330\312\275\221\213Z>\367E#\274\337\234\"<\261\242\315\274\200\371D=\312B/>\323\341i\276\022\037\351=\374\0039>\367\"\r>Z\252\020\275rq\355\273\031Jj\276\030\215\303=(\276\200\276O#\220=\307\3759=\367D\223<\035\273\006\276>x\273<\204\306\n\276\034\354\326=`[\204=\245\247\233=\206|1>\217<\222=\273%g\274\304$U>\004\300\301\275\356\227\226=\253\260:>\261\317T\276\213\245\363=\214*>>\277\3221>\367:\004\276\302q\004\276\246\234\260\276\200\026\374=j\263H=\254\245\n=\275PV\274\340\036\210\274\tr\346\276\364\251\361\275\304\233H=;\353\">\234\374\362\275!\212j\276D\2738\276B\372\n>\025d\226\276\257a\030\276M(>\274\007e\233\275]H\277=b\250\224>\203\210\206>!\375\275=\205q\254\274O7\'\276\344\031\372>\255\207\311\275\263l{>\332\342%>\217T\003>\277\214\275=\336\266L\275\361\341\016\276\02061>\334k%>VPU\276\327f\231>\206\265\274\276O\253\200\275Il\016>\t\327\251>/[B\276FY\t\276\316\036\216\276\301\362\334=\001\021\023\276gb\337=\230\032)\276\000\024\367;H#v\275\r\267\375\273\022\323+>\233\3268><7\376\275\035\017b\276\326\224\300\275\325oQ\276\334\271\335\275\2627->\257 \024\276\371MD\276\371\317\321>\2738\343\275\272\321\374=\207\206\367\275\244Q\023>\374\2422\2762\232\034>9.\004>\350Y\034\276\014\014h>\250\305\304=\212\223\342=\374\354k\275\257w`=R~\202>\223A\256=#\024v\276Lpu>m\022\360=\336\310\212\276\034\3413=EH\221\276e\347\364=6O\027>t\033\026>A\347}\276\245x#\276e\274\\>n\351S\276\001\252\3569\333QB\276\260\306\254>\357\3209>!\342\202>)(\356=\372\273\316>U\224\343=\256|\254>G\354\276\275QB\226>%F_=N\276\n\275\355Aj>\\F\206\275[\202 \2756U\315>\014[e\276A\374\235=\\\351j>\272}\037\276\233<\022>\231\320P\275\224\363\024>/\267l\275\366\353\265=\000\336\351\275\350,==\2063\206\274\014\264\017\275\213\3414>\325KH\275j3\234>\346q\242<\353E\032;\354\270\223\275H\327W\275(|\032\272\317}\235\276\024\304a>Q\031\306>i\2443>\327\216\200\275\270\200\032>\225\220J\276n\234\203=\372;\032\275>B\262<\216\326\327=\353\022X\276\365\224?>8jf\275K\367\213=[\213M>\265\013\t>\253\250o=\233;@\275u\362\354=\373\243\272\274\035\351\204<o\276\236<N\326\035\275\257W\243\275\200\353\316=\007N\225\273\315\345\253\275\266\357\330=\324\224\010>\373\205\337<\036,\213\275\004t-\275\262Sb<\365\311\230=\025\375\331\273\2432\316;rp\013\276/\235\242\275\306%\212\276\\o\301=&f\031\276I\223O=\243\215\260>\3148\355\275\234=\231\274b}\240\275\371\237P=\210q\235>\2267*>\324\263\207\276w\377\227\275\356G\200\273\227\241;>\303\016\366>\006O\264>\311\350\232;>\356\013\276\241Xe\276\261M\244<\367jC\276]\272\356=\347Z\357>\270a\337<\013\200\365=\335O\223>\'\031\201=t\273\017>\361\315\354\275\302%T\276\325\355k\275\326\372\323\276\016\250+=\206\363\365\275\023\336\321<1\210s>\265j8>\272\275\n>\312\003B\274\223\352\250\275~\326\213=SZ\301=\314\321\354>ZL\225>\277\234S>\226\232\'\276\231<\017\276~4\217\274\217=3<p\332 \276\206b\016\276\030\226\010>\023}\356\275fKz\276SLG=W\275\377=*i\002\276\265\021C\276\316\363\242\276\r\255]\276\371}%\274\336(\240\275\264\233\023=\262\320\344\274\244u\206\276\313P\246>xB\216>\205\274\306\275\342\3610\275\005\276\016\276\225U?>\034\022l=\317\237\245>\344j_\274[\231h\276\214\326\212> \222\230=1\201\321\274\220i\231\276\260\330/>\257\252\221=\372\205\244\274\3721\000<\325\010{\275\360\005\232=\200j\227\276\325U\356=\024\373\024\276\364\356\370\275\'\311\246\275\r\177\302=dO(>5: \276\303=\037\276\366\301\363=\027\035>>\030\206\205=\177\241f\276^\372\321>9\211\304=\027\361I=_\333\244\2750\221\264\275\352\235\222\276A\263\254<\021\316k>\300\014\236>\305\201\210=\247\317Z\276\243`1>\003\347\032\276\007\304\004\276;\246\361\275\305\337p\276H\344\321>\233\025\325\275g:\362\274\327\033\r>\340\245\234\275\240\305,\276\376\332(\276\026\256\366\275\025-\232=\260X\240\275-\237c>\267\014\221>\327\3336\274\201\333-\276\273\234s\275b\375\'>\024r@\276\343\364\250\275\231\355\r>\037\236^>\217\326\203>\310p\242\275\277\254\240>\216\201\235<KH:>\215+e\276\032\320\354=\2721\016>\006\003\316\276x\304\216>>\372\275\275f\206m\276id\224\275\3701(>\240\034\001>d\342\020\275F1n\273#\227\207=a\t\221\275G\206C\276\250\267\342\275\336#a\276_AB\276X\373\236;\202\266\235>\240c\010\276\330G\313=?As\275t|\241\276g!\251\275\325By\275\321:\030\276\257\323\324\274d\036x>\310]\235=\034$\201>\005\177m>\256\210\244>\224\023\031>=I\302<\346K\250>@\305n\276\013\355\266\276o\375\177=\033\213\235\275\262\343\025>N\334\026>\264*2\276x\260\002\274\356W\211<\377W\207=\\\211\030=\t\260=\276\264\256`>\2313\n\275\0365\002\275\217\023\313\275\375\t\353\275\300?\274\276\261\3145\2755\353\362=y\323\312=\210[}\2754\3317\276.\375\024>\226\226\261\276\t\207^>\230\315\026\275\301S\325\275\033N\236\275\031\211\217\276\303\030>\273\335\255\327\276\014\315\337\275\357\327Q\2753\332\367\275v\016\325<l<\345<\241/\035=\262\347\315\272o\210\n>\316\177\001>\367\016\035\276\246D\023\276\346\353\370\275}\004\022>E\217W\276\372\265\273\276\204\364F<a\370\320\275GpN\276\017\260e\274\230\265\325\273\004oM\275 \352;>9\033g\276\336y\341\276\3677\326\275\375\375K\276X\354y\275\270r\235=P0h\276\232\251\374\274\312\262\351\275nD\252=j\243\025\276\177\351V=?\351l\276z#\212\2767\220y\276\364Z\201\275N/\261>{\0373\276\247\2178=\210\3160\276\007{\270>\215\345*\276x\250\305<\247\354\214\276|\261\013=\317\007\206=\237N\035\276\025@~\274\245\010\226=\031\370\300<\2126\202\275M\367\004=k=2>>\275U=v~\244\276\"\037\256\275\254<\223\276\344\016\032>\030\244<\274\342\205A<M\025\026?SD\341\273]x\320\276\023\217j\276\031\013+>\367{A>p\372k\276\337n\223=?Z\221\276\331\373\345\275\260\331\277\275I\236Y\275\201c2=\237\224\007<\002.G>g\233\241>\2114\202\275}\211[>\316 \201\276\200\025\'\276\272\020\254>\216<\250\276N+\310\275\215,\r=\244\254\217>\320\370<=8#\344\275\003b\207\276/\250\210=w<\213>q\016\236\274\026\303\207=\204w\360;\357L`>i3\357=\231\207\352\275\274\223\355\274q\227\026\275\360\245L>A>\257>\t\260\202=\213\254\217>\350\364\335\275\226\351\014>w}s\276_Xi>+\230\241\275>\363\235\275a\344\354\275D\266\246\275\234\025r\276\033\315\277=\232\335_>\303\302s=\035\354\204\275\350\315m>\2267\225<\246<h>\316\3611\276Ef\267<\'1\265\275t}\207;\303-\235\276TP\212>\256\260Y=\037\023\266;}5\260\275\270\241\201>\263\002@>&_\261\276\023\014m\276\031\027n\2714\202\344\275U\003\214\276\221W\361\275\313\'\243<\210\331\275<a\342H=\000b\200=_\233\217\276\3758\310\274W\362\022\276\260\266\345<\216_\350\275:5\\=\010b\031>\255\207\227\276\373\351\230>Z\204{\275H\271\346\275\242u\210\276\230\214!>W\220\241>\320\346N\2760{\315\275Q+\245>\256nr\276\013\302\317\273X\031 \275\240\252C<8\325\016\276/\250\351<\220\264\020\276\\\007\377=\357\362\323\274\257\224K\2758!\210\276\\\227Z>\321\362\371==\253\200>_\310\352\275\244r\206\276\021\276\323=\261Ef>\350\360(<0\271\317>\366\363\030=|7\365\274K\235\005>2B\266\276\341h\350\275\245(\250;\366\2733\276\020\004\202\2757?z\275$\367\r\276\246\337\261=_32\276N\250\326\275\020\202\346;\216\261\014\275(%\024>\032\312~\276y\207\222\275\274\026\032\275z\t.=\264\323=>\230\241\t=\237\224-\276\330\343\255\276\312S\247\276o\361\303\275s\227\021\276\000u\373<\336\241R\276\3232\214<%\014\273=hK\032>\200\n\017\276z\342\365\275\375D\375\274\270\224\002>\001\323K<s\034\335=\240\235\252\275\216\366\215>\311EA=E\351u>\\\244E\276\031U^\274=!W\276\207\002\001>\214p\246\276\226\250\010?\315D\321>\200\217M\276\354A(\275\332\314\315=Wm\317=\346\265 \275\t\0354>\364\306v\275\240\300\021>`\272\240\275\232\345\334\275(~\361=D^\004=\226$\007=\354i\265;\313\372\257\276PF\326=\027\252\005\275O\346\004\275\273\233\217>6\276\002=2m[\275\225-\200>\332/\322;\024D\215;k\374\262\275\031\276G\2764P\006\276-\325E>\321\3716>\257Iq\276\211:\321=\330\301\336\275\006\003L=7~\336\272 \210\227>\240\263\003\276\271\275c\276\234[\024\274L\2063>\024=X\275\234\352\207=\312\036\242=\026\236Z\275\235r\274<R|)\273\221#h> \361\027\276\004\222\\\276\304\322\365\275\236\031\240=\374\014\025\276rB\026\276\0305\204\276\336\276\207<\342E!\276\327%\334<n\347Q>e\276\353\275\247K\220>3W\205<!8x\276|}Q>\311[\311\274\224\030\216\276\222\272i\275\016\003\222\276\264\220\006\274\220\006\030\275\265\231\334\274\320\337L\276\371\272R\275\217\210\r\276\373\356%\275\343+\n\276p\345\032\275p\276l\275\\\\\366\274\005=X>\003\206L\276\000&\377\275\214<z\276\237XF>\\\375\362=\204\254\235\275\031\317@<\276\n\t\276W\310\005>\006\226\245\275mW\225\276\272\'R\274t\021\004\274\005}\304<\363\024\304=.\354\205=M\036v\276\237\003\202>^\354\017\276\217\270\261\275\3470\216\276]mJ>l\325\206>\276\333\">\224\214\204=\274\273g\276\266\260\203\2765\333U<>\215\234\275\003]\372>!E\350=0\\\244=\374\217/>\3121\000>\271\270\277=g\313\234\276\333\024\321\275\034\305\006\276b\333\303\275(\233\215<\366\036.\276\247\262\013;\'M@>\244\324\017\276\270<@\274\004\232\270=\310\200\203\276\241{\001\272\372#\000>P\017\244\276p\001<\276\375\362\320\275n\2309\276>\344Z=\2226\022\276\215\207\222=\264D\224>un\262\2757U-\276\263S$\276\217\215\264>\225\211}\276S]\251\276\277\321\214\276\267\323\231>\307$G\275\013X.>\233\213\350\275\213\n\212\275S\270\364<\320_\320=\210t\371<\037\202\031=\364\346M\276Gg-\275\347\226g=\225\313\031\276\351\335\323\274S5\260\275\257\274O=\213kU\276B\036\007>\305\227&\276guw\276mB\262\275\232\030\300\275\352\344\270<U\201\270>Y\331\001\276gn0\276AE\013\276\005<}>\244m\246>\3138E=s\316\257\275UQ\217\274\367E\350>\370_I>TxO\276\233Z\230\274|\205\254;\370\2242<\2452\030\276|\003n\276f\220\341;\262\224\257>\024E\007>]\026\370<|\237\370\275o<\340\275m\344\315<w\214\233\273C\021\321=VH\245=\"\341E\276@\325\343\276\361\307\255>Vo>\2768\036\257\275\235\372\214\275@\202\243\276\337\366\200>\"\2323\276\242\214$\276X.O=\237\373!\276\244\023\010>\266\240\242;E\0065>\201A\210>xb%>\022\016\231\275\271\274\351\275\376h>>\336\r\005\276\204\310_>9\361\276=\362d\024\277\201\311[\275\205\365\217>\030\362W=\370\014\026\276h\251\241\275-a4\273\267MD>\307~\231=:\374\t\276\017\025\307>*\231\013>\310\335Y=hp\226=\335HD\276\207\342\030\276\207\261\017\276\373\352\321\2753\261\233=\217\031\023=G\240\n>\n\210\256=\332};=X\nX<\310\177:>\324\322R>\347\365\210>\227\203\034\274\313\207C\276\257\317w>\207A\303>v9\\\276\354J\031>1v\376<\234\377\017<\3205\320=0i\232>E\272D=rg\216\275i\014\275="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\267W\225\275\200\216\210\276\240\0034>\321\030\342\275\034\245B\276\021r\274=\027\346v=O\312)\276eI\276>6Z\005>\363D\314\275%/\224=#WK>\275\352Z\275\356\317\206\275uQ\234=#-\264>h\266#\276\212\355@=m\"\244>\305L\342\275\027\327\345=\345\271\307\275\014\006\300>\361/\330\275\364\355\374\275N\257w\276\013\234\320\2756\266\237\275\262\3142>\244\261\023\276\037\310\003\273"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\332(\310\272&\027\205\272\373\363h;b\354%\273#I\215\272&2\363\272\331*\262\271\321K\362:\216z\330:a\360|\273\256.\213\271\351\325\315\271\327\237];|\262\\:\000b\354\271r,d\272\206t\001;\361\310\3138\035\\\216:\234.\3668\240,\313:\2531*9\370\276\304\270|\346\t;\375F\223\272\221\264\3279\240\212\017;U\006X\267s\305\313:\236\261\300:\024sQ:\004\210~\273"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\305\322s93\245\':\021\0273\272\355\\\017\272\266\217\235\272\364\362\265\272\217\233\254:\\\006\255\272g\017]\272\221\266\302\271]U\334:\217\3731\273]i\016\272\227|\203:\274j\276:\010\276c\270\222\307\302\272\260\032\272\273u=\303:+\3563\272U\257\240:\203\343\0329\216\230@\272l\236x9*\nr\273\004-\204\272\256\000\200\271B/\';\245z\276\272\207\016>\273L\330\335\272\302\255\367\272"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.01
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_8e1efbf6e41a4175a7d28fba30392288/part"
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin"
      op: "StringJoin"
      input: "save_2/Const"
      input: "save_2/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_2/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename"
      op: "ShardedFilename"
      input: "save_2/StringJoin"
      input: "save_2/ShardedFilename/shard"
      input: "save_2/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/ShardedFilename"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/ShardedFilename"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_2/ShardedFilename"
      input: "^save_2/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_2/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Identity"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/MergeV2Checkpoints"
      input: "^save_2/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_shard"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_2/Const:0"
    save_tensor_name: "save_2/Identity:0"
    restore_op_name: "save_2/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
