saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\226T\227\275\362\337\227=\361l*>O\014\216>\231wU\275\331\202\222>\231a{\276\027\232x\275+\225V>\375\317]>\"\306\t>\244\3677\276c\375\031>\016!\300=dP\001<\003\002\260\276Ef\357\273s,x=<pE\2764\025\016>z\353\365\276\3159\035\276{\rH\275\251T\024\276\372\203\254>.d\270<\224\235B\275\3579d\276=\272h\276\236\032l>?\030}=b\024_\274\331\320R=\217\354\031\274\317\"\303\276\201\326\230\2756}2>\3238b\276\301\006\r\276/\237*=\233\235\361\2742u\355=6lS\276\352\324\002>\r\010\212\274\345\014\240=\371\271\263<u\343g>\030\210A>n\273\217=K$l\276T#\325=f\317l\275\347\265\362=\277:\351=\277\2503\276\376N\344\275wn\232<\032\023\334<\240\230\000>\242!\260\276\336\267\233=X \236>\346\3159\276\310\310(\275j\341\t>\370\272h\275\'X\217>v\203o\275\374`N>\005\357\346=\201\030*\276z\346\223\276\245!}=\371\223\376\275\374DC\276\251\235\311\273\021\324d=I9P<\207\231\017>\312<B>\217\353\t=\362\302\310\275R\244\274\275\250\014\007>\342fN\276K\304\214\275Y\013\031>\323\206\005\276\355R(\275XD,\276*\034\260=\215)\215>\3564\">/K\032\274\277\213\252\275\334\371\277=%\325\357\273A\225a\2746\013\213\273\236\371P\276\333\207\324\275\333p\024\277-U\373\275\272\275n\275\336G=\276V\261\035>?\003E>\020l\314\275\3647[\276&\221y\276\327\354r\276\264\232\323<\312\306\350\274=\242%\276\243\007\345=\311)\263\276\005\243\352>\312\006)\276\315i\216\274\030h\202>\230O%\275O\021\270=Tl\371<\346>~\276F\007O>\306E\354\275Q\206\214>\005wh\276\2417:\276\177n\250\276\300\350t;=CZ>)rx\276C\355U<7\367\033<\203\2324=S\033-\276\021\2718>?\253\354=\256\354\005\275\013\225\035\276\202\235\023\276Q\3020;d\206\326=K\210\355\274\\j\031=XL\n>&\303!=\371\2229\276\226\216S\276@\303\214>\252T\332=k\"i\2763\227\277=\257\304I=\333\017\223=\364\354\213>\2703\316\275\026F$\276\200\237\247\276\360b/>\253\322\245\276\035\351*>S\025\320\275\320\017\212<\360\334]>?Q\226\275*\366\326=\270_B\276\005N\017\275\206h\363=ZU\002;\255(6>k\365\233\276V\021B>\273\327\214>+\237\207\2753\276\275\276i\345\374=%\320\271>\266\240+=z\230\230=u]\222=^tP>\365\023N\276\360\376\326\274\200j\232\274\r</\276_|\246\276=D\'\276\212g1>\023\201\253=\217\361\373=Y>\264\276d\022\332; \374\276\272\234t\032<\023\007E>\371t\376\275\371m\345>\311\335\335=\273P\250\275\374/U>\326\236\347\275\0148\275<F\0253>\006\246.\276_\361\352=\271e\224\276\2263\r\2767\031O<.\007\305\275\375\000t=&f\203>\354\004l>\223\240g>p\302\200=\'Q\200=z\220.>|\301\335=\274\300\325\275\'\r\223\276w\3074>q\261\004\275\346\376.\276\257\210\327\2750}\265\275MM\277>\022\311\000?thA\276\246O\276\275\223*\027\2763\031\213\276q\365%\276c>\251\276\336\350d>F\314E\275\311,)=i\226\014\275L\254\325<\306\261\343=<\354x\275\264`\232\275\254\311\n\276<\n\307<m1\006\276\244\252\205>y\217e\275Y<9\276\335\264\007\275\301\206\262=m\312?\2762\213\311=\231T\261\274\031\230\204=5\327\230\276A-\243=\000\216\030>W\\\030>q\t\270<J<\013\276\226\003c\275\252/(\272\301&Z>$\337\005\276_\373M>\236\242e\275\271\203\'=;\2634>\016{\204\275x\005\264>\344\013)>\223M\311\275K\240\221\276\004[\177>\364\225j>#z\035>5\'\231=\027%\311\275\330>\304\275\226\277\316\274\340\332\007\275\242\270\217\276\205\223\314\275.\022\366<\003\332\371\275]\226\242\275\033\314\211\274\002\3535>T\350M\276\201\205\277=,,\032\276\341Q6>\355\271\250;\246\320\207\276\335\351\202<l\355\235\276\2357\001\276\322\327\013\276\361\250\362\275y\006N\275\223\273\021=\346\255\312\275\263{\017=1{\200\276\314S\267>^O\251>\327h\204\276\266\017==zv\026<\314T0>\265@R\275\276\205\\>\205q?>d&\332<\3519\267\274\027\330\024\276H^\216\2754\372\014\277\320\202\201=\354\267:=}lK>\226\362\034\276Q.\244\273hi4\276w\2076>\036\001l\276y\272\241\275\354s;<\367\362E>\225)U\276\027B\020>\017*\322\275M\323O>.2\216>\240\345h>\024\026\r>\300\204\220>\t@\201\276\016n\307\275\315\345R\276x\036n=\312\343H>\203\255\203\276\022u\253\274*+\206=}\347\\\276q\001\267\276Q\321\270=^\222h\276\026\265(>\355e\036\275\340\007\245=o\322)=\306\347|>\347\310\256>{\237\006\275\374Yf<\222\265\253=\344\003\372\275H\346\223>\002\352\346\276\207\302\221\276\355b\001=\032\344\003\276N\317\210=\371\230\256=\250\024B=\020\224\032>\320\335g<\216,E>\367Q\247=\354\304\270>\267|q=\346\264G\275\325\265\352\273\223\315\035=D\226\277<\314\347\020\276\363\'\033\275\220kX=\\2\232\276f)\310=\232\307Q\2761\021&\276\030\006\242\275a\035\037=b\347\204\275\001\177\310\275\324\313\302\275\360ZL>pZv\275!\340\242>\026\206\201\275\030\352}\275\220\254\305\2762{v>\310<\270=\365\361\255\275\014\370\010=\033\241\213=\004PI>\233\316\361\275\351D\334>\353\226D\2757\234\240=\333\341T>\255)1>\006\346h\276V\n*>\343\236\02584\360\225\270|\235\031>\330\346\205\276/\222\004>\r/\275>\275&\362=R\230:>\201\312\031\276\362=n\275r\017<\276~\376f=\221t\216\276\262\r\244\274\373L8;\334\304^\276\311\004\266=\257\2527\275\240\225P\274\367\246\032>\264\230s>\\\354t>7\315Z>\022z*\276\264Q\363\275V\304\021\276\317\236N\276p\375\236\276z\216j\275\343`)\276Z\240\311>?S\317=\366\337.\276\2544\336\275\332\314\341\275\312\0104=\021\364\331\273\214\3278\276\3504x\275\231E\225\275\376\315*\276*i\253\275\014j\236>\250-\230\275\214\243\260>1z\357\275\340=\300\275\355\264V\276c8\307\274\'\020P\276Vvj>s\\2\276\337*\212\275\252\236\251>\271\220\256\276\200,N=\370l\'\276\360\037_\276/\032\353=\216\340\016>\010\207O\276\017\367\033>\026R\360\2763\005;<\362\330\331=\231\344#\276\260\366\226\275v\275\000<\n\332\245\2754\307a\276P\321\033>>\364\265\275\021V\316=\2660\370= \225:<\366;\275\276\300\206`>&\277<=>\355\177<\261\3201\275\014\3163\275\315\254\n\276\346_\313\275\217\254\270\275\252\366\014\276s\272\020>\227\357\026>4\325{\274Q.\227>W\037Z>\216\303\002\276\306.4<\200\304V\275\343a\256\275\271\271\310=\304:\277=\232{\352<\001\344\323>\375+6>IA\202\276\252\0332\274\027\032\362=_\371K>Qlw\275\251LB\275\2639.\275\231H\210\276`\n\237\276\340QZ=\2123\006>\3717l=\334\260[\275\027u\013>)\225\230\276~\346t\276u\251X>q\215,=\214L\361=\303\262\363\275SS\"\276o\000\t>\211|\341=\272\352J\276\276<\336\274\375\306\230\276f\362/\2768J\365\2750\033:\276N\031\223< \335\242\276\3437\205\276\016\253\256>\264\370\226\275F\253J=\215\231\212=&\225B=y\221w>\014{\220=\302\\\005\276\366\362\277=\230p=>\206^A>\323\316\273\275Y\211X\276\257,?>\370~7\275y\265\321\275\2744x=\376\227\307=o\350\324=\207\370\006=Q0\361=zG\203;q\375\357\275\266xZ\276\303\347\022\276i \207>\374\267u>\377/\007>^-\220\275rV\230>&\004\314\276\331\366O>\241\216\370\275\317\\\254>a\303q\276\244\255\242\275\005\n\271>\277b\363=X\205\223\276;\030{\276\0160+>\036\023\005>\2169<\276w\rg>\311\335\343\275\262\324d=\244^\302\275\204\252\251\275`\007\240\276\020\337\313=0u\247\275\250w\312\275,\357\243<\036\t\263>\343\233P<QB\216=\231\274\211>\3546\340=\010\213\374=-\234d>a\341\\>\306\324\256\273p\276\331=\200\236q\276\363\316\341\273H \"\275p/\222\275\036\223\245>eo{>t\302\260\276\215\333\347=\355Y\331=\246\016\367\275i\n\267=o\335\331<\355s\362=\262\244S\276\215\r\313=4u\254=\"\220\236>\324\017\266\276C\354\345;3Mg<\r!\001>\274\357\027>\035?#>\323y\217=\230\207:=\027\027\245>9\301\241<\3350\021>\204%\003\275?_\000\276y\377Z\275s\313\211\276\\\337V>\002\322W:\352\230\305=\305\204\013\275W\366\014\277\251~\240<\256\300\200\2760=\200\275\3063\355\275\367\370\211\276X\327\324=.D\033>\277r3=\372\360\335\275\252\302/\276\024\325S< \014\330\274\267a\230>d\000\352=y R\275\301\235\303\275\370\013\010>\020\276\033>\336\333\026\276tN\\\275~\212[=c\3248\276[\003\036\276\315\214R>\366\220\013\276\340\333\010>\313]\365=\3046T\276\310V%\276}\361\227=ks\316=\374Je=\007\370t\275:\007j\275\260-c\276i\037\005>\351\\\267\274\275{D=\360\371\023\276(\275Q\276\241\312\361\273\376\036\204\276R>\243\276TE|\276\345\004\211\274\373 t\275\t\303\231\276\033\360\030\276\276\316\274\276\3230\245>\343@K>@\022\232\275\3726L\274i\336\273\276\207w\016\275a\335]<G?W<\207\271\333\275\214m\246\276\345\206B=\374\337\002>\232\207\204=\266\022\022>aJ\t\276\'\217m>\r\235\302\275\326\247?\276\000W\007\275\326D\206\276\367z\250=\232\377\236>\235i\375\273\345\034\274\275\330s\306=\214=O=6\237\303\275\352\217\002=*qr\275^\262\336>=\021\332<K\244\241>\235\266b\276\201O2\275\236\205&=\255bN\275x+\212\275!\336\271=\264mp>\374\255\027\276l\305Q>W\320\275>\246\030\241>*#&\275s\243\222>T\277\024\276\242\273\001\276l\223p>x\027@>2\007\354\275\220\016\004\276,\276\202\276\252\035n\275\275\246\255\274u\314Y\275P\353(\275\016\265\216>\313\223(>\026\326y=\035\276\330=\241\001\244=\226\270\262=a\"\037>Z^\220>n\373\244=\375\037W\274\214\315\n\276\272\352t>r|\353<\306\217|>p4\365\275-pJ:F_\232=.\333\035\276VL\214\276A\0228\276\213\025\237\276\202D\034\276+\302r\276\337\266;\276\314\tY\276\036\326\311\273G\220/=-#\260\275\231\032\307\275e\341\315=\227=\245=u\363]\275%\377\235\276\344\004n\275\373;W>4\214\264<\334c\273=\002\343\342\275_;\r\275K\364\240>P&G\274_t\220>\274F$>\216Rl\2756\010j\275\210\246\311=\311\\\035>j%\244\276\242;\"\276\350\343\001\276\363zb\276\375\t\030>^\350\302\275\365n\277\276\"H\326\274\376\343\205\276\332.\262\276\247\347\355=H\253\027\275o\307\275\275\302\236c>\350gh=\035\203\252\274\336\0206=\001<\365\275\244\266t>O\010\013\276\257\240S=+\002\217=/\314\270>\204\252r\275tlI>\222\312\322\276\3570Z\273\375_\214>:\0179\275\243\227\244\275\024\236\345>\3127h=\254+\032=V\220\r\2764,\371\274lT \275\345}\215=\3651\250\275\017\255\251\274\242\371\224\276\323{,\275s\320\036\275\322\000\261<V8\211=D\307\031>\215kk>\301\346\231\276Z\025\344\276\202\337:>{bf=4\321\225>\361+\200=\301\032\341=\n+\315\275\357\221\206\275@)E\276\216\366\005\276\365\010\272\276\211^\363=x\340\313\275\376<\032=\000o\257\275\231\026J\2762\035\021>\361\355\274=f\373M>\340\301\271\276\226\370\241\274\261)(\2764\326;>\364\313p>\237\303\242>\337\317#\276Z\000\t\276\205F\273=~\025B\276\265X\203\276`\016u\274#p-=\346\214\213\276m\246\347<\322V9>\317\245\274>e`\300<\206\020\226\274\014\006\034>jt\245<|\332E\276T\030\000>\243\275\364\275\210\252!=\2107\375\275\013\230\255<kk\313=7\020\t\276$I\013\276\235\300r\276\307\306\032\273G\247\207\276\\v\004>\273\307+=QL\367\2755e@\276-H\263\275No\300\276a#\223=Tz\247>\023\364\210\275\215\267.\275\233W\212>\304y@>q|\234=\177\253W\276\033\321\202\275&\272F=\027\314\266\276\236\273\210=V\027\020\276\030\274w\276\034\275R>\306`\016\276\264z\030>@\352\205=E\271\273\276\301;\301\274\035\312P\275L\227\244=\200~\207>nGZ\276\2201\202\275c\310\201\276\300\236\\\274\251\275`\276-\031\256<|#i\276xY\014>\305\365\261>\372\214\003=\230\267\303<\240\323\372\275_%P\276\346v\327\275E\201\204\276\271\341&>\250\3563>QP\315=\322\360\240>4\242\267\273a\321\212=\\\272C\2767\315\220=\311\237N=\003\375\014>mH\277>\253j\034:\023\263\224=\336M\302<\276\221\273=\242m\370\275`\014\326=x\316\\>.\337J\275\037py>\266y\034:s\273\210=\321\034}=e95\276\215\021.\276j:\265\276\000\317\311\275O*s\276\206\034{>SK\320>?\217)=\n[\016>\267\346 >y\334\031>\247\013\006\275\233_\324\275\362\220\206\276\240\027#\276\345\243\365\274\031\275F=\035\235R\276\324N\375\275\031\017\206\275\371\001\214\275\201o\210\276\301z\317\276G\266\003\276*\202\217\276\332\3658\276\261\256\241\275\nn+\274\010\341\211>{\235\202;\342\234\242<\344\010\235\275z\341\223>\365{\354\275U\215\217\275\246i\000\275\r/\005\276\010j\227\275\314\004!>\306\330,>]\304\017\276\312@J>\032\263\235\276\251\370\025\276\2564=>n)\246\274 |%\276a\035d\276\270\254\205\275\'_\">7(\030>\254\024\242<ZH\247\275\365\023\225\275\267\376\t>\227\022\013<\323\214\023>EX\206>\035\333\237\2765\355h\2754F\374\274K\361\203\275\352\345\016>\246*\207\276+)\024>p\024\026=\"\264\264=\306\021\247\273\203$5\275xP3>\306\"3\276$\266\016>]b\240=?&x\275\205\275\231>T\352h>)m\342\2765\246\313<\312C\017>y\231k\276m\003\265\274\2210\251\275?\243\235\273>\373\035\275\266\372\334=\0039\333=\333\215~\275\200\206\275>\237\237\236\276\2502\316>\243LM\276\222a\304=\247\0033\276\332\305\203>\377\236\337\275\335F\037\276:xw>\260\037\267<\202\016r=\336\273\005\276\334\037\205=\007\020x>\001\366\217<\341\367\253>\301\356\340=\277gl\275rE\371\275\016\341H>h\374\211\276?u\201\275B\'\235\275\201Z\234\273\212\350U>zI\352\275C\354!\275wCT>\244\241\207<h\214g>\301b`>\233\032\333=\250\224\323=\373\230\337\273H=\253<\377\244\327\275kk\273>\270\237i\273\275\201\216>\212\034\002=\334\374\245>\356\306\004>&Vj=\343&\221>\270S\027;\310\315\303\274\364\367)\2766\344\365\275P.\354<\365\252\300>\377H\363<\226\341Q\276\216J\017\274\377}\311\275\311?x\273,7\252\275C\356\270\274^+\222\275u\215H>F\r\030\276\250L\201>lr\320=\333\202\201\275z-\276\2759\356\215\274\3730&\276\332\034{\275\355V\332>\226p6>?\363\300\276:]\323\276\t\365\363\275!bA\276\"\\\346=\227\262N\276|\355D=eI.>\255/\246\276\207V8>\333\304K>\261S\001\274[*\335;\324)\024=\244\332r;\3474\'>D\361\032=\334#\212\276H\324$>\033h\005\2765\240\273\276 \203\324\275\206\003Q>U\256B\276\235\347\214=\340\327\024>n~ >\337\256\200\276OW\233=\240\275\351\274A\356\006=lW\367=\200!$\275\265\354H\275F\373\023\276\365\027(\276\003d\377=\033\354L\274\0366\216<\263\311%\275x\215\\\276K,\321=z\254\254\276\301\037\014>\232lh\275\014\231\271\276\370;\266>\237\314\227>A#;>\004L\332=7jn\276++F>-p\237=\233j(=\320N\025\275\336.V>\324-\352=\276\345[=1u\207=R\330\n\276M\313\237\275K\330!\276\031N\216\276\3207\206>v<\205\275dE\375=HF\254\275~\214T;6\014\263>\376\016O\275\006\243\236=\004]\363\274\237\276\005\276\032\010\001\276\024\225\216>!z\232\276\357\257\215\274ZX\215\276\347]k>y%l=\337@\256<D\370\256=\314\260\347=\310w+\276\316g\217\275$\351\236\275\\#\n>\007\310\236>\372\322_<\001\036\263\276\267}\374<\267Ip;\234v\214\274\323\177\023\276\311[m\2753\234G>m\353\251=\205\210\304>\376\210\225\275]\351w\275Two>\000\242><\037\313X=}\301b\274\214\202\177\276O\213\374\274uD\001>\014q\007>\245\3012\275o\344\367\275\325\311\346\275h\005\036>\025\'\210\275\251:\243\276\013%T\275z\272\005=\241\247\034>A0\n>\200\225\245\276[\210\320\275R-\314\275\251\303\222=\372\340?>A\264<\276,\326f\276\272R\206>\243\212\025\274\031\201\245\276\224#c\276\211e\223\276[\236O<\223H\253\276\250\375h\276\020\016\023=\246\352\031\273\330D\306\276\007\335\227>v\"Z\275\'\337\245>\357p\212;Zo\026\276\207\013\200<\304\210t>\225\363\025\276\002G\307\275L\244\372=\346\006W\276B;\t>\027\346\213=P\0029\2756\263\307\275+\232\210\276\204\007\272\275>\204\327=7\000\367\275\035\370\r\275\035\323r=\361\315@\276\303ku\275/\347O\276\006\332\214\2751L\324>m\032\031\275\326BE\276\254\010\375=8F\013=U\343R>\267\326\243\276\343h\020\276\272\303\300<%9\205>\311?\343\275\312\\T>{\010\236=\327\n\032\276\262y\272=\332v\274=\213\025\021=\325\243e\275\267\256O>(@F>\323d\026=\362!9\276\241\235_>\320\341\007\274\013&\352\275\354\255\374\275\230li=H\223\267=\351\217\310\276\225\216\252=\177N@\276\303\013\221>\363\267%\275\315Z\244\276k\245\020\276\313\222\001\276\340.\003>\345X\210\275\275n<=\347{`>\014`\356=\033\0132\276\311\376\216\2766\335\236<G\315x>?\210\213\276\265\212G\276\\xl=[W\256=\227G\360\273\272\334\364\273\220D\267\274\027b\334\275\310\r\235\275\344\343\270>6Rf\275\366\026\016\274L\372\206>\242/\260\275\302Z\204\275a\227\374\276#\221V>\253\374\275\275\251_\212>\024\010\222\275\317\204\315\275\272y4\276\351\305\021\275\357\311\215;\243\240\023\276\347S\363\275\245U\316\275\247}D>\201\352E\276\177\363\306\275a\373\t\276`\314?>\260\n\206\276f\032\201=*5\n=M\232\n\2765\246T\275x6:\276_\343i\276\335\200\333\275\322\337\224\275h\353\313\274\203rU\275I\304\255\275\\\317\272>\271L\233>7\000.>\312\377\370\276 A^\275a\260\211=\233\020\241\276EB\375=\235\360\275>\323N\233\275jX\213\275\310\317\215=b\215\263=,.\272\275\006w\260=\333\263\"\2763\274\275<5\372!=6_u>\235.8\276\350\023\232>\342 l\276Gj\207\275\027\316\020>6oA=\365q\310\274h\010u\276\367\204\257\276\331\227\327\274r\314{\275\rZ\200\276)\272\365=\r\375\231>M?(\2769fU>W\265\216<`\334\034>H\303r={\325\217\275\260\\g\276\026\326\033\275Rx>>#3\026\276~\355L>\244Vl<\230P%=\361oE\276\"2\002\276\231\227\005>|\237\037=\232\342\225>\327\251\036\274\360\010,>b\010\230>\22628\2766\272X>\377\021\230>zH4\273\365\022\000\276k\250\372<\017\371\246\275IZ\233=\3076\335\275\364\2705\276\021{\240=j\036,=\335\033\266\275Y\3429=\322\305\306\276\217\241Q<\271 q=ja\266\275j\335\273=Z\201\263=\376\273T\276\016\035\025\276\033A\240\276\325\313T\276\000\305\331\274\014H\334\275*\364\347<\004\013\304>M\355<\276g\037\221\275\302\260\361\274%\234\214>O~\014>\222\275$\275\224\217z\276V\260\241=\366\r\373=%\233\305\276\310\212\325\274V\304\252=I\346\312\275\342\211\020=\231q.>\334K\227=\005\003v<l\203\333=\024\205z>p\034\313>|/\317>\223c\351\274\301(\003\276 \013R\275\24465>x\311\026>\306\224\301\276O,\007>&:\026>\326j\356\275\255\004\366\275\250pG\276\005\244\272\275\003\375\366\275VXZ\276\241\356\226<(d\260=9\272.>j\224\236=m\343\306\273\034\034\006\276\272\376\024\276b\3301>\250\244\221>X\306D>\254\243\020\277y\267\331\275\357\261c>6\373\271\275p\333e>Z\314\332=\312:\205<!\343V>\002\326\326\2738\303=\275\036\343\373\275)\265\204\274\354\276E>\221\026/\275\257t\272\274.c\355>[^\332=A\323\232=\261\033\257\274\306\312\213=q\335\254\275_\312\\>M\230\346>\257\2638\276\301\010\032>\266iF>=\316\215\27579a=1\t\362\275\034G\253>\031f\026\276M\016_=\305u\233=\213M\000\276Hs\271\275\301\372\014\273@RP\276\247\244u<;\373\271\275DQ\003>\336\000\205=\277\262U=\006Z\027<~7\255\274\017\323\237\276\002V\203\276\013\023\207\276}\030\271>\277\340c\276y\357\224\275\210f\261=\353p\031\275\236\366\215\276\341] =\267\263H>-8\355=\002\017\321=\003\204\257=\033D==\252Q2>\206\177\203<\312\236y>\005\245\323=Z\252\350=\000S\035\276\r%}>\024@+\276\037w\222=v\230\241>\346\227\311=t\2562\276l\227\260<\227\'\007\275\003!3=\364\3355\276\357\334J>\016\215\\>z\301u\275\310cs=tB\214\276_\261\021\276e\204\263\275\225\354\247>\333\221\'>\355\217\035\276\232\357K\276\332:u\276\267\002=>yw\303\274G\326\217\276\371Z\207\275*o\344\275\237\332\327\275_\034\344\275V\r\300\273\nW >\324\233Q=\320\355`>\331\250\031\276\373q\217=Q\2475\276\270\005\340>\000\037\351\275zfz\276f\341\276=\020s\202\275\262\005\271>\\\004V\276U\263:\276\310\344]\276W\356b\276\217\351%\275Q6\240>I\316:>&\006$>\273k*\276\304/1\275\224\303\213=4.\257=p\253\325:K\342\244\276w\211p\275a\036\003\276\2021\217=O\364\237=c\355\337<\361\214\273>-\034g>C\367\013>\245\311\362=.\2168=Q\034\243\275\267\246\025\275\216\250W\275\352\235x\275\000\001&\275\275;v<\335\361n\275\211\210\027>_\240\263\276\rs\372\275-+p>\364\214\374\275K\324\226\275\004\203\313<\337\233d\275\221[ =\353\214\223>\204\037\371=rl\344\274Az\"\275\271\262\303=\001\335\206<\254\227\215>\342[\\>\376\272=\274\356\241X=\217\252\351>\355\322\343\274\023&F>\222\010\257\275\336\033\024\276\363\242\204\274Q\312\330\275\352zT>\344\370\242>X\032[\276V\271\305>\237R\352=w \254\275\034J\367<\242^7\276\272\306;\276t\260\273=\265\\M>\016\037\360\275c\224\307>L\tq\275\3415\">\371\373L=\345\344\217<3`H\276\002\206\260\276sql=\246\336=>\363\250\013\276uS\223=6\251\010>\034\352\021>\346\310\377\275\031LE\276\251\024\023<#\034N\275n\256%\276\230KW\274f\305\321\275\263Di>\202\325\310\275u\310\234=A\244\213>\025\006\310=Wf7\276\020W\"\276\t^M>P\\\201>\001:\312\275\325z\026\276\241\332\302<;\230!\276\237\206\005>\263\315;>B\274a=\023\277\014\276\274\373\211\275E\212\270\275\347{\224>\nK\260>\201\375\260=/v\010\276\206\240\031\277\273\214\263\274\347\2515\275\036\332`\276\3451\t\2760\344+>`\357&=\242\374\244=\261[&\2762\326\n>Nb\231\274\335\2657\275\234\211\274>le\207\2757\'\203\275\321\256\254\275P\313\346\275\372Ot\275\200\333\274\275 \202\334>\203\302\266\276\304\007\t\276l\335H\275&\034{=&\242\207>D\245K>G\215g>=*\013:@]X>*\332\323\276\330\255\207\275P\370\253=\244\326&\276\376\331=>8\354X>\333\016\266\275yyC=$\264\314\275\252\271\r\275\037\217`\275W\244\203\276\3219}\275\310^\357=Ai\200\276@\336\032>~\003\215=\253+\316>\010sH>\302\367\270\275\0051w>\372Q\203\275x,\236>n\014\023\275aH\274\275y\226\'\275\306\206\037<\305\007#>\023h\\>3\364\345=\261\332=\275\005V%\276\004\203\031\276\243m\024\276$yz\276\301\256h\276\013z\202\275cYN\273kX\251\275\350\246w>\241L!\276\346\317\220\275j}E>w=~\275\261\321\214\276\351\326\242=\365Q\202:\330\217\236=7 \021=M_\201\276g\210\260\275\023x\235>A\217z\2769\t\362=\212\220\307\276\032\326S\276\3265\254=\262\301\237\276\266\347\340=\013\365\003=|@\335\275\022jq=\"\377\210<\333\272\230\274\276\241\371=\243\351F>\364\030\r>w\240\303\276\361x\026>J\200\r>\033u\210\276${%\275e\004}\276\367\366\373<w\353\014\275\002\2520>>\205n=\201H\\>\233\251p\2764\212\313<\004\353N\276d\367Z\273Og\\>\221\003\223>F\360\022=\363\361\000\276\217\202\204\276\344\353\023=1 \004>f\214\207=\231|>\275\345,j>t\001\271>\226\325\036>J\310\t=8\235\277\275\371\350%\274\307\211\236=\342\242\210>DP*\275\352\252\243=m\2022\276\210\316!>s\2434\275\244\321\235\275\226\204\236\276`\244\377\2754\364\243\275\337k\255>\307\350\006>\213\3320=\272\316\006>\256\306\022\276\203\377:\276]5\224=\356\241\022\276>\336\300=\033\'\304<Z7\271\275\005b\257\2759\232U\276kS\244\276\n\002\264=\343\276\253\276%s\325=x\255\231\274\333\264\202\276\255\026r>\236\355\262\274qDl\275y\032\035=\034\270\253=\027\271\257\275F\327$\274\342Q\355=\022U%\276\006\327\240>\244!\332\275W\'\007>k<#\276\232s=\276v\026\201\273p\2437\276\375\235\2579\257>\340\276E|\237\276!m\007>\003k\010=\240m\266\275R\361\013\274?@R\276V\270\367=(\305\315\275I\365B\276\270&\277\272`\365\334>\031\034\341\275\355\361\r=a\021\256>\244\266\240=\206\303\214\275\024\253M\276D\303\267\276\222\220)=\340\277s\275\235\251\033\276V\327\206\2741\004\343\275\036\344#>\217G!\276\036\333\226>\025\214S\275\261-]\275{\214\251>\\\320\r>\023\347\002\276\235\205a=96%>X<\204\274vE\222>\213\005\232<kNG\276l\031X>r\325q\274,(W\2759\311\321>o\002\237\275\236UQ\275}\351\343\275t\240(>\3035y>\233$\253>\025d\320\274\325\202`\276K\304\227=*\345\262\276E\232\264\274Q,r=*\247\022>\221\"\263\276\244L?>\305\274M\276\275?\274\275\366\034+;\370Q\213\276\201I\034\276b\330\245>k\005\363=\301}J\276\300\3518=0\305\201\275\247\241\276<L\002\232=,zD\276\242\3006\276\304\327`\275E\272\267>\247)!>\" \301=\304\225u>\216`S\276}\332\341\275\322\203\220\275\243\327x\274\276\332`=\303\221\315\275\235r\274=\266\013\307\275\204&\031<\220VD\276\3778\025\276\273\307\220>?a\035>\n\262\360\274\031`u\276):z\276F\177+>L.\t<T~Q\276=I\365\274\351\331#\276g\220\340=\332\230O>\030\311\000>\244\332\'\276\216\033t\276\247 \007\275\275\324M>1\320\261\275\001\361{\275\341\007\370\274ny\202>#\031Q=\235\311\323>\222B\246\275\336;W\275\006\274\320\276=\375\260>\025\265\250=E?\n\276~Z\332\274\026\305&<\361U&=\237$E\276\265W\032\275\334x\331\275\262\315\'>\342\rg>\3436$=\037\221\330\275\224\257\211\276\366K\014\2762\302\035\275&3i\276mTl\275\244\341\233\275\344\224\351<b\241\236\275cG\230\276^\376J\276\020&\205\276V\301I\276i\242\234\276&\245@\276\213\327]\276v\300\001\275\224\307\300\2751\225\315<\204\312j>\213$\344>\320\326(\276\241\335\370\275;\354\365\275\227<\213\275\3034\271\275F\210\226=\337\224\r>\312\323\215\275\300MP\275\260O*\276\027\360Q\276u*s\276\334\360,>\020\2611\275\033\354\340\275I\235I=\213\214\342\275\336\245=\276Y[\325=\240\006\037>RB\237\274)Rx=v\365\266\276$r\240\275_\3345\276p\005h=\205Ao\276d|\201\273\213\240\265\273\313\365\223\275\303\320=\276\024\204}=/\334\267\276\022\324\334\276\303\242\271\275\221\007=\274\362h\315\275\033\216\335\2757jW<O\017\363>R\304\217\276\3630\\\274n\036B\275>\227\000\276\017X\261=]O\232>o\317%\276\324V\267\276\177M\014\276M\370\231\276_\274\250=\276m\026>(\234j>\025\243\037\275\247\220\273\275K\001m>p\241\020\274q\t\200<\310_S\274hQ\307\2751!\377=V5\026>[!c>X\233\301=\243\227\353\275\370NB\276\177\213e>\307\331\021\274\255\357\364<\206Lk\276\234\244\254\276*\341*\276\322Q\366\274\004\341\312<\320\006s\273\345\002\222=C\310$\276>6\202;y\353=\276\362\307\252\275"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\206\266\267\2760\205\347\275\200\021\324=\201T\223>\026J\323\2758\2157\276\241\247\243\276:]\302\2757S\327<l\304\213=5\030:\275%a\270\276\363\227\257\276\002\013L=R\177\336<P\334\335=\177\347\224\275+\023)\276c\333\321=\r\354\201\275\261?8<\010o\253=|\314\265;F\364\206>5k\223\274\266f,<\250\333\034\275\306ld\275\266\253`\275\305\017\357=\2455\257\276\224{\305\274\343\346\210\276m=\264\275\360#\273>\354\256E\276\262\344\353<0\315\355=\002\304z\275\313{\007?\364\342\331\275\326*\034\2761A.\276\200G\244=z U\274Fj\332:&:\250\275J\364\270\272\021\020\020\275\242\362\351=q\375\177\275\375\237\250\275\343@\241\276\253B\257>\216Y\356\275b\356\023<\017j\251\276\243\034\014\275\357\024\022>\237\'\350\274\006R\244<\371\377\302\273\240xN>Y\312\">\211\377o\276q5\367<\244\213\370\276\004\223\226>N\372B\275\361MV=\330\215\003\276\265\000f\276\202\224\377\275\3227\003>\232\271\001\276\265c==\\K\336=i[\320<\333\336\"\275+\324A\276m\315\361\275<\211\206>\255\217Z=p(6\276\350\013W\276-J\247\276\247\245\234=\305\026+\276SJ\213\274\014\245\207>\301\272\007>3\334\375=\263Y\255\275\3316\t>uT\307\275_\373\270\272\363\326P\275\014\356B>\251d\377\274N\3228=\360\350\274=\022\200u<\005\277a=\345\221B>\031\002J>\331\0263>\036SC=\324\026\032>Wp\203\276\375\270\242>;\2022>\264cs>\2363\332=^\230\232\276]P\277\275\252\365\365\275\245\002\276\275\273\324\230\276\030W*>KT\243\276\244O\343=\367\371X>\001\363\271\274\001\317\264\275x\275\\=R\217\341=f\237\276>R\016\345\272\270\211\223\275\235\326\002=\335\033\343=Y\034\324=\261\004\311<k\300\274>\034T\356\275y\224^=j48>g\2136>\216\313\337\275\236\316\300=\034n\373\274(E\217\2756s\016\276.a\023>[\327\345\276})\t>\273B\356=\206\2317>\244\252\260>\275\310\037\275;.\255>\371L\231\275\035e\002>lY\251=U\371\376=2\036\001\276\255\343v=\023\263q>>\362\363\275X\243\016>\245\366\307>\007\354Z\274G\344s>\222KO\276\037~\306>\366\352\207\276\375o\373\275s\212d;k\340\213=-Q\257\275\327%\365=T\322\222<]\217\367\275\335\363\010\276g4\n\275\030\371\031>\003\266C>\013\353\021>q\347\214\273\346\006\r>\302\007\016=\215\300u\275\261\207W\274%\352\261>\305\032\356=z\006\341=\200\264q>U\364\247=\237\272\217>e|0>\211\216\332\275\023\177p\276\"\020\222>\322\311\211\2750\271\263\275y0\273=\032\177\272\274\221\027r=d\256{>!\351O\276\001\025\006<P\202:=\245\261T=\034\272\345=\006\336\244;\351[\267\276\353g\'=N\351\003\274\305\313\320\275\30116>dT\215\275\317\221\264=\013\0333\276\nY\317=\256\003\204>\265j[\274-\r\201=\n\356D\276\365*\026>/\347\020>e\263&=L\240P\276\364\210e<\013\010\350\275p+\013> \326.\275\233c}\276\310\031\374\275\237k\374\275\266\032\253>r\366\026>C\367\013?\347\323-\275\252\237\265\276\271>\022>9\365\004\2764!/\276\310:\177>\371\323\257\275h`\004\276\306\031s\2741\237\306\275\\\231g\276=uR=\213\374\367<\3169e\275\"\226D\276\255C\250>,\370K\276H\215\261<\036\307)\273\206k\272>\325\002\224\276w\336I>Y\321U<\260\016\340\275\303\241\206>3mV\276\032\356\203>T\312\001>\016Py\275HN\320<)\205\311\272\224\320(>\272\027\013\274\256\276L<\362\245\232=\030\225\230\276\350\260?>\377\014\366\275\364!\233\276\342D\231>\267-\341=\241\306L=\241\276\265\275\364 \025\276\035}\365\275t?\223\276\005%M<\264o\375:M\262\"=\303\351\301<\016X\226\274\\*\206>\252\275R\274\342\334\320<\254\344x>\254\277\227\276\312\377\363\274\330\277A\276\'\225\200>\323 \360\275\374\356\034\275\"cR\276\025\215\350\275\245\025\272=\227K\266\275_\344a\275\371\365\244\273\2460H=\n\373\210\275T\374\246\276\330\334#\276\352\020\210;\221t\231\275\277z\243\275f\005b<:\211\221>\213\274\200\275z \313\276\207Jw>\253\332r\276\267C\212\274\231Ly=\244*\305=e3P;\337\332%\276\361M\353>\030D*\275^@\276>\247k\374<\325\3604>\0379\006\275\367\013E\276U\320\303\275p\3447\276\270aM\276\324\372\277>\212\033\257<R\214\236\276\035R\216\275\346\245\266\276f\324h\276 \374\300\2750\006j\276\305^p\275i\030~>\322\216u>\211\014\226\275\346\231\326=\200\351\033\2765\307\312\275h\024\302>fM\t\276>C\036>o\243\306=j\273\007>=-5\275\232\030e>Y\312\253\274\200\376\357=\001\327\366\275\317\223\361=\232\302\016>-\355\035>RI\354=\264\201c>^I\027>j\027^>\006\2209\276O\000\027\275\366\240U\276\014\327\037\276\310$\270>\261\335\007=\376A\250=\327\256\246\274S\367n\275\001\254\255=\3540\211\274{[\371<\000\235\000\277<>\221>\341\334\"<\243\026\031\276N\",\273W\3515\276\013\000 >\300\265\005\274^\343,>\244\346\351=8\357A:\322\016\025\275\2144\250=\226\242\000?7\312\260\275\202\021>\276\221\245\220>\"T8>\231\201\331=\014~Q>\244\361\221>S\334\232\275\213\370\275\276LK\177\276\341\031\320=D\211q\276~\201>\276\321\205\023<_\377\021\276-\264\244\274\202\311\016>\2147\256>\310E\034\276\001_c>\373\242\346\274\261\316\336\275.\270X>\032\323\213\274\005\036\031>\201C\006<\234Vl\276\352\376\240\275o\305\204=-\306\213;j\376H\275@\\\263\276+\241\306=\213\305\201>\265\375\273<i\200\367:\rw\222=i\302\211\274xJ+>\344\334O>&\203\207\275\241P\306\275\021\371\354<E\360\025=\023#\346<\030-Y\275H\rk\276u\007\353=?4\334=\361\225);?T0\274g\000\255\274U\364\002\276K\327r=F\351(<0\te<,/\022\276\305L\244\2768y\261\276\013d\223=\376\025$>\222\'=\276G*\221\276JE!>\274*\301\275\213\"x\274\003\264\351\275Aq\221=\344\247\231<\3555]=\315g\214\276\264\222\265\276\346\206\340<\352<\273>\216\223\036\276\336l\266=\272\322>>\236\021\334>\\C\016\276\222\340\264>\342H\214=9\264N\276\360c\266;\217\020\273\275!0\313\275\305;\200>Y\265h<(`=\275\370Y~=T\230\215\274)\344\333\275c^$>i\274\222>\310\352\263\275\373\277\233\275\2679\336=\'\340\247\2764\317\343=tO\303=d\035\264>\363r\032\275\305\022e\275\203\003L=\013\361\004>*4\224>\336\206\245=\'%\026=Z\002Y\276!\224f>\330\233\377=\304\200\213\276\204\\\003>\\:8>Oj\232=\372\026\025>Y\240\203=\224~,>\271\244\367\275Oa\004\275!\3665\276\274NC\276m1\360=\013\010B\276\205\266s=\013\331\237>\241\333F\276&\235C\275\341\326\363\275\024m\224\276%\251\021\276\037\377\220=\035q\212>Cw\017\276\317\256\265\274\016\032:>\264\253\242=zt\024\276\'FU\276o\005i\274\300\355\267>0\253\022\276\310/\n\275\271\323&>\220U\301=b\212\336\2750u\306\276\346\334O=M\302\204>\204\361\326>\023\000\250=\265\265\243<aq\221\276\220\336\026\276j\035t\276\254p\237>`\242\030>\374i\201>1H\366\275\261\222\353=\343&\316\275\242\362\225=\331\277\'>\220l\227\274\332\275z\275\324]N\276\317\276f>\361%k\275\026\230\360\274N\316\324=\000\017\214\275r\022\353=\215\033\321\275w\335\346=\301~)>\331\301;\274\371\212 \276\3720L\276\nh\003>\255\372\243;W\234b>T\336j=\236k\362=\337\270\\>\367\223M\276~ \013>\267\316\005\276\340\303\317\274\272\334\216\275a>u>\340 \210>\r\'\224\276EG\"\276\013r\367=\362\272l\2769\254\364=w\353\244>;\241\r\276\301~Y\276<>V\275.\317\227=\005\371\261\276\236\362\205>2`$=x\357I\275\2257]\274\016\344\302\276\317`,\276A\360\212=\004~\241=\241\233\010\276\240\220\217=>9\251<b\272\t\276\253\276b\276\r\264\232==\233\013\276f\376\014>\326\342\367\274D\322`\276\016r\253<\372\021\342\275R\010N\276ZIu>S\344\017>0\245:\276\377\233\030\276{\274\277\276o\335\262=\333t!>&vF\276\344b(\276\023Om\276=T\264\274g<\013\276\3573\\\275\257}G>\317>\324>#\t#\276y<\305\2757\361\223\2763\022\263\275l\275\322=v\037\234>\224\202\265\275]\217Y\276\"nJ\275\361,\034>\315\273\330;\336\3553>\317L.=\267G>\274[\225B=?jM>-\026b\276P/\000>]o\340=\302 \333\275KT\004\276\201\276\004>\032~?>I:\020\275}\352?\276\217O\343<\335\257\370\275\353\340,>A\032J=a\032\336\275\0056\261\275\363\'\221>\352\373$=*\273\007\276\334\331\221\275\356F\300=\345\276\016\275\267!\031>\"|\037\276\200z\235>\374\321\024>\003\\\n?\035\254\200\2759?\205=VW\233>\010x|\274\271\261_\275|\334|\276\255\275\221=\330\367B\275\3000\'>\371;\n\276}\364\367=\233-\324\273\033\314\002\276F\367\377\275\266\214\241=\253\210\357=\'T\231\276P,M>\266\013\332>fD\240\276 +j>K\262\366\2750\0132;\223\357\220\273\376\235\023\275\003q\241\274\230-\027>Zn\344\276\235\273e>7\243\224\276g\256\027>\272,\024>\004\373\344=\306F\020=\037\r\256<\373\017J\276\365\037\273=\321\314\340<\224\211\320=\236\316\221= \266\256=\004\266v\275p\3542=\361\263\236\276\206Z\217>\267\307T=rM\203\275\242\223\027>%\220\215=\357\030\255\274<\306\323\275f\222\213>\241\245\271\275QV\002>B-\316=$\013T=\310m;>\245V\367=&\230\007>\372\222\307\273\372\242f9\272\334\301\275g\265\023\276NG\234=6\302\"\277\331\337\214>\265a\005\275\373\222\362=Z\2122\273\364\026P=\264S\026\276\314c\331\276\022\3616>\372|2\275\0315\206\275`\260\362\275L\237?\275\312P\276\275:\331;\275[\240\246<xn\200\276\251\3235\276<\306i>+\345p>\351\244\262\276t\255\256\272k\241\215\276\222\r2>\020\036M\276+!1>g:k\276E\376\251\275Y9\235\275\255-#\275\364\0053\276\345\340n\276|}\214\275\261\016}\275\2339\023>\032S\260=\227=\334=\036\363$\276\240i\262=\233\177r\276e\347B\274\361;\016=\007\307^>\033A%>KXA\276\356[\233=\\\305\305>\362\376)>A~\324>KK\202>\231\345\327=\372\213\235\275\025\324y\276\205N\004>\234\347\320=\345i\273<\377\\n=\375\3106=\200\326\226\274\000D\037>%\302\207>-OA\276\275\344d\276\254\206A\276w\342\003\274\322\262+>\327\321u>\n7\033>\204\037\246=\337\254\227>\3776\211=H:V\275\211\312V=\251\322\026=\366\021-\276\374\311\322<t\324\'\276\226\377-<p\004\207=Z\3539\275o\333\257\276\242C\225<\337\211e\276\021[k\276\000\007\303=O\215\301>S\017s=\304:\004=\3779\013==\371e\276\32483>2\310R\276;h\305:\005R\376\275#\336\302\274\327\275:=\337\342\203\276\217\223\304\276\312\020\270=\010\177O\276\217~\r>\350\220`>P\365\001>!Q\301\274I\010\214=4\326\351<\346\263>\275\250dw>\365\323\027>\305\371\243\275\007`p>\242\237\355\2766\320\244=Z\367v>p/\236\276\245\210\255\275\251\244\313\275\007\271\236=\250Z*\276\017Xq\275L\035\020\275\270>\263=\003\346\031\275\217\361\036>\r\244[\276J\223\360=\350}\241\276\264\230]\276\033~J\275\2106\231\276\326\366O\276\231\273\317\275\277\262\251\276\375\255<>\034\311\035>\312\257\236\276\326\200\304=\301+\017\276\262\014\344=\337J\341\275\364\331.>\371\263f\275\315\335^>\r\265\033\276\032K\013>\213h\r\276\321{Z=\007\304u>\360\222N\276\260\004\241=X\2545\276\206\204\253\274\312}C\276\242\203\307;\t\2475>.\230e\276\000\376\243=K@\312=\r\325B>)\233x>\376\032x\274=)\266\274\303\357\006\276l\347\266\275[\246R>\256.\261\275U\201\201\276\320E\210>\313\344\020\276\004\275\246\275nq\255=\266/\333<\212\002O\276w\344\361\275&!\255;\200Y\\:\"1C\276\376\356\010>MVB\275\"\013\372=\207-O\276w2H>\247\375\353\275\324\3630\276k6\211=\241\034m\276\306\024\252\276\321\'->7\222\210>\0234\375=G\335\245>\234\354.\2769\355\267\275O@\325\275LB?\276?\211\023\276~,\370\275%\307$\276\0235\035>K\300\347\274\375\035\223\276\300%\027>\3725f\275\210\030)\276/8\353>\327\356#\276Yb*>\3163\331=v\261\263\275YR;\276\005\263i>\345{\371;\240\371\200>\330\365%>Q$\213\276\261<\250\275[Q\266=9\224\213\275[\374\310\275A\274\031>\360ug\275\312\315\304\276+A\223=\275\321\265\276\017jw\273\310z\233\276\234`\026\276L\341\354=\272\324\233<\214\3615\275_\215s;\352S/\276\t\034\325;\321\356U\276\275+\223>\224\273b\276/\002\323=\002SQ>\235\377,\275\245\370`=b\307j<\037%\n=\005?z\2760\365->\227\030\026\275\210Ti=\024r\260\276\232\301\314\276\221\302\027\275E\\\277\275vL\250\276]\340\231\276\215?\371\275#b=<d\014\203\276\227\312P=\231\264\235>\202\r\321=\'\t\031>\374\266\201>/\010\000>\205\250\r>\005\373\217\276\345+\232\276\035+\211\276\3638\204<\341\3566\276~Mk=Ku\226>\037\361\277>\220\247\314\275\345\363c<.\203\300=\262\031\033=\243_\242>\016\025\362\275D\273\020>\227\332\265\275\016\362s=\022\n >\211J\\=o\270\024=\007\362\224>\377\215_<\326/d;o\364\276=\301\210\016;/Y\273=8kE\276\3072\363=\237\255&=\367\301\013=\244Q\256=\300\002\246=\264\026+\275H\362\231\275\'\236\353=t\221;=N*8\274g)z=k\300\234\275\362\217\003\275\315\315\261>+\312\243>\357@\213\275\227\254\234=@\303\017\276\256\021\203>\036n/=3\026\201\275\203L>\276\345\317\007\276\206Y\306\275\336\2442\275\035\215\356\276Y\347\367=J\001\372\276\251\025\005=a\313\206\275\025\225U=\304X~\275\016:\013\276\2341(>\270\216Y\276Cs\225>\361\002$=B\325t\275\372ww\2748\366)>\274\350%<\244)\262>p7\014<=\371/=\214\370 \276\203\312;\276S\231\217\275\276H\001\276\324:j\275\026\207,\276\233\254\242<\214\305\004\275\004\t0>\220|\r>4X\177\276\036\373\327=\274\357k>\227\037\014\276\342\314O=\313l\336\276F\301\002=lW\244=\014\016Q==\3028>\2067*\275\270\333\326=\000\206\341\275\307*y\275\320qr\276\014\322\300>3\304\231=\022\207i>\276\321\252\276\345k\350=\254wv\276\301\331\277\275\233H\247\276\272\245>>I\303\007\276\224{\225=\361Kt\276\234\022\254<\224\005\224\276\31720>\261=\000\276\0035+>\207\350\344\275=\005\177\276_1\013=FIQ=R\237\264=\024\276\204\276\263\037\251\275X\0020\274\250o\356=\376\352+>\312C\202>\335iP\276\033\256\213\276\004=\364\275Y,\261<\330\254\240=\222\256\t>\372\006_\275S\344\001\276\026\204r\275\n\2025\276\216\372!>\232\207\000=\373e\322\275\376\r>\276\352\342\204\276*\206\225=\3556\364=\244\214,>\277,u;wg\021\276\216H\324\275d\362\240>je\003>\343@\374\276\316W\376\275W\032\231\273\2737^\276\343,\243=i\346;=\356\352`>\3557\356\274/\235,\276s\360\261\2752\013\372<\30455>\002\364j\274\271\257\210>\343\244\205\276\363\265%>\037\0370>\246Q\260>.<\242>#+7>\374\\N\275\257\0211>\273I\305=`\232\246\276q \333=\247\371\342;\t_\002=a\360n\273\003{\017=\222\3550\276\377\255d\276\317\\\025\276s{\224\276x:v>)<\200>2\014\362\273\315\365u\276\363s\273\273d#m=b\207\220=/\301\234\275\356\314\030=\341\"\355\272\371h\255\274\300\220\020>\356\210\262;\024\316\210>\321,\227\276\367o\257\276\\\367c=,hI>o\2630=\331\202\243\275\270\231\030=\224+\252\2752x\212\276\t\376\305<j<9=\257\020T=\025\224\207\276+\002\007>+H\215\274\320\3531>Tb\266\275\221\025\212;H\270s\275\231\277\340=\355\264\362>C)\244\274\224\227\256\276\307T\371\275!\213\357\275wM\255>\013\274\020\275\256\355\206=\352z\033\276\304q4\276\016\003;>[\302\324\274\000\000\004\276\026\275\377\274\222\010\222\275\350B\230<\036\326\207>\235\214\302<ljb>QV\336=K\272\244>\004\233\272\275\210\226\212\276\037\225f\276\177\254m\276p\205\212\275\005u\022>7[\246\276\353H\014>\006f\307\276\001\334\000\2730z(>{?\301<>\350\\\276@0\227<\246n\265=\227\337\267\275\337\027\337=\322RE=okh\275\336\350\004\275\365\3712\276\'\353\216=|\345\000\276 \243\212>\213\313*>.4\002>\352\036\310<x(\243\273$\203o<\217[\027>\224\341\275=e\251\225>\003l\256>\231]K=\321\361V\276V\362~\275l\266m\275\'\322\261\276\373\252e\276\262\024\032>\207\226\237\276\263\314\211\274\226\034\247>\242/@>Lb\204>\314\351\351=\260\204\250\275\344\030\256=\345\213\360=\201<\222>\313\272J>j\265A\275\025\202v\274\343p\373=Ze\337=\361\243l\276$`\307=\342\330g>{F\274>K\324\234=l\363\027\275\t\234\024\276\240&\370<\001\273\034>\314Nv\276\017\026\030>\3765\231=\004\023\024>a%\341=\274\370,>\371\327\203\276\221<\311=\013D\217>\032\217=\276\t\201,>\317Z\303\274i\204\336\275\335(\347=\236\346\253<\372t\332<\274\251\313\276\211\214\217\275:\253`>\037\002\022\2764[\027\276\357\031p>\207}\221\276qR&\275;\377!>\00738>\246\216\271\275\313\223J\275\314%\301>\302\t\220\275\030&\321\275\231\337p\276\035\337I>E\001J\276wEA\276\364\331I\2768r\317\275\267W\212\275I\026\250>\356\304\211>\332\324\203>0\215y\276\205\304\355=\006\363Z\274\036\364\203=\2671\177=\266b6=\302\274d=6\276\024=;\342-\276\023\032\013\276\030h1>\337q\332<~0r\275\370ll\276zQ\272>\275>\262=\261{\306\274\306\351\224=K\272\005\276~p\207\276&\2574\276v\201\006\275\355\024z>\253R\215<\005\007\347==Jm=\362\227\253>\336X\276\275\215 \023\276\'Z\323\275\212:}<$v\261=\367\013B>V*e>?\006F\275\242\335\232>)e\240\275&\317\317\276\360\332;\276B\310\230>\2408\003>\035uT>U*\310\276\360i\263=64\364\275\231\331n\274\270\311\013\276/k\034>\367\306\017>\274;J>\257=V>\377\322\020\276_\252I\276\r \241=\303/\316\275\177\000\231>I\216\177=a$m\276K\244N>7D1=S\304\033\276\252t}\276\223\311\357=\374\263Q>\003\013\342\274\260_,\275!q\262\275\261\234E>hc)\276\326\332\356\274\246\225\004\275i)\271=\313\031\351\275\002\322\244>\222\207\272=\214a\241=@\302\241=9f\020>\230\214\364<`\241\352\275O\371\242\276\227\217<\276\017\365\332=\233\323\224=V\230b\276A;\024>C3e>@\306\234<\342ps>\315I\200>B\356\217\276\311\303\250=*\344\004>\365\321\214\276Oy\376\275\036\345*\276\256\207\347=\\\3449\276\252\026l\275F\237Q>\215-\206>\036\036\303\274K{4>\016F\351\275\035\363@\2755\033\022>\332\034n;Ho\222>\300?N>\343\350y\276&^\235\276\265\221M\276\301\327\274=[\303N>\237\237S\275ni\357\275\267\207\r\276]\361v=\262Y\214\276AP\322\274<\261\212\276\357\331\206=}\340o\276\007\375\020=\326\366\004>m\372\353\275\244\361\324\275\006+\251\276\377%=\274\343\315=>\025\345b\274\212S\n\276\"\204\204=\347\365M>\0323`>\200\005\221\275\336\3500=\257\374\214>#\264u>\371b0\276\304\372\023\276\302\256X>\226\201%>g\274\202>\356gG=q*b>\007\311\211\275K6\354\273g\340\263<<\337\350\275vmX\276\253\240\311\276\267\202q\275\331\317Z\274\303Sm\275\301<\314>\224y\221\276K\360\251\275\364\2162\272\202sP\274\0015[>Q\364c\274\307f\361=\265\341 >\310+\311\274\221\204^\276t7\231\275L\226\204\275\005\'\036\275\241\361D\275\261c9>\370\3670\2769\036\244\275\357\240\222\276D\362_>d\365\312\275Tk)<\010K/=\245\227\233=\231I_\276 \254\004\276\371\233\261=\213\326\035\276[\300\332\275>\337\276\273~1U\276<\020\371\274\255\257\231\275\314\270\346>Y\262\257=\336\273G\273\344\270\325\276s\271#\275ym\205\275\307c\332\275m#\275>\374\343\262>\300\026\016\276\324\257\310\275\245\303\034\275\347\201$>\"\340\030>\307KY\276\363V\200=+\334\004\276\320\227~\276E\036\266=\025\177><E\301\312=\362O_\275?\222\217\276\327j\355\276\275\222\342\275\032\374\"\276\035\342\211\274#\320T\276(\242\013\277m\205\362<Q\224\205<\010\222\325=\005\345\342=-|\206<\274\343f\276\342\373M>\306x\334\275-\257\236\275O\213\216>`\230\351\275^oO\272\253\313\365=\251[^>,=$=e\032\260=\256\364\000>\037c,\275\r?j\276\272\372\363\275\032\310\222\276J\035.>=#\036\276\304\020\366<!@\326\275.\000\377\275X\217\'\276\017\311\221\275\372\246\024=n\200\222=\273\233\244>\2006#\276\277\361\224=m\234\237\275\221\303H>\331\212P>\025\363\265\275\363T\271\275)\257\027>\235Z<>\312\364\217>\025\nJ>\2126\236\276\357\351\205\276\235\224\251=\345\322\215\275\027\360e\276\023\305\377;>\335\356=\273\315\275;\243\330\210\276\262}H=5\261\206=^=\033\276<\245\246<\225\257\246\276L\025)=2\304\027\276\344/j\275\305\2706\273\321\253O>;k\335\276m\241R=\321x\306\275!<\215\274)>\264\274\352\020\301\276\r\335\n>\327\274$=WU\"<\031D\231\276\333o\326<\276j7\276\220\230\215>\357T\037\274\3255[\275\266\3749\276\206\246>>\022^\020>1\331\n\276\273\rh\276\310\200\270\275\224\316\251=P\226\260>\027\336\373\276\240;\016>\221\242\035=\360\211*\276\006\335\361\275KN\232=AA_\275\320\207\025=2(\t\276x.\257\276].\022>\026h\r>\027\270\230\276\304\314%\275\267\314\223<\355\373\242<\025\217\013=\026^\304\275%\2331>\003\225M\275\025\275\231\275\207\375O\2767\253\315=\224\2507\276z\334T>\353\241\356\275e\264\267>\275\342\231;\327\270)\276:\325!\275\304\277\300=-\247\243=<#\224==\357k\276\003`\215:\377j\035=n\260G\2766\222\226\276\366MO>b\335\r>\035\354\261>sU\306\276\020\355\336\275\333\013\322\275\214\013\301\274\362\363(=XE\352<\036~z=\341\323\270\275\307b\322\275\0278\205=l}\301\275+\345\001>\241\000r>\270p\225=\223|J\275)\214\006\276\\\337\032\276\357\262\340\275L\3273>{\003\301<\375.\211\276o\267\242\276\251E\232\275V\235\026>\216S\022\275\007\252U\276\351N&>\372m\334=2dT\276_jJ>\225\231\277\276o08\274.\272\326=\342\273\222\275\3070i>v%\320=\301\022\222\276\271\270\033>\241X\346\275t\212\271;\265g4\276;\2435\276t)X=\\\242\201\275\200\002\005=~`l>\274\230x=\271I7=<\244\r>m\242\r\276(s5\276~\217\275=\356q\265>C\320\276>$\025\247=\350`\226>\024,\202\275\022~\006\275  3>o\202\350=\305G\326\276\346\000\030\276\245\266`>|\307)>\023\3471=\272\320g\276\035\357\036\275<\216\031\276.\027\231\276\304\344\224\275\374\343Y>\336\272K=\207b\005>\304\033<>\242\246\325\275\236F \276z\273\204\275D&\227>\256\234\036\276\235!.>\361\267\n\276\025\366P=m\330\354\274rx\003>\344Ls\276Q\353\325>2`\245\272H1<>-\013{>)\203\307<H-\240\275\336\343$>\232\3036>fo\317=Ah&=\014Zg>Y\232H\276\005\252!\275\030\237z>)$\356=\300$\247=\222Q+>2t\006>\340\303\036>\017zR:h-\030=\3115/\272m\330~>\t\255\323=\372j\277\274\030\004\003>\276\303\240\275\251,\347><\013\273>\300q\222=\354v\013<\030\307\367\275d\232\374\275\306\026\220\276\337\000\030\274a\251=>(\351:=\311\244\306=(oG=\265\304\257=\252w\267\275\3535\372\275c\201%\275\362;\203=\266\204\217\276}\325\000>\351B.>\021\021V>\336H\247>\334\031\233<i\365\372<\034kL\276W\304W\276\267\244\r\276\2016(>3\024t>\253\273.>V\230\010\276A\300\\\275\341M\335=\014\023\330=h\032\213<\320\000,\276\305U\320>XZq>\213\r\326>\267a4\275&\314\025>\032\r\035>_X\222\276\232\316\261\275\322h\264\275$U\305=\340\323Q\276L \004?W\337\010>K\267\2717\336f{=b6\263>8$\360\274\366\267\030=\250&Z\276Se\237=\246\341\024>\005\341%=-\262\016\272\007\014\212\2759`\372=\247\261\267=\201b\360<\316&P\275\344\276\036=\271\341\336=\261\261\371\2759\333U\276O\240\226=\026|\273\274u&1>\035\223\274>u\275\232>\327s5<\001\243\265=\313x\241\275 \013\201>\253O\014\276d\262\200\276\277\230J>\305\300\211\275\316x\230<\262\353^\274\315\234k\275N\232\000\276!\347\"=\003\272#>\330[\214>\335%|\276\207\353(\275\014:I\2765lU=2^$\275#\033\036\276s\317\220\276*To\276%\323\240>\276\247\026\276\037\023\234\276F\301L>\332x9>Q4\030\275\013\247\033\276\034\371;>*\204\026=OD\345=,\020\211>u\234\342\275XL\271\275\334\323\312<\310Y\224>\207\321\273=3\325\232;M\360\344=\333]\232>N2\234\276\\>\006\276\254e\207>\216v3=P\330y\275\303\356\217\274\212\336Y\276w\275W\276B\2368\276\334R^\276|\222x<\371\004R\276\264\030}\276\314\275S>[D#=\025\017\371<\333a\231\273<\375\203>\337C7\274R\315\243\276v{\277;\254%7>MY\010\274\021\310\223\275\213\n\016\275\316H(\276\022\025T>\230\303r\276!F\231\275\232\276\240\275\034\236\351=E\370\220\276\004\031\261\275+\023\316=\314\302\214\275&1\201\274\222f8>~\267 \276\274\232m\276\242W\223\275\361\375\307>\333\273!\276\371\337\007<\2045\257=\315\023\273>\232\021\233\276OM_>q\232\205\276y\217\014>7t\261\275\000\203\230=\3577\001>\335\253\345\275\204\372\006\275\"2\030=\002\313-\276\205aQ\276j\235\003>\303\346\242>\214\307a\276G\014\031\276\'\357\342\274\315@\223\276\2012\253\276\335\307\223\276dS\035\276\224v\332=\016\030v>rN\373\275KC\225>/\005\000\276V\375\222>\227\250\350\2744\236\032>\327\343\263=04\016\276\301\331~\276W\356^>\315\204\034\2737\240\253\274\205\363B\275\343\345\335<\367u\200< X\306\275d\355\031=\204\021-\272\253Z\r<\242y\n>q>\217>2\n8\276\305\225\353\274\360D\327\275\010T:\276\233\2634>\262H\353=\027:j\276D\353p\275|\377\222>\325\212 >2\211\253\275\343s\232\275\010\237\216>\0177\317<0\022\347\275]x&\275\326\243\300>\213\026\331\273]\217&>\203\364Z>\215\317 >j\257c>\324$\307=!\374d\274\372p >\300B(>\t\001\003>\266-C<\014\3667\276\353\326\213\276P\314!\274\316b\366=\341\226f\276\364\220@>\363\234\201\275f\230\244\276\374L\276=\345\213\206\275\235\243@>\002|>=3\371\026\276\031D\264=\214tx\276U|\301\276Q\300\360\275\032z\021\276\377\235\220\2762K\204\276\240/\300\276\344\"\267<\365\362J\274\336\024\234=\350\272\224>\267L$>=\342\017>n&\276=Z\365\013\276\233l\305\275\322\n\020\276`\342E\276\035\243\357=\010\361\254=\014U\247\276\250Z\374<\347G~\275\333~\364\275\337\326\022\275\3659x>\003\234%>\344\\\222;r#Y\276\356\2400>\031\275\244\274\360\020\">\333Z}>\3152\305<%\353\247\276\214\201\202>\275\r\211\276\327\366\">o!\231<\251\226^\275f\254/=g\032c\275\'\001w\276\342\275\226\274s\030\025\276\227Q9\276\313pp;\251R/\275\204\3603>\006v<>\272Gu\276\020\244e\276!\275P;Dv\274>\2403\000>\337\262 >\344g\014;\325d\223\274\366a\330=\010,\223=N\364\252\273s}\316\275_?\344:\261\304\'\276s\276-\276\020\032\270>\376B7\275ddp<2D0>d 2\275E0J\276\"\325\'\275P\353\201;\030\026G\274\216\272\313\276\204Qk=\215\330\337>\326b\013\274Q\014\275\276\251\304\213=\005\344\202\276\372P\016>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\035\022\026\275\254o\010>\232\177\205>1\224\266>\367\334\260\276\rr\222\275\016x\274=\252\302\021=k\223\300\273U\033\240\276v\355O\276\266J\177\275\014\313\216<{\312m>\250\001o>\336t\030>X\317\246=\226\372\357\275\262\275\240\276DP\335=^\366\274<c\214\333=L\367\257\275j\314\'=\205H\027>\221#F\275\375\220\311\2751-U>qf\314\274\236\3757>\302\tI\276\325\021q\276\326\336\037>\322\177\256\275E\3434\276\214K\342\275Y\331!>\315@?\276p\353R>BF\375\276\261\205\267\275\n\304\245\275\340\212l=\205K\022\276\270\322\213\275\215\357S>\017\\\335\275\r\324\223<\311EA>\ts\013\276.\205&>@\364\307\275\262\014l\275~?\332\275a\017\200>\276\246$\276\237\006\236=RQF=\312\264l\276\253\351\364\275\005<\332\276\317\247\202\2754\201E>;\353\374=\330\302\377>\\\245>\276\222\263V>\353\352\352\275~\306\211>y\276\010;\2514\334\274j\222)>\231\016\206\275~\350\327=\256\204\233\276s\026\216\275\024f\002>.\327\026>\344\203\317=\013s\220=\031(\266\274.\343\205\276\341\363\306>\346\314\215\275\256\320\'>\375J}=\234HF=\333\326\331=\203\264\365=\327\225\304>\361M\360\275u1\023>@\003\210<\337h@<\376O\374<\353\254\302\275\"E\347\275\224\364\352=g;\215\274d<\355=\243\006\243=\323\211\225=\221\0028>E\270e=\252K\231\272\\\322\340<\323\316\270\2760\354\233\276t\000\350<\301_\264<\215<&=\2026\005\276\232\022\034\276\311$\036>\273\002\331=\324\260\220\276\351\006 \276\253!\362\274\217\006\252\276\342\317\277=\006\323b\276[\303\214\273\221\312\365=\2374;>\306B\000>Xq\275>hL\202<b\241\000\274*\361F\276\210+\010>\236\037\235>\356\332\'>4\356\255\275\261=r=\217\311C\276-\004\365\275> \274\275\007\037!>\227t\200>\277U\027=\303\215^\274\035\001\203>7\346\252\276!&\232=\254f5\274\014?\353\2721\363\216=\210\261\340>\202\310\256\276\311\200\037>\233\321\000>\3110->\265\373\207\276\226\246\022\276\332\230===\262\205>U\026\253\2757v\216\276\252b\220<$\t\364<\301\371\322\275\366\352%\276\344*\336:\016 \215= \207\024\276\272\025\013\276\031\300l>fh\222<I/\004>EJ\204\275!\374\242\275r\231\267=\305\267\021\275\224\373==!}\232>+\314\005\276\245N\265>\020\352n>4\257O>\266k\357\275``\206\275!q\361\274E\352W\275C\245\201\275C\037\344\276\350\323A=\204S/>!\251z<\'\213\317\276\270\245\302\276\364\274\006>\024G\224\275d\331\036>\263\r\236=z\315g\276\237\242*>\322\350\213=qr\257\275\375\360\347=4\207j>v^V<\212\0312\276\236<t>}\3339>Q\223\327\274\370\247b>\341\312V>\014\225\234\275\244\346$;\203\234\305;\345\346r=\262f\211\275\331\177R\276\236\334]\276\347\363\021>Y\177\350=\377\315\365\275z\251\267\276\245<g\275~\257K>O1\252\275M\203!\275\304G\317\275\036\344\243\273\362yc>\003S\360=\334\214\335\273Fo\223\275\3102\341<\336_\307\275\010X^<\270\t\371\274\272\302L\276U\245->\2432`>\302\336\353=\3159\035=\002\221\312<\341\367\223>\232\323\024\276-\210\326\274Ra4=B\362\310=\367\333\254<\244\240[\276\370\375\010=\253\253\252>\322\357|\276a\205*\276S\321\200=\202-\360=\325\334[=\374,\223>\366zD\276\30781=\215\302I\276\220\"\026>\337T\276\276\362\213.\276\003\261\207>\204\354\203>\264\221F;\017\307@>\3758\n<E\200D\275\347\220\203>P#\227=\307\324R\2766\205\200>\301\260\351<\312.\356\275\001\243\324=\362\252\233\275\256M\322\274\336\014\033\277\337\255n=~N\252<\3223W>\265\334\353=\365\343!>&\312\331\275\267\363\303\276S\363\362\275\220)\313\276t\200\323=\243\017\371\275|\224\232\275^\303\373=-\327\203=\277\016T=\251\010\265=\362\301\n\2762\333f=\261\237X>\035 \367<7X\335\274\252\203\253>\333\223\256\275\200!Y\276\335L!>\323e3>\246\227\342\275\301\014t\276O\211\350=\002t\006\276\302_\302<NfR<\352\376\372\2755\322\005>\354\313\030\273\353\037w>C\347\317\275\242\021\334\276\234u\366\275\207c\310\276\231Q\262={\260 >\302\034\023=g\365,>\210\316\272=\327\003D\275/\036\030=\033\360T\275\206p\177\276\\\203\306\275\204=\366\275\313\2614>/K\362<\322\207\266=9\"\233\276\365m\204\275\225\351\237\2764\353\t\276yI\032\274\276\331f=\375Z\257\2761\270\354=\000\237\245\276 \360\233\275\037\221\227>\3337>\276a\rJ=\201:\017<z\024\315\276fl\177=\317\237\262=\013\337j\276\\\3003\276FS\257>\2679\330\275\236@\347=\3761\204\276\206|\240=&-\226=Z;\312=\347\204m>\"9#>\314~\266=\263\314\360\275\355\223I\276v\033\224>\223\202\221=z\334\317=\250\206:\276\026\376\243\276\304\255\326\276\325n\271\275YX0\274\343\202\200>_\346&>ex\311=\206\n\217=\210U\213=\214\222\317\275\333`\212=>.\363\274)\250\300\274c\370\303=\373\032\350=\251\337\033\276\321\237\365\275\265\005\204>\244_\322<\365\242\234=\217|g<\203\320&>q\010\363\2755\002=\274\204\235\003\275?W7\274\\nx\276`9\006>\373\034?=\311{z\276g\275\222\275A\226x\275W\355\214>\333M\262\275\0270$==\'J\276\256y\322>+]\253<\2065\021<\003\\\001\276\202Pw\275\256\341\212\276\205w\374=\357\267\006\275\311^\203\276KP\262\276\353\250\3179\355\300\370\273\005w\271<z\330\212>D\314C=\014\265\205\276\005UW\276\314\272\217\276\325\204\036\275\2351{=\017/>=/\361\177>\034\024R\275\351\272\022\275\345;\001>X\353\341\275\341=\320>\214\003\230\275u\271Y>\334\230$\274\016\t\247=-6a=\342t\200=\336pO\275\332\363\235\275\007\032\263\276\264\355\211>\257\302.=\255\016\247\274`\344\275\276H\301!=BxT= \300\237\276\251Y\202>\005\264\205\274\356T\354\275\336\341\233>_(|=\2502H>\341\320:=Q\265]\276\240K\311\275\2265k\275\230\325o\276}\247\234\274c.\030>\266\"\356=/\2645>\344{\337=\313\'\306\275\023\016\214\2759\356J\275;\001\363\275\311\236\212\276Q\030\020\276\311\2212\276\366\317\370\275;D\325\276y\305\013>\373\374Z;\364c\256>\003\331p>\237\217\303\275\026a\362=\242\n\212;\004\205U\276\r\375\004\276E\270F=\"\260\363\276\337\303\233\276%\020\217\275EK\373\274p\237P=\257\366\311;d8\032\275b\277\211\276\252\306\020\276\336\250\"<]\352\t\275]\377 >\377\177\007\276\253C\220=\220\001i\276\rxR\276l0I>5^\254=^!E>$\210F>\263\002\254\276SbE\276\016_\265>\274\226\262\275\345\033X\274\0310\274\2756\266\301\275\365\302\031\275s5\256=Q\023\227\275w:\356=A\\\376=oV\261=\024\363\262\275u\255\233\274\2746\214\276\371\307\242=\303\\0\276lU\212\276\247{*=Bx\266>\257n\237\276>o\317\2765~\346=!6\370=\232D\004>\335\2523=y0/\276\332\024\216\275\256\252I>\324\035\333=+[\351\275f\303\027=\346Q\262\275\377\345\314\274#\320\320\276\006\332\344=\377\350-<\374\253I\274\352\336\217>\000\004)=b\324\250<\021\025*>F\302\213><\235\245\276\350r\340=\260k\264>\334C6\276\333\007q=\341b\245=a.\242=\250\252G\276\243\222\215\275\3279\t>\233w$\276\377\016c>\214w*=\337\023\252\275ia\223>\016\025>>\347\245\344=r\312t\276\340qF\276\231HS=M\301 \275I\365a\2739\013y\276\227O\245\275/i\020\276\035\300\300\275\026i\035\276\036>\033>q\020\320\275\373\027\020=\314Q\342=\313!\030=\277\356#=\004gQ\276\211\264\317=\320\032|>\322(\367\275\325ks>\216u\253\275\266\013\352;\204\364&;\257\375\r>\222\376\013\276\225\340A\276\306\242\262=X\347b=<+H\2767- >\206\020\207\275;*(>\302\200\362\274+\340\273\276\001\207\036\276\337\303\246\276\203sC\276\361$z\276-h\371=/\3468>\314\305y\276\'\275\246>\037\342P<J\370?\276\207\237H=\210\353:=\205\353\304>\351\003\213=\\6\r>;\273(>\240:\002=\034c\226\274\217I=\276\377\247@>\310|\336>M\020\300\275\\x\371\276\235\253\330\273\267\262\264\276;p\221\276\337^=\276\244\374V=m.\241\276\307\230M\276^\322\034\275\242\334G>\347\214U\276k\270\204\276a\023\363\275Cl\306<t\341\323\273u\253\023\276\256a\251=N\370\322\275\324H_=\3444\003>\264ap\276\006\032J\276\023\223H>\300\306\033<\346\372\273\274\321\373\202>\253\235\\=\177o)<X\243\333=A\205\237=\267\355\005>\'\304\036=\'q4=\024\324P>Jd!>5\362\177\276\256W\237\274\242\226\335\275c\300\037\276\346\365\270=\234\226m>!\226\n>\256\340\376<\323\003R\275@\007\255\276\261]\245>t\002\033\275\021j\210\275c\336\340\275\337\266\307<\240\004\374\275-\334\021>\257\003\">\214\351\220>\212\370\266\273\222\372x\276C\376\256=6\302A\276E\361\321>\252F\236\275\337C\322\275&\334\203>-v\203>v\031\201>\t\327\360\274\230Y\245=p\242\205=\264\007\221<Z\277\200\275 $\205<i\226\217\275\330\304\224\276\310\231\212=r\375L\276\207\005\263=\233\2654\276\235O\265>\022j\266>W\232\020\276\340\233W\273L\0108\276>N6\274\375\202\211\276?\371n=I\377\344\275\0215A\276G\021\322\273s\366/=\274\026f>\264,\327=\001?\327>\261Y\\>\301Dj\275\251\205\306<?\225^>k\206\233\276\342\357W>\242=\234\2759\252\253>s\032\240\2749v\330=\336\212\247\274m\220\213\274k\203]\275N8\007<Io@\275\324z\031\275\311\237\232\2760\261\277\276\300\203\311;\363\320\350\276T;\253=\'H@=\316i\364\275q2\200=\014\235G\276?\366\'\275vo\'\276Q#\323\275p\371X;\350\260\232=\311\266)>\347\023\373=\245\251\276>\237\302\262\276i\345\013\276J\216;\276\327\253\343<\350\363&=P\320 >\325E\026\276\251\353i\276\324\0207\276\234\000k=\354U\004=\333\007\245=\326[k=\356Y\267\275\002\243\027>_\300\253\275b|J\274\347>\215\275C\'\325=gI\206\276\224\245\274\275$z\311\274[E\257\276SA\250\275\006\036\252<Za/\275\207\031P\276&z\260=\311R\232>\203\0064\276\347B7>\022\020\001>p\223\013>!\367\215\2760D\032\276tV\260\276x\332\n\274\252\001\270\276\364z\233=\274M\370<\241\0046\276\374\357\243<\203\213\354=\353<\n=\341\252\207\274F\260_>k\205o=\006@\210\275@}\267\275\373\266\'\271\261{\342\275\024\340\022>.\026\247=-\364l:\315\312\276\276\021\317f\275\231\347\252>a\003V\275[\376\n\276F!\325=^=\244\276\265\024\254=\324Sl>\202\005d\275r\242\274>7\'\255\276\206\257\357=\3632O\276\265\022\221\275\214\033\233\274\003\020x\276]\216\236>be\222\276-\375\036\276\355Q\367\272\220\221\255\276P9Q=N{\356\275\355I\001\276\325,\330\275\344\344\037\275\225\0258\275t\246\226>>-a=\354\227\375\275~\357$<\250\267\327\275\307\234\254>9\367\254>\313\330*\276+\026\231=\353\314\250=\206\205\331=\007\343\247\276\360\031\221\275\315\204K>\332CI\276\256\257\367\275\330\036Y>\036\215.;|\202Z\273r\006\345\274\350(\257\275u\217\337<\323T\271=\235\264\212<I\326\021\276t6\254\2769\335\205>y\301\222=\231\342\202=\336\035W>G\006\030>\026\226\231\276W\360\217<\335\002&\275{\313\242=\217_Q\276\225\254[>\276\002\021>w\237$>\251\257&\2747\223s=\313e\023>\260ZF\276\224U\337\275\363\1776\274h\032\275>\231\251\242>!\220\353=g\260Q\276~`\017\275\340\372\030\275$\014\216\275\213|\014\276\251\311\201\276-\373r\276\216\205\333=\376\017\222\275\n\024_<\207\326\024\276\363\006\245\276\267g8>B\243/\276wL\314=>\265\206\275p\224\027>\032O\243\276M\231t=G\325l\276\'\277\370=\\\371\326\273W\263!=?Ji\276;\024\232\276\336\342X=\035>\346\275vU*=C\315/>\260\217\003>\242|\343=\'\033\232\275dHE>\312\322C\276\357\332\231>\256\033W=i\236U=\215_h\276\030\347\213\2762}\266> t\231<\214\311\351\275\300\310\221\276p[<\274\236\335\205\276o3\t>\301\273\215>\030\213\261\275@k\226=\002\221\347;\233\266\025\276\322\361\220>\020m\360={\327\217=\325\2607\276\361\301q>\216tC>|\007\374\275\253\033\032\276\261\'S\273\325\255i\274n\211\347\276\300\016\202\276\275[\027>\032F\347\275Y\235M\276#\353\213=\336\003\376=\013\255P\275\200O\270\275\256*\210\275\315L\227>#\373\307=n\206\224\275W\254=\274\213\240\230\275\014\004U\275M\337\225\276P\031?\276\"\241\324\275\360c`\276\001z\013>+\033\306\275+\200\305\273*~\343\274xe\256=d\306]>\272x:>\332\235\211\276$\317\020?\014W\302>\316\322a<\320M\366\274as\"\276\307\3342\276\246\275\'\276d\211\'\275\370@i\274\200\211\235\276\255c1\276t\336\251\274\006\031w\275\212\253\033\276\324\323\220\275\330\211\274>Z\024\235=@\204p\275\201d\\\276\371\027l\275R\004e>&O\276>\0160\362=G`\246\276ka\022==\220T\276\200D\315\276(\265\036\274\245!\303=.\220\263\275j\307w=\361\031]=\371\347\013<Q\327\021>\350\334\203\276\335\220\014\276\'0\336=\331JC=\240b.=\243\222\204=\205\030\352=\014\273<\275\264V\241\275\326A\367=\3338g\276C\206\267\274s\t;\276\035M\356\275{!\227:\320\251\201\275-!\304=\003#-=\234\002\'>R\030i\276\350\310b\276\271\247\013>GD\227\273\030\337\305\275\250\346\362=\000|\343=\030|1>y\026@>o&D\276\264\210\010\276\321\001\230=@9\313=\213n\023\275ex^\276\254\303k>\346W\005\276\263@\004\276\340\214o>7\305\312\274~e\364\274\253\314Q>%\n\336=rj\270=\315\322\224\276\236`\220<*\337B\276\225J\000<1C\r\276\247~\213=\323;\247=\303\207S<\370\032\225>\212\241\307\274b\254\337\275!\3463\274\\He\275\335\375\036\276\0069\255\275b\257p>\327\035G>kR`<)\320d\276\307\253\003>B\033\002=\317\204\262\276:\200\032\276\356\274\313=\255\306\364\274\322\361\247>j\317t\276\034\2247\2759wl\276\nH\305>9\211\337=\303\350\216\275h\260\233\276\027c\276=\270\223\244>\264\357R\276\\\217X\275Y\275\214\275\022\013\030\275c\367\360\275&Vg\276\214\321P>\335\257\373=B+T\275d\205\354=r\335\346\275\340(\317=\241pw>\004\".=\t3\200>t*i>@s!\276\267\177\222<G}Z>\363\303p=\367c\245\273$\304^\275?\356\234>\330s;\275\213i_\276\321\177\226=\263\3556\275\t\217\240>\302[\235:\3716\205=\346\344\212\276%:\n>\347\353\032\277\211E\307\276\026\307\205\275\213\223\251\274FN!>a \331=\2620\305\276\276\tT\275h\242H\275%\205s\275.\'\226\275\236\020}\276\027k\006>\215A}\276\334\2553>\350r\033\276\247M\236\275x\365\014>]N\275\275AB\312\275\013\325\025>\370\373\263=\361_n\276D0\266<d\303\220\274(\2252\275(6\367=h]\005>\'\321\250>1D >\321\002\007>\364s\207\276\377\245\214\276\210b\215<\216\017d\276\030\346\223=\234\023w>\\\223\r=\232Y\350=E\323r\276\310\032\200\276Fv3\276\017^j=\033\016d>\360\037k\273\211/\347\275!\301\377>\243f\227>\010\305\244>\255o\300\276?\210\276\276,\350\253>o\372\005>>\252~\276\033R\200\276\377<\026\276T{\223\276t\305\207\276m\022\033>\364&%\276\211\317W=C|>=\004\305\024\2754.\223\275\201\251\275\274\376:j\274\312\206\235\275\021\353\312<+\237U=2\277\376\2746+$\275c@\t>::\214<)\225a\274\265:7\2761\223\030\276j\332e\276\270f{\276\243\2638>6\343\272\274\222\347\260\276u\025\000>}(#\276\261\016/>x\311W\276\277_\037>\223\340\351=\330t\004>\256\254\001>\304-\322>a\361m>\332\026\027\276(\'\247<\200\357\341\275\215\032Y=ttg=bE\364=\344\326\255>\343\341\262\276\350\270\261\276\016$\212>\345\212]\276$f\210\276\227O%\276z\021\376\275\265\241\333\275e\305\313\274\330\266\355\275R\242\206\275\256\003\214\275F>\213=\323\343\002\276\300\177,\275\315\202n=A_\244\275?\\\331\276\033c\373\275\367D\210\273\232\204\357=P\364M\276\333\263b\276\200e\365\274w\026\300\274\022--=X6u=b\230{\276\023\244|=\002\017;\276\370\223\027\276\214$\256>\337\322z=\002\006\261\276,g\343<\321\243\212=\030\247o=oee\276Wm\374>x\357R\276(\252\206>\254\023\225\275i12>\277/\370\275y\227w\276}\355>\275\354\250\243\276T\002\007\275\251<\313\275M?\000\276?\223s=\226\276q\274qT\374=\204h\032\276\n\273\350<\201\036\372\274\343\036\341\275\306L\332=,\264\214\275q\346\342\275\245\245P\274x\210\235>\2155\016\276\231\356\017>\207\'\345:Q>U>)^\373\275.#\035\276ISB\275\243\037\r=\250!D>%\232\220>\202\314\"\2765\032X\276\3005\216\2757\375T\276\006Y{=rK\225<\377\343@>\310K\226=y\334\313>\351\244e=\321r`>D\333==I\001\234\275\026l\252\275\365fz>VG$\276\315\277\335=\314\337s>\2016j>Tk\257\276\261\322\227=\007\r\277\275\341(G\276\005\035(>\270\237 \274\233c\010\276%\306:=\322p\031>\337\211c\275\314*\020\276\306\263\000\275\3776\353><\352\345=_n\356\275H\373\025\276\014\335\025>\0321\267\274\361{A>\006X\033>C\207G=\r\323\216\276\227\324\257\276\357\227/=e\216.\276\311\344\217\275\033\206_>FP\033\275\260\231\340>iv.\276\235\205=<N\352\206>\350h\213\276G\342\245=\341lQ\276o?\251\274z\245\036\275\r\247\327=5\033\023>\302\277M;2\231\372\275\272\204\216>\353\3411\276v\371p\276\237\344\214>VS\010>\326Jj\2756\221;>\217h\340:\321_1=\016;\206\276-2\232\276?\370.>\331\247\312\275\224\364G>\247P\330=\234\353\254>\263\263q\275\377\335%\276j\367\303=S\212\022<(~\324\275\376\234\200\276\336\215\242\2759\037\263=\252\027\201<\356\035P=\335?\337;\232\314\331=\200)\014>j@\215\276u\220\273\275\351\"\034\275\246\206\246\276\331\373.\276\307\306M<\2340E>\313\177\260=j\355\023>m3\321>\\\010(\276\r\325F\276\250(g\274\257z5>]\234\272\2737\325K=\006?\332=\216\315#>\225\333N\275\010m\r>\000\027\246>+\222\030\275\231\342\026\276\3501\276\276$\371\311=\305\312\r>^\177\031=c\331\361==\303\342=\214\321y=\270\003\225=\336\013E\275\014\003 >\356\231\257\275m\310\377=\020fj>ev\354=\025\2170>xW\002\276\2268\241=\312\266j>\'X\216\276QE\220>\004\273\">\243)C=\320G\373\275\261\003\320=F\334\275=ls\007\276\205,&>\276zW=K\237\005\276\235t\263\274\200\232\003\276^\2468<\206\364U=\266^\265\275\006\360<>\020/;=\304\3053\276L\366\336\275\336\2756>_.\366=\256=\t\276\033\324\364=\323\023U\276\362\272\257\274\375\316\254>\336\t\274=\360\n*>\\9C\275\310\247M\276Y\274i\276>\317\373>\t\030\252\275J\353u>\021\200\003=_\322\336\274\265\343\275\275\021z\t=\304\036\214\276 2\023\276\231\227\213\273\365!\214\276\215\024P>\265\272\363=\316\230 >\026\032Q\275\332I\025\276\320\237@>.\021(\272z7\221>\0043\337\275:\003%>p\034\255\276\003\331\003=\025\032\276\275sw\017\276\241d_\276\032\036N\276\262\304\255:\254\226\034\276\235B\'>\276\'\251\276~Z\030\276\211@\'\275{\273\000\276W\271\014>\227?+>\020~\255\273\037\'\244=\224\305\350<A\nF\275VX\204>\'\331e\2764\206\257;J\021\222>&`\271\273\024\207\223>C\021\352=\376}\033>p\226\003\276v\004\362=\234\036_\275\t^\240=.\335T>^\370\032>F&M\276B\244H>\322BG<\345\037v>H%\204\276\231\342\033>\215X@>q\266K\275\027#E\274\013%7>5\344\035>p\255\220=\300#\000\276\326\221\246=\370\005\322<\235l\230>\200p5\274\233\346\345\273\032\237<>F\335n\276\262@|>L\306M\276\2443f\276\355\324\020>n\021\210\275Z\253P\276\324\002\261>\366\306\217\275-W\375\273,\323\374=\227\200~=B\3265\2756!q\276V\236\237\276Q{\372=\206\001+\276fX\257=<\365*>\374I2\276\343\253Q\276\260\016\252=\013\341U=W\'\006>\212\355\367=F\355\003\275\304M\220\275`.0>6\236\021\276\261\347\216=\331\314y\276\035\266+\276\005\277\343\275\035\324+\276\350\306\231\275f\r\304\274B\262\256\275\221_\205>us\210=\254\255+\276Ma\223\276\0057\247=\360\007n>\200r\262>3\270D\275\311\277\207\274\353\202l>\361\235+>F\016M;0X\241\275A9\235\276\266u\007\276\314\016\264\276Aa&=\030 E\276\204\370f\275>\346l<(\367Z\276\200\221\322=\027 \226=\240\246\005\276\254\266C>0O\032=9\243\250\275\214\250\357=\346<\223\276\330\326\235>v\363X=\203^\010>\204\365\335>-\003\014>\345\374\203\276\357\000\207=c\244Q\275*w\034>g\233`\275\335\307\261>@\241N\276?\217s=z\274\215\274\233\240#\274:\0068=\321\270\365\274$<\003>\252\013d>\376\004^\276\212\324v\272\327\263:>?\215>>\301\377\267\272\264\271\231\274\334YS=\221\007\345<m\351\024\276DpW>\303I\226=\371&\264>@b\212\276$\213\013\275r\0355>\331\202\016\276I\352@\275\320\222\036>^\250\325=(\363#\276{\272\177=(\315\377\275\335\357\233<M\337\273=\\\315u>\214F\003>\316\027~\275\244\357\242\275\307&\203\275\343\233H\276\265\261\325\274\312\032\251\276 \030\201=a\366\221\276\022\302$\276\261b\'\276BTa>\342H\024\276\333\252\322<\205\274:\276\255\t3\276\255\362\024\276\025Q\264>L\306\000>-[\002?\211\223d>\356\263\017>\354\372t\27541/>i\203\177\276\363\325q>\305\315\005\276\331\272\344=y\202O>`\327\277<\320\236]>=\000)\274\026\017\315=\345\005\326=\332C\003\276\366\324J\276[\272\305\274\212\240+>\346\036\200=V\355\240=\320W\266\276\014\217V\276\317\215Z=\000\305\022>\367M\357=kt\207\275\237\005k=\214B\226\274)\244\203\2754eQ\275=\256\312=\037\n\337<\236\037y\276+\303\322\274\260\'n\276\2513t\276\271:!=\002\030v\276\2509\217<n&\342<9\332\341\276\000\3109>\375m\211>\020\243\352\276l\373\351=@_G=-\247@\274d\"\346\275\325\233\014\276\n\024\320\275Y\0278=\002\304\276\274\305l\006>U<B>Q?\226\275x\201&>\302q\273\275\272(K\2761\333]>\256A\325=\373\262\343\275\262\232p>\004\n\250\276\032j5\276M\347+\276+\245\006\275\352\215\360=\365\340;>\237\020\366\273\323\325\213\276\334T$>1\202\253\275\030\026\026\274%j\210=eI\262<~U5>\267a$\276\316\221\363\275]\224i\274\375\225\207=rb\345=\3068p\276\224\010\335\273\316\346\230>\210\374\276\275.\342\214=4\210\347\275\024\250\021=\030\037\016>\275\360=>\335\356\200\276\230\3026>\303\003\260\276kv\201>\343\252\257>\224\340\206;\367D\207>\341\357?\276\310D\242\276\277\203\014\276\001\260\360<\215_\332\274?\251\237>A\272k\276r\035\250>\235\302\330=_\206\202<\006i\221<\256GO\276\212\251\005>\322#\340<\270\374\035>+\212/\276\350>\241\276\303\247\366\275G5\240>Z\254\332\275y&\317=\223\321\246\275\026m\032=\220%\255\276\214\300m=\235#p\273C\224\324>W=\210\275W\273\202=\te\247\274\264$\034=l4\317\274\n0v\273\325\345\344\275rc\250>\341\033T\276\270\353\312>;\243\240>n\024A>\255\233\300\274$\274\033\276\026\027N>x\004\006\276\\[N=3\3118\274\267\275\223=\300\312\251\274\255*\211\274\312\007\376\275\310#\316=\361k\346=\375<\005\276\357\026\246\275Q*\205\276\217ZP\276\000m\300\276\033\206\360<\253\357:\276\227\215\351;\004\305\023>Z\316\250\272x\027S>E\212\205\275\005\236\362<Ed\244\275\177\213\313=\345x\203=\264rm>\'\225\233<\272J\225<\363\351\346>0\331y>\246wQ>\223%:\276A\307\215\275\351i\374\2740\217\225\2759.\007>)\023\036\276\211\264J=\364\277\321<\273\252\265<\364/\245=\361\335<>\245]y>\177^\221\275\270\220d=9\204\337\275L\t\213\276\370\317#\276-9\'\276BY&\274\363|z>\351\224R\276gH\352\275\201\350\026\2763\022\334=\t\3460=K\251H>\221%\023\276\264\2641>\200\227\017>\262\353\212\276a\031\027\2768\356V\274\031\345x\27689k\275/b\370=3\244&\276\316\331\250\275\2461\204\276\302_\323\276\021m\010\275\273\177K<]#\025>+n\235;\331+?<+\'Q>k\220i\276\205\324\027>.F\253\276&\265\232>~\177\003>H\230\033>\330\253E\276\200\375h<\366\332}>\347\010\027<\037nz\276O\317\317\275\241d3>\210:\032>\202{7>Y\"\031=\200Jy>\347\024\231\275\030r\220>\233WI>\217\243\342>\027\317\264\275vp\233\275\3421A>\232`\207\276s\274M=w\233\246\276\036($>\2242G\276e\322\212\275\022\023R=\362@.>\216\240-=\353\364\217=m\026\302\276}\277X>\013\177\317=\301O\320\2753\220R=\357\233x>,\215\277=\260\321n\275\257A\376\276C9C>7\273->\240\324\207\276Q,\027>d\355\261\275\007\0371\275W!\">\203\303`\275\317\244\034\274\375\320\034\276\370\2552>\325\341G\276\274\216\346\274dw%>\300\333?\276\207\224.\276\360t/\275\337\371Y\276\t\241\346>+\240\226\276E\267\354<\206\322\270\275\366G\233<jt\301\275\232\323\260<\201\220\364\2748\013*\275\236b\331<?D\350\275\013Xr\276\276!\207\274\326\350\273\276+\032\">K\237\204=8\225$\276,\307\271\275\351\242\240>V\376\352\273N\356A>\370\277\266\275_e]\274\014\331^;\344\010+=L{0>l\242\260\275L2\350=;\213\002>yh\265>7\210\227>\310N#>x\311I\276V/<=\020\313\303\274\025\371)=\370o\216>\0075\364<\006WR\276\322@\017\276N\212,=\233\362x\2755\313\226\275PY\"\276\036\340\241\275\204\275\016;\'\342\021\275\274\006\357\274\\\232\237>q\200?>\3136\343=\003\025?\276\231\340\324;\360\341\205=\211\357\311=\013\371\302\276\000\342\211\276D\342\311\276\225\210\326\275\003\tM=?\2209\276d\363\275\275\256\237\300=&\254\'\274\277\361\232=D#6=\006\200\225;\207\202\335\275\354<;>\310bV\274\022\025O>A\273\243<yf3>\261\r\367\275\3518\302<B\267\373\273\230\027\211>+TM>\275\203C\275\223|\200=B\254\206<\362\0216>\233\300\226\276\373\326\032\277\177\203\033>lo\237>jr\211\276\022\330\374\2750\006o\275W\375\252=\336[\224\276\000\374\014\275c\222\000>\373M\202\273\n\302\377=Z\0021\275\270m\020=\2427\357=\2002\323\276e\312\002=\356\013K=t\242e\275\232\004P\275EZa\276\246=,>\213\363\246\275 e#\276jS\271\275\254v\255\275\250E\220>[\303\212=\316\314\253\2756\370P=\254\215\235=\010>\222\275\211B\007>\247\345\007>\346\344\232\275\333xt>\251\tM>\036\266\324\275\004\321\336\275\233\220\024\276\224r\205>\317\027\210>z\325\216\276\204!o<iL\022>\260n\177>\3406_<\361\307\021\276yb.>\231\316\201\2761d\201>"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "`\233\200\275\325\032\352\275\376NQ>k?E\276\020 *\276l8\317\275\360\204\t>nP\037>\302\364\r=\"\377T>-\006h>\234\322\032\275\354\262\332>[B\355\275\304m\332\275\263\326\322=H\251\355\275\032\314\023>\353\320\204\275\377\306\244\276\024d\005>\207\003\252\274\341\313\276>\353\372}>w\266\217\276J\260\311\273L\037\004>\216\001@\276\254^\022\276\033\315i>\323\034\273=<A\217=\022\003\376\275KE\245<i%`\276\243P\205=\346\254\266=\3359)\276g\375\230\275\326`>\274%\257\370=\245\316{=\340\324w\276Piz\276\264\336\254>>=\r\276?\021O>\323\004\266\275\021\365\347\275\214\221G\274\333S\313\275,G\375>\303\255\212=\313\327\244>\034\340\007>\014b\007>l\233\366=\336\3226\276*\375\274\275n\250i\276\340\373->\242\035\206\276\236\321\272>\310\021\030\276\206\0036>R\021}=\356X\235=X\224\031\275T|\272\275(\251/\275\r\261Q>\213\2032<\220\020Y>t|\016>nX%>\225\370\">\252\342\365\275]Z3\276\"3\213\276\033\214:=m\214%\275\265R\036>kN[>\3279\005=y\315\206>\315(\317;z+}\275EhB\275\310X\272=\020H2=aMG\275q%\246\276\\=\207>|4\377=\252\247d\275\374\357\177\276\320\036\233\275e\372\326=\007;[\276\002W\325\275\322\343\254\275\276\211^\275\340\037\372\275T5g\276\264\365\">>\200\222\275\231\254I=\203n\342\275-\024\016\276B\325\005>\252\362y>\310^g\276M\002$>\225\331\222\276_\350b>]\262\014=9\324\013=\340\010\263<\204\300#>\373\364\335=\274\227\252\275\206\207\357=:v\020>J\364\200=\177\261\033>\255\020\253>\235OA=F\223\360>.\205\214=\357\204\032\276s0\255>\363\273\215\275\352\346\273\274\034u\307\274\214\343\244\276C\030Y\2759\213\321\274\305\362l\276W\276z\276\324\035\340\276\372\267\364=%\317\363\274\256i+=D\302C>\362\310\231\276H`e\276\023V\240>X\207\350\274rMX=\330\232|\275\017&\266\275\345E\332\274(\\\221\276tem<2\032P\275)\037\361=\356\340\024>\324\355\221\276&r\263=\375\020\020=\2563\\>\r\343\276\274;C\277\274\"\343\204>.\206.\276\304\323\001>\362 @=\335\361\234>LG\246\275\363TQ\275\303\220\215\275\216!n>S\332\003\276\270{\206=\307\313\206>\0059@>\200S\217\276\365ua>k\371\023\276M\316\261=\305O\226\274\t\276\241>\357\354\305>\204\024\'=\007\337g\275g}\000=`\317\006<\351\261\364\275\232\231\r>,\302\t\276)\237!\276\272\312\246=\315\373\206\276\374`\240\275\026\036D=F\302\277<\236\342\300\276\365\367\336\275(\"\036=h\204\000=\375\014\363:\342\347\022\276\014n\327\275\n\330\251<&a\254\276\023t\212=\315\000\355\275\234\2212>g\210\332\276jh\\\273\360\206\275\273\241\211\216>4\256\332\275\313g\033\276^Z\t\275)\1770>~\036Q\276\236\275_>O\021\010=@72\275\353\223%\275\002o\361\275\321\211Y\274\367~\005\276+\010\010\276:fm\2766\330\203<\221u$\276\321!\224>\306\275\254\276\250\016 > \213<=\014\314\363\274\272\214\034\276b\033G>\313\300\003\275\037iQ\276c\221Z>k\266\272<\306Gy\274\200i\277=\026\324,\276\312+\211>E\261\315>l.\242>Y\254\273\274\345\346\036=Y\322\372:+\207y\2753\271\300\274\312\030\310>\017i\014\275\237\267\245=\301\267\303=\260\271\224>\032P\256\275>\250z>!\347\225=j\357\203>S=\230\273S\276}<\321\244\r>\237\254\370\275+\225R>R\303\276=<\202\214=\010+\233\276\'\331\017\2743%\352<\304\000W>\242\370\250=\035\004\340=\214fh>\317\321w>C\355\241>\233\312<=<\316\207\274*\210B\27301\025>\335\203\234\276\330\037\234<\361-\375\275\004&\253\275c\003\364\275\322m\221=\3160\277\275hIG>O\307\224>\376\214\306=\337\000Y>ak\247\275\276/\200>\231g\263\274nx\232\273\343{l\275\204\360\021>\262j\036\276\252vn>\214bz<\342O\321=p\021\257\276\026\264$>\241\226\253\276[1\230>l@E=\235\366%\276\327\277\212>\375\034\354\274w\307v\275\242\332\216\275\304\2255=p\'\034>\022\003S\275\342\277\302\275\221y\214\276Y\377\013=E\204G\275g8<\275\242p(=\242\006\005\275\277\021%>\353\370d>\022\221:>\353\201\233>\237\212\207\276#\356\037\276\313_J>\221q\221\276T\331\263=j\"\231<\334\2373\274\233\245\005\276\350\013{\276I\344\233=\301\234m\276\325A\032\276}[\356=\245\377\026>\2528\321\275\257\320\237=z\020\231\275\361iC\275\250\333\250\273\215)\242>\2654\035\276\251qM\276\260\203\003\274\353\000A\276\001\205\211\275\266~.>\307\261M=\177\264\004>\036\233\204\2761\245A\276<\353\'>\221\005\202>\227\225\220>Jr\320=\307\364\017\276\016\260\267\276R\366=\275X\340B=\351\023&\275\352\006\202>w\221\\\275\305=\035=^b4\276\236\370e\276n`4\276\340,N=\342?}\275\223\315\241<\257\2513\276\370V\335=|v\244=r\230\324=\316\245\026>\023gl\275\232\261\037\276\312\275\205\276\232V\232\276F\375\202\276\312[k>\213#H=nA`\276\214\177\021\276\216\224\324\275\340E\225\275E\225\363\275\205\010\013\276\025q$>\216\352\233\2745\021\262\275\213C\270=\374\312s\276\004s\022\276\351\262\247\276z:%\276\257\2029=RG\214>\316\205\031\275\271\\\242=\200S\243<\2648\360\275\346\212\010\275\371\367\232\275\311z\352=\240\220\235\276\263RP\275\001\377\313>9\326\246\276\263\271\367=\306\260\241>\3457\243\275\315\306\341\275l\024\225>\021\366\275=@\233\217=*9k=v\304\000= *\007\276O\275\220\276\204\300\233>\3009\014>\253\211\025\276\207cJ\275\264\366\321=\000^U\276\'\356\360=\345\203m>\242)\037>\023\327\003>_PU\276ld\036>\230\253@>\313A\250=\334]\273\275\032\302\235\276-GM\275\006\350\246\275\207B\016\276q\2408\276S\304)\276\036)j\276\005\354_\275%\275%>\257\264@>\'\363D\272S\271z\273\r\357\342=&n\232=\223\342\'\276\212RZ\276a\354\265>\253\031\254;\267SI\274\215\230\305\276\324n\256\275/\004\335=\336\353\020=\346\032\324=\030\235o>\347\307N\275\331\350\325\275p\364I\276\207\346\364\2734\217\325=d\252\321<\3565\003\276\237\377\032\276\352\t >Z\246\306\275\333\307c>\247\3640>\260R\245>\262\216J\2760\326\215>\253\3432=\235E\036\276\020\326\321\275$}o<W\t\362=wF\304=<>\003>\0109\236\275\227\014\272\275R\375\240< \035\000\275\253%B\275\032kl\276\311\001\"<Bt2\276\317\211s\276W\221:\2765\225/>\211\257+:\267\3126\275\270CF=r\247\246\275\320Q\367=\375j!>\237\252\343\275f\265\210<c\242\023\276\372\247\236>\277g\237>\270M\303>\322\257Z\276\276\304\323\276\322.l\276\332OV\276\207}\325>\321\254\'\274\355\345$\276 p\354=\2677A\276}i\343\276\373J\017\275\002k\357\275\321/6\276K\217\204>\311\271\315=\317\311\256\276h\304\r>,5\224<\251-Z>b\375\324=X\316\236\276O\244\341<\217H\240=x^\001\275O\024\360\273\207\027\301<\027\1779\274\215\336\322\275\036\344\327\275\340\313:\276k\276\205\275\213eX>p\354N\276\242\\\020=\216\314\r\276\345\262\027\275;\2172\276\2608P>\340\225\300\275#_\322\275Ty\366\275\356\226\230\275?3\336>\346\266\215=!\250A\276q\200.>\326z\260=\035\323.=z\272\035\274kO\245=\317\316\227>\354\225m>J8i>\025,\270=,\272 \276\335\205\013\275\311\020\251\275\220u\r\276\315X\240\276\315\366\204=\376Z)>\215*\257>\232\n/\275\031\226)\276\330S\204\275o\203\035\276\377\366\231\276<\256:>~\231\022<M\3269\276\177\014*<3\006\317>\203bS<\362\361\001\276\203^\034\275\032\221\234\276\303\247X\275\2469\240\274)p_\276\204\033\r\275_*m=\234\004\232;\036>\026\276 \324\236\274\237q\304=\301\223\000?\r\024\230\273\265\253,>AYX=1\366y>\317\020\304\275\322\257\331\275t\230q\274\222\027+\275bQ:<\302\371\026>\010X\024\276\360&\307\274\362\240%\276\037\272Z=\224r\216\275\r+\327\274|\310+>\371\r\321\275%\2677\276G\326\324;\033\370\266<\274\003V\276\277\303\335\274\2312\317\274\231;\025\276e\253\">\2602\243=\355\363\340\274\352\376\330;1b\264\274\301U\177\276\217X\330\276V\223\221>\006\037\267\276\241\027\223\276\002\323\230>\032Z\274\275\214\030c\275\355P\013\275\256*\212=\265_\263>M\212\240\275~j\247\273\\\336\334>H)\r\276\224\032\345>{de=\tML\274zK\274=\206{\306\275\213\272^>\2639\221\276\344\253\213>\343yB\276\027A\20699\211<\275q\327A\275>vb\275\276d\236>x\034\036\275L]w<|\220)=\301%\366\275\262TW>\225\004]\276\246\032\373\275\367\360\361=\200\017u>\032\373\017=\373~i=\262\264B\275\275\310\032=\262\316\246\275\3444\357=\361 \234\275\371\230\243>\371\024v>s5\304=\212|/\276\345`.<\264\nA\275\311\254O\2757 J=(\201\211\27573\265\275\031\235\371\275\007\016\254>%\365\310\276{\020k>x\350Z\275t[\006\275\017\272\233\276\253\177\211\276N\254y\276\344\332\005\276\374\212\021=\330\255B\275C2G=SB\276\275\305\331\001\275T\210\270\275`\003\202>\223|\200\276M\241\205;:\333\020\276\353\355\033>\375+\t=t\333G\276\004\207\265=\324\256\311>\233\'\003\276\267\\y>\256\366\020\275A\351\221>4m\361\276\200 \345\275\3363\266=\244\266\251\274\032\003\350=\215b\315\275\361rT>\377\252\207=\002\333\323=o\371F\2767\306\341\276\265\314\014=?\034`=\350\t\354=\254\021\361\275c\033\023\276\306\271\333\2740\255\235=\313^C>q\212\005\275\330\004\005\276Cm\010>\305\256\271\276\352\017y>\360\314\030\274J\2038\275Q\255\250\276\017{c\2759v\255=\260gC>\203\350\032\276l\020\014\276\350\020\357=\\**\2769\217\305\274\230+v\276r\r\207>b\270(>\307\212\303\275\233\315B\274\017 \344\275\372^\021\2762\033\327\275AO@;Fsf>\353\003q>O)\252\276~,\245\275%\327\223<\206\245\230\275\006c\020\276\330D\016>\3328\271>\022\274\356=\006\377\220>\203\302u=\374\232m\276\204\220\333=\022\243B=\367\351t>^K\023\274\244\332\000?a\352N\276n\2273>\201\272\221>\235\250\310\2738\223\215\275\035\023;>\214\351\250\276\203\326\314=\302DX\276\"90>QEt\276\324.[\273.!4\276\025\216\016\275TV\252=\254\323\316<\000\300~\273\305\305\242\276\322\341\250\273\227\374\322=,\202\245\272~|\314\276\337\363U\276L\no=\263\0173<\252\275\007=&\003\233=5\322\376=\350\264\r>H-\222\274!\343\207=\351#->\362\360-=\'PW>#\274)\276\'\342\346\273\321\276\213\275\344\366=>\321\336\201\276\226\345u>.\210\357\275uy\214\275r\270\251>ZJ\201<?\307\004>)\r\330\276\211u\316>D\177\333\275@\303_\276L\363$\276\271\266\253>\361,\217=\177\327\023>TVn>\245\264#\276\006\354\026>\256\017I>\024\252\271=A\362T>^\341\022=\336\034\352<\373\255\026>\024zH\275\216\245\013>\324A\013\276\333\275\010\276\250\236\272=Z\355L\275P_G\276\351\233\264\274\372\303\025>`[;>u\330\">\305\354\031\276\364\214B>\252\r\"\276\314\342\027\276\031i*=/\224\r\276|\032\020\276:\271\036>\207\333\301\275\262\340\240\275\300\361.\276\352Sm\276<\332\201;?f\356=e\3628\276J|#>\\d\230>B\212L>\343Z\r\276<\035\220\276\023!*\276GJ\216\276\270\020\032\276\206\035\220<\316k\234<\257\001\300\275O\346\261\275\211\236\310<\343\206\224\276\256\312N<\334F\234>\t\207\023>\372\014E\274Mg\372\275\242\354\277\275\304y\214\276/ju\276\340\320\347\275u\233\301=\351>\257\275Jo\306\276\204\232\022>\236\253w\276$\020\310\276\314\326\366=\275{\304=\025\213\023>aDY\276\204\\\236\2769\320\243<\214\366\250>\027\212\375=\263\3316;\020\005N>\354#L>\243\254\246\276/\237\352\2731\r\260\276b\315\356=\301(\222<<\364\250=J\317\224\2765\250\270\275\004*\274=R\\\030>E\345\375=\267\207\307\2767\027\032\274\t\230\222>\312\217A\275L\231\200\273o\270\241>Kq\216>\337?;=\n\2527\276\nq\304=-x%\276\316\322\245>R\266\217=\341\025\261<\240z\242\275\211#\277\274\215\2264>\000\017\374\274YNL<\227$h\276m\217M>:c\r\276+=\256=\273\311\261=Y\366t\276p\3225\276\357\004\027\276<\261c\276)\300\237\275\330\"\331>\027\023\265>\352\341\236;\005\225[>`Q\213>@O/>\342\314\367<\365\005\367=\323\263\314\275/*J<\315(\\=n\306\345=n\031O\276O\255\341=g\332#\276v\236\205<\004\340\275>\325\377\037\276\026Z\203>\016\025t\276f\214\244\274!\215\343\274\210^\272\275p\023L;Z\305\250\276)\303\010>\202H\324\275\213k\223\274\2153\020=ST.=\253\372\215\275\354\371:\276A5,=\331\023\200\276@\370y>\035/\375<\2407o\276\241.\302=wvm>\014\271\335\275`+\212\276\275\336\307<9\3539=N(v=3\324Q\2762\3279=1;\303>+\227\265\275\365W#\276\001\031\005\275f\321p>\243<Q=\274\277\225>(H\007\276\240M\244=\013\227\311\275\317\354\200=\252\247\001\273\361\340\214\275\232\235\033\277\207\321\234<\026$\001>\264\217\025=5d\365<\365\034\235\276\361g|>\225)h>u,U>w\232\276\275\014\030\316\275\330\202\261\275pe\252=\344sj>\264\2731>;}\263>\370R\232\275\270\322\036>P\277*\276\350\375\233=7K/=\274\335\336\275\261Ks\276\212\334\301>V)\030\276\027\347\261\274\272\014G>!\204\277=\331\364\3079\376\203\322=[\026\243>\315\203X\276$4}>\303\035\275<\240\001n=\370;2>9\311\214=\334\0234>{\240\276\276`c\222=\032@\356\273\\\226\330=\241\336#\276\r\306%\276\224\356\305\276%L\036\276\277\375\326=\261+\246=\337\276C=\325\210\007=\245\367$\276Y\205@>\251\234\277<A\033\232=\313\020\004>H\371\245=\030\260\217\275q\240R>\326\002\346=\344\220P><\3131\276\273\250\263\275\022\357\010?\021\"%\276B\312!>`%\201>6\034I\274\343]\271>\273\265\325\275\260T\227=\236\211\201>\013\237\352\275\214\262\017\276\355\233\207=jj\306\274\277\017\230\276aBI>T9\035=o\334\207\275e\212i=zV\022\276\037\003z\275\271\026\204\276\250\374V;\326\236 =\211T\254>,\357i\276\311g\312=\205\242\260<\005\033\317=\332}\273<\352\306\262\275\370E9\274Q\252\251<\215j\007\275\356\252\021>\334\221\204<P\336\245=\236\350\264\2743\351\314\275\201\322\223\274\250\t\265=\2005~>\030\267\214\275\376\022I\276\024\260\334=HD\217=\271\242n=5\3507=|\343\247<\351\302R\276h\205\243=\013\251p=\216\200f>\031\3622=\207\010\333\275Qx\332\276o?\t>/t\257=PlF>\274<\246\274\233\034\370\275\364\254\227>\374\334\217=\343II>\332[(<\324\331r\276\317\232-\276w5:\275\332\307\253>_\017 \276H\201\036\276\n:,\276Y\220\311\275\312\016m\276A]\237\275\220\356\267\275\222\240\276\275\2446\345\275)\341\207=\261\022}\276Y\214\327\275\301t/\275c\233\223>\0023\325\2768I\224=\261?\250\276^\316\250\276\237\377W=\370L\240=\013\306\007=\356\036\005\275\'G\233\276\344>\323>\204.\013>\220f\037\2768\330I\276\036\207\221>\004Oi>\005\022\352=b\001\022\2765\324\025>\215\030(>\224\250b\275_\032=<\302\341:=~\226L\2764\354[\276\004-:\275\355\236\325<\3731\360\274\271\033\031>\t\335\022\275\333D\n=\321\221\031\276\202S\310\275\004\345L>|+\020>j\023\235\276\274\234*>|c1\276\027j\022\276\240IB\274CKw>\224h\037>8\332\000\276oJ\376<\325\336y\276\242G\356;\325\334\227=b1\257\276e\337\201\276\362\034\225=\014\373F\276\323\333 <\363\031b\273\301\200\200\276\205%4=\002\250\335<\216\372\\\276%\320\301\275o\362\r>J\234\004\277\026W\341\274\026\032\226>\224\017\\=\312\247\003<3\315\036>\021[\242\274sX\266>[\376W\275\033C\036\275#\204\314\274?\213\206=T\275\337\275\317C`\276\212N\334=\221\346_\2760q\245\276$\236m<\355\t\215\275+\240\007=\014\3308>\236\243,<\300\"\022\276J4\363<\237\242\216\276\343\202\242\275-\251\250\275\315\222K>\325\022N>\274\017\030>\177e\307<\021(/>\273\025\322\275\251\300\242=,\235v\276g\214\035>E\211%=\213\240\201>\253)\224\275(\232\033>C\212\005>\360\223\203\275\242\203\226=\330gv\276\036\362\276=\177\020\024>D\344\321=m\213z\275\324\214t\276\224\316\025?\304\233\304\275\326\210\177=\025\327e>2\350`>\370\271<>\3044->\235\256I>\317\023\346\275Gh:\276\203\037\177\275s(\210\274_9\251>$\202\'>\303\272\250\276\306+`=\377o\322=\331\304\251=\257\224u>\004\313q>^\305\034>\032A\252<\234\323\212\275\274\233\227=\270?\230=j\n\217=\200/\214>-\370)\276\020\214\203\276\357\320i>\2670%>RU)\275r\310\277;\033\211H>\355\325\303\276F\254\327\275\000\227\330=\222M\221\275u9\314>\342\203\306\275\255\"m>\370F\360\274^\001\217\276\215\3423<\003R\'\275\243\034>=+I\001\276\367\366a=\356\302\345\275\335\374\351<\223\304\343=IP\330=Y^F=W^\003=\022}\215>c\371\356=\032\317!\275t%\205\276A\027\355=\330\014\202\274Y\265\026\274y\n\257\275 Mv>\240\271:>T\206z=o\334\221=\014\266x>\031\252,=\203\327L\276Zs\243\274m\202\016\276xa\363\276\337\200H\276\223\324\005\276\266b\221<\"\264\201=3\302V>\016\026#\2767\223$=\252P,>\365sC>\340\264\331=\007dw=\347\302\217\274\377O\242=\0362v=t\222\"\275\002J\022>\026\005\230\275\303\204\\\276]\206\037=\2352\262\275\207\t\342=?\365\325=\270d\271\274\365#\245\274\276\253\275\276E\010b\276\t\366,>>T\177>\365\005\014>I\354^=\377\374\300\273\203\223\326\275Qt\310\275\305s\177>\340\033\330\275A\2777=Dj\220>\274w\304\275E\256c\276\307\314<>\230\271C>\314\020\215;\315\207v\276kH\203\274\235\332\206\276U\022\035\276\301d\241>\003P\314\275\205.\t\276\372\241|\276H \006>\220\214\025\276C\007\253\276\0053r\276BsV=^\313g\275S\277u\274%\3649\276\240\201\'\276\004h\005\276\266\272\250\276\346\003.\276[\3331\276\202\'m>LM\266\275\213\'\207\276$\330\237\275\340\273\000\275\355\3023>\235\203\022>7\r\316;\300\304$>\002\311\341=\377rI\275\206\225\332\276\245\230N\275i\306\220\2768\357\365={]R>T\224\273\275\250\177M\276\264\031\271=\202\375\"\276\243\300\221\276\216I\366\275\373\267\316=\006\217\255\274\311\033\312\273F\321\250=Y\302\204\276\354\227\347<r\331\217\276\246\371A<\352\030\r\275\206;\020>\346FY=\3277*>\377\r\307\275\r\241f\276\237\363T>\313\270\206>X\377R\275\323\222\200=\367\366\346=^t\222<\016UW<%\323R\276r\263\234\275\023\303\031>\262\232=\2759\222\244\276\240w\240\276z\211f\275\334]\347\276.\273\"\276\266\356\222\274\375\006\224\276\005\324\000\274\031w\031\276\004\035K\276\017\335\r>\030\376\027>o\327\235>\361\006\022>\271\315H=F\257\362;\017\177\212\276\215l\266=$B\313>\357L\022\276^\266\352\274L3M\275\370\232\234=\200/\r\276\356\322\331=F\207\306>)\306_>\361Z\013>;c,<\000\241N\276\257\375\264\274\352\326\203\276 \325B>(\235\246\276E\361\030>\327\304h>#\325\206<2\245\024<\024\323\261=!\376B>)\210r=\357\250\214>\310\371\024>m\371(>\241\370\221\276Z\246\027\2755\243\307=2~\222=\2717\351=L\265\235=\335\364\030>\256\341\312\274)\355\347>\264k\200\276\354\247\244<Hd\033>\2738e>U\261\020=\326rP>\303\034\270=\353P.= \277\244\276\233\247\226>\360\204z>\256\364\260\275\326\002\224\276\211\021\205\275\211\203\373\275A\267\223=\334\322\201=6\331\271\276^\353\343=?\263\024=V\3052\276\202\033\005=\360m\323\275\307\343\256\276\320l\254\2744\236\202=F\213\261=CE\275\276\354O\272=\200\367\246\275\377\216\362=\227:\261\2757\004\265\275\035\371x>}\\\023;\254\201\232\275\337\3427=\341a\352=v\017\023>\247\3342>\204\032K=NN\302\274M\003\303\276\177\371U\275\310^\364=tV\200\276\030\270\010>\233\t\342\274\\\341\004\275\216A\301\274^\031\007=\211\303\271\275\354[\226>BK\245\274\374R\310=\230\317\000=\202`\000=83\232\275\365K\205\276\324\216l\276sKL\2749\342\205=\024=\n\276k\273\346>9\004\345\273\315\001\'>\212z\215<UR\264\275\333\225h>\320 \273\276m\375\016\275\035\203T\276\243\362U\275B\234l>\222\376 =^6x>B\203`\276\260\201\010>\013zv\275q\210z>\030\230\200\276\277\374\340\275d\321b\276\0277E\273g\355\001>\333u\">\241\335\005\2762\201\023>\363\031\277\274o\356E\276~zQ\276\333Ia>,j\240>;\312^\275(x\277\274t\270\332\275F\372\007\277p\360\"\276\306\255x\276\213;\221=\361\220%>w\224\357\275\357D|>.\337r>>?\023\275\342\215\220<V\347\304>\005D\263\275\354n\216>Y8 \275\336\"\333=\222\016\033=\221\207\233\276\263\305\272=\272,\256\276xH\202=\200:\344\270}\221\346\275\031\246\370\274}\217 =oW\210>\222N\243\276\3724\'>\013\227\r\275}\255\247=\376\330\236=g\221Q>d\331\363\275?\235?>R\240F\276\363S\307\275H=\263\274\256\246\277==\324\207\275\222On\275,m\016\276\205\303\226\276\3113\310>\3772C\275\014QJ\2755:\272>Vl\200\275&\376\356\275\357\004\373=\276(\250\276\325\225\207\276\007\245\352\275\314{\250=\342a;\276\237\214\341\275,\016\215>9\237R>\371\377Q\276\027N\217\276}\235\211>ZA\200=r\231D\276\261\330K>\215)V>f\214]\276\226\356J\274R\351\246>\365\360\261=\367\035\362=\232B:\276\365?\375=+\246<<i\250\336=%\n\374=o\025\253<\255\342\216>\265\013@\276\254ot\276\000\200y>L\334\255\275\026(\373=\016{C\2769\303\263\274w\244x\276$w\206\276\311\365\305=\021\330]>\374Hc\276\355\226p\276\026S\032\276\3224%\275_q\270\275\211w\305><\001\316>\317\275\\>\rz\260>(\225Q>4z\201>\025{y\274\001qa\275\\^G\276\272\033\034\276Ny\363=6\252\007=.\r3\275^d\007=\220\247\302=\227\211\271=\347\0210\275:\031\244\275\025\005D\276X\337\340\275\222!\357\273\335\321\235=8Y\023>\367\213\3439\222\216\205\276w;\207>xD\363=\370,\211\276\366b\t\276\346u\261\275\211]W\276$\"\253\276\247%<\274\335\026z\276\014\365\272\275Z\310~=\"\213\001>\"\016\201=\030\022_\276\026Z\322\274\364\377\264=\2556S\2764\005\333>\202\244\222\274\252\016`>\202\304\016=<\253\232\276\231\236\235<\236\036_>dBx\276X\353?>*\364k>8U%>c\362\004>Y\014\313\2766I:\276\214\231i>F\354I>\231\247T=\024\263D\276\343ip\276\004\2744=k\360\203<\362\032b\275i\245!\276\320\232\326=\006\345\302=\371c&\276_Z\035\276s\000\256\276)\370<>\203\225\246>O\206)>Po\201\276\370\267\335\275\264*\312>\001\022>=\244\264B\276.\366\0369}%\204\276\377Xi\273\360\314\241\275(\236\035>(]\345<\364\330\300>\312cD>\356\236B>(\224\310=v=\271\275\335\267\224\275\300\004\376=\356\265\'\275g\025\277>\306\026\n\276\255\204l=\305k7=\347\364\014\276\214=\031\275\357\273\242<\237*J\276o\374\363=-,\207\275\025X\264=o\300\273>\227\304\226\276\037\356\323\274\217$(>\375\374s\275}\360\\\275\240\323\225\275\230\206\001>\313\327C>A\225;\276\323\013\227\274\235R)\276.\236\255=#\244R>h\261V<^\355\241=\267\225Z\276PY\247=\210\353\266=Rm\014\276\027_\223\274?3\204:C\367)>\354f\265=\354\357\317<\220\363Y:yOf>uO\273=%\204\234=\331\006\317\275\304\036\240\274J\345\\>\033_N\276\314\363\007?Z\373\334\2756^\022\276\201\255\335\2740\344\256\276\035rQ\276(\217\246\276i\037\025=\026\343\314=\233\"\000>\210\2310\276II\200=\336\324j\275?\303\302\272K)[\275\220a\"\275vJ\370<\313\273(>\"\002\236\2751w\266\276\206cc>\307\2361\274s\221\264\275xF\177>C\n\232>\242\';=s\030K\276\343\220\236\274f1\244>\0057\374<\337\316\377\275\240,I=7\007\322=\344VD>\226S\267>\254\tQ>dP\036>\035\301\n\276\353\024\001>\337\375l\276/\021\020>k\375\232=\006\360\216=\326\200s\276\035\245\245=\324[\226>\340\335\003>.\305u:\003\255\212=T\266\374=\235\355\225\274+\211\224>;\030\274>x9\007\275>\250O\276\007\236^\275\022W\362=\244\245\336>\013\'\216\276\"\025a\276>a\264\274\203\262b\274\000H\030\275T\004r=\031\332\207\2768K\000\2754\237\354\275A\370\321=\320\224n\276\231\n!=s\225\270\275\317\265\220\276\367\275\205\275\244\3447>\245E\221>\"\272X\276\320\2222>\343Li>\327+\024\276D\235\255=$\230\230\276\231_N>\217\345\316=>\220]\275V\361\020\276\334\342\001>\317z\237>b\313\335\275\336c\036>{\356\250\273>\313\332=\301*M\276\023\200\300\274\020\023 >\207J\205\276\301\241\245=H\204\264<\353\315\236\275\264\365\362\273\004&\260\275\245w\264\276fK(>\305\362\213=\375J\213=v\234}>\202V\215=\241\374\201><u\217>w\315\016>YK\026\276\367\3453=Y@\352<\323\260\260\276\232\325\001\276\363Ox\276$\243N=\277\263/\276\016\216\017\276\241\2249>\235\304\030>\305A\322=\255\0145< \350\221\276@ \335\275\225\027I>|\342\017\276\306)\260=\246\215R\276\364\302\355\275\255\207\237\275\r\246\330\275\035o\213\273(\213P\275\322\217\370=i\033\220\275\'d\322>\350\212\343=\326\301\n\275\226h\351=\337\301\354\275\254\311\032>|\257\377\275\226\255\231=\tn9<\230\277a=n)\201=\210\'\216>M\0368\276\343bX\275\032\225\005>\212\347%>!\370P;\313\230-=w\227\263<\330Xa\276\030\204\324\276,\354\350=8ph<\232K\243<\032{c\275\300k\033<\351\254\017<\253\311\246\274\243\323\375\2745\332Y<\357A]\2758\302\335=\305\230\265=\242s\335\276\303H\025\276\212!\370\275\314=U=\0102@\276F\226|<\363\032(\276\202S\210=\362;,\276\005\034\244>[w\372=!\001\200><\340\260=\035\276\260=\036\277\001=\031z\244\275Ve\014=}S\251\273\356\"S\275\302t\320=\277\354\n>\206\n\013\276t5z\275\022\266g>\332\302\246\273]7V\276|\365,\276K\277\204=\326\332\000\276\r)\214>{\001\262\275Pn\225\276\264\000\373<\013\220,\274\272s\237\276\300T\306\276\215/@>\216\237\n\276\306Q\034\276x\002K>\207\377\000\276_n\311=e\275\025=\224\014l>,\014\200\276\271t\255=f\005\007\276h\022\242=\027\034\353\273+!\356\275\373\366\214\275\234\330\363\276X\321\237\276\210\213\267\272\222Z(\275\2372G=\307\201\275=\356\0015\276\2604\340=d\023\t>`\n.>\227v\362\276WU\033\275\376\"L=\247\366$=\255P(>\354\377(>\'\037\246\276\360\230\024\276S\3141\276\233W\364\274\0213 \276=\010\251\274\246a\310=!=\240="
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\366\377\325\276\316\320G\275\021=\030\276\334\021;>\020\251\\=\341\231\177=\313\343\333\274*4\211;\270|\265\276^%\017\273b\337\334=#Ll\276\224U#\2761}\372\275\2229\351\275W8\031\276E\313K>bR\267\276\300U\024\276,i&\276\271\347\t>\030/$\276q\333c\276\213\253\202\276\n$\264\275M\033}=\201\247\354<\037\234]\276\335\326.=\361M\003\276\3679\221\275\326\014F\276"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "8\001}:\273y\n;W\264?\2733\'\2709\026\361\354\272\0349\314:x\242\244:\372]\037\271;\3314\2721\213p9\266\270D:\021h\r\272+\354\354\272&\337\337:\241)\006;\204\275\364\272R\340\2079\331$\245\273\004\201\204\271\307L\23097\212D\272\317\023v:\023\016\0179z-9:!U\225:\207\272\246\272\333\356\372:\242\205\025\273\200\343\207;i\235\013:@\261\242:5\205\022\273"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\206\373\206\272;<E\273G\357\"\272f8\264\272\213\372\262\271\321P\221:w\275\313:~r\003\273l\311\270\272\014\235\310\272\013,\230;\307\251l;\004q\327\271\016\034\016;\256\321\256\272,\315H:\231\302\0328e3\207\271\353{\360\272\360m1;\331\311\322\271v%\256:\276Bj8\213\237\005;l\257F;\201\332\000;\013\356-:\204\016\007\272\200\237\014\272\235e\273\272\256\"\034:\253E\032:"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\265\032\245=A\320\022>\024C?\275>y\227>\263?\214\275i\010\330=\022r\244\275\222\"\241=\343\215\275\275\246F\004>\313\240\317\274y\353m\276\222\251)>\352\033\253>\250\3276\276d\301\252\275zRN\276n\010\236=*\3163>\355?[=\364\253\277\274\006\223\350=\201\001\216\275\365g\270\275\203\225\003>\210\366;>YN\372=\320&U\2769$\272=()\257>\2632\272\275\347\321\002<>\221\022>\320M\313\274\212AT>\t\327\272>\231\302\327>G\310\322\274\203\300\236\275\242M\r>\206\201\267\274^\t\376\275\210\322\200=c80>\277\004\251=\025|\215=\337\254\027\275\277~\350=\346\217J<8\357I<\323\005\253\276\303K{>\250\006*>\r\230\t=E\345\343\276w+\316\276Kk\343\275\221\336\026\274nl\r=QH[>\352\345\\>\363M*\276u\220\214\276\323\276C\275o\272\345<\000\367\035\276u\263\335\275!q\235>\024\237\004\276\357}\331\274M\332\237=\222\216\305\275\r\033\317=\342M\314=un\246\276\250\025\220\276,\305\010>)\215\031\275\005\255\320=\352\315\022\277\374\276\373=3\264\317\276\255\200\233\276\271\216\035\276\247\017_\276\252\264\253\275\2456\204;\356oO\273)\250\357=\3625\366;\226z\211=\232\213\350=\241\3751\276c\253\321\275\021D\177\276\346\347\225>\352H\364\275e\014/=\021\263\312\275\030\226\002>GR\303=\251\216\032=1\362\254\275\235\307\026\275x\354\230=\335B\222=0\227\231\2766\333{\274\327US>\242\376\365\275f#\264\275\031\316\234\276\002\351\242<\337\214\225=Z$\334\274\252\221m\275\372\256\234\276\343\3525\276WA\310=CC\305=PEE\276\245.\202>\323\375A>\255\3414\275W/\213>\027\001R\275\376\275\334\275\374\267\340<\320\033\010\276[4\235\274I\237\307=\n0%\276\307d \276\276-\205<\260t\346=\260\363\253>2\023-=\242\302\204>f\023\204>\227\265c=\212\243\030\275\370\365?<\256p\310<&M\033\276\271\326\336\274K\017\256=\243\317\221=\226\243T<[\330\000\276\334\233y=\264T!>\211Q\007\276+\321B>]~\230\275\023\005\373<\025 b\276gh\223\275K1\t?\343K\311=\3717\211>\201B*<QK\214\276\027\324\177\276\301\321\\=o\237\357<\264\321\215>c\nM=\236\214\022>\030%\242\275\013\253\203>\026\275V>\301\260\212>\313\021\016\276\243\211;\276A\267\211\276\3110\216\276[.e\275q\3520\276zS\230=\021\360\r\276\253\372j\275\201\221\337\275\324\227\031\275\370\262\336=\354Y\333\273\251^\307=G\331\277=\215\273\333\275\322-\215\276\224^\343>\317d\r\276M\215f>\341\342\245\276HZ\354\276\367\005j\276\007\t\336\274V\024\323=\235p\231>\350N\026\276\005CV\275n\216\256=\346$\273>\324\005\233\276~\310/\276;\315\373\275X\'/\276\321\252D>\003\213\311\275\311\0073\276\331\251\352\274\246(B>\21691<\204\300\254\275\313\275a\275\270\262\317=\2263\217=NM/>\223W\320<j0\016\276\265\3446\276\304%\177>\013\334t\274\364\304\006>\345\315\210\275\007\226\003>^f\206\275O<\326;\265\202\221\275\255\340\246\276\230\242\254>f\237==\030\340\006\275k\354\375=\367_\261=\352T\025=\305\017\002\276+m7\275D\225\324\275\211\305\211>\020\002\301>\200-\\\275\312\326-\276\0372F\276$f\031>-g\354\275K\273\311\275\332\327s\2765Q\014=L!N>\215\004\236<!W\261>\304w\"=\217]i\275so\313\275\304\250\370=zs\360\275\372\0029\275E\240H>\037\027\276\276Gy\026>\031bO=\345vh>\265H\031\277\361W\310=\354\307$>\233\361\211\275\303\327\360<hSo>Q\t\253>\203\013F>\204\310\230=\026\251\201>&p\212>F\020\007>\365A\207\276#=\031>\374\236b\276\346x\316\275\'O\245\274(]\271=\335\244Y<\376\207H\276i@e\276\365TA\274\216I\025>\017\342/=`\350 =\367\312\267=\341\361\264\276\"~\205\275P\"\241;\253\005\231=\306\"\373=\361\205H>\315>\021\275\261\272\320\275\003\251\003>\361@\322=\027\306T>\323\017\026\276\007\266\213>\354\325g=H\366\326<\322\037(>`\337\262\275\250H\241\275\303k\020\274\301kD\276\372\343z\274\3168\217\276w\375&>;\022/\275\235_\235\275;\272)>ZO\002\276\372\204.>S\273\274\275\354\013\210\275TG\263\275K\354_>`\034\376\273\221+\217:s\377\r\276\r\273\331=Il\203\276\025fc>\207\345\272\274l+7\276\270\236@=\327\332K=>\337\304=I\210+>\304v\254=\\\325h\276\304\253\330<\006+\220=F\374\220\276\265\020\261=\022\003f>W\261\276>\005\212\242\276\235v,=L\327=\275Y7\023\276\310\311\030>\266\204\220\275?\213\223>;\214\021=\"\341\026\276\003\312\336\276\217\177\232\275\204V\230\275F\276\273=\317\252\341\274\210\247\210=A\300E>\370B\216\275\327\177A\275\035\227X\276?\2124\276\260E;\276{\013,\276\211\261\n=\023\355\333<\236LK\275\037i\341\276\025b\265\276\037DM>\017Fc\274\355\252\006>\320bN>\323\2269\276<l\345=\227\032\353<=5\027\276\367\200\335\275\303\270\247\276M\035x>\340\376n:\274nw\276R99\276\336pk\274d\031!>\037b\024;\2516E\274\223\314\376\275\"\025\271=)\\\343>\272+\254>\347k\032>\317n\014\275\340\257Q\275Z\032:>\031\266\237\276K\361=\276\206\307\033\2760z\267=xo\376<\304|A=)\307h<\234l?\274\272\300\273\275\243\306p>\211\245\013>O3\306=\207\3757\275\223\"J>+\344\225=\343\301[<<\212_>\031\355-\275\370\202\035>\016G#\276\027\304G\274\220\244\342=\312\004\207> \350\006>\242!\231=HI5=\034\3355=\364\006\026>\317ld=\203N\365\275\253E*\276}\255 \274\226\332E>\3265\037>q\253\321\276\201\027\273\276m/\243>\262\230\324\276ng\007\276$q\017>7S\020>\340{\327\274V\361\300\275\321p\006\273\271G\014>\2276\357;\266\032\300\275\254\036T>\205c\311\273C\024a=g\217=>\326\265\312\276\376\352p>\'XK=\307\3129\275R/n\274\266\310\221>b\344\216>P\252#\274$B\013>\035\243\001>\211\226\216=q}\000\276\207\260\006>\335A\032=Bp\326\275|\003\345=\343h\005=\035>+>B\246\245>\273\335\333\2766\257g>@\010\227>\204L\004=\322\301\253\276\022\225\203\276q\355\240\276Z|\"\276\016x~\274WB\307=\203\246V=\263\002\206\275\305\037\257=\013p\213\275\327\302F\276\355\341n>v!\354=\345\272\263\275\217\243=\276(\357\236\275\244\376\204>\010\213\\\275y\235\014\276\233\332m\276\027\276Z\275\3050\000\276&\010]>~\022\031>\345\321\203>D\024^\276\252\301\003\275\343\330\232>x\376/=Z\235.\275\374\033\256=\205\200\370<k\037\246=fdj>\3700\'\276\225W\337\275\010=\250\275@h\302\275Y\203\240\276\231a\356\275\225\226\230=\341D\231\275;v[;\322\356\223>\317\027;\276\362\315\205\276\"\276L\275\200\345}>\243\\\r\275M\367\327>/\370\270=\335\366\373=9\232\266<%d\014>\326\263\327\274\352\361\031>\304\275\307\274\256\026a\275F\032L>\253is\275c\277\206>c\331|>\226n\331\275sS\313\274\221T\262<\232\307\353\274`\222\304\275\364\301\276=@$b=\350T\017\275\315\022\316\275k\314h\274\311\356\004\276\216\312(>V\357\003\277H\026\325\275}\203a>^\260]>R\352\017>\361\3550>;\262\013>\177\006\271=v\331\210=\3117\220=F\235L>\354F\205\276|\321\026\271\250Sc=o\004C>J\331M>\026\335U\276\342-\260\274\213\254\"\275g\241~<\225E\333\276\340\345\256=\2110\001\276\025\037\361\276\270\363T>)\224\001\276\272\372\243\275iXm\276\352\226K\276\340\301\200=\247\215\037>m\255\003=\215\035\260=\217\225B\276\236\367\216\275}6\231>\373\276m>\364\003\234\275\306H7\275\010\346S>O\377\030>\024Z`>\372\242D=\373\021\037\276\236@\272\275@y8\276o\322\007>\346\264\212\276\324cf\276\355\343\323=\260\342\373\275\3601u\275\327:\n\276^\224\324\274\0028\017=z\343)\276k\020\277=\313X\007\276\375\331\256\274\263\001\352\275\"\346?\275\326(P\276\017O\026\276Pc\245>WH\357\274#\037\201\273\254\214\304\275\275\034\230\275\355\225%\276\007$\304;\245\245\200=\200(\344<\235`\032\276\020|Q>\250\030\257\276\326\366\007?\354\254\031>\255\225\007>\010\037\225<\321\020\004\276q%\203\275_<\222\276\371\222\215<\277}\033\276\321\305\017=\001\010\215>{\306\262>\035H\254\276\203?m<\024\363\314\275[\272B\276\014s\014\276\226Y\010\276\316\257\230\275\243\ro\275\230\317\372\275\034\357\016\275s*\302\276\325\311\226<\037d\">&\243J>\231$\207=)\030\367=\013{\241>0V5=`\030\200\275N\242\035;\367[\236\275\302\233\320\273\216\026\266<\006\023P>\204\275Q>\213\246}\274\344\312\000?\357\314\237\276\263\230\\>\234\266\242\274w\005\305=\035*~\275\257V\345\274\363R\262>\250\223J>\003\342\325\275(\342\212\275:\337\211\276\022\201\354\275\314\266\265\274,C\205=\227\317Y>\355|\265\275(\032G\276\236\204.>O\360\340>\020\034\212\2758u&\276*\232\364\275\215;\253=b\232\312\275\004\315\006\275r4\t\276\226\245\325\2764R\000\276kF\347=*(\037=;I\234\275\321\237\224=C_\225\275-\003=\276\221\314 =\322\005o\276`\"&\276\375%\323=(;Q>v\310\340\274\025Qg=|\n\270\274\335v\214=~\361.>Z+\301\275\360N\272\276\271v\322\275\264$|\276\0379\310\2753R\245\275\331\366n>e\017\344\274\000f\226\275 \210\347\275\327\236:\276r\030K>\271rK\276\271\022Y\276e\013y=\255H\221=\351\357\">\250\257\361=\324KM>\323\264\005>\276\274\241\274\346\250\332\274] g\276\033\364P\276>\341S>CY\007\276\003#`\273\270>\200\274\032\372\276\276\2642\315={d[\275\"\342\203\276^\016\334\2750\212\253\273\325e\215=),\222>\266N\232\275}\360\310=\007{\256\276,\026\344>\013T\024>\267\310\317\275\\\305\262\275\237M\364\275\360-\376\275\261\337h\276\203\241\254\275\253\030\244\275*S\331\276\034{\372\271h\2569>\233\223\371=\272]\203\276m\351\267\275\304Vq\276\201\301\226>zd\016<\301l\201\275\354S\365=\026\301;\276L\333\306=\'\374^>\367!]>l\304\205>\327cV>G3;=\316\204\'\275 c\270=\016A\203\274\272\274\260\275\236\026X\276O\317\013=\2238\202>\376\215D>\027\305\350=\274\276!\275\007\246O\274\347\210m\276\375\235S\275n\235\252=l\340\007\276\033\255t>uBJ\276\352\220\201=\350R\260=\020\322\372\275\257PS:(\250\201\276\005A\006\276\206\002\207=P~\031>\324\231z\276+\306\236=_D\224\275\261T\022\276\007\214\307=,\300\365\275%(\350\275\336I\301=\247.,\275\241\226\274=\037y\217=1\003\017>\003\013\003>\257]\226>\033\2673>\033\371\225>\325\343\310=\336$|\274\300\201V\275\222_i\275z\372\244>+\317\251=\342^u\276a\317\220\276\277\333\030>\0226\251\276\363l\371\275\314R\352\275\331s\234>5\324\\>O\255O<\002\265\206<K\225\344=\330\333I=\004\024\272>\274\332\347\2749H\222\276\200\312}\276LQ\020\274+=\350\276\t\233|>C\241\247=\243v\014>a\003\277\275Q\267\334=\212\001\200=\314\235t\276\333\263\205<\204m2\276\n\365\340\274A\206\266>N\213a=\330u)>\225\236\247\275 \322\211\276\273\261m\276\'\033\253=\265\005\025\276Y\233\236>\370\325\205>\024\325h>\374\363->j\001\245>\230%\372<\235\265L>e_f\275\251$\025>\246h\243\276\022\360\004=\256\211K\276\324\206\246\275\322\376u\276\233\224]\275 \246:\276*\016\374\276\253\2061=\270\025\326>LA\200=\005G\212>\260R\273\2758\205Y>`\254~=\021\314\031>\356\345\200=\254\256W\275\365_\211=\220/D\273\"k\242<{$\237=\031\307\264\276\007\237\200;\300\361\321=\307\016K<\032\374\200=\\m\r\275C\337\370\274\"\023\205\276@\350V=|\2278>5\236\335<Wf\033>\216\323\317=\004\255\341\275=j\230\275\"\324m=;[\014\274OMH\276/e\335>\313\rc\276N\006\234\275\245\006\202\275\326\003\322\275\333\023,\276\236\007W\276\370\272\342<f\223\241>7\001\226=\362\323\263=\302\256\216\276\255\270\247>\001|\363<\\I9=s\'\315=s\243\033\276X!\226\2744\034S=T\231\212\276\333\366x>:\362\027>\344ON>$\267j>{\000i>\214\364\317>\371D\006\274\332!P>O\240\275\275M>\215\276z[==yZ)=1\200\002>\372Z3\276\317\212B=\303\346\351\274O&e\276\233\010\030>\275,\351=\305N\335=\010\020\026>3UJ>\371T\214\275\250\207\230\276\270\033\270\275\310\356\224=\363\3710\276\347\356R>v\265\267=\2736\206\275\330N\276=s\3764\2755\375f>\027S\201>0]\354=.\274c>`\206\220=\375\353\260=\265E\355=\016y \276\214/{\276\036\035:=\244\366.\275\214\202\037\276\017\005\204\276^=\324\275f94>\036\320\032>\250o\347\275@\013a\271f\241\216>\265k\211>Z\333\033=\340\236\220\276\272\235\276\275LOm<\204\361)<\310\205\340=\340\257\\\275\340V\211=XC\037>\353:D\274\366%\320<_7D\276D\273\363\275\215sU\276[P\302=gm\200>}\273\273;\004|\220\275\212b\224\276\020\340\036\276\216x\234\275\256\2079=\226\345\254\276,\344:\275-_\360\275\21517\275Q\272^\276i=%\275\356-\326\276\316\321c=\275\260w>\272\321_\276,9\266\275\017\256\210\274-\251?\275\272\250\224\276\017\237\314=\022\312\241<\314\250\311\274\255\225,<\001\021L\276S\346\211>\262\342\260\274\020\326\211>\201\250\204>\001\234\203>\341\361X\276\026rC\275\374r\310=\273\316\350\274\377B\372\275}[\324=\010\027\263\275\373\321\333\276\327\203\236>\352\312\355<<\361\344\275\263\247[>g3\314::O\"\276Ym\211>\333\317z>\240\251\227>(\306J\2750\221\035\275\251\365/\275)k\237\276\347\372\211\276H\233\340<6\250\330=\327\252Z>!\212\201>\033.\214=!\250\374\274\toN\275\315\\X\276\233\210\263=\017GY\276P\242\353\274#\274\226\276\305\337\273=g*\345=g\324\325=_V\220>\240q\337\274\366\0166>\027\312\377\275\371\t&>\325Q\326<\344\244\321\275\373\362\333<\234@C>\346\221\307\275\363(\304\275\t\021\306\275\300=@>\255\n\006\276\265\344\206>U\211\326\276$zb=\352D\203\276\274\266\234>\255l\221\276>\323*>\022\323\342=\233>\362\275\363\026\302\276\253\007]>\035:\004\276\257{:\276\247\376\013>,,\002\276m;\t>\356\237\002>m\001\036=\023\274\003<\325\375<:S\361\202\275\\C>>\365\217\312\275|\303K\276\205\365_\276>\322o\275b\304\003>b>\337\275\026\251\211>\340y\231\276\271\325\201=\202\377#\274?-\240>\210\251\353\275\210\032\324\275\362\177\347=\353N\226>\245Dw\275o\337\251\275\352\263\030\275Q7\221>\240\356K\276n\351B\275\2573\004>\367\243.>\361\242.\276\3316\032\276\215\257\372<\r\271\275>q\214\216\275M\216\217=\202+\t=mJ{=_\304O>\337\025e\2763mV=\273\212\331<mi\220\276B\200\255=&c\314\275\353+b\274C\227o\276\365.!=qft\2761\254J=\210\350\006\275\337[\225=\242\"\021>O\345\270\275\\\354Z\2742\016\032\275\303{\326\276\000\354\336=\353m\277\274\257\033\010>\261P\010\277\341\252H>Ou\306\276\035P1\275Z \330\274J\344\336\275\261\034:>)\0351<[\334\005\276\305\233<=\332t\330=\204\354\214\2766\017\211\275\270A\213\2760\033\300<\331\035/\276\016\206\213=k\317\215\275jZ\313\276(\205\033\276h.w\276\033\356\002=\334\257\032\275\220\216M\276\343&\207=\273\026\362\276h\255\301\276\356\300Z=\345\256G>\340+8=\036\325P=\356WR\276r\337O\274\364E\004>e\275\326<\002\200i\276l\250@=\365a\231\276\362\264\021>R\241\234\275\223\030W>\003o#>\033\221\271\275G\207\205\274\004\3647>\372\346\220>]\343%\276K\214\304\274\027\351\241=\017\266\021>\305z\004\276\n\030\261\275\255\233\223>\347\324\321<o\010\342<\336\323\n\276[!e\276h\t\362=T4?\276w\317\001>$*Z\276},\261\275\002]\205\276\021_\221=\213\360\013>\022\263\016\274\234\216f\275i\355M\276\345\324\240\275>\342U\276\020\202\035\276\231\215F\275\364\327\352\275\317[\210\276,2X\276=T\224>\351 H=\317W\022\276T\363Y\275\330@\240\273\261\017@=4\313=\275~\275\270\276\362^\205\275\257\030\264\275\200\332/\276\325^\233\276k\333n\276\243\005A>\215\235\336==H\250<C\341\334=\026/\036\275\351\207:\275\005\212\230\276\216\340\354\275M\316\232=o\300F\276n@\207>\366\254\305=\300\016\201\276\262\355\023>A\367;\276\034\241\263\2751\250k>\225\227.=m\3210\276:s\305\275\232c\032=P\311V>4\353\221\275\323\354\256\2758_f>\323\346r=h\027\266\275\020zt\276d+`\276\366\261\356=\000Y\324=b\241\265\275\264\243\226=G\244a\275\025\364W>\234U\235>\007>\277=\360:\232=s\3042\275\335\331\221\276\244\020t>|c7\276 \222\260=\003\216\023\276|i\210=\331\246(\276o\\\r>\363\215e<@\023\302>I\032\212>=\352\325>\210[\235=\376\002\266\276\205\365\212>\365;\220\274\002k\275\276UR\001>\013\360\204\276\266-l=\236y\017\276\271\226\333\2748\014\377\273\02613\276\204|\n\276\306\340d>B\"m\275\336\201\267=\257\331\r\275\312\207\311\275\2733B\275\034KX\276+\203[\275\243s\232>3\214m\275\217\317)\276\001rA>#\377p\276\332I\222\273o\270:>\277/\363\274\215\341D\275X\352b\276\362\375\364\275VT\375\275\275\302#>\335\001G\276\264\241\213>\2647~\2763)]=\371\374\303\274\017Af\276\t\205\000=\'\3556>s\254\236=\306\013\200\275\265$\206=\375,\200>_\220\'\275\016\177\362\274\251\214\245\276\016\352\217\276\252\301_>\262\202\337=\214m\213>c\301\215>t\3479>\212\257\210\275\006}\206\276\336\030\'\276A\375\317=,\301\223>\301\226\003\276\254\336\215=\270\266\367\274\031UR\276\322\n\361\274\261\264\260:\203)d=!\311]\276/\256t>\301oW>\325 \372\275\267\264\274=\342U\032>\253\260C\276.~.>\315\002&=\232\205\001>\374\221\004>kC\000=\017\375&=$G\225\274\234\225T>^(\005\275tE\211<\026\346\216=;D;>\363r =\231\'\214\276@\301\031>\275\307\003>2\256\220>\\\264X>Oiw\276#Sf\275\030\033]<\345z8\276Ny\332=\236\211\203={\335\236=x\031\215\276&\305\265\276Z\372\321=>\232\232\275!\324\207\276\305\242\255\275\245J\243>c\311V>\302\217M:j\211\010\276\300\352^=\016\252\024>D\311\214\276\264\"*\276\022\254{>jZ4\276\177j\212>\262\265\250\276\204\227\201\275.^\362\275\337_\t\276\266+\003\276\005\227w>\327\324B=\264\241\034\275p\310\355>\007\237\002\275T\220\037\276\305\343X>\032er\275\377\341~=\235,l=\022\346\211>\323\244\230=gO \276Z\036\177=Z\214W>\334\341\307\276C\002%=6zf>\200jn>\3436\025\275_\320\254\2760P|=\324x+=w\033\321\274\320<5\276zs\223>\016&\026\276\242z\327\275\272\255g\275\365h\226\276\001Q+=ZV\325>\316\tb\275\207\267\t=\'\256\336\275#\206d\275`+\342=#L\233=-t\250\276\357\032\342\275\250\264\205>\362\303><\225b*\276\346^\263>y\212\177\275O\007\037\276\221\262\002\276-N\001\276\320\360\354>\231\240\241=Ap\326\275!{@=s6\204=|\177\326\274\310 \003>\250\257\365=~,\374\275Q\332:\2760]p\276%\211\204\276\267\223\203\275\tX\354=\307\032\335=ny\020\276\200\245\325\275\341;\376=Q\306\341=\342\000\037>\271g\003\276C\370.>\204@\351\275\rGH\276\326\355\210=\265R\251\274oj\251=V\321f=\031S/<\000\252\032\275[\366\003>\353:v=\345~o=)\202\024>\224&\201\2763\254\025\273\2128\270\275\221\375\021>\223\023^=A\324\341=\221U\202>\360\316\221=K\0168>\266)\201;3\355\204\275\243\007\232\2755Fs=?\255\203=R\213\320\275{\010\304>\315dK>\353x\300=`\353\224>\326;\200>@\375\004>\003w]>KH\231\275\227#\253>\314\"\273>5e\206\275\017\330W\275\210\327\013>ZW\246\276T\227\260=\n^\211\275\\\010\232\276i\312\310=\331\200\343=\022O\256>C\374>>\033\313\005>)\262g>J\032g=rl\016>\316\311\266=\354\177\027\276Io9=?J\326>t H>1\313z\276Ww\360\275\206\363\034>]8\256\276|t\303\275=r(;\202s)\276\'\262\367\275od\227=\2026\n=\302\324\335=`\243\273\2747\326\006>(\004\245\276\226>\243\276Fr\375\274\250\362\225>\2566\215=\034<\242=9\025\356=\264\\h\276]\330J\276\234]\021>\036\244\023\276\244\211\375\275[_\207<\222\033\007\274\233\200\220\275\003<\010\276dS\335>!\333@\276\232oH\276\001\271\007>\366?\303>3-\204\276\242\341\237=\214\035\242\276\026\002G\276\350\306\037>R.\333;,\270Y>\227\005\254=\027U\224<\277,\224>p@\252=]\255\345=m\003{>\372\215\t=\034\\\236>\020\231O\276\027\326!>\305\373.\275H,\350=\272\326\367=\r\220S=G\262\261==\266:>\007:\247\276&\261\336\275yY\376\275\305\026\001<\025\3450\275\333\367\026\275G\003\331=[\'\003<6i7>\253\366\231\276{z\251\275\214\022)>\336\260u>\375\376h\274\214~z\275\364.8\275\264Oj\274<\313\032\276\322\233\t>\212#\022\276\307\025)\274\334i\206>Hz\260\275\214\334U\275\223Y\222\276h\220t=\2779F\276r\003U\276lJ\203\275\016&N>:\337#\274\023\036\237\273\323@\301>\374\346\223\276\246\327\026>WM\257=\351\311\324\275\373`\357\273\253\270%\276-JR>\251\375G>\275\002\313\276&IZ\2764\033*>\333h\241< \354\273\276>\010\\=\014\347\236>/\374\027>\n6C>`\243r\275\21302\276\336\034\004\276 \016.\276\177\344\010>A\365\007>\304\022\031=g\207\312>\332\037\247>\224\364f>\366\312<>Z= \276{\260\001\275\265\225\326\274~\357w=\014\205\356\275\272X\317\274\360\304\245<\022\0225\275p\243\223>=\255\202<\327\227\301\275xx\315=q\2225>\335s\301<3\231z\275\245\327K\275\236#\235>\247a\236=tL>\276\343\\Q=\214\376`\275\325W(>\203;^\276lJ\367=\221\r\345>o\221?\275\002:\340\275+\3720=\033aw>w\376\246<M\306\252>\205\310\244\275|Vf>o\335,;=\330\020>V\3511\276\323\316\211=_\2465>\001\305S\275\2008o=\215\240\200<\370\342\224>\315.\024>\301Z\031>\223]\342\275/\247a>\0006\007\276\020Cx\276\275o\214\275N)\033\276\327KW\276Te(\276\004\010C\274\335\260\267\275U\216\256\275\327p\227>Y\245\230=48\016\276^\367\377=\307\217?\274\270\210\332=\221\3274=\301\345\244>2e8<\371\212\360=\251:\337\275\201\372\225>v\255\354\275\010A}\276\350\377\266>\261\260\204>\332W\233>\3157\351\273\301\251\324\275\277)\320=Q\333|\276\300\002\336\275\020\231f\275\333|\026\275\020dq>\264\304\016\276\025\346\201>k\227\005\275\202d\215>\332\217-\276\252\365\204>\362\006[=\216\360\341>\314W\035>\270\t\204\275N\206\207>Kg!>&.\232>\2347\'\275\027kJ\276\201$\273<\337B\320=\357\234g=\230\205:\2767\226s\276\332rA\276\3061\256\275K=\231>\361y\022\276\264X~\275X/\224=\366\212\262=t\263\n\276\375\340<\276\010\262\267>\n\004=>\262O\274=il\245>\371]\271\275\224+`={=\303>C\226=\275\201as<{N\207=\005%\366\275\314\276\225>\364\"\033>\361\240\205\275\356\201\352=\343[ \276/\330\242=@L\006\276\254)\364\275\221b\303\275\001\020\363<\333F \276\366z\242\275\354b\014>\347\315\362=\030\276\226>\026\036\255\274S\276\'<\371\0030\275\277\342|\275\263\000\236>\001l\200=\376\360\003=\340\035\202>\205v\201>\354\025\336=\203\233\252\274P\247\214=\343\313\216=l\243\030>\355\021\220\275r\276\237>\375\204\251\276\245)\201:\234&y\276\247\305\220\276\313\361\376=\244\370\324=\024vh\2766T\234\276\030\270\242=\220\377\241\275#f\352\273~\"\254<\340\036s\275\337\013\005\276\300|\216>e0\255>\032\254f\276\004\252\261\276\021ne=D?\035>b?6\276\272\217V\273\271\007\031=A\316O\276\025\304\n\276\3036\233=c\005\034>\326\351\'\276\3368\210=\037\021E\276Q\305\265=\307\3439\276\246\344]>\201\024\021\276\375= \276\212\237\267\273\277<\304=\236\2705>\210\'\352=\343\316R=Jxs\275\363\217Q=\363A\035>\362=+>@D\272=\343\017\340\273\010}\374\275\231}\200>g\235\030\276\341\316\241\275\210\2464\276\257\003\016>\364\222\241><Xc>\014\374\005\274\314x:\276\313\035\031\276\234 \356\276i\002\233<\300\277\203<\227\277\215>\372\205e\276\255\322\215\275d\313\233>t\023\235=\367\331!>@\232\252=\375\260\335\275\304\216S=\236\224\347\275\260\255\215\276\260\221\255>\311\233\\\276\300{\310\2762y(\274\245\002\210\276\336\t\272>\2458\244\274Z\301\253\274\333\356\005\276OKt>\346\200\010=\245(\342\275\217\374\235>B\363\346\275 \016\274\274\021\204\326\275\353\242\344=:\026A\276\307+\177<\340\020\200>\353ev\2768h\244>\2547\247\275Zl\366\272\314\250b\276X2\t\276\020\177<=4\375\000\276S\226\300=3-\300\275\240\263\330\275\201\277=\273,\204\031\275\215\260f=\354\252{<\201\207\"\276\027\230\005>s\310r\275\347M\356=W\'C\276\262\273M>\026\373\212\275j\0038\276,\254\266>sM\301=\262\036\225\276\031`\306=\2402d>\032\221\033>&\242!>$\027\003\275o\363\313=\\\204\037\276vF\\\2752\311\265\276\3658l\275<\247\324=\236\223\\\274\333\262(>\260.h>\"\347\315\275\340\033U>A\234(\276\353\215\213=\370\307-=O\024\270\275\'CG\276I\244u>>G9>\213\235!\276z5\007\276\306\250b\276O\276\277\275\334\263\\\275\221\316\344=\004\302\277\276\232\275\214=5y\240\276f#q\275\\\202\366<*\216\320\276\275\005\246\275K[\311=|\035\006\275\205\357W>D\334\037\275\002T\014\275w\300\273\275\0317\305=\265oC=qX\265>\333|\323<\2572\n>\034n\n\276-\017\335=\017\030&>p\345\217\274{p\027>5\231\014>D\023\027\276,K\221>\017J\255>_\345\335\274\363}d=\232\2678=\2027-\275j\311X\274\307\211\275\276\200\214\177\276\351\357\315=tJ\'\274\307qL>\3365\226\276\305\001\n\275\273\272@>3\343\217\276\235\373A>:\240\002\275\365\340\336;\377\355V\274l<\343\275W\344\272\274\217UC>{\233\302=g\220\301\272\220\2230>\023)\340\276-\251\341>\247\265\357=tc\252<[\346\256\275\374\370\301=\204\301\311<\006k\251=\t\325\377\275\310\300t\276\200Q\234>\350%\266=\247\344\245=RT\352\274-\255L\275L\244\002?$\231\315=\372\267\225=\317\200.>\377v\223\274\224\006\177<\306\202@\276b\027\222\2762\313\211>ty\264>\302N\226>\310\352\324\275\377m|>\256\325R=-O\177\275|i,\276\307C\240<@Fw=\026\333\361=\0362\004\276\241\231\303\275\363i\230<\342\244\272\272?\322b>\240z\334\275\177\315\374=C\352+\276\005\262\002\274*35\276\377w\\>\033d\201\276\207\326\276\274\206\254\226<9\335\266>\215\316\203\275\352\304\315\275`M\270=\n\034\222\275\233\273\316=J\2547>\317d\204\2754\024\323\275\246\236\210\276\366~)=}\210M\274Y&)>Hg\025>\321\207N=\262\243\031>y\243\236\275\211\251\202\275\275D\202>!i\365>I\356\241=`g,\276$J\370=\300N\302=(\240v>\215f\356>\tj\303=\020i)\276\034\224\213\276\347\020\024\276\'\330#\276a\253\243\275\212v<\275\033\017\334\274BG\014\273M\323\244\273\212?\200=\3711\035\276\214\344\347\275\352\352\242>kk\"\276Ha\255\274\367\216\304<\221V\215>\250X\361\275E\314A>wv\257>\251,\024;\347\273\327\273\331\302\244\275?\006g\276l|k=D\035`\276\3138\276\275\353\363\215>\312\253\221\276J\276\210=\252\332\020>]\363\261\275K\203\304=\010Hs=*.\026>{\313~\276+t\212=\033\360\210\275\336k\320\275\245\353\350=\314>\022\276yx\240>\360tD\276"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\204r\353<\225\371)>\255js=f\313\214\276\321\360\365<Cc\271\273P\023~\276=S\004\276\211-\355=\257\214\001\276\\\222T>\r[\316=\262\243\271\274\202\360\276\275\004/h>\331\212o\275\025\346\035>\240;\373\275\340\366w>\007\201|\276[A\213>\371\000\207=P\032\341=\202Z\260\275\314X\333>z\014\022?\257\241\200\275\345|n>\\\225^\276-MC\276\215w}=C\013\241\275\205\262\026\276b\273\330=\034\207\314<Dj\206=\352Y\017>\321\373\376=\353\316j\274\202(\234\275V\277^\276\304\220\301\274,\264f>f\302\232>+~D\276\354\013\355\274S\204\035=^\027\226>\367\274?\276\313uT\276u\314\370=\324\315f\275%\335\370\275\212\273\320<ZN\217>\324;\343=\323\366#=)N\246>\262P\271<\000\321\223\275iUd\274f\206\262\275Y\245\203=\000\324-\276eQ\235\275B\301G=\020\n\252=d\323\305\276\026N\371\2740c\200>K&\340=\242V\220\275\241\344\232\276`\357\200>{\023\232\276\244lE> =B\274\326l\214;{\320g>\356\350\240\275\200\252\314\275\327\333\037\2762\366\001\274\3666J>\333\013j=1q\025=\366\210\326=\233\372\276\274\266=\254=\010\006\353\275c\351d\276\333E_>\014~\031\276\262_\027=xDX<\266\355\222<#\233\211>\341\003\212>\240\361\223\2769D\r\275*{%=9m\270\275\262\367\243\276\272e\307>\313\257@\276\372\345\206=\270\213=\275\344\353f<{J^\274\366\266\005>\214;\334=\nf\034\276\206\332T=g-c=0\274\224\276B\275\244\276\236s\224\276\213p\345\274\031L\350\275p\363\204>\337\023#=(Z+\276\177\317\007\2761\256\312=u\360\224\275\306_\274=\334\266\302>\365I\024\276\030d\364=\202B?>\216\203\010>(\376\031\275\021L\317</\032<\276i\n*\275\331\013Q\275\273q9\276\232\276\321\275\'B\210>\270\356\254\273/\034w\276\326\333\240>\"\216q\275\201\307%\276h\233[>oF\025\276\361\377\271=0Q\010?2)\247=\217}\007=S\311\255=\211\256\325\275\\?.>\310\204n>N\013\353=0\377\345<\2024)\275\324\353\307\275\332e\030>:\005\264\276\304\016\276\275\"\264\003\2763\321E=\366FQ\276\021\334\200;\344\202\240>\217v\250=p-\327\275\231\273\252=]\276\366<\345\215\264\276p\030\216\276\323\303\304>\316)+\2764!\304\275\331\215\001>\355\361\216>gp\306\274\270T\255\275\347d\252\275\263g8>cn(>C\257\235\276\203\373/>\333\023\017>\217\177\364\2751\323f\275\035\006\362\274m\376D\275P)\206=\214-D>\224V6\274\253\021\214\275FE\242=\367\036\247\275]\220?\275\370\264\275>\014\232\222\276\320|\200\276{bQ>\t\322\231\274\227\234\267\274i\224\222\275\031l\361\273H\370k>n4\215\2757\344\345<\r\274\366=\215A\217>&\275\233\276O\261\\>R\337\225=\250\316\001\276\356\016\202>\204O\251\276\004\342)=\277\223\222\274\334\026\031=\033\267\\\2769v\306\271{S\213\276\354\024\347=\332\251\025>\322~\365\274\265-^\274@^\307\274\216\017\274\276\332,6>\313\305\334\275\271\026\217\276\217\262k=\346\315j=\026\377\354\275\363\311\203\276\022Na>\034\322\265\275A}\303=`-\364=i\032\000=\002\327Z\276\347\312<=\034D%\276=\212(\276^\377\214>\233\321_>#\013\002>A\277 \276\254<P\276\260\320\245>yv\317=\262\355T>\235\'\006=\027\354\305\275\226\356Z>\334\031\240=\362\204n>\214\016\313=\300\235\037\276\000L\215\276=\276\225>\256$\320=\237<n>n\212\232\27510 \276*\323\203\276N\326\202=\256\237\t\276\272_\007>\231\010\003\276>No\275Nb\275<\327/\014\273(g\003\275\234\036\307;H\370\352= \021\364\275\211\205\036=\227\317\017=\355\340\342\275\236y\364\274]\235\235\276-\024{>@\377\263;\322\214\277=6\271\226=%\305\241>\357\233\204\276\003S\252=\353\262\212\276\317\214\262=\020\3775=I\311+\276\231\266,=\311\037.>\345\306D>\254\351\"\276W3\203\274%\277\242\275\016\007\016=\320\220\204\276~6\216;xh\273\275\264p\246>\356\000\030>\216\225\370<*\253p\276\222\356R\276\355\205\026\276\021:\200\276j\231\216\276%K^\276:\3657\276\360e5>\247\2176>\204\364)\275,\214\231\276cpl\275\020\206\346>9^\r\273\337$\221\276\006\270\314>\261\360J>:^\006<\230\322\\\275\"\214\373\275\"\034\230=\303\035\325\2745\007\235>9~\"\276\256T\235>E\335X>\223\344)\276R*>\276\227\ro\276\267_\006>RZD\275\273O\237=\327\332\303\275\203\336\274\275\010\330\017\276=N\221=N\3172>N\326l>I\264P>A\031\034>m[\216=Rt\350=\032H\010>\367F\262\275\3216b=\311rM=\210J~>\237\342\211=\246\313_=9\324\277\273\263\345\212\275;K%>\360\352\336\276-G\340\275\355\200\177\275\330k\340>\246^\273\273x\226\204\275\204\352\276\275\251 ,>abh\276\251W\365=\243\246E=\227FY=\217YA\275\371y\036=lCp=a\377\253\276<\347\016>\255{y\276\201eb\276Iy\000\276\305\334\004>z\371\365\275\215+\217=7$\226\276V\"\301\275n\230q\276\030\224\215>0\207\223>\014\225>\276\304\314(\276\276\320\252\276\020\\\002=(\255\241=2\007\235\275\353\374\256=3\001+\275\264\317\275<W\017\212\275m\367\324=\310v\211\2767(\301<\010\037\026>m\302(>\256\222\305\276\007\201\311=\246\320w< (I\276F\002e>4\2768;\331\035\017<\311\010\223:\\\037E\276\275\317\033\276\356\rg\276m@H\275I#\260=\241hr\276\203?\273>\311\270S\276\2671/\276W\3548\276M\026\344=[\221\211>\213fO\276\365\264\257\275\360\360\177=\307\346\341\276f\035\201\276_\t&\276\204\033%\2767\331,>Y\352\201>V\227G=\241\242\210<\331/1=#m\266\275\243\2220>\260\325\200\276\267\242\231=\251\316W<\246\375\200>\241G\327=\203\250\343\275\317\035\345=E84\276\007\341y\276\270\335/;\322o}\276/t\302=\275f\033\275\200\313\273\275\324\232:=\177\366\231\275\360d\346=t\005\204<\211\300\233=\rq\315\275\352\266C>3+\247\276\\\006Y\275J6E\276\030+\254>%\252\261\275\220\035\251\274,.\001>\371p\214>n\006\372>\257\362\327=x\000\"\275\223_+\276\035$\230<,)(>l\257\242>\205\233!\276\254#\362\275\323Kh\276s~!<\006\232\240>\336\230A=\030}N\275\206-\330=\226\323\331\274\n~\037=#\262\035>K\320\214>\303\345\n\2769\240\264=m\253N=\227r\333=\331?\203\275n{\265=\352\020-=>\316\322\274v\2004>n\227\203\276\230\346C>&a:=\314\003\333=\024D\267=:\030\206\276C\375/\275R%\264\276k\236\231\276\246\205\255=\034\033h>6k\244>J\337h\275\264\n\032\276P\375<\276\250\367\227<\0222\365=)2\322;\036\025\253\275P\035\257\276*UB<:;&>/xK=~\025\255>_L\367\275\374\205\217\276\252N\224>\334\327\177\275\274i!=\376\345\224>\230)6\276\360w\263\274\177p\332=lk<>~{~\275\2307\237\275\235\"\310\275\020\310\255\276\240\340\021\275v\020\005\276\374 \244\275\000l\334\274\223}d>\255\352\330=\217\003\270\276}s\321\275#\256F\276\272S*>|84>i:B\276\302L\364=(r\030>\030@\216<\335\274\266\276C\324:\275\256#\304\276\020~i\276Q1\330<o\3131\276\274&\233=\314Qi\276:\336\371\274\257\345A>\372\021\'>\211@\003=5\023\200=8\364T\276\252\022\372<qO\347\275z\323\206>\001>H=\013\204\250\275\316\344\230\2765)\252>\357@\374\275\330\230\231\274\254\240\016>`,\363=\3376:>\330[<> \007\354\275\320\270~=\225Y!=\024\223\301\275(\355\r>B\376\300=\234\356\244=]\0160\274\021+~\274W\336{=u\342<>`\3116>z\\\236>\353\220D\274^?\302\273\236\005\302\276\306\222\214=\237\037I\276\244\3471\276r\2154\276\326\225\262\276\027\244\226>\242`F=\311\222\374\274\346,(<\275\264\250=&\001\221>\024\034\034>\005\205\360\275~\256\r\275\210\270\255=\333\232D\275=\322P\274\206\2661>\354\371\225\276\334\312\340\2754t\256\275\t\200\305\274\347\240A\275X\326-\274\356:\216>\333\255\024>\215\253\276\275W\224\010>?\"\\>o\260n\275\014\322T\276\336\216d\275W6H\276\356G\000\276]D\033=\230<\263\276gG\036=\320\362\360=\032\306\302\276\255@\244\275\320\013\250\276\274R\020>\333/D=\340\014\223>S_\020\276\225=\273=)]b\276\352\001\020\276[\323\331\275\370\210\210>\243\346\031=\005$\265\276P\003S=\322\357v<t\034\345\273c\371_\276\2749\200\276\266\354+\276\013\357C\276\006\013\305>\2200->-t\315\275\027>\200\276\275hw:\207;\313\275s\275S>!z\306\276\312j\357=p[\242=\204SD\276\343\342U\276\033\3765>\304?\251\275\275\374\217\275\366w\003\274\006ei=\0326\'<\315m\254\275L\363\264=\207\324\210\275\301\213d\276\247\252\017\274\203eC=B2Z\273I\002C>:\356::\330\003\220>\373\364\221=\002U,\276g\347\032\276-\307\261>\327$\034\2768x\214>\365dv\276\310\246\370=I\302\217\275\377?\320=\367\377\273\274\031)\323\276)\t\000>g\374}=L\216\217>7v\316\275Z\277\202=n\032\036>\277\327\206>F\267k>))\033\276?\374!\276J\233\031>\311\212\263\275\354#m\276c\322k\276\366\236\007=\270b*\276N\n(\276\325d\220\275d\347;\275\245.u>JW\\\275B\203;>\232\216\032\276\357\262\222=4y\321\275\213eg\275\336\253b>>Q\220<j\357`>7\3262=D\200#\276\3110{\276\006s\230\276\033\323\204\276\232fe\274\311C\357=SdK\276\371\3570\276\223\021\010\276?\224u>\240\221\025>x\301\t>\005\3116>\t\2564\275\262\202!\276\r\207\355\275)\263\247\274T\317$=\340Z\003\276\371\207\237\274\300n\032>\303R~=d\2118=E\003\024\276|\313k\276\267\207\351<\n>\271\275\016@\372\275\014G\312\276\246\247s\275\301\321\007\275T\252\223\276\301N\337\275\367jG\276\003Q\230>\255HS=y;\273\276I\277\273\275#\342\313\275Q\343\024\276Q\277\225>\270\363\007>\020k\375\274#Yg\276\354\t\230\272\006CW\276\211k\325=*\t\337>f\343\032\276{\372^=\237\313\260>%\357d\2759G\322=\203c|>\367\227\243>\365\351n>\264):>\017\321\313=\3636\200\275s\275\313\275\246p}\276\243\341&\2755k\350=\232c\304\275.\004l\274\017+\034\276^\250\266\275~LT=(\233\211\276\000g\226>3\0255>1\350\234>k,\223\275\337$\326\276\000\313\177>\221Yg\275\303\353\301\275\317Q\224>Go\266\276!\273(\276\225\275\255\274\246X\320\275\334\212\301\275\233\272\213\275\303\221\234\275n.`;\200\361\036=\240\230\\=\355\263\277\273\224\212\335\275\224\252\345\275\241\037\000>88\300<\013*\022>2\355\250>\rS\003\276TU\246\276\021\326s=\322\262\227\275\325q\372\275\302C*=\211\2018>\261\026\216\276;h\270\274W\n\016>\034!\210>\264\201l<\031\241\210<\033\267\033<\n\314\303=\252\237\306=m\"I\275\301!\275\276f=\203=\300h\246\276\305\315R\2747 \346=\275x\274<\001Ah\276x.B\275\340\'P>\250\220a>\303\242+\2769\315L\275v\242\030\276t`%>z\310\220>\270x\352\274@\210\274\275\203\023\350;\372`\360\275\031G\363\275\023\302s\276T\227\036\276\271l\251\276\272\034C=\026)\312\275\337\356\026\276!\203\013\276\276\332\242\276\312\023\222>\301@4=9hW>\032\315,=\276h\277=\374p\035>\364\177\335=j\341\255=\225\242\321\275G*\214\274A\212a\276\214{\315=\362\3257=\177\321\263>c~\007\276\330o\334=Y\352\013\276\200\026\371\275g\377?>Sk9=\204\250\262\275w\313\376\275\"#\232\276\377o.\276\222w[\276\256\256\024>W\010z>\262\253+=P\ro\276\235\206\024\275\236\036\026\274\343:t\276p#\211>S8\363\276\277\240\035>\241\303\202\276\332q{\275\006\324\260\274\341T\236\275\227g`>\251\274<>d\361\200\276\333G\216\275\315TU==\'\010\275\t5\343=\327(;>E`\235\275]D\214>\250\370L;\036\262j=FQ\003\276g\342\273\274\344y\233\276a\365\340\275\n \305=\350\333\212=\307\345V\275\354\211\354=X\346\345=\217J.\276\366\3533\276\203]\224>\231Pp>\356\340\230\276\033\010\301>:@p\274\322\0212=v\341\305=\020\332\021\276\334\346\213>\302e\232\275_\217\010>\0175!=O\247\347\275\340k\363\275\207Y\006>/w\033=W\203\236>TF0>\260`P=\376\200\322\274\247\333\317=}\017\235=-\323\222>\261\332\241>\022BR>c\\<=\270UD\274\216\013\">\253\375\242=\241\367s\276\311C\023\275=\033\200\276\300\342\n>;\214\361\275r.\332>EX\330\275\213;\275=E\240t=\335\254\245\275\231\227\216\276\305J\214>\326v\212>\321\340&>\214\031\300=\002\r\236<Y\265W>\342\300\036\276\234\212\357\275\304\263\'<\263\314\237\275\354\233@=\312\020N<\275\213[\276\257{\335=\336\n\340;\0050\242\276\350}\243\275V\274h\274\315\350t\276\260\213{\276c\321\203\274b\334>=\2607\232=\213\000\327= )\326\276;\266\223=\000\357b>\372\352\004?A\204K>\312\221\347=L\354\370=Pj\200>\312\031\337\275\0033\201=\205\216\217\274&-\256\276]%\371=9\265\204<\203\246\345=\312\322\326<\275Q\276\275dJ\330\274\003\245J\276\345!\354\275\253\344U\276?09>\n\325e=\312\232Z>a/\217\275\322\323\222\276z\275y>A\371H>K\304\323\276\272\254\211<\001yL=\314y\000\276M\324\330;\302\205\260\274(\264\204\276\270~V\275\211\031\244\273\261\220~>\300\254Y\274\323\034\213\276R\307\325\275\223\252\212\275\302\273\2737_\200H>\003\322\325<5x\266<GO\'\2760\266\225=\234\374s>I>#>\242\253\360\276\262\334\236=\247\345M>X\271\216>\372\213\372=\242\3653>\234\202\365\276\333\313]\275Li\002\276;\021\360\274nZ\026\276\267\023\340\275+y\r>\007\"%>\223\357c\276\325\013\316=\202`\376\275\rE{>a\267\333\275\256{\001>\254\033\274\274\354\333\244\276\255\340M\275\213\321\030\276\324\303\257>bs\325= \0043\276}_\004\2756I\321=Q\330\244;B\005\317\275\003\225\212\276\366\365\207=\334&\210=\035\003\202>\317\326U<\303k\205=\243-O>}\330\222>a\316\213<\036\000\304\274\004\247L>\202\376\352=\320\010\211>\3722P>\2105\216\275\203\326\222=\027\261\\\275\335\366p\275\246\345\213<{\3672\276\351Z\221\276\254\031\220>N\032\364<\3567\373<\036y\201=\374\372\354\274\255\035c\275l\212l\276t\223\t=\357\352V=\311\010\306=\026y\353=b\231\226>\360(\210=\265I\233=J7/=\024\330\266\274;M\201\2753\355\003\275\177\263==\\B:=\261C\236=\244\0010\276\0021O\276\007\366B\276t\330\355\275Q]\253=\225\256\365=[\265\331\276\2475\017\276Q_\206=\357D\274=\026$=>\nL\346\276\240\334\317<k\315\035=d*\023\277\375\037[\275c\024\241=KT\234>\242[\307=2\205\200\275\016\031\247=\215)\200>B\351;>\236\000\242<\263j\220>d6\276=\223\244\'\275\266\2264\276\225\266\244>F!\020>\215W9\276A~\323=nk\307\274\020\230\003>\370\331\356=\033\240H=2\267`\275\336!|\276\016\272\016\274\253\017\242\276o\363 \276N\345\020=+t\374=\335\265\224\276jl\215\275\301\252\254\275~OE\276G\033\250=\007k\251=\353\376\031=9\265|=\027\352S\276\030\036\237>\366\005e>\372w\266\275\277Xx\275j\362\275\274\260\340\224\276\026\244\003\275E\005\201\275PG\024\276i\001\013\275\301i5>Xe\264>J\200|\274e\227\217<4.\234=\214\376\362=)\322\245\275\270\275\207>\272|D=\013\336P\274cj\t\276@\204\036>\177\030a>)\361\353\275\352\031k\275K]\215=\265QM=\001~\257>\243\256!\276T<\025=\020^\224>\302f\026\276vx\244>\333+\346\275\030Bb\276es8=\177\327\220\274\234\256\350\274\360+\211>\321\024p\274ck\034\276\2310E\275R\001\300<u\316F\276\306\343\233\275\375\364\247\276\316!\206>\'\023\311=\3731\003<\322\327\205\276\232\352\"\2751\347\n=\264\352W=\251\033\'?(\210i\276~\023\361;SsE\274\215\372\225\274z\315\025\275\\\030\337\275\022\232\202\276!\206\254\275\017\303\345=\tg\314\275\322T\000\276%D\r\276\357Q\030\276\225C\n\276%\326%\276.\324G={\313\016=\236w\005?\264{\303\275\r\345Y>nE\246\276 uF>\016\014W>\332{\351\275WO2<\237\0216\275\025\253*={/\337=\250\363(\274\013_m\275\323\334`\275W||=\207>\254=\036\366%\275\327M\020\276\3601\006>\343\370\260=\240\202l>\222#w\276\247 \225\275>\036\010\276\355\n\240>\261\004i\275\260\275\200\275\243\276e\276K\307\224\275=\022_\276\361*t=\010\253\027\274]\207\313<\223\320\351=\254\013\\\275\304\177\263\275\3554\207>\'\354%<\245\236\016>y\354j\276\260\277\260\274\314\344\236>(\"\273;\267\351\240\2761\346m\276\237\324-\276Q\021h=]\377\245\2768\261\302\276(Xj\275\031\205\006>\337\212\260\276\320\367\034>\316l,\276/\257p=r\304\n\2766\326\214>\022\347\241\276\236\373\264=\216\032<>\254\nn\275r\2700\276\342\\\027\276\235\t3\276\221I\243\275y~\024>\301\251\316\274\254S\003\275\345\\\035>\266\370\354=\272\t\274=d]/\276\200mK=\313\254\251\275\376\236\315=\241v\224>h\254F>\037\013M\275\363\241\330>\037\336*\274\023\217\031=G\254@\276\205\361 >\366?4\276\243\255K\276T\370\213\275)\021\007\276fEC\276\202\375\302<*-\032=\014\253\230\276\032\224Y\275k\234h\276?\221(>zw\371\274P\330d\275O8\376\276\005\374\376=\331\273\273>\214o\202\274j\024==u\363\234>\317\212(\276\273&d\276\213\336\337\275\030k\323\275j<+\276\374\373s\276\\0t\275^\177\216\275\335\205\371=~\001\363\273\306\201S>\026kM>//\327\2751\344A>\"\234\017\276\237\247\n>\326\034\257\276\325\364\324<\347\010v>\013\273\310\275\353\005\314\275\366\003\373=\022\004\222=\323\341\216\276r\300]=<~5=\222\200\204\276\036\243N\275.\332\311\275\313\340U=\216\273\300=\340\322<>\204\241\236\274\247\275G=lz\030>\235B\234\276\377O0\276\326\361\356\274\tx\300\273p\2351<n\350[\276\377\270Y>OP\014\276t\362A\276\304\273\202\275\312\017{>\320\266\240=f\244j>xaq\276\023\262\010>\334\036\336\275Y\177\311<\3057\020\276;\361e\276\377\025\267\270\234\030\210>\232\360\325\276~o\365\272\232+[>\235iu\275\356\007\371=\240\t\366\276#\006\212<\325)\t\276 v\">]d\277\276\225(\251=\200\025\221\276\373.\214=\245\010\350\273\030e\353\275G>\343=oW\223=\021\177\336\275\200%<\276f\254W\276\032\244/\276o\350\252<\340\334\264=\367\224N\276\002\020\226\275\320\244\333\275\300\361\016=$\311)\276]\033\216\275\212%\223\276Za\245\276\300\022a=\304]\332=\355\333\034\275Dz\000\276<\323v\2758\035\307<T\374\317\275\353y\331\275:\344\201\276\300\010\024>\307\241\250\276\017\222s=\261\275\201\276lG\017>\254\243C=\306\346\013>\243f\345\275\270\003\345\275-\331\215=\022\235\303=\301\345\021>\307\023\302=\024\202\313\275\221\327\000>_+\023\276\250\013G\276\340\230\017>\016\252I\275\036\035\344\275\243|\251>\330\372|>\234\017\371=7\247\026\276\333}\224\274s\346\033\276XH\377\275\225\300T\276\263\226v\275M\357\353=\201\214z\275\271\243\227\274\031<\r\276\364\207\276\275\007\356\007?\360\352\256\276\236\246s<M\275\'=;\310\007\277_-\352:Vp\311\274\357\274\200\276\005\244a\275\206\334\206\275\216\277*>\362\324b>\033\316\026\276\276kR<\245\032\024\276\3172\001>=\350C\276\304\022e>\332\n\r\2756d\200\276\350\362\025\275\213\003\267\276,C,\276>8Z\276I\364+\276\376fN>OU\003>\332\276\240\275\240\261\254\275\336\014\251\276\"R;\275\352#\323\275ClS>\014F\021\276(\230V>\021\215L\275\242&1>\344\236@\275F2\211\276\234\226}\276\343/\242=\20311\276/\345\273=\223\315\334=\227\313l\276\317\272\216=\177\314\212=\272\347\205\275B\036\212>\263\312\306\275\251^\202\276\221\312\341\274Vl\354\275*P\277\275My\177>\273\236h\276\353n\252>!\022\204>\235\'v>\234\014J\275e\224w>L\343r\276\357C\214=\342\327\231>Le \275A\341\265\275l\177X\275_?\355\272\005C-\276\331\227V\276V;\205>5 &>\352\217\010>|)/<\372\010\006\276.P!>s\263z>\352\231\002>\0278Z\2763\367\203=\361(\222\276\326\026\250\275\201\'w=\340p\237;\363cY=\361\346\277\275\306\010\034\276\240_G\276\251\375\033\276\211\342\243>\272\277 =M\330&\276%\311\260\275\254\243\205>=\311\022\276\254q\237\275\317$\260>\247\335.=\322\207\226\276\004(N>\361\353/\276\372T\334\275\006\270\264\275NW\255=\273V\277\276\256\223\216\275I\375f=U0\306=h#\324=vek\273\210\206\020=\265}\276=\\&G>\\\257\270>\351)_>\2008\231>\241{\003\276:k\254\276\372\350N>]\232S\276\304\377Z\276B_E\276\351`\232\275\'\\\206\275 \371P>hf\206>\266\253\224= K\021\275\316\032M\275S\006\020=\367[#\274S\346\336=!\320\r>\352\205\245>L\3434=R\177)>\001\177K\276m1\216\275r\357\214=e(\'>v\320\300<w\0337\275\215b=\276b\354[=\004\263\300\276M\222{\276\354x\325=/\271\017>\243\t\264=\377&u=\237b\014\276\227.\005=un\260\275/\251\006;\203\017O>t7\202>K^!\276\002\002\276\274(\322i>$\243$=K\017\307\275{\267f=9\314\232=\266\033\215\276\2556\273>\267\357\216=`\244\010\275\351-\310=-K\013>`\036\213\276\326b\n\277\355bN\275B\204\002>\207?b\276\203eV\276\223\256\206\275(\364\341\276[`^=<\227\235=\023\210\331<\234==>\"\262]\276\336\207$>E,\023\275\022#\004>@U\206=>C\034>\001\322\'\272\247\305\214=\007\204]>y\264\203>\031\214b\276u\177\237\275\200\313\001>\224\304\347=\363\327 =\255\026\365\274;\026y\275\265\nJ><\341\000\275bN\327\275\205\204\271>w\233\207\2750\240\310=\221\341\357=l0M<_\321\274>\365&\023>\302 \211>\301@P>\310\236\235<d4R\275\014\310\027\275s\372\303\275\016%\256\2759\330C\276\303\363\211=7u->\265\230\225\275\nm\365\275:\233u>@\017\204\276F\320\021>\354h\010\277\t\335\010>\377\323\336=\275\005e\275\311u\005\276\242o\003\276\367.\236=G\305Y\276*z\365\275j\241A\275\364\335\033\276-\"\260\274j\371\306>YR\305=\034\354\352\276l\250f\275(\231K\276\235\254b\276(\352\236>\247\021\333=\351R\034>\332\346\207=\2105\262>\336\371\261<o\270\017>\253\':>\315\226\221<\361\n\223\275\341\371R\276//(\276(K\324=Zq7=|a\373\275J\200\262\275p\037\026>Fz\322\275\2125&\274\202\275\033\275\334\373\276\275\254\321}\276\r\332\317=\317D\270\275y<\355=\352\322\026=\227/\272<\316=u>\0232{\275W;\023>1\266Y>\215\205\275\275\230\260\210\2752\350M>\212\247?\2762S\270\276{Y;>\275\220\231\276\311\330H=f,\254<B\"!\276O\376S>\2350\322\275\316\226F\274\244\230\357\275]x/\276\277M\304=\334\355\243\275F\023\"=\364&\316\275\001\340|=\2310\004>\350r.=;\347m>\365\216\003\277N\214\242\275\322\252\350\275\343h\211=H~\305\274\214\342\205\276\030\324H>)E\324\275S#\272>\207\265 \276\346\312\221\274\313\256\026>\254R,\276\266\'`\276t\374T>\005\235\233\274\272\325\020\276\232\224\346=\352:\036>\303\305I\2731\216\005\276t\274\205\276VTF\275Ih\313>i9U\276u_\333<F\316@>\272R\350\275\241KO=x\373S\2753@\275>\354\226b=\303\025\204\275l\363\350;3\205&\276\342\256)>\264\210)=\372~@\275\027Q\310\275w\311\316\276\0009E\276V\216\233>(\022\355<\274\232l>\362\225T\275\0378\262=\355\n\356=q\301\326=\200\337\302\276\240V\243\274\326 \002\276\330\016\341\275\304\377d\276\275F\211\276\000%\036>\020\333\244\274Io\351=\223P5\275p}\231=F\342\202\274\023\005t\276=\"]=\n\2455\274\263\374\353\274\301\220\270\275\231\215\002>b\332C\276>\211\202\275Rp8<\253$\226\275\\\212\251\275Tg\271\276\013\251\016\275\234\331z>\031\225W>\264\020\353=z\361\316\275DM\270>\213\024\275\275\024\036\311=\251r[>R\320\240\274\212\326\220=,8\341=>\222\267\275\307\226\334\275\245\326>\2765\326\226\276v\306\325\273^\253!<i\316\253>\332\355{\276\230\027;=kjC\276q\211\245>\352\361\223<RW\204>\305B\223>\377|\252\275\001\247\027>\276\273\023\276p\234H\275\233\355A\276\345\215\342=\321k\243<\204\007\363=\204y\323\271?\342\314=A\213W\276Q\024<=\350\373\304\275Z\027\317=f\035s<\317\222\242\276z0s\276\312\203@\275\013\355\364=\260\266,\276\212\277\346\274?\332\270\276%\345\345\275\257F\032\276\311\226\266\275l\314\202\276\253\324\240>g\231C=V\346:>\005\352\372=\177. >r\272&\276c\354\263\276D\243\014>\210\314:>\363P\261=\013\016\271\275$\3050\276.\004_=Y\352\372\275\315{\201\276\r\247\206>\2132\317=\317\207\357<\033g\204>s\324(\275<U\362\275#\342\027\276\020\034H\276\374\210\212\2757\330\241=J\235\322>\244\233L\276t\336x=\252\225^>CK \276\355\017i> \355\307=S\334U>9.\363<\344$[\276Dxb>\322\300i<0\214\343=\336\374\237>I\234\326=\177\361\212\276\364v\001>m\306\233\275\326\370\226\275\210Q\215\274\203\207\216<\337&\034>\024\322\030\276hL\n<\223k\017\276\037$\300\275i6\251=S=\315>{hW>i5\250\275\033/H\276\032\266\010?\361\311\t>\013\312\000>\001\036\362\274\r\010\201\271jq\220>\374\217\212>\352s\221=B\366>=\262\001\205\275\020\340\"\274\353\247/\276<N\264<A)\340>\222\264\221\275<;\212=\375\246b\275}\217\211\276\345\020\361\275\202\313O\275B\334%\276\240\n\271\275\343\274\303=7\235\216=\277\247\000>\024\351\204<y\201\340\275c\307\245\275\361R\020\276\366\356\265\276\215\021E\275:\237\251=\"\223g\276\345\246\255=\233wi\276\316\255\036>\"Q<<\262iK\276\201i]>G\202A\276\343\025\222>\355\360\031\276M\203W\275\337\r\025>\031\t\346<\214\311\034\275\344\026\265\276\031E+>q\327r>/8d\276o\0335>\326 \203=\037\251\251\276\275\322{\276h\234\363\275H\316f\275R\224\311\276\003p\233=\306\265Z\276\017;h\276~1\036>\034|\376\275 \365\251>\311\372\271\275\214\261\376\275%^\027\276\031@*=!\355\230=\000\215?\275\333\361u\275\326$\242\274\346DS>\273\336$>\317s\252\276\215^\234>\275\202\211>$\216X=Z\327\361\275\310\255\335=\367\340v\276\001\024\304\275\305\201Z\276\353\312\000\276\247\006\034\276q\"\225>+=\321\275J\352\326\275H\004?\275i\223\306=\276\251\262>Y\376\017\274\204\203&\275\247D\217=\264l\360\275\2243\262\275aj\333=\277\214\234\276\252T\004\276\236\2446\276r\213\277=i?\325=\301\004e\275Ce7>\212;\235\275\301\203\311\276`\033\223=\277\343(\276\025\201&\276\217\253\327;\343:X\275\312O\007\276\260\306\003>Qfu=%v\247\275Z\254k\276\262\366\023\276\356q\006>&z\243\275\000\335\037>1\325\010>\000;\251>\2156m\274\257Lc>_\370\244>\235o\002\2764f\020>Q\001\266>\260\246\023>_\270\016>\001\245L\276\223$\207\275\021{7>!Yt\275\302}\345=P\024L\275+\034\222>\322\177\027>\316\014\324=\\>\031>\2351\322<BF\324\275\356\306\211\276\021<\215>\306\3008\276\314\375\212>\312\227\307=\205\363\217\276va\256\275E\377\240>\014\n\346<\207\255>=\344\236\033\275\256o\256\276~\002\333\2758\013>>\270\023\362\275\270Ln\276G]\222\276\004\022[>\034G\276\275\030\374u\274\372\364[>\020\253\210\276\250\t\311\275\362\006\350\275}\273\346=\\\326y=\351n\354=\375r\360=\357\370u>z\277\340\275\031\0345\275\036\\\300<\234u\330=k\200\022\276-\322.>\323\350\300="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\330\373\301\275b;\246=n\356\340\275\255\313\360\274P:t>\034;\036>AX\231>q\\\034\275\235\315\254=\223T\221\276\010\326:>Jqu>\316\001\364\274BY\233>\310r\321\274E\311\031>#\005\355\275)\006\253\276XJ\035\276\"\375\000>\026={<\276\245\253\275\224\037\212\274s,>=B\003\366\275\271\233}\276\016\326h\276?\276\325\274+\221R>#\202\234=\251I\307\273\207\271\247=q\000B\276\r\020p=W\361\264\275Gl4>\356\t$\275j\002D=:-t\274\314\371)>CV\205>\235s\376=\n\016\303\275\330\363\214\272\244/\026\276\005\027j\275$$\177<5|\331>\035\201I>\214\304\225\276\006\212\213\276#\211\240\275\016\343C\276\333\322l\276\250\360\345\275\341\235\302;\366\206\301\2768~\347=\314X\216\275\"\333|>\203\234\001\276f\331\033>Xn0\276\326\234)\275Y\327\202\275\303\234\217<\377\005\005=\331\203\254\276\314\303\025\276\205\365\334\272e +=\327\003\201>\177\251)>dK\341=\244k0>OX\205\276Os\262\276\016\035\221>\256\2223\275^\013\253:}q\n\276\237\371\264\273z\267\312>\216>v\276V<\277>\2519\372<\326\371\216\275\314MU\276\253\0034<\025V\372;\336\017<\2762\005\321\275\010\241\341=V=m=\257\305\216>U\352\326\276\244\365\242>\353\255\205>\271\220\342\275\224B[>\005A\247\275#%`>\177@n\274Y8[=n!\233>\205\327j>BA\\\276d\007`\275\254\226\021\275\007\265B\275\271\272+>\351\006\n>\262-\305<\260$\236\274\333\202\217>I\264\365<\034\266}\276\223\220\214=\2029\034\276\202u\204>k\314\323=\346\324\373<\0055\224\274\370K\204\276\356\370|\276\3403k\276\225;\010=\362\326\036\2758\215\202<@j\227\2765B\223>a\303\001>J\266O=\244Z\360=\2418\234>\004\007\033\276\337.\n>n\347\001\276\266\221\275\274\253\263J\274{\337\222=u\t6\276\252M\354\275\313a9>C\253\301\275\004\324\227=\272\363~\2740?\332\275\335\213\357\274\301\003|\276\177\033\321\276:\364J>\007\373E=d}@>\324\207\376>\243]\274\275\231\230/>p\367\213>\366\316\332\274\317\264\303=0\312>>2F\320\275DG\202\275\343\276\034>\244\204\265\275\'\271d\276\244\230\013\276\0136\350\274\330\013\362=\217F\366=\010\230\324\275\031\352\374\275\3702\001\276$\276\272\276H\313\276\276}\204\336\276\031\376g>nR\000\275-\206\025\276\307q\312=\303,\014\276y\241\274\274Q\014\243\275\343\016\001>p\224\225>\033\255\351=\036\204g\275\263&\201\275\006\224\272<cq\305=\2715h=\310\360\023\276*\301\222\2769\3643>%\006\"\276!\312\247=\242\326~\274\233\267\245\276\257<\252=\216\227\310\275\032q\016>^\024\205=G\316\263>\262\240\016>\346%\033\276\311\240w\276\272X\233\275\014r\016=\310&\207\276\315\253\253=\307\266\353=\231\244E\276\034v\335\275Xi,\276\340q\361=z\334L=\261\357|\276@D\022>\030\'x\274\004a\205\274N\315#>\004\357\357\275\357_\331=\267Q\356\275F`?\276j=u\275xq4>\\L\037=\260\231\003\276g\371\320>\007\2465\276\013\305\'>1\350\034\276\033H<\275\235\214Y;\303\206B\276\036\342\222>\274\3113\276\010,\007\273\364\261\004\276\372\273\013\276\310b\224\2756\023\233=&\354\313\275\2528E=\235q+\276\266u\227\275\317B>\275\312\324\n>\236\371\350\275#D\034\276>v\223\275\251\314}\276w\300\327=]\2324\276\354\337{>\242\007]=\337\241\254>*\271\022>5X\314\276\230\240\221\275\'a6=\242{\004\276\377V\222\275k=g\274\303\212w>\222\247\270=\215\242D\276\013# >.\354&\275V\030\033<e\205)>\000Q\334\275\270l\332\275\243dq\275w\2044>\217\010\204\276\253bo=\2308.\276\263/\005>^U\361=\204^\327\276\354\nw>eC\031>\332\031\232<\324\335\220>\262\346\301\275\001\252\030\276\262\335N\275\337\330b\276\341\300\037\276k\365o\276\003f(\275n\243\237=\014\334\237>\251\255\214=\254\2324>\"\'\032=\254/\214=\344\302R\276\245\242\325>0\201\205\276\370\244\205\275vN\217=\321V~=\215\320\370\274\331fC\276u\321\347\275\320\303\025\276^\177\267>[\013\240>x\177\000\276?\233\303=\010\307\030\275\336\3631=:\243a\276\024\262,>\357}D\275\302J\213\275.s\221\276\226\334\360\275\240\231\031\276,\367\255\275\216^\373;X\006 >\210\206\334\275Hj\261\272C:\315\275\352\245\337\275\244)\321;\010\023\202<c\003y\276\352f\377=<t\242=\032\271\360\275\362R?\276=\263\303\275\241\203\177\276\252`\323=\310~\320=7Ot>xI\266<\213X\021\276BK\224>C%\256\275\223\233&\275\t\376\t=^H\315\276\225\217\r>\335\356\345\275\350=\212>}\314\t=\324q/\274\241\216{\275a_\223\275\010\332\311\275\310Z\377\275\272\237\t>\205C\373>\224\237\214=5\345\320\275%\377\213=\327/\'\276n\312\345=g]P>u\252g\275lk\217\276\246t\344\273\201\206\372=\313X\357\274\303R\234>{j\200>q\366B\2753\272\275\275\253\334\314\275\312\370\361\274\253\376\332\275y-\t\276\202\330y\275\201m|<\334\374\224\275Xd\243>!\256f>\243\364\202>L\214\275<\244\245\026\276\353\346\033>w\004\201=\343\002!\276o\014\301=\344f\207>\203\221S\272\210\235K=\361\026(\276\021l\033\275~\006\007\276\222\271:>\226\227\314<e\362z>+\261\242\275\364\325W\275 \371\376\274\256\375\215<\217\267\265\275\354\271U<\327\331b\274*\376R\276\332\243\220\2737\346\374\275Z\206\016\277\257\212I\274~\370n\275&\004\325=\3316\005\276\017<\333\273\275\203>\275\021~\343<\372j8\275\224\257\342\275\351\200\210\276\316\321\265=\206\r\256>\001\247\240=\300\376\r=\306\r1<\336|\215=\364e\232=\231\204\302\275}8\352\276\3503\326\275\207%\357=\177\304,\276\322\032\352\273\"g\272\272\016\276[\276\264\341\202\275\310\024\025=l\224\311\275I\306\272\276)\222\215\276)\377\227>dv\232>\332)\354\275=\223\227\274\372\325\223>(\312\267\275+\372\266\276\003M\271=\223\263\177<NP\212\274\217\005\336>a\374{\273\312G\247=X\237\007\276}\036Q<\311Q\200=\016j>=:\025\247<\021Q+>\265\013\261\2759\360\345=WM\211=\346\261V\2765\007\354=\016\021\346<\354\371\271>h\306\260\2764)_\275i?;>\333z\362\275\035\024\201\276\202T\307>\306|\\=\035\212\243=\2749\223\276t\025\316=HB<\275\231(\200\276\301/H>\327\211\254>\036\374\254>N\351\1779*\367|\2741n-=\344L\203\276\330\270\317\275r\330\216>\226p\371\275\374\003\227=\2604\320={TD=G\335=>\345\215\242=\364\310\347=u\306\334;F\255\345\274\245\257Q\276\230~\007\276f\345\020\276\272\271I>8d1>\351u\204<4\032J;\0309\241=\240c\216\276x\277\306>t\361\247\275\003D\035=a<\356\275=J\304\275\r\025x\276L?\355<x\240\367=3\331\036>H\3620>ou$\276I\270\201>hA\214>0\014\031>\376\333v<\364\261\270\275]\027f>\234\321;=\251\202\031>\370iT\273+\3763=R\005\216=\216;\352\275\367\363\022\275.\022\270\275\255\276\254=\362\362\251<\266\226\243:AT\212\276\311\177\211>\307\254U>\221M\326\275\244,\231=\236\\\031\276Q\237\307\2757\317\247>?h\205\276\220\355h\276\303\367{\274\370$\234\275\305Q\036\275\262\301\272\2752Q0=H^\261>\023\203\017\276)\211\330=\023\263I>\250\204\036\276\331\234i>\261 \252\276U}V>\361\303\t>v\375\361\275\224\306]=\346|\025>\253\237\t>\276\361|>`\357D>E\'\225\276\212\020\030\276\356\2659\275\255\254\213\276B\257\232\276\302=\332<]\227\236=\333\272\243>9\212&>\nD\303\275(\037\322\276\341\r\214=\202h\025\276\251+\270\276.\252\206>Ha\235\275w\352l\2760\024\021\277\200\336\025\276\237\027\257>[\371\207>s\257o\275\"\367\267=\375\274\025=\271\013,\273a\355z=\267\277\362\275\332\201\375=\2719i\276&7\357\274\t\3260\276\302\017\025=*\262\013\276\344J\375=\344\234\014\276\277\377Q:\264\277T\274`s\210=\274gm\275\375\202\357=\223\\\t>@\217\300=\332J\270\274\244\345\001\276V\027\037>5m,\276\313q\n\276b\2536\276!.\035\276\"\276Y=\257\355+\275\350C2=M\367\013>\227F\210\275\354\234a\275Q\234\261=\211N\207\276\303\327@=\260D\327\274\"K\273\274m\366\n<\313\301\324\274\305h\">b$E=(\032\211\275\242E\225\276\020\031B>\361+m>D\235u\275\263\333I\276-/\233>>\367B\276\252\234[\275)\272F\276\271\014 >\207\t\003>\343\342\343>.\212m>u\347\273=4\326\361\274?\302:\276\003u\331\275\335>\346\2760yu=\300\310%>\214>r\276\216\"3>\274\003\244;O\217\263>\362&\215\275_\345\006\276\272\204\245\275\210\316\224\275-\263\177>\301\032\223>\310\213!=\304\"\277=\242\307\337<\306\374\277\274R\375?\276G\365W=\247fA\275\317_p\276\257\374H\276\356K\001\275.\367\024><\325\024>\325\\\353\275-\251\224=\345\322\222\276>!>>\272\355\311;\241\335/>\004\267\262=\355\022(=\350?`>\345\326\312\275f\373\342=]t@=\372\341\203\275}O\207=\356c\304\275\226\355\302>#\023K\276\365\205\215\276\320\212\n\275\271\376r\275\010\335\n\275\270\354\247\272K\264U>\240m\262>\214\334\213\276\351`\325\275\210}\317>\207\273\312\275\210\230o\275mR\310>\017\336\257\276\207?\205\276\276\3253<#\304\027=/ \031\276\311g\235\275\364\374\345\275\320\357+<(h\255\276Bq?>H\376x<N\n\271\275\355\277\255\273t\304M>9\r\366=N\n\250<\373\353\000<g\351\241>\004\227\217\275\306B\336=R\033^>9>a>\310~%\276o\324\223>n \000>\220>\324\275\200\010\215>\213\212\275<\315\206K=\252\241x<\301\276\251>D\246\006\275\220\2042\276\251\315\016>\003\315\305\276\334m\030\276\333\317\251\275\343\351u\276\013!x\276~\262\231>\006a\251\2757\272~>v7\370\275\324\2070\276MmO\276\225\000\002?,]K\276\343\2318\276\374P\343\275\243A,=0\330\336=,\305\220\275\032\346\226\276.>\023>\035#\"\274\3244m\276s\027\340=\355\376\374=\177o\305\274\372\241\001>1\367\326\275\010\350~\276t\310\252=\3173\231>Z\270@>\321\233\001>\260\353\215;\025Z\331=\310\325\t\276h4\354=\323\264r\275\001\240\244\276\347/!\276\224{\r>_\352\353\275:\316\306<\024]\"\275~\265H\276\347\023\233\276G\205\321=\r\026\n\275ma\312;\260\177\205>g\343\030>\211\036\035\276\267\375\301=\300L\255\276\036\372\257>\357\214\217=\302\215y>\333\316\215\276\324\263\217\275\205\304_\275\033\010Y>\025X\360=%K\217\276\235\301\013=g\377\231\276Y\225\341>c)\360=\013\345\300\275\266\315\213\275\323\232\313\274\r\313g\276\016\374\236>\355\256\216<\260o\364\275q\320\341:V\222\203>\312v\300:\236M\304\275D\222E\276\370\\\336\275\325\035\305=\274\231q=\252V\004\272\305U\320>\313r\351=LW\325\276\246\327\227=\233\215\217=xB\032\275i\037\032\276.\376\227\275\314\372\222\276\226aM\276\336sy\276o\314\030>\223?\277\275F\351\037>\344\202\363<\027\245p\275\267>\370>\005\340\026>\031W\020\276(\206\301<\023\273\372\274\031\t0=\302i|\275j\2302>\312\335c>B\016\327<*\326\226\275\351cH\275\257<)>kw$>\000\274b>g\000C\276\263`\207\274\244\357\\>\252\205\262\276Ue\202\275\206\376\274>\204\231A\276E\361\226>\302ku=\370\316\006>#(\332=\241\"\n>x\231\223>`t_>n\353\213>\367|l>\035A&\275\326i$\274W\352h<\265&\367\276q\342\202>%A2\275X\365!;V\026]<\022\363E\276\035\r\370<\214\324\350=kL\224=\342\241\027\275\375\321\306=\303\330\010>o9\000\276/\235\301\274\200\004\037>)\033\231=\377\327y>\332.[>\035s\266>)l\260\275\'\202Y\2767\361\353=V\007q<\333Py<2\243\357\274)\203\021\276L\201\366=\211\232<\276)\373\235\276g\321\217>VR\332=\352\322K\276\2416\216=\311%\246>\205D0\275\310\340\014>\224\213\352>{\"\275=J\021d=\246\210\305\275\372\372q>_Ry\275\235\261\351=\026)\314\275\343[\017> l2\276\030\302\213>3 \216\273\373}\201=s\241\377=\215i\360\275fXA<\223\216\247\275\025\373~\276\223\227\334\275\370\371\256;cY\210\276[v\262>\032U\331=\302\214\023\276\202F\323=\344\010\342\275\'\212\210=\005Bo\276\333U\342\275\211\3571\276\033\204#\276}\021\177\276a\267F\275\345\0330>-\346\264\275\304\235\266\276\367nC\276\233a\212\276\210\341\273\275\347b\314=<\233t>\336<5\276\330\021*>)a\r>8\034\203>\276I6=\371\242\243=\001p;\2766\2478\276/6\330<\205\002\253\276\245\344\274\275\314\013c>!\234\202>0X\324\273\037`\200=\326\177\202=y=\376<3y\033\276\362\237\255<\203Ws>\340\276\006>\354\347\036\276\256mD\276d\270F\276\342_\037>\240\210c=5$\216>\364\223$\276\252U;\275\333\014H>\002\313\021>FX*\274\030d\336\276\316v\360=^\350\326\276\245\367 \276\361\006\245\2766O\266\275\240\376\014\276W\302\223\2748g\227\275\240\257t\276\rz3>\207\t\216=\337\364\274\275\331\322@\275g\224\322\275\221\000\254\275\275\317\264<\210\252-\274\232\246@\276#\'\227=\252\226+>>\2225\275N!o\276t\236\306=\377#g>\376\036\210>c\365>>\361\251\202=\305\021\344\273S\024Y<\345\323:=\375\274\006?\251\317\022>8\214\017>\321\311\221\275\320\2547>\005\354\305>\255\243\202\276Dz\247\275)\314\231\275\365\362\210=\233\373\247>,\220\257=r\021\217\276k\207\261\275\232k\037>\273T\220<b\330\232<&\376\244\275X\315\267\275\005,\202=\253\307\201=4e\333;aRz\2758\017Z>&\\\021>\320\330\270=\313\313\360>\272eV\2762\355\317\276\232\247o>Q\226\020\276\177\353\341\275@[c\275\343\016_\276\215\307\222<\356\372?>v\013\030<*\237\230\275\250\3454\276\306\276->%\310\253>=\177\016>\345s\317;\016]\274\2759Y\037>!\270\235\275\220\236\023\275JX7<+e\337<T\215\213>\235(r=\303\365\202=3g\374>p\234\022=\340pY\276\225C\212>\3636|=\2507;\276-\035\216\275\254cw=o\320\234=\250\252W\274@\214\017\277\213}u\276\252!C>\250\206\022\276;\2775>\344\236\031\276\364\2247>\277g\223=\031\010\263<\224g\206=\234\311\n=+1\271>\306\177\221\276\350\371\006\274<N\017>\374\021\332=O[\250\274\020\215\357\275\302\240e>g\307!\275\317&\304>\263\346\316=\275\241\036=\354\362\332\275\324/d\2765>t>Y\231\356\275\247\304}\275\277\352\355=9\372\233>\276#[\275\213\250\201\276s\352@>\202\271\017\276\272\0006\276.\031\246<\356<\r>e\021\024\2745n\201=\305\256t=N_\300=g\035\017>\374\227c\276\025\351\213\276\343\261\000\276`\037\335=\311z\030\276\250\2637\275\327v\035>~j\257=]X]>q2\320=BH\236\276\367\331\261\274\275^\035>\320\325o=\301to\276\372\002\037=\032M\003\276\343\3710>\214\321\334\275&N\310\274\345\225\216\276\020\265\037>qVp\275\214Kc\276gm^\274\345l\270\275ik\001>/\344\236=\227\231\'\276\354%\336=\243\230M>\374p\364<\214N\202=iS\276\275\021\214?<\250;\"=\031\315l\275\301,\247\276\270\341\314>\004\261\306\2751K\026\276\366 \272<\033C\315=\222U\240\275\300\341\336\275\027\370v\276rH\335\275\206\177\246=\361\356 \276\377\275\321<X\206Z\275Oo\"\276\214\207L\2753:\322=N%\347\275\0018\244=\265\r[\276\260\016<\276\307de>.\024T\276\232\034\322\275H\270.;\360\343\215\276\211,\257\276\341\222\326\275\206\220\274\275>\335P={\345\254\275\234v\256=\346\267\005>\363\304a\2753\245b\276,y\336\275\3108H>\321o\322<\216\035\363=4\253\360\275M]!\2750>\301\2746l\265\275\320?\204\276\301>j= \264-=\272\307=\276)\303\200<\023gb>K\311\203\276\n\205\243\275^\030\200\275\367j\246=\216\223\371\274\237\363O\276\037\363\005>_\nR>%D\332\275\032[s\276\200\023\306\275\326\260\273;&\356\230>.\346\202\276H\325\'=\250\242Z\275b^I\274\ts\036>\210GP=\374\304\304<;|\177>\234+h\276+\234\027>,RW<<\311\214>\217{\024>i\355\033>\367j\207>[\375\307\276\220\221\231<\225t\314=\261\344n\276\371\334\246\276Ob6\274\271u\272<p\254\240;o\352&=Mr}\275{h)\275\241\356\\<\366\035\224=\354#?\276[Ib>\337\316q\276\235\317\340<c \241\275\234R\033>\345\347\221\276\357\022\322\276\324\005\327\275\274\366\362\275\2643\221\275\364\356\361\275\r\315\021>\236ZV=\206E\266>s\304Y<m\004\202<\013\035x=#\335q>\326YQ=\340y\342\275\261\327\220\275\311R\357<\177\236\261\275\346S\035>\365\245s>\335\261\370\273\331\330#\276\270U\307>\362E\202\274i\352\007\276Z\006\377\275\372s\177\275\264\242\'\276\365\245\262\275xk:\275B\032O=\020\266\351\273\375Y\333\275F\361:>Z|\246>\341U\243\275(\267\246=\235~\335\275\361\0060=p\376G>h>v<\312`\312=\377B\014>>CW\275>\215u\275\217\373\314>\207}_\276\262\274\231>\207\321\253\275\371L\311<\214l\222\276=L\217\275\005\367;\276%\250\350\274\024\354\013>\202\360\377=j\340Z>\236\351&>\344*\337\275\017\302\313=\032j\327\276;\255\357=L\330\337;\274\014\003>\322\207\257=\216\356\255<\364\226M\271\032\315E\275Q<}>\367n\366\275\343\014\305>\023\246C>BB\225\274\345\353\306=0\307\016>U~\325<\226d\016\276U\266\206\274a\331(>*\235\310=CSo>\254\210\373=\301\030b\276\233\033o>\177Y\252=)\252x>\270\321\010>\357]\314=\350%\220\275\354\'X>Up\023>bL\222=\360}\304\275\227\226\014>\362\376\t\276\355\342\245=\247\274\031>\\\301\273\275\t\220\353<C\021n=\014\203*=x\313Z\276\265\334:\275nI\210=+b\312=\036\267\201=ya]\276SH\002>\201e0=\265]\211\275\007\215L>\200\317\262>\326\335\215\276D\220\n\276Xo\275\275\347\223\317\275\326\325\351<\313\224\003>9\235U>?\t\010\276\340\261\314<_\244\332\275\316z\337\275t4\370<\306\306)>\275\347\314>]vB\275\357Z$>\213C\'\275\344\274\230=\031d\'=\333V!>\235w\020=w\362\214>\346\306A>K\323#<\373\032a=\211\336\002\275\333R\371\274\307[b=Z\001\224\276`\211\260=6\225\201\2759\204k=\345\254\263\273p\253\010\276_\213\303=\227\241 >\030\2000\276k\026/>\226*\204\275\277k\017\275X}\005\277dXz\276\366Dw>zU8\275Z\033\233\275M\366\236=\275(\317\275\222v\221\276\205\026g\2767\333\2579+\254@>3\350\230\275[\250!>&\273\000\275\371\005\010>\2348_>\275TG\276>t\355=X\003\007\274 \224m=x\0057=\345\230\020\275H\216v=\243>A<\260\336\032>\252\230+>*\301\363<Y\363\370=\220k\330\276\345]\206\276\325 \007?\315\351\302\273\213\231\375=>?\233\275:\262\241\275\270JU\276\220\242\223=#\346f\276\247ON\275\216\232K\276d \217\2763Y\256\276QH\353=\274\033\267\276y\224\255\276\212\203\010>\215H\t\274\223n\203\275\304\232\204\275\322\004v=\207\344\001>\257\265\315=\204\276\366=\214\023D\276@q\247>#\213\021\276{<5>n\013\251<\315\na=\261n\335\275\246.M\275\211\341\257\275\252\243\232=X\273j<\325\213\344<\274\230\316\275\377r\305\276\ts\260>\362\216\234\275\306\247\264=\367p6\276\371\031\206\276\301\251F\274\005x\305\275\213\263w\275\nG\316>\343\203\234>97\267=\334\017\242\276\226\262\270\274\227\356\221\276\020\315\006\275\230\002\377\275Y\332\263<\274\347\210>2\022\377>\036\344y=\270\211\260\275<\010P\275T\207p=\310&\'>^<j;\030%T=o\346[\276\002\224\234\275*E\036=B\232p\276 \'$\275H\342\217\274|\n\225\275\376\307\221>wVv>\241/y\276L\370\206\274\312\324\207\275\'\314\233\275\251\rd\276\320\362V\276\257i\032>\013!\211\276W\361\221\276UbU>\230h\205\275P\235.\276\201\227\r>Ec\364\275\320\240\317\276Fi\355=mT\310\274\214\335\035\276\026\210;>\323;3\274-\334q>\302\233\303\276\027\245v\275\300\304\342= \263n>\010-\014=\252o\000\276\373\037]\276v\3451\276F\237\322=\343k)<`\017\014\275\346\004\003\276J\311u\276W\304\020=c\001|>\177\352}\275e\035\024>\367\303\266\276\203H\302\275EY\020\276\024\336\306=?)\265\275\266\325\344=\213B\007\276O\3008\275Wy\345\276w\'4\275\232\001\302=:m\335\276\2174\236=\177\231\003>\235\342\036\276\213\271\">T\347\305=\374+\361\275V\311=\276h\214+>5X\272=s\307\320=*\322+\276l\376\221\275g\276\270\276\240\241->|?\347=[\'\220\276\276\2702=\221|\300=\274\300_>p\211\232\275k\372\216\275Y\241\037\275\006\254\212\274\356MX=\005\366\261\276FTB>.\244q>f<6>\016X\020\274\007\334\231\275\t\370\203<\"OI\275\266J\361=\305\253\020>\253k\262>\251a\177\275lJ\200=4\r\017?>\321\035\273rO\217>\245\200l\276,Q\341<\203\372)=\207\311\245\275\331,\216>\363\321\001>\363\223\327>N4<>\261\366\220\275\032\022\266=\305\240R>\3014\364\2740\213Y\275\250X==\276gD>J\340\202\275J\256\377=\177M&\276h\025<>\036\273\">\250\024\311<?\362\311=yd\314=\007B\367\275\366G\252\276\026R\244\275\312\022\241\275*\273\313\276\342\210\233>\221\251\307\275\377\237g>R\022\305\275 4\014>D\211\337\275\374\2228\276n\375\013\276\212\364\017\276\351/G\276\362@\013\276?\323\214\275r\302\324\275\3010\311\274\263\356\207\276&u\234\275\323z]\276\344\370\026\273\366\207w\275\307#\210=\212\320\326<\3044\221\276\350D\313\275\004\265\223>\327\3231\276n<9\2769eg>[\333W=\310OF=\323e\205\276\246]\366>5\332\214=\375\177\215\275\331\324\325\275\221\322Y=#\306\215\276\235#\362=\025\304\332\276\365\250\335=hgt\275\270O\243\276m\217\337=+\361&=P\364Q>\022\rR\276\213\204\361<%\274\353=\274-X>bp\r>\342\301\350\275]z\324>\322r\215>\226\227\242=\245\272\310<\033\271\005\276\300Q\032\275y\007\214>>\301\300<\222\366\266<l\322\202\276\266\202\241\276(=V\274\277 \216>\030\033\003\276\375/\217>%`H>\223\256\033=\377\277\023>\320]\236=\355\224\211<\357Bx\275\350\317\214>\\N\321\275\242\237\252<\377\034\321\2749\341\264\274#\364-<\375y\245>/\220A\276U\324\270\275\210F\r>\227\232\341\274\014\0007;\374OJ\276\242r\326>4\014C<[\004\004>\374\254\244\275\326X\237<:|\225\275\210\t\201\276J\027\272\275a\034\034\275*\217==\033\274\033>[\330\'>)\034\023\276\335\027\263>\365\r\212=~\250\354\274\201\316?=\376p\217=6\214\210\275j\314\256=\2773\323<\343b\244=#-}\276\\\225\221<#\021\267\276w\312z=\342\271\245\274\226\230\206=y\221N\276\220\367Z>\002\3422>\242\021\242=l\202<=c\277\271>UI!\276\3113g>\327H4> \251I\276\030/\310\275y\200_\276\204\340\321\275\271G\'\275T\342$\275F\306\226\276Psq\276\177\034\344\275\227\240\034\276d\'\354\275Z\325W>\304\272\t\276\303l\326>\376\003\322\271J\360\014=()\312\275v+\001\276M\'F>\215%=>&\211\310>8\222\337\274\301mQ\276d\037\244\275M\000\234=\311{\232>\031\257\350<1\237\263\272\331\025B=\205\243\241\276\010N\310>\252\365\244\276\373\234\216>2\371\330\275\265\001\242\276\016\207C\276\035<v\275\334J&\274\342\313\273\275\363\235\320\275\r\026\270\274\"\220\224\275\2259\316\274\363\323\356\274^|}>\336z\270\276v\344\333=\222<\035\276\213\351\341<\'\245\200=\264\301\037>n\016A\276\212$\251\276\035`\317=\355\315\000>\312\254\020\276+\373\272\276\375\340\224<$\202\261\276\234|\010\276\244\217\260>\374\201\377<8B.>qT\226\274\227a6>\221;\322>\347\363t<\2579\336<L\025!\276c\002\207\276X21>R\2558\276\2108p>x\354\303\275\346\213]\276q]\241=\010l\027>\351X\277<\203\226\'\275\240Q\027>X\245Y\276\262a?\276\"\023(=\304\027S\276\024\272\277\2754J\254=bB\021>\240\006V=\277\366\247=\211\255\224>yhD\276j{\035>\240R\023\276\277\262m>a5\217\274%%\224>m\036\"\276+\0230\276&\277\224>\036\202\222>\336\370s>aU\225\2750\2404\276Z.4<6vH=\207\217\005\276\3218u\276\220\320\253\276z\216\276<\314\201#\276\262\376\225\276\270\325\'\275\201b\"=z\372\216:\261e2=\230\'\024\276a\204\231;n74=Oa\236>\210f\203\276z/8\276\377gw>X\322z>\262\207\243=|\345\354=\357<\332\275\026\250\023\275\213\005a\276Z\0226\2762\211\336<S\356\341<W\232\253\276\242\r\274>\013 \022>\353\013\205>\305\312\267\275\331\013\220=\370-O\276)]\035\276\1779\316=\326\355\037\276\337\320F\276[\262Z\275\276\035\275<\225\220c=\202\'{=;\025\254\273\234\245b\275\"\347\306;m\035\250\274\212\314\207=C`\213=\346*!>K.Q=\005\2427\275\371+v\275\240\276{>0\372\017;r\034t\276?_0\276y\217\243>s\216F>\367\337\241>\344\364\226=|\347\352=\312\022H>5\303\005=\036\340A\276\rL4\275\255k\306=\336\307&>=M\355\273U\2009\276\203\006;\276J\333\241\275\271\272\254\276\210\022\226\276\344\205\033\276\345\251\331>\225\260\034\276\277]\217>\031\030*\276\244\205Y=\002|\211>f\372\201\273\\\237\215\276D\354\212>,\227\227=<\245\305\275\361\261\240\275\371Ya\276HJa>\323\346a>>\262T>4\036z>\342S\253>W\356 >\017w\003> X\227\275s\300\200\275\217\316\031>\307\333\006\276\274M>=\020\033\226>\251\253\257=\373\312\210>\305\347\023\274\247\024H\276\304\004\003\276KN\355\274\364\252\035>o\315\300\274\352\2264\276\235\000\205\2750,\300=gs\263\275\322\220d>\017\226e\276\203?n=\r\301\024\276\377qB\276\221\276T\276q\227\035>5`\243\276~\203\264\275,\220{\274\270\373\354;d\340\347=\243\016\036=xq \276\311\202\204>\315\325\216>\204-$>\234\327\033=\006\016\217\276\243\001\204\276\221\326R>7\320\257\2757\034\007>\312\217\235\275\371\242\273=\275\207\207\276>\301\220=\3213\272\2743a\220<`\322\305\276\346j/\275~\347\240=^\002I=\302\027g\276\306\316\247>\223=W>\224{:>\212\034\031\275S=)=\220\263\225>\354\214\316=\026\220\201>(J!\276\211ny>\232O\351\275\332E\370<\201\026\002\276\203\3140>[\201B\276\237\220j\276\302\364\377\275zs\243\275\264\\\254>2-\242<\221\253\023\275\\\016\016\276\261\342Y<\341E\366\275oyi=u\231=\276\214-L=\n\305\252>\3755\025=\310\377\222=s\243z\2758x\332\275z\317\373\275\302w\243\275O\342\361=x\026`>v*\366<5J\326=x\264T=\221\037\214=?\356\353\275\313\254S=\267k\370=+<\343;\276\224(><\372\206\276\356C\213\276\343\254\035\275\216\254\244\275\343\200d>\236q(\276O\257\233\276L\362\214=\244\317\037>\331\374:>\202\271)>\306\\z=%A\242>!6\207=a.\004\276\206\273w>\n\002\246\276"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\'\365\230;\004\312\270\275\3463r>-\276\034\276\230%\\\276\277\253\304\275^\275\340\275\356qJ\276\224n^>Zj\374\275c\\\254\276{\265\274\275/&?>t)7>\177\356\201=pD\222=\374`\327\275E\'\330=1W\372\275&\264\335=\376$\322>\032\350\217=\007\260p>\001\273t\276\363\246\325\276\355\225\350>\007\016\036\276^~N\275?0p\274yR\200\276Qy\274\275\352\021\216\275\212\004\202>\311\t\372\274\001P\350\276\002\016L\276_\365\013<\321\0050\275h\261i=\355\263\307\276?\022\242\276\013C;\276\204V\006\276\234\177s>\346Di>](\006\276;\364^\275[\252$=7\242\004>\331\366l\276:\370\215\274\330\207\251=\275\250\022\276=n\021< \275\362=4\263&=\177>6\274&\'q>4OU\274\235\343c>Q\246\306=\257\274\031>\\D\010<5g\334=\'<\212=+\251\206=^\375\215>R?\227>\370\333\272\275\372\036D>f\201\247\276\365\235\2649\357nm=n\025\301<\000\007N\275B-\232=-\245\374\274\024\371\017>\303\237\262<\016~\366\27506\017\276\236\014\277\274T\212*>4\324\271>R!\017\275\024\327\210\276\2055\372\274F\210\210=9\303\332=\023\034\210\275G\242\360\274\200\332\224\275\325\007\204>\360G\340<\254&\206\276\313\013W>z\037\355=\352\377 >\223\002\026>\376h\203\276 }a\276\314D#\276\237\357w<\336\316\263>\272=\212\275\231\277\223\272\344\262\007\275\263\226\334=\006\305\230>\316X\016>\3276\262\276_\201H\276\221&#>X\035=<\232\340\226\274\365Y\213<\273\236g>\362\265\3279\215\241\t\273\177\340\031\2764\212Q>s/\224\274\245\220+>gk*>\241\260\034>9D\233\276\035M\302\275zVR\276\266\272$>\336\373R\276\332\244\264\275\206dS\275\365.\211\276Q\000?\276\252}\201\275\265\264\224\275\365\327c>+\305\267\275\332Z\262>&1*>3\027\205\276\213\014\n>\202\221\342\2757\'u>^%\257\276\347\244\024\276\224]&\276\344\365\030=0\267\302\275\306\255[=\313\364\225>\016=j=7\336\322=\233\264\370=,Va>\316\321<>\221&Y<\274C\004\274\002\210C\276\302\344&\276\303\347\356=\206\252\200\276\243Z\326=\375\277\315<\005\334)\275.\327\r\276=\343-\274n\255\025\276g\026\212\275m\236B\276\265\252\023\274\322\335\242\276\242&\024\276\304H\216\2762SJ\276D\335\020>\216\\o>Z\264\030>7v\253\276\310f\t\276m\350\350=\023\361\231\276\220\304\232\276\017Y\264>\373\257\241;[\366\221=\240\267j\276[E\341=^\305\033>\225\343\210\274\343\230\023\275?\264\375\275O`!>8\257\343\275\235v3\276Rs\257=Z\357\330=\324~\264>\257\353\">(\337\201=A\203\004\275\337\255@\276\325\251\374;\276\251Q=D\350e<c\223\216\275<\303\253>\311q\270\276\312\375\246\275\371a\215\275\343\351\226>\2570\013>r\255D\276\356\210\330<S\346\371=\257\352\317\276\232|\217\275B\375\210;\270k)>\341\022\221=@\036\262=\375N_\276\202iD>Cl\2118B\033d\276\233\177`;\027\312\325\274 <\373\275\347\374\372\275g\214\251=\003\\c\276\344\341\254\275J\304\240\276f%\312=q\002\224;\367\344Q\276\217\364?=+P\336\274,\020\232>B\\\332\275\273\034\336\274\210\342s>\350\221\036\275\235f\232\2754^1>\262,\307=-\177\017>\017M\203=\245.G>\275Ht\276\232<6=\252\302=\275\320\246\310=\324\247$\275\332*\365\276e\343=\276\to\271\276\325\206\315\275^(\002\2757z4\276\316$\024\276\31670>GN\000=\220\340\\=_\203z=\213\312\346\276q\264\332\275\226\347\237\275\317\252\227>\325\322\276\276\236\302\350\275\270\355z\276c\342O\276\250\003\004=\251\313\204>:s\316=\241h\352\275\374\226I\276\2018o\276\031\205_=\003\3167=\002\321\204<cB\245<\371}A\276\236\262\262;@\233\260=[)\362\274\233\353\"\276\335F\210\275\356\355\013\276\233\234\343=\t\001\230\273\243\226\211<{3\244\275\377\363\036>/+\335\275:%\026\276\326u\273<\305\312\300\272\024q\017=\231sF=\037\034\321\274\240FL\276\014D\241=\256d\363=$n\304>\361\371:\275\352\364,>\347\"\000\274\276\024\031>\"\250\347<\242\0272>z\270\204=\255\325\006\276\363}\334>\251)h\276\007\220\320\276#\0164=\0252I>\217\256\236>-\300T>\r\306\261<\365b\345=gfH=CD\347\275\363\207/\276F\257\301<w\366Z\276 \034m>}X\202>\236K\200\275\223\310\303\275\274^J>f\202\261>\026\221\346\274JI\361\275_\216\013\275E+\026>?X\026=\320\022\r\276\010@\317\275\350\323!\275v{\244=\005o\327=\226%$\276\020\031\331\275\324\016\254<\237\013\240<\001\360\330=[\373\014>[\346\361=\025\326\242\275\360\005\341>\006\370j\276f\362D>\322\223\253\275^r\033\276h\201\2078\246q/=\"0b=H\326E=<\265\003<\025b\334\276\021\325\215<\330\027V\275N\001\234\276U\205(\275U\225\010<E\314\201\276\327g\220\275\373)4>Y\002\330=\013\312Q>\353\013\374\274\312\240\t\275\224\035\252<\\N=>\177\320\300<!\323\270=\266\344\031>\377\223C\276\031\355\203\276\243\244r>\246\253\374;\347\310\271\275e\325\243>d@\200=\247\361b>\362\300%\276y\032,>\006\227\005\277\200\352\223<\030\243\016\275T\007\220>\025\330\374\2750q\252>\034\266e\275Z\022\265\276F\243\t<\356\030\331=\375\224o\275&\177>>\353\247\324\275\375\030\340\272\244v\343\275\266\212(\276\352\026=>\345\247\262=\224\000\177\274\337\245\336\275\'\030\331=\313n\337\275\307u\217>\366Br<\301\302`>\036\r\360;8Lm\275\376\241\224\275\2019W\276\230_\005\277X\320P=\311\0070\274#:\220\275\351\024\233>\343\001\271<\235S\037>\256\276\035\274\210\335\376\275+^\373=\035\205b=\227r\317=,\325:=\033\300\r\276\374\365I>x\022\325\275\307\376\020>\213R\002>\210jC\275\357\302\247\275\037\322n\276\337\036\271:8h\031=g\032[=\350\211\230=\201\257^:\001cy>\022q\354\275~\357\220=\335%j\276\376\';=3\342\001>\3536\255=\000\024\235\275\372i\313=\255\236\256=-\360\217>!bp\276\316&\026=\206\203y\275\376\001\230\276\320F\345\275\236\037\003>|\000\326\275\265N\237=\334\375G>\314\004g\276\024\244\301\275Uq\247>\177\030~\276\366i\204\2756n\333=\250V\274\276\301>\200>\23223\273G\257I\275\377=\366=B\372F=\031\332\033\276X5\276\275\237\325\201=\225#5>\226\243\276\276\366\311W\276-\006\177>w\350\220<o\nx>\264P >\347\026\307>[\330\213=\240\277O=,F\262\276\006\2453\276\007\353\313\275\326\230M\275\001\273H>E\326\263=\n\222\033>\234\244N>g:\035\276\321\300\212\274\253\010\016=\271\303\036\275~\2721\275\"\363\312>\342J\226=\200\n\276=\237u\221=\220?\205\275*\215\235>\036#Y\275\256%_\275t@\233>\017\336\262<\372t+>\325n\001\276\241c\345=toG>Zkl>\221\";>=m\013>A\373+>\314\356d\276}\300\252\275\r6+=\245\223k\2760\312<>\270\330b\276\372\233\344=>u_\276\366\3503>_e\372\273\361\235\270\275\245\021o\275W\302q=\326^Q>\375d@=K#\n\273\000\201 \276\022\247D\276y\341\025>b\205\005\276\234\224H\276\254\034\373\275\211\374b>\001\306,\276\205~*\275/\tg=\325\213\342\276\303\177t=St@>\303\372\007>u\223\336\275\371?\272=\300(3>\270\211 \275r\027=<M.\007\276\376y\223\275J\352\036\276\335\0378\276\234\033\311\274\007Dk\276\217\300\021\276X\216,\276\272\272\250>J\341\221\274\"~/=+A\270>\253a\302\276gl\236\276pQ\t>\355\230\377\275\021\231\253\275\302aP\275\356YR\274\006&<=\230^\201\276\0105\326>\372W\001\275\234\3522\275mT\266\275\235\247\006=c\005\016\275U`\312\2759\212z\276\306k~\275E\277\341=\254\014\234\276\236\254G\2769ui=\023\2759\276\t\224l\275\373\313\252=\346\356O\276U1\033\276S\265\211\2764\303<>gr9\276\346\204\202=\225\n\022\275\334\275\007\276\232\354\226\275\014\265\002>\376@\201=\334\244%>\0301W\276\346\346\234>0\275\223>co =\332\035k<\322\t\034\275\350\277\236=\210\277\354\275n\342\322=N\301\210=\'\273K>0\274\034<d\256\237\275\221>7>\t4\216\276!\341\341\275+>\324=GZ\r>\320\027\237\276q\330\037\275S\333S=\236L\230\276\214\267\006\276J{\373=y\0272=\205\035\025\275\353\246\244=\320\353\267>A\002X>\245\0253\275K\t,\275\220WE=r\223\177\2750X?>\203H\352\276-G\021\276\254\300\034\276\247\224\244>p\237\300=N\214O>&(T>\334\372%=h\257\024\276.\014\361>\236\005\324;M\247\002\276\251\254\331\274\354-\036\275SX\014\275\246S\263\276\250g6\276\307J:>X\201\316\275\235\021\351=~\212\013\275\030E\t\276\nM]\275-\327\310;\300\214\021\2766_\005>\325\230\302\276\371\322\254=\221\230\016>\206\222\">\322\243&>f\305\235<\024\244\254\276`\271\242=\325.\304\275\337\226V\276\332\367L>\372T,\277\025\300\340=\251\253\320\274\235\270A\276\230\356\232>\220 ,\276\204FI=\373\327\267\2767\235\375\274\250h\241\276\240\224\356:\310\353\227=\217\016/>\313\032y\276|b\020=\340\346\276=\341q\311=\205\005\326<m\265\006=\'Q\225\276\265B\276<J\263y\276\373#\211\275I\365\'\2762s\202\276\255\335\222>\357\327\204<\\\344\250<9\212\227>\234\014t\275-\260\251;\225yO\276Y\277\211>\224\025\t>\\\311\014=\3537L>\350\232\207>\351\222>=\260\021\376=\231J\211\276(}\001>\300\353\216\276*\r\242\276|M*=`\324_>\\b:;\207s\002\276m\031\264>\235]\306<\367-d=9&h>\240\006\250<\017\220B\276\n\306\203>\035l3>%\321$\276\215\334X>\223\362\035=\226\014\"<*\027\306< 92\275\302\275U\276\235\343\271=\022P\365=0y\014>*\226\t>\266\353b\276\204(\221\2756\205\245\275=\352\225\276\215\260\205>6\177D=\345\010\333\274\036\336*>3aQ>O\374!>\313\223\352\275\3529V>X\244\363=\024\226$=\242\377;\275\022\332(>+\353\212\275U\037\251=W\325\365\276\275g\234=t\222a>\302\227\312<\246\330\033>\370\274\264\276xm\211=\247\031\301\276\024(\324=z\364\313<\244\267+=\352\010\022=\262\242!\274R2\027=W\351\371\275\234\254\267=K`(\275]\302\334\275S\031\001\276\270\227A\276\265\265<=\013\313\226;G\037\301>c1\321=\332q<\275\t\325\303\274\350G5\276\377\005\235\2768\362L\276\304\016*>,\261\227>I\232\001>\374\347\325=\002\226\261=]\354\241\276\313\022\000\276\260\265\216\276\354\262\032>\345X\264>\230\236\t\276\256\236\202\275\342\207\255>\227l0=\363ah\275\337r\240\275\346\374\272>\371=)>\361\272\032>\313\206v>F\266\212\276\315\220\233=!\203D>\377!^\275\006O\306=\372\374\375\275N,\023\276\001\362\267\274\203\315\205\274\225\371\317\276\240\353\\\275~\024\007\276.\314\324>\342\210E<b\271\347=\256\276\207\274\320\031\010>\025\"\027>\026=U\275\351\n+=\264\3702>\220\013\365<\212^|\275&\277\244=\370\371\221\275e\"U\276\347g{\274\332?\r\275~X\211=\013\376t\276\327\216|\274:\370\202>\203A\343<|v\004\276oU\205=\330\002\261\276=t\347=\200!\310\275\255\352\347\272\375\024D>\023z\305>=CP\276a\243\240\2753>K=\035\315s=u\276|\276\032w\207\276\225\"\372\275p\353\034\276z\370\"\275\347\373%>\014\355\256=\337\276\275=\267E\256=\306\224\030>;\315\343=8\310\247=\227\351y=RS\351=\200\010\325=\376\305\024\276\330\232\007\273\237\270O>Qz\005\276\227\301\004\272Q\323\266<\376\204W=\"Bl\276\370\3023\276\351L\225\276\365\310\025\276\200\220\027\276\026\325\317>O\035K\275\243\317\177=\013\323s\275\241k@\275Zt\010\276\324\037P\276\017\326\265\274\353W2>0\236c\276\037\344\r\277\254\246*\276\010\357\364<\2722,>\240u\261\276^\365u\275\211\003\362=J\'!\276?\252/>\376&f\273\347:\304\275\013\007J\276aw\254\275=\375\001\276\252\032#\276\224\'W\276N\301\006<*(\245<?+\273<\320-!\276\276\365\241=\271\227\n>G&\256\275_\210h\276\027\273U>$H_>/\n\215\274oL%\2758\274\234\276\321sq\276_\017\007=\351\374J\273E\215\t<\221\215\321\275)\010.>\304\020|=\321wl\276mWl\276|\214\244\276}yR\276\024\330\203>\"(\260\275\231q\245\275d\277\n\275\'\007\020\276\366\003$\274U&}=\335\200!\276\235YY\275}\225\027\275\371u\360=5\3118\275-\324\n>\000e\005\274qd\005>*3m<\347\307m\275\005X\274=J\026d>\230]?>\030$\030\276\010\032u>\007I\200\274\010H\341>\276&e\276\371\3076\276F\234\211\276\020\037->\3360\225\270\\n\301\274/\275\216<\257\255K\274>\"\304=\342s<>\211p)>o\334J>\332\363\243\276\334=\236\276\030\216\261=&\333\000>\333W\353=l\0034>i\277\250\276\352\033v\276\240\204\001\275\006\022\t>L@\205>\017\264\331\274\224\230*>\343\371\216\275\356*\253=!\277\211=\270\206\340\274\253\276=\276\002\202\311\275\263\014\247\276$]\006\276\037\254\005\276e\017\212\276\352!\320\275\316\332Z\275\212Y\201>\241\324\333=T\256\245\276\034\300\244;f\323\225\275\020hd>\206\216<\276\000\232\001>\204\030\026\2769\210^\275e\205O<\360\336\205\2763\030\246\275\326Vp\276{%V\276\253\315\234\274\031\344\351\275\311\236\323>\016\216`>A\352\240\276\300\316\205=bFg<\374C\344<\215\342\013\276\332\213\363\275W\346\224\2754/\271>d\312\301>\363\022s\2750\002e\2757g\200\276\356\334\376\275O\300!=\006\261\034>}\033\244>G\243\342\276\327\000j>wh\">\354\240\203\276\274*\036>\t\254\336\275\375\034v\276\323\224\000=\030nf=\327\203s\276BVX\276v\224\203>\244\274u>\003\237\276=\362\203\220\2757\367\002>\314T\347={\212u>GV\020>\256j\262=\277\240\271\275(\3605>\376Lv<Uf%\276\371\264\251\274\305\214,\276\004IU=\273d\025>k\212\032>@\025\n\276\306y\223=\317K\314\275M;\353\275\177,\246\276\337\027\004>D\0240=\033\322?>Zd\033\275\2769+\276g\304n\276\2638a>\270\2014=\",<>\035\215\216\275\222<\001\276+\\C>7d8\275\340\263\324>\256\331\356\276\202\001\212<\002\356\253=\336\2442\276\346\225S>\243\277\227\275\207\260\330=\233t\021\275\322\244>\276\357.\r\2761[\222\275\270\322X\275*\226;\275\305\036\316\275\351\361\355\275\026G\020\276q\200\221=\350\303\223<k\371\266>\027\333\022\276\231\321&= \235Y\275\270x\262>\236J\200>\203\267\367<\276)\257\276u\000\253\275\000n\331\274bDN\276\014R/>\260\252\017\276\231\351\">\266\214X=Bd\034>k7H>hn\351\274%\242\316<\031\262N\276\035\272\267>\263\234\217\276\016\0073>\262l$\276\307/\036>w\221\206\276\'v\037\276\314 \250>|?\225>I\277\252=h<\224\275\231\017\222\275\277\361N\276\336G\200=\266\251\023\276\234\2127\276\320\267\023\276\323\313\245\276p\357\234\276\316*\215\276y\235\r>\275\243\340\275\275l\316\275%\\\233\275HI%=,\324\224=;\255 >>)\267\276\333[\215>\224K\232=\303\345?>\246\342\036\276\2468\321\275\014#\342\274+\303*>\351L\221\2752\374X>\241f\374\275\370\212\262\275ZSa<\316=\277\275\222\nN\275\251\250J\2756\277$\276\377\026\023\276\016\326\242\276\347=0>\230\r\312\275\204\332\215\276|\322q>\303\222\r>:\336-=\223\302/\276\375I\367\275f\304\327\274\327\355\034\276/$8\275\2500{\275\242\275Y\276\003\355t;w-\233\276X\226\233>uE\231=P\277;\274!\242\207\276\375\334\226\275\255\035\212:\226\3453\276\304\242\253<\300/\311<\036\375\377;lmN\276\'\305\037\276\263\261\225>\347\311\221\275\002\245\217>yy\320\276OE9\276.r\334<h\353\227=\237\007_\2768\337\242\275\236O&\276k2\220\275\255\223\275\276\215\357T>\3715\224\276\036|\026>L%\350\274,\354U\276\324\274q\276!\217\021\277\200&e\274\030\354c=_\036\270\275\020`!\276=\035\233=\tHs>\032\302r>y\246\300\275\227~1\276\245z \276R\214\252=l\316N>\275\212\244=\213\025\200\275YbO=\276z\350<\344\342y\275\262j,>~\022\216\2754\004\323=\355f\253\276\374\341\004<\244/\024\275v\303-\276\014\033\254>\346\230\203>\203\312\300\276GT\241>M\242B>\rw\241= .T>:\253\n>\333\311\255\276ii\224>\355\264\370<D\201\\\276tU\252\276\336\026>\276\370\'N\276\250\313\231\275\024\331\351\275\032\235\361\274`\374\023\275\353R\314=\317\306i\275\nj\031\275\t\255\206\276\376\230\026\274\353Z\302\273\214**\276U\234\027\276\212:\370<J\211\034\275L\002\266<\013\031\245\275\325\'\262\275\245\245H9\315\014B\276\315\345\225\2761\331\216\275\203]\336=\274\353\002\276Ms\230:\342\230\224\275\036\t\335>=@\202>\262\220R\275\314\004\317>\300N\340\275z\321\215\276k\256\244\276\247\234\351=\0167\207\2767\244v\276F\265\242>\252\331\315=\301\240\266\275p\303\221\276\217g\255<\331\215a>;\374Y>[\250k\276\216\225\351=/\230k\274y)\334\275d\317\240\276\335\361=>\006\256\022>t\356\313=,0k\276\257G\266\275\275Y\201>\364\034\245\276\025\241(\276\376\360\231\275\351DI\275}\3502=\204\214%=\021KK=|)<\273/\\\212\275C\023|<\346p\233=`Pk\276\260\267v\276e\3400>\202y\217\275n\021;<\013d\204=\346\343u>\317\2257=R,\255\276\372\031\345;Bv#\275\300s\270\276\354\377\260=m5\235\274K\2006=\'\356\225>j\033;\276\231\347\307\275\343\341\036\275Re\001\276\250\262\306>!\266/>\222\323\024>\267\301R\275S<\371\273j\227\222:H4C\274p\3762=\3670i>\306\023\334>\322));t\255\324=\253pS\275\334\034\233\276gX/\276]\226<>A\n\243>[O\204>\251\231\366;\202\215f=\336\352\021=J\020\251\276\324Q\200\275\277!\257=\nTO=Oc\315=\267\340\000>\224bL\275t\020\010<\313\311\376\275\026>\277>\232\306\243\276\223-\225>C\302z\274\210g\202=a\002\027=\203\023p>\020\223\207>\200s\375\276%\307Z\275\230\255\227\274\316\3148\276\373RP>\023\302^=\217\270\036\276\021\345\356\274\276\222K\274\3270\357=c\027\\\276\373\034\207>Wt\300\276\272\213\320<\237\376\255>\226\375\203\276\242\034+\276\025\316\010\276\300\013\213>\270\010\205\276\263/\215=\366w~\276\326\314E\274\'h\034>\347\277\016\276\306\312=>!\333H\273-\030<\275:<\226>\223\206\254=\354\321A=\261\351\256\273\314\336\254\276u\310\034>\311J\215>\233\335\216>\3444\306=\253\244\205\276s3\215=\002\264\331\275\251!4<\312\310\263<\027\3722>8o\010\276Kx`:\0009|\276\304\211\364\274\350\246w<\347:\036\276\0218\324\275I\274\311=Xd\212=\202)B>\003QE\275)*\216\275\271\014\346\271\207\271?=qO\222\276\245c\210=\206m\263\275Dpj\273H\253C\276\263\241\324<E\225\201\276Ea)>\242c\214\275|,\267<\nn:>\321x\234=\3149g\276\375F\255>x\324\321\275@\336\236>~\255\231=e\223\237=\336k\221\276\307\242\231\275\003\252y=\212\n\210=\356\2736=\274\343\023\274\221\007\017=M\002\233\276\001N\360=U\373\030>\311\024\207\275\345\242F\276K\n,>\215\354\240\275\222\r\001\276\244x\230\276Mg%\276K39\276\263\377\223=\005\212\313=\"+z\276\273|m\276\230|\315\275\231z\215\275\336\234\355\275\374n\200\275_^)<zx\203\276\227Gd\276Fi\357<^\252\023>\324\212\221\275\336J:\276E\340\214\275\332\365\234\2742\026\322=\335\244\205\275\007\356\251\276\000\323\206\275\215b.>,\3335>b\220\035\276W\340\312\274WC\032>T\013M>!\226\033\276a\024\002\276W&\003\276\333K\225\275Jt<\276[\373H\276f|=\276.d-=\271\246\252\276\256(\225\276\241!4<eL\267\274.\321\264\276\0073~=\236\013\364\275\260\001`\276#\022\236\274\234\317\236=\310)A>w\244\315=\215|\032\275X:\331\2759P:\275\250\362\303>\360\335\227\276\214x\206\276\357$\205=5\007,=T\016\262>\303z\277\276E\224\256>\220S\036>\016\277D\275\372\254\030\275n\377\036\275\213f\026>\202\243\n>\3601\032>\002oA\276Qv\276\275IR\003\276\037G\202>\325\243\327=\251lJ=\233\363\021\276\030\300\206>{\367\027\276h_\020\276\362\034\314>\311]\022>r\312\206=\017o<=\3232\270=\335\372e\276FZ.=y\323r>>\r\240\276\022\034\207\276N\277\007\276^\262\235<g\217\n\276\236~{\276\356\373,>\266\0219>iF\210=\023\261\026>\031g\013\275\316\273t\274\241\023x\275|V\247=\363\205\255\275CR:>J\266\244\275\230=L\275\211M\341\2743_j\276q!\207>\350+\230\276\270\214f=8`\220=\325h\341\275\320\220\376\275,m^\276\370\314\177<\025\237\244=\371\344\266=\341a\333=\343\005\355\275*\005\006\276\002\305\">\303|\207>\245\301\330><mv<^e\210\276\216)\026=\365\331U\275\245\250\007\276\007*s\276\347\331\303\275\030\327O=\016\375\260>^\301\311\273\344)?=\337\264\"=\367\314\270>]\301\020>\236\203\335\275\364\024a>\025\361\302<\246%\376=\322;\350\276YF\360=z\017\261=\264\304\232=ff\222>\177Vk>\276\004\320>=\250\322>\333\355F=L\221{>L:\345<\326\n#\274%(@\275\277K\034\276=\350i;n\325\234\275L\325\276>\277\331\267\275qJ\261\275\360\376\357;\235\024\220\276)C\206\275j(=\276\313b\273\276\220)!>\242}\034>l\302K\276\013\310(\276R\316|\275m\377\026>5$\350<n-\206\274G\0065\275_\\\267=\005\350/\2763H\215>\276\013\212\273B\2736\276!\371\226>\335\']<\234\027\233>\266\354@=\242\370\215\276\207\261A<\265\213\014\276\304H\204\276\354\021<\276#a\016>W\255\261\275\003\001r>\212y\321\275\267F\252=\246\305=>\320\271\035>\021\272R>\024\363\307\274\353G\264>4\264\014\275f\220\273=\2329\036\274\213-v>\360\212R\275\273\3472\275\305\233\213>\370\332\250:o\240\246>Y\252_>F\311`\275$\260\225\276\207\3131;!\333?>\301\001\010\275C5\204\276\013H\022>^\025\247=\020W\320=\025h\304\275Gw4=\230\325\247\276\0013\201\276\\7\020\276\237\260\005=t\325\272=\254\265\237=\376m\272\275\253\321\303\275\000x\251<\023\244\330=\242\330\304\275\000\376\300\273`\342\370\275y\271><\3307\247\276\013\r\362=\224f\n;\271\323\214\275\322|\307=r/\"\276_\361\364=\016bK>\240\212k=\341T\316:\311JK\274x*I>\2447\240>\020\312\236=\025V\264;m\024\370\275C\027Y<\225\245==B\367R\276d1\201\276\200\270\017>v\345\204\275\265W\233=\365\371\306=m\251\024=\260\032\211\276\274\006v=\306\177\356\275\031\374l>l_\242\275\237\034G>\277\036q>\344bL>\370! \275\204\\~\275\306l\374\274\332X\225\275F\270A\276\351\320\320\276\306l\212\276\037\255+\276\315\356\026\276\2364\245=\375\345\323=2\261\026>@\316\236\275\322\370\220>@\022.\276\272d\301\275\376\335\206\276ryZ>\263e\201\276\262j\237\275\033\245\343\274\037\342\r\276\3723\376\272\236m\010\276\213\033\330=\275\001x>\276\362\224\276z\342\216>\362\030\001>\250v%>yg\233\276A\022\253\273i&2={\227\246\275c\326\367=\036\261\230>\370\247J>\030\327\270=N\204\224>7U\005\276\352\204d\275\317\327J>\222-\320\274\264\340g\276^b\233=[Y\217\275N\263i>\277w\222\274\242\304\232\276\252\353b>6\332\222\275c`\225=\203a\200>H\276\336\275\326\361\264=\2235$>\327\242\320=r\265\371\275c\221\213>\\&\337\275\323\223;\276\266\341\216\275\307\227L>lj\016\275Hg\215=O\215\254=\226\0301>tK\310\2769s\024\275\346\2644\276>y\320=\370\327?>\216),>\235\345\022>\324\232\304\275H\031o<n\242\r=d\230W>Q\010\r>\202Q\246>\351\357\313=2L\225>3\337\304\272\025)_=WD\372\275\274\026\307=\366\r\033?\213\335\">\354[/\275\330\223\311=\350-,\276\000\257\377\274\365\306\376\274\255D:\275Ke;\276xA\025\275ET\224\276\363I\277\275\237\020\201\275\231\352\320\275\303n\341\276\0252\227\274\342\322\005\276?8\253\2752\223X\2760\205\025>\177z\241\275\212\264R\275\244^\372=\312\2576\275\351\215q\276\337\216\r=\375\212G\275\037\367D=m1\224<l\210\330\276\316F\326\275\347[\233<\354U\003=\336]\266\275\3634X\276-\217b<d\033\022>\006\233\000=\220\210\322>\210\034\227\276\020\357\373=\265\270s=\312\357\005\276\267>\314<z\234\271=\305\257\021=\270n\317\275}\242&>\344P\031\276\001\310\200=j T\276\270s3>l\347\036>./H=\006\245A>\236\343k\273T\201\037\275\352\306\205\276\000\360\321=\251\261k>s\3007\275?o\005>\341\347A>Z\001\337\2733\236\275\273\023\227\365>\266\003\352\275\222\302\034\276\324\2467\276\372\332\302\274\345N\363;\346\315\335=\366e\020\276hQ\n=g\300\035>\023\373\217>\304\2127\276\364\n\003\276\372\373:>\327\214g\274\333~\007\275\242!\030\276\t\035\234>\267\002\353\2758\341\216>sz?>u\347\365\274v\3155\275\346\237\030\276\006g_>g\312\007\276t\262\201;\202\303\303=\322\321\236\2737\2067\276\341@%>\371\376\210\276\363\232l\276\364\214\272\275\200\332\300\2768\276\225>\177\253\307>\237u\222\275\375B\246=_\352\333=\221\231\254=cg\n=\233\267b>LU\023>\312\222)\276\355\223\332\275\375Z\000</l:=\261\374\243\275\\2\316\27627\214=\270\241r\274l\tN\274\3451c=\223\211\\=]\302\241<\031&\371=\205\241\024\276\306SC>\255WL>\232\225\265>\223L\340<\\\220\n>\275z0\276?C\377\275Y\367\352= \026\'\276\305F\026=\275\240\341=\277v\032>S>\022\276\227Yl=\016\250b<\027H0\276\263>\365\275?\331\027=\233\266\302\274T{->\007\240\204\275\317oB>\030\2409\2762T\350=\356\244\016\2765Td\276\224\002\354=\363\013\226>H\354\256=@?\203\276n\216\245>{W!\274\023\210%\276\364\007|=J*g\275\337\201\007\275\006\311\234>\326\205*>]\\\004>\307\343\232>\236\243D\276\267Q%\276\273\244\277\275\344\t\262\276`?1\274T\\q\276\304B\327=\2164\032>\211$\013=o\265R=\347Fv\276\312\325\221=\200\215.\276\254\016x=\352\337\270\276\270\014\030=\013\024\007\276\231\260\373=V\n\'\276=\337\022\276\003\330\"=4\210\377=\213\347\006=\225\364\025=\232\211};x3i\275\337T\257>\235\010\020\276\223\206\225=J\324 =\336\321b>\007\300e>A\n\253\275\312\270(>\n\275\322=m\300\311>\223\032\">!\225\332=\254\201\200\274\332\260;\276\220G\236\276-\245\322>e\240i>\t|7\276\\8\232>A\001\263\275\213\340:= \340\375\275\344E\r\276-\232R>\335|\352<\342\002+\276>\342\347\2766\253\231>e\330\032>\221\031c\276R(\374=\024l\343;Q\202\301<\251\016H\275\213\243c\2757\273\300=K\356H>Z\233N\276\211)\025>B~\331\274Y\344Z<LAq>8\007\251=\227j\215=\360\327\234\276\375\031\243\2756\313\274\275w\232\202\276{\304\334=I\332\246\267F\372A\276!m\226>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\255\276,\276\177?\024<\324f\207<\372%\212\275\th\r\276\230]6>q`\017>?\316\311\276Ga\316\275p\021Y>\350|J=\002J\204=\360\334\356\271a\306\223\276\327t?\276\257.\343=Tu\253\276K\363B\276/8?>\001\253\220=\354b\345\274\013.\232>U\230\007\276\223\220\241\275\260\233\030\276\351eu=\367\240\212\275\356\361\247>X\265\021\276\202\302\214=\251V\201>\220\325\n>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\367\232\031;\212\377\025\273R\235\037\273Zrq\272\0140\\\2736\020\355\271\237\347\302\267\032\"\030;\245\371\200\272\'\271Y:(\260\023:b\002&:L\345\031\273-_ :\242\353W:1\212O\273p(\322:\234B1:\002-\336:\211\002\240:S\303\307\271\006Jg:\004d\356\272\206=\334\272\010\311X\273\024\332\21497L\2279\205-\331:v\207\300:}?R\272\355do\273ff\302:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\274}\t;\267\205\377\271Gi69\367\001!\273\267v\274:\023\204\007;\037\013\273:\263\203\324\272B[\375:\212\257\237:\274\025G\273II\237\271n\'\177:\030;\340\272\224m\030;\371S\245\271\321\213h\273\351\n\027\272<\350\3319\200w\031;\261?\0259\2315L;\327\340 \272\223\346\235\272\006\020)\271\332}7\273e\013K:\231\266\255:\313\272\201\272\344f\026\273Fs4\273\356\345\3339"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.01
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_e6292060702844faafd85c57343f6faa/part"
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin"
      op: "StringJoin"
      input: "save_2/Const"
      input: "save_2/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_2/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename"
      op: "ShardedFilename"
      input: "save_2/StringJoin"
      input: "save_2/ShardedFilename/shard"
      input: "save_2/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/ShardedFilename"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/ShardedFilename"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_2/ShardedFilename"
      input: "^save_2/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_2/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Identity"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/MergeV2Checkpoints"
      input: "^save_2/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_shard"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_2/Const:0"
    save_tensor_name: "save_2/Identity:0"
    restore_op_name: "save_2/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
