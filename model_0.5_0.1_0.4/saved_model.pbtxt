saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: " \323\034\275\r?\365=)A\205\275~\216\316<>g\016>\226O[=\014Y\224>\331=S>\322\300?\276\346\006`>;\004\270\275\205\227?=\301\223\375<\342\272\002\276\321w\225\276\214\350\212\274\354N\222=\355\r\206<w\356\033<\246A4>R0\243>,\335%\276\311\001\005\275\236]4\276\205$\227=\007\013q\275\314\335K>X\237\271\275\340\177\200\276\376\021\017>XXz\276d\243R\276\"\372\355\275\022\177\377\275\264\307\323=\351\217\274\275\232{D\276\306\356b=\026F\271>H~5\276O\033\254\276\033\230\216\275\375\201\256\2751\322O\275\0078\327\276\311\330\235\275\3255\215\276V\372\n>\337\357\n>\323\365S\274\004/O>\014\014\204>p\375\022=\312MT\276\207`8\276\201\337h=\243~5<w\303\265\275\332\346\320\276T\007\210=\204\276D\276Vx\226\275\233\336\234=\342\304\250>\274\023\202>KR\272>\363S2<H\254\377\275\337\345G>\201\362l\276\013\364\211>f\023\006\276\2171\273\275\210$\227\276\033\321\220=\320\312\224\274Y\"\001\276vn\221\276e\255\342=\034BK\275\032\331(=\367KT>n\275\304=\352\241.\276\n\374\236\275\3315\013\276\253\346d\2751\303)\274b\007\260>M\254\250\275\375\225\205\276\3304\273\276\214\037\207=\213(q\276\t\243\036>\240\253\216>=\217\324=\\\273t<*\350\336=\217\337_>H8\350\2737q\031>\315\2379>\305\252\203=\213\340a>\021Hb<$&\226\276\2731\010=:\246\350\275\224\016\016\276\251q\364\275@PD>\354\r\'>\260\226\373=\340N}>\204NX\275h\234\257\276\233\024\255<\014{\254\275\214\233\235\275\216\032\013\275F\013\037>\253\023\036\274\334\223\212>\\<\375=\247\315V>\226\222T>*\006\265\275\347:\240\276FS\211\276\301\033\003\276\275V\231\275\006\324\325>d\004!\275N\360S<\332o\262\276\316_\020>Ih\217\275\026\031\033=\262\276\315\276\024~.\275\210\227==J\3153>\357Y\333=n\331\233>\205x`>\000\357\221>\037\354h>\214\300\014=\010\213\321\2741\206\\\276~\224\226\276A\017\323\274\002R\311\276;\017\017>\207\022\343=\214$\335\275*\372\377\275\302[\203\274\025T\001\276\r\354\030\276\361\346B;\234\356\344=ce\277=\371\202\232\276\341uw\276\242\321\337\27528\022\275&\304\025=\017c*\276\277\244I\275\221\340\023\276\353\237\007>\356-\352=\003\242\023\276WR\030\276H-\345=\032\222{>\370Xq\276\370D\213=\204\1776\275\325\022\027>BFm\275;T\347\275V\335%>M\314\216<m>\364=\342>\213>\276\206M=\016\377\351\275\363f1=\352\313\256<N_\226>=b\376\275\214\031\230>w;q\276u_F\274!\355L\275\"\264p=\246\376,>\377C8\276bm\346=\304\272\027\275DJ\306>d\371\255\276\3325W\276z\250\260\275g\341^\276\266A\222\275\2014\212\275C\234\244;\266i\330=\204\325\n\2769N\350\275\013\212\255=\333H\212\276y[E>y\211\227\276\375\206\272<\320\331\262=m\237\003\276\321\243\030\276Co\333\275\236\313\023>Jw\233\275\211\227\324=B\256\261=5\304\273\276\356\243\313\275\341\364\356\275\317\241\374=\242\235\271<\002\233\235>@\251\032>\224<\000\276l\201\006>o]{>%\240\335=\207\017\314<\254\256O\276\030&\234=]\326W=\334\342\202\276\'\013W\276\177\344\037>\246\373\366\273M\234\215=\207u\302=I\020\202>x\226I\276\275\273_\2769\216e\274i`\235>\372\256\240\276X&\316\275\345A\215<\271\370\246\2748\325\264\275\253\034\332={\207\245\275\336x\216>\252v\331\275$\027\265\275M,\263=m\017\212>G\021\343:\224R\210\276\265C\214>\257\204\334\275X\223\000\276-\267\261>\321Z\361=\027j\006>R\364f<-\223\305\275\306\323\037<\215\311Y=\245\010\276=\232%\n\275\016\232\377\275N\036+=Y#\220\276\004R\265=\302\002r\276\000\261\250\275\304*\274\274\2013\"\276\317\356\370<\356\362q>\212\364*\276\366)\025\276v\3326\276\270\027\310\274\204\316\205>\r&\251=\021+\351\275\274\035\007\276`)\245\276\013\322L\275(\361\314\275\306\232\223\275\246\026\242\276\325\205\225>{\033\t\276X*\263\2754\025\001=\367uY>\264\3058\276\370\272\001>lV\000\2762\320/\276\267\000m\276\027\352Z\276D\r\205>\365A\216>\264\346\316\276\200_\001\276\007w\231\276\243L^\275\215\316 \276\3743\206\276\273\033\354=\237\321\003\274N\370+\276*\010\017\275\tn\341\275\334\310\350=sWs\276\202_\021>\300z\306\275\372C\242>M\354W\276:)\226\274;)\211\276\361\026\'\276\027\225(\275\374g\036\275P\216\350<\364\277\233\276q\016~>\356Ai>\034u\347\274 d\223\275\304\374\304<\301\243\260>\354\264\260<\215W\204\276\023-\266=\243_!;\331\221p>\202<\237=yc\227\275\234\003\256=\2025\236>\223\211\305<A\305\244=\331vZ>\264\236\373=\020\364D\275s\244\331>\223\227e\276\021\334!>E\371\222={\010\013>[\303\037>\023\3649\276\214)\350=\374%\206\275\235\367\001\276\305\024\347:\224\366Q=o7\217<F%\271>\204\274?=\032\201x\2762P\t\276\333\264Q=\227\231A>\255_y\275\307F/\275\310\350L>h\303\242\276\223\251\351\275\253)\244>\276V\030>\237\243\216>\262\363\014=\236ZV\2750{\264>1\271M>d\t\355;(M\277<W\215\002=\037\344\233\274\233\013\261\2755^\036\274\257;\314\2756yE\276n\030F<\037Nl\275\276\231\242>*\034$>y\361\030\276U>N\27644\245\276l\033.>\031f\240>8\213\024>-\252N\274\177<)\27544\t>^\267\300>\224\216\237\276\031\327q\276\256M\243<\274\"\251\276\322\366W>\314\262\213<\004\250\276<J\034\270=W\002\214=\374\322\336\275>\0028\274\022r\262=m6\321\276\035\367]\274\024\035\271<\340@|>\003D\030>,\260\205\275s\346k\274o\004@>\016J\\\276\366\325\257=\377\352\"\276\030[\366\274!{K\275\377\307\251\2760\373\262<y0\203>L\036\267\275\346h\030\276U\362i>\206\304\242<{#F>\221\203\020>\235+\335=\345\275+>1\264\214<\330V\202\275^\010\362\273\275l&=\367\362\342=Y\365\n>\335\022\240>\262j\360\275\242\220\335\274\346I\204=V\205W:\306\tE\273\205w\261;B\205\206>~\177\205>\331\245\236\276\225\261U\275Nz\262=CZ@\276z6h>Z\312z\2753%j>\356\335t\276\216\255S\276\261lz\274\032\340X\276>1\370\276\374\374t\275$X;\275\224\272@=\364)s\2753\275\240\273\226\330b\274Q\016*;t\006\377<\323\207#>\357\\\305\275\356\211Z=\253&\200>Sa\332\274\227q\022>\343\312I=\244\306\301>\025\326;>a\212\201>}\0014>\274\221\374\275\306n\366\275M\024R\275$\314\030\276F\352=>\246\260\272=\223f\216\275x\330\241\276\204iE\276\270\321\244>\002\374Z\276mc\340\275\344\263\021\274\341 \r\276n\260\022\276U#\205>\223\'\307\276\016\224\354\275\226\355/>\'\230&>\353F\205=\303D<=\205\344G>\2749\021>\020&\202>U\362y\276\323\333?>\237#-\276\2143\034<\023qB>\274\337T\275\377\007\272>\027\345\316\276\014\260\236>\200\324\341=\007D\016\276w\014\244=\363\273\004>q$~>\231\312<\274\337\235\000>\217\367\254\275\020\347\177>\022\374\360<\240\257\233\274\370\033\371=/\216V>[%\214=\255\017\233\274\020\325\336\272><\t>Zr\215\276\r&\035\275\010\353\252=P\343\320\273q\335\033\276\226Q\026>~\210b\275\223:`\276Hh\032=\215\260u\276l\250s=\007\207\316=\320\201\346\275{=A\276m{\256\275\026\313\347\275\363\315\217\276\250l\256\275_\0145\276J\336M>:\205\233>\021N,\275\215\372\331\275\317K\025\276\'\305\252\276< i=\220\217\331<\334\230\267=\267w\255=n.\003\276x:\362\276\004\330\241\276-\221\332\275&\363\r>\354\211\"\276r\254\371=\313\\\030=\303\313&\276\361\311\026\276\300\316\021>D\257 \276\307\022m\275V\r\215=\2461k>&<\372\275~\276\262=FBH\276\322\325\'>\030\245G\274n\353\215<\217v\277<S+O>\"\352A\276o\240\r>\"\233\323<\204\\&\276O\273U>\205w\"\276\300\\g>@\322I\276\355\030\023\274v<\261\276\tA\201=_+\304=\365~#\276\2125\242=<\r%\275\232\271J>\335\355\272\275\355\257\003\276/C.=\000\216\206>\t\226r<\247\215\207\276\005\016O\276\367e\273\275&\277\334\275\315+\200<\370\273\026\276\255.\233>o:\355\276\362\334\265>h\246\005>\305\321G\276i0\\\274\017\307\315=\270k\264>\377 \030\276\233\211\005\276\204 \006=\t\'\322;\357a\327>]0o\275\324M7\275I\340\210=Y\321\274\276O\334<\275\225O\031\276\266h(>\233\275\260\273@9w\276\227#\210\2763\014\341\275!g\004\276\325\230R\276t\252\337\275(\220\252>\301\242\036\276\020\321\237\275g\2457\276{\230\311=\3747\276=5R\367>eO\367=\305\277(\276\345;P\275R\310\336\275\001\367v>\006\2024\276{\236\244\276\036\371\003>uF\350\275\225\177\264<\'ZU\275!=\344=e\310\036\276\364\r\312<\026Dn\276\213y\200>\360\210\004>\201\366\277=\233N\355=\316C.>\314>*>\324\301\254=#\031x=E\242\030\276U~\362\274\346\270y>Z\203t>\251\345\003\273\217\277==z\301\236>X\n\351=\313\3019>\031\\\232<\205\316\r\2768\"=>m\260\247=\201<\363\275!\336R\275\234F\205\276\313\352\212\276\262\355,\276\001\346\374<\023{r\276\351U\323\274\253\215&\276\360\315\013\276\033*\217=\215E^\275x\224Q\275N\217\246\276iF1>ymi\276\232\361\013;\022]\370=B.\016\275\360\343\304<\214O\242\276T\276\205\276b\0343\276\227\2645\275\210)\235=%H\317\276p\212T\276\304\3540\276t\321Y\274\261\215\316\275D&\203\275\032.\017>\235b\"<jV?=?\266\214> \t\036=\365\004\305>\355\372\266\275F\030\224\274?\344<>\365\230l\276l}\347\275\323\177\306\275`k\372<v\023\336=\337o\207=\376\266\'>\221z\266=i\006l\276l2\037>\337x`\276\2210\226\274\245\204U>\031\006\366\275e\307\256>\315\305\212\276\263\023\241\273\370MW<<\370\204>\240X\333\275y T\275\2450~>\241\034\r\275\r\276F>\243\226\002>\206\314\310\275Cv`\276gz\257\275B;\203\276)\253+>\256v\307\275;\361\036>\350\260\234\275)s\277\276z\371\237<\360\217\372\275;z\002\276z\005K>\234\345\255\2745\214\373\275F\323\213\275=\340\\>\255\003f=\215-*>\257\370\303>\236\206(>-v%>\023\311\037\276\250~\204>\"\017z\276d)\243>\211\t\322\274D\223\362\275\260\027\253\275\264\273i>.\216\202=\355\310\235\275\252\002\333\275W\031\372<S\307\001\276L\003~>\356\013\036\275_\030\035\276\327\002\326=\277\033m=Aq?\276\262\351\243>\034\360\311=\036=\256>\014Wr>\313o2>@\331\026\275\215I\036>\273\312\366<\271\274A=\264s\331=\"\271\336\275\024\245\002\276\366\215\000=\021\211\200>\257\321\t\276\017\320?>\310&o\276\347N\302\275N\034\232>\3103e\276\r\232]>\245\326\263=$\026\316>`<\332\275j\342\205>\346#D\273>Y5;\330\345\037>\240N\233\275\234,L=\r\033\002\276XE\223\276\360\343\274\275\323\034U=\362r\270\275\322\357\007\276o\330e\276l\355\221\275a\206\177\275\273 [>\034\336!\276K\276\n\276\273\300\016\276\245\224\233\276\304ni\276\247\223?>3\247x=\324\200\033\276g\361\n?1@;\276g\242\274<\340\027\235>{I\255\274?\313\327\274\222<>=\001\020\227=6\344\356\275X\210g>{\202\362<\033cS\274\205\370\232>/K\277\276d?\227=u%`<26H=\207\322.=\035bu\276\334\310\370=e\253\027\275\307\344z>NFU>\322\262\261=\241\223\263\273\233\250\345=\342\366\331<V\032\022\275\273\301\305<`N\330\274\225kI\276\017\177\344\275\323\035\255\275\263\205=>Z~R>7T\343<\351\220,>\211\303\272\275\246\245\301<\014c\231>\372\nL\275\204g\365\275\251`\220\275\250l\017=;\310\215\274\301:\361\276\334\207~>\342\204\221\276R\270\026\276*r\360=\330\360g\276v\000\210\276\027\3464\276\371\247\346=O\365\250\276f;\346\275\371\242j<\344l\220\276\276\237\336>\270\362\215=\277\237\204\275G\n\r\276\'\200><a\262h\276\224\303g\276(I\013\276\232\217\t\274K\232\007>\261F\313\274uW\223>9V\006>\010\330\032\276k\277\202=aiJ\276PY\034>\376\215)>~\305/\276\357Y\033<\"7\021?\344\325Z\275=\202\275\276D\021z\276\360\371\312\275\034\261\250\275\375g\327=\026e\016>\032\331\260=d*\305\276\337\302\250:\336\360`\275p\323\356\275\032\3754<e\312*\2763\251\n\276Ku/\276\317\234\321=\t\367\356<\2641h\275QX-\275\347,)=d\'\332\275\244\262&\276X\177+\273\035X\356\274\231SK\276\214\337\327\274S\233\332<\'\352\264<\350\356\014=\352q\003\276\313D@\276\204\304(\276\236B\n\275\250V\243>]\362Z=\354\265\251>2\273\023>\254\313\372<\226\\\330\276\240_\331\274\024\311\316\2755\372a>[\224v\276\311\306#>X\364Z;$\243`>\345v\270:\351\371\250\276\321\336\267>P\020U\276\347a\225>f\271\277>\n\277\002\276\017\227\206=\215=\'\276\363l\215>=-\200>\345YY\275\275+*;(MJ>\362c\263=|\031\207>+TH=\224[2>\003M\003<\245{!\274~\352l>\016cD\275\252v(=X\311\323\275\210\0174\276Uj\277\274\224\263\003>\001W!>\023\271\374\275p\303\304<&$\234\275l\240D\276\343\347\307=\373_5>p\272U\275\344\230M>H\316%=4\200\373\275z\000\026\276~4\203\272\305:\251\276\367\203\234\275\370Yx;\r\376\344=\235\013\246\275\250\245\235=\351K\376\274\350\021\004=\020\203\210\276{\371\351=\303\227<>R\223\261=\322\262p\274\211\310a\275\r<\260\274\366\001G\276\256\355\366=\324nj\276.M;\275\226\n\212\276\235\205\235\274\307\213P\275\230\222\201>B\017\272=AHg\276\334\344!\276\213\307\253<\300%\237\276r\365\314\275\224x\220<\346[\203\276\320F\315;\216x\235\276\350#+>\273\214\t\277\217\022\240<\230a\035>:D\347=C\306\217\276E\247\017=\222d\257\275\324\340e>|\3642\275\261{@>a\241\221>B\234\200\274\t\270\236\276\371:I>\215\352q=\006\355\004>\307\244Y\276\026<\010\275\274\263\207\2769jw>d\273\347=\034i\202=ia\010\276\370yI\275\342=\327=\027\335R\276\035=:=@wA\274\215\340\371\275)\2641\276\207M\023\274\336[\267\276\317\311@>O=\245=\342\346\311=\\\007d\276\201\355\\\274\'\335&\276\313\233&\274o\333\031\276\016\005\327\275S\265\017>\346\3571\276\323\324\202>\206\013\350\275T\031\325\276i\351\342\275\310\213+>\342M?>X7Y\276p\344\002=c6\272:\t\361\010>}\360\231\276\037\013\320=\203x\253\275\374\270\000>A\364\223\276w\220\306\274\336G\232>\256\377\010=Bm\250\275L\2276>\317Zt\275\222\235q>\316\340S=\231\235\270\275\341\255\332\275\347\320:=\204\354r\276D\366\323=\277\005\346=\314\366\014=\376F\343=\3664\017\276\315\240-\276\240\300[\276D\006\211\276W\213$\276\032\321\245\275\357G\247\276\366\245\235\276\302\376\227=[\212\020>bN\212=m\311r>\235\250\217=p\330!\276\337\325\315>V\254\r\276\3036\210\274\272VF\276\341\352\003>4\233|\275\256\236[\275\244\324\246=Kv\257=?DU\276\037\240^\274\302u\342\275ml\001\276_\223\333>R\007\010<>C\242=\266\276\252=c\"\326<8\342X>\035\342\320<\343p\222>2s\347=\321\334\252\274\347\014U=9\312W=\020\242\212\276.\301m\276\323l\370=h\226\332\275\231R\227=\202\003\263;\3573;\272\331\366\010>\344\365I>%q\177\276\343\217O>\201m\233>\373\243\247>\242\354\236=\332\373\002\276\321\330\016>9V\267>$=d=\254\003\004\275\370\343>>4\226w\274a2[>\367\255g\276\357\237G\276@\211\020\276\325Y\307=\341,\210\274ea-\276{\030\201>\2237D\276\025d\034=\276J\270=\223F\350\275\203\250\327=\325\336\217>\251\372\251<k\177\277><G+>\330\356\214>\311\260\347=\203\222\"\276\212;\210=(U\345=\363\034\243\276c\2360>&\250n>\276\370\234\275\324\343\264>\221@\376=.\233\275\275\305~\016\276\240\320\323;D\313P\276?\375F\275aq\316=g\004\204\275T\205\264\276\200\217@=\021!\020\275\366\265R\273(\347\262\275\036\370\036\276\017\256l=:4\001=\\\2414\276p\236\200;d\215\005\276\365\206\322<UY\327=B\013\212\2747\217\230\275\375\247\026\276Wf\212\276\317(\202=\212\201h\276<\362\247>\226 \020:\240\234\244;\252(V=\316\205\367\274k\353\344\2758\336\221\275\035\025G\275\263Z\354=U\211O\276x\007k\276\364\311\210\275\214Om>\321\267\356\275F\0068\274\025\353F>\274\351\361=;0\000>\216h\017>]\205!\276\254j\223\276\377L$>oX\003\276\276\257\023>\267\240\347=\030*?\272\353\326\243\276,\036t>gA\021>\253K\244>\273.\217\276i\223\302\276\255R\234\276u\n\024>o\334\272\275h\333\203>\313\275^=0w\213>B+\'\276\273\214\226\276d\355\345=h\337\237<\360\214\234\276\016\332X>@*\230\276\216&\273>Cf\001\276\226\267\232:\260\231\331\275\363\010\024>b\326Y=)Qg>\357\317+=\203\346\031>\276X\347=\214`\330<2\022\353\275+\344L\275j%\025?u\354\242>]\212,=\322\337;\276I\372\230\275x\375i\276\271\033)\275I\007-=\247\310\010\276\000\3659\276\257[s=ul\'>\267\372\336\274\314\036\200=.\363\233>9\233\177\275\357\220\204\276\326\317\272\275\3156U\276T\364i=\321\\\314>\276\355\216=!\010M\275#\272@\276\271Av=X\232O\275\336\314\036;Z`T>\371_~\276\306\365\327>Y\362\002\2753_\024\276EU\r\275~\010\033\276\223\227\001>\242 j\276y\211\232\276\\\250\273=\303\r\204\275\2411e\275/=\232<\346\223\251\275\217\322\373\275\306\334\274=a~\t\275\257:\035\275V\264\237\275d\027+\276L\332\004<{\340\t\275\322\t\251=\330b\275\275\342\260\255\275)\t\017>\203\211\244\274&Z\273\274\306\225\250\275H9j\276\017\360\n\276+\035\205\276O@\234\276\177t\334\275\342\320\\>\010\213E>\2313\253\274\2055.\275\225M\236\274\277\3374\276\202r-\276\264\357(\276\342\202\242\275f\240\205\274ig&\276#\205\222\276\372\022P>\227E`\275\023\364\033\276\\\365\212\275@R\220\275\177\356+=ht\223\274\375\026\177\276\r\250\225\276\266E\306=\317\354o\274\235h#\276\335\031\311>Rd\363\275\001\257\361=\2434[>\203\271\021\276\255+\207\276\2251\205\276}#\370=5\027\221\2768\371\243\275y\362\217>\371\353\241\276E\244\234\276\001k\261=\334n\222<\316\337\211\2764\2023\276\212=\307\275MAl>\230y\210>E\247\017>\327g\354;ZC$\276\313_\207>\301\3060\276\220\310q\275\260l\343<\317\314d\275\0360k\275\223M^>8M?>9\230\204\275+3\244=$\365\327\275\313\355\036\275\303\332i=\254\304\t>2\230\304>\276\030\266>\375\375\001>k\260\221\275\245W\007\275S\212a\2768\265\331\275+\013.\276\365\034>>\"\210\014>\275\324\364<](\n\276\313\272\241=\264\2345\276\2634j>l\201\325\275\264T\300<cZ\223\275\347\344\207\276\365\014Y>\000G\034\276t\357\240\275H\314\200\276\0021\253=\361\312\032>vau\276\322c\"\276\013\365\216\275\305\220\265\275\275\2579\276B\313M>\221%/\276\333\205\274\276\355\025\275\276\005sF=w\230\335\272\210o\302=\252\262*\276\302`)\2753\373\200<\354\345h<\337_o=\266\0042>\014\362M\276}A\314=\220m\326=2\177\230>\312\017\211\274U\342A<#u\033>r\241#>w O\276\311\\\212\276%\007\342\276[\200\377\2752\321\327\275\374\251!\275\240\3624>\r\347\261=\024\325x>\303v\232=\271\223\251\276&\243\237>w\265h\276\377\025\266\2738Cq>s>9\276_{n\275\320nL>\302\230d\276\317a\313\274\316{\317<t\2645\276\250X\211>\227\023\300\276\224\361\250\275\341\373v=\337\221Q\2756\003\302\276\370\250\324=2\337\030\276\242\207|\276|>2\276;>\262=\217\001\005<\353\'\234=g\010x\275k\377\363=\021\337\211>\354\030\r<~\366\026>\003\000j=\\\357\246=u5\201\275!\374\270=>\227\347\275\257\337b\275\316C>>\241\016%\276\267\013\021\276\317\177\233\274\"\020\305=|&\333=jh\263=\236\375\273\276\3421\377\273\023Z\177=V\333\025\276.\305<\276c\310\214\276*\"L\276\013\260e>\2403\321\276\221\260\000>\234\0173\276,W(>X\213\037\276?\027\t>\017\364I\275\326\274\007\275\213\274\221<?\200\345>\216\"\203>\223\245\213\275\301\007\212<V\210\254\275\374m\310\276\033\217\247\275)\"\301;WT\355<|\205\255<\027}\250\276\337\247\302\274D\335\255>\237\3757\276\261`\"\276\374\033[\275\242+\307=a?\305\275\212[\034<\347\213\377=\315\335h=`\253\272=7k\007\274ip\240>C\263s>b\232[\276\226\203\031\276\232u\320\275S\300\217\273$\210\250=\234nb\2764\256\213\275\353\231Q=\314\353\244>\314\274==&\213\006>ga\204>\331\274\001\276\246U^\276]\354\202\275\334\226~\276\\\336 \276K\205#=\205\025o=\037\340\312=P\255k\276\0261\367\275\260h\371\274\217\265E\274\275\251h>C\"\242>C\220\026>\350\210\234\276U\010\037>\373{\275>~:\005\276TL\345=\033+\343\274\263\370\347<\374\252!>M\313!\275\252\261\014>\030\220\212>\034\302z>\252\002\247>\251\325w\276\211=\010\276\022\235J\276\3670F\276--\215\275\247d\257\275B\213\201>0\246G\276f\020U\276T\276\270\275\027\'\327=\243\356\307\274\201\360\376=e&-=U7\030\275\366+C\276\356\333\014\276\247\224\341>\224K\254=\260$\302=p\303p\276\006s\226\276\374fh\2757\277\224\275\217f\300<m\330\2238\364y\006>\210\'\244>~S\023\2755\306\010\274\354\232\216=\247\232d>\225\261B=I\2318\276\001\021-<W\006t\275\031\'\300:\273pS\275\274\356.>\312>\262<\264.\241\275=\342p\274\247\211\003\276h\335/<\256\2361\276W\247\270>\013\t\333=b\001\010>\"g\232\276\314\236\213=(\0037\275>Z\342=:\214\216=T\3175\276\006\317\006\276_(\311>\264z\231>\215\362D\276S\026\335<\025/3\276\316\251{>\026\222\260\274\004\336(>X\311\360\275dD\261\275\355TP>X\214w>\010\234\004>#S\210\276k\324h\274\354\002\225>\260M\031>(mK>^\305\024>\326\227n\275\220t\036=\254\203->g\033D>\240,\306\276\337B\216\274\374\177\233\276\376\3657\276\234\306d=\024\344\t\276\375\337*\276\322I,\274}\206\221>\324\3676\275U~~=\315\311\320<\236\n\322\274\241Yr>p\303=>:\002\275<\316\242Z\2767\263r=\205\331%\276\370\255\237>\333\323U=\354\245Q=\337:p=u%\211\275\254.\234\276\021\277C>vM\214\276\010]\325>\377\235&>\030\246\003\276\240\267\212\275\341\203\223>\020?\257>\323\377X>\177\355i\275\305\202C\275\025\r\311=\253\337r;\024\235\234\274\014\226\006<0\272\237\275\323D\211\276\316\371\336\275G\206o\275\234\214$\276\215\232+=\242\177/>\271\034\223>\227\363\014\276\251=5\276N\230\202\275E\237\334<f\032\007\277A]P=\023o4\274R\215\231\276\022P\373=%\026F=1\300\030>}\255\313>!\225*\275H\352\250<k\323\003\276\031G\336=\2122s>Y.\320<1\251\222\275\314\017l\274(t\033>\004\001\017\275z\326+>\352\327!\275\231?\030>e\3577\275\360\363\327\274\351\265\256>{\331\230\274\023\226\340=vk\266\276+\027\222\276\246\253\313\275s\254\000>\"\021L=r\214\215\275i\265\264\276\364\212\214>n\371t\276\337]\030\276\001\331\236\271\272\356\324=U\310&\276\006x\001>\317\002(\275\211CK>W\241\252\275\311\346m\275\313\220\352\275\273[\352\272\2441\023\275L-\205\275\343\370\366=u\242\211\276\332\n\352\274^\2203\276\001\274<=\274\363]=N\374\334\275\361.\315>\254Zc\276\235u-=.\267:=\\\003\373\275\362T\225=\217\242\031\276\346E\252=A\3144\2761%\200>\367o\324\275\353\317\033\276\2767\265\276\222T\236\274n\377)\274\362\016\230\275\303\223\272\276C`s=\211p\204=\302\236\373=;\223\205\275\250\350#\275\211\241\254\276>\0338;\035~3=V\326\251\273\324!U>\262\\*>f\371\036=\323y\240\276\251\336\210\275\244\0343\275\204\352M>\304f`>\024\2234\276 \n+\276\375L2\276\310\205}=\215\372\343=\177\313v\276R\032a\276CmU\276\231\332\337<_u~>O\302&\276\226.\243\275\262\230O\276\332Z\244\276\022\341==R1A>K\312\'\275\214\304#>\217u >\352\177x>\246\261\262>\334\231\222<S\215I\275\356\224\216\275\212\354p=\312\322\261\274\007Eq=\232\322\305=\216\322\332=\261\212\242\276\250Y\272>\227NS>w\341\026=\032\356\207\276\350\212\366\275\007\230\263>9\210]\275Jt\254\275v\340y>O@Z\275\267\217u\276\315i\240\274\361\215\253\276\005C\006\276h))\276?\355~<\2105\020<\022\371\372\275v\016=>\333\365\272>8\275\274\276}\340\000=\205\217\211\274\262\362N>\031\2226>\341\227\306\275\253\341\326\276<\321@>L\t\n\2762\337R\276a\260\224>\232<r\2754\'\\=\342T\343\275\314-\315<H\367$>7\302S=\354\231\275\275\351\363\230\276\263\342^>)\332P=,l)\276\277\344i=\277\345\252=\266{\005\275\004\231\301=\203;6=\024k\002\276Gy\214>~\246\025>d\250\315=\256\235\020>\303Eg\276C\364\227\276\325\003\230=\251bl\276w\205Y\275\260\2036\276\266\246\033>3:0=\375Mj\274/\375\202\276W_n\276zVM=,\013\252<\261V\337\275c\361\232\275\007\0054>\363\322\033>\220E\341\275\326\353\020>\232t(\276\242HI\275.\366\232>\023s`\275\214b\300=\237Nx\275\365\014\010\275\323z\335=\021\007\003\276\357\352\201=\331\202\242\276\'\347\217\275\314\320\327==c\224\275K\264\350=L\253\213>\303\253\331>\321\354/\276\352\342\261\276#Cr\276\220\215;\276\253\237\206=\262U\221>\277\315U=\351\243\330\274_\307\030>]\317\360>L\372\236\275J\264S;\213}\214=U:\003\274\237n?>s\243%>\251\317\030>ip\331=\357\334\333=\344\352\226\276\277s\221\276\266{\002\275\"r\324\2744\352\247=p\371\032>\317\252\013>:u\234>\341O+=+\257;>\032\0363>\275R\366\274\2543\t\276\276\242\275\275\374RV\276V\246\351=o\223\201>/3\307;@[u=:\364\237>\210ep\274\203\022\036=\016Ef<\221\t\243=2c~\276\177\370\235\275\251q3>\314\275y\276\201\371t<w\005r=\305v\034<\270+\227>\310u\016=\377\272\272\276\3174\022>\257\320\336\275\302Hk\276\311\275p>m\253\016=\001\302O\275C\315_\276\031\224\354\275\030\224\r=v\212\331>\266\217\031\276\376\345\225=7\325\004>\243f\021>\256\360\206\276\211\370>>\335B\331=\2154\033>6EJ>[o\244<\355\242\010\276 \247=\275\t\000\343=M\014B\275,\"^\276&I\020\276\211\031\237=96\225\275rUJ>\255#O\275\n\\\262>y\227\027>?\036\222\275\372\027\204\276\255c\004\275\330\206\352\275\255\333\230>\253\007L>\267\006\321=vd\313=\254\005h\275K\312\354\275\342\247!\276\365\020\325>QC\033\276\277f\312=\270\326\337<S\233\035\276\220\352\205>r)}>;qD\276\225\217_=Vi\005;\204y\213\276?G\010=1]\364<\327F\336=\360P\t\276\245\003\346=\2674U>l\013\215\276\330X\360=(UV\276\215\3139=\200\366\314>\213\307\257\275w\365c\276\366\306Y==\264*\276\367v;>\271\025_>\2213\214=\231[`;\275\247\371\275\007\211t=\331Q\323\275\277Y \276x\244\007\274o\026\013\275\022Y\201\276\341W\326\275k\n\010=\315.\213=:\0137>2\300.=\345\315V=\376Y\t\2766\266\266\275\007\"2=\217GB\276e\217\247\276!\212\213>\210\240\027?\023:\307\275\261\321-\276\377\225O<%\013U>\306J!=\266\030\370=\241J\221\276lQ\007\274%\245\332\274(Z\264=\017Js=Z%\227\275\353\202\321\275\263#v\275\022\003;<\222t\233=0\251\346\275\262\206\303=m\216\244>\352\301[\276\347\003\236\275\305\313\322\273n\222\265>\221\324P>\220\350^\2765-\206\276"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "z\367g=U\271\020\274\010j\373;vf\211\276\317\"\345\272\002m!\276\360\206p=U\\B>\240\352\'\276\317\312 <\305\336\207>\225\370\223<\036\373\221\272\n\365\251\275A^\200>\013\0069\275(,\257>\357\210<>\306\277\232=\215\246\235\275S\250\334\274\0278\271\276\315\036\177\276\276\2202\275\362\216\354=\004\244\274\275\341\375 =\021\350G>\372\332\214>\254C`\276\211\305e\275\033\017Y=\326~\026\276\361\214\034\276\324N\277\276s+\365=\021\177\371;\271jh\274\227\375\205=\213A\006\274\004\211\222\275;\352Q;\305\022\367>\360L\375=H\rp\276!\221\272\275\021Y4>2KL\275X\342D>7\331)\276\353\034\030\276\r.\361=[\222\210\276\202Nh\275\315\202c>\035\373<\275\356\303\276\276\210\324*>>\276\310>WE\257\275\320[\305<R/\020\276\230\201K=\275\356\327=j\325h>\006}\267\275\275\377\350\273t\030\311=S%\304<\351*\033\275v\023\302;\367p\010>M\023_\275\316\203\272\276wc-=fa\352\275\013\230\212=\365\203\027\275\345R[\275\332\243U\276\373k@>\247\354\037\276p\003\265\274\007N\224>\317\231\233<\371\342\355=cz2>\265-/<e\365\263\276\241\234\352=\261a\243>4\376\373\275\243\343\215>\362\246\222=y\026=\276\200/f>3S\201\276&\016\022>\350\020\036>2\252+\276\366y\004>\003\370P>l$g=R\366\213\276\332{\321=\266\210e\275\305:,>\253\242\016\276\251*\232=\200\222\"\276\225\2220\276\223A\276=\3125\025\274\326\211\226>R-\276=$\303\377\275N\363O\276|N\315\276\022\356Q>\214~u\276\034\247\202>AD{>\337\tZ>\222\340)\276a\222\344=\264\360\204>c:\200=Q4;\275\002\304^\276\\u\005\276\023H\207\271\270\363a\275@A|\275\010Su>\214\031\302\276\004\322\205\276p\204\245\275[\267\r\276\373\231g\276)\224\032\275ya\234\274\361\213&\275]P\331\275\272\242\231\276\242(D>\325i>\276\260\327\223\275\307\036\375\274c\311\206>\363u\263\2758\317\216<\276\3674\276\221\320\021\276\275m\204\276\276v$=\203\"B\276N\225c<`\373\376=\345\006\004?FE\034>\326\220\236>\247\222\000\2766\200\000\276?1U=\241,+>\342\366\205>\000\241U>9\303\216\275\000\354o=L\204^\276\034\370}\276\250\255\031\275e;\214<\220I\261\276\0054a=\252zd\276^\2556>\200nf\276\354\247\327\275\252V\360<\246D\'\276}\r}=A\355Y>\241\331\367<h\327\216\276s`\241=W\321\303\275j\361\006\274\312\t\273\274 %\352=\302\345\223\275\005\215\007\276,\220\224\275\334)\257>U\ra>\330\367B\274Ey\205\275\266mb\2747R\227=Z\254:>\257\0002<\222R\\\276J\'\013\276\341\223(\275\007\n\232\276\023B\002>\340\234\345\275B0S>\273\\\230\275\361\362\342=\346\000\022>I\244n\274/\244\202>a\3560==\332\016\276,\357O\2748\355\023\275\347\232P\275*\235\360\275\376\312E\276.n\000?\323\366&>X\ts\276C\233L>\233u\247=\244z\245=\272@3\275Lr\246<p\243H\276\250`<>\036g\224\276\260\204\003\276\025\375\321\275[\225\242=\r,\223\275\326\013R\275N9e\276\0146\241\276\336M0=\245\023\367=|\273\243=\017c\n>F\242\247\274<H\252>\373\230\225>\036\2241\275\201:\306\275z\276\n=l\023\203\276\242L\352\275\303f]\276\275\017\223\275\034vO>Tc\206=\353M\341\276\267\365\026>\355-\202=\377cl\276\033\320Z>;:\335\275\245\007\254\275C\347\323\274\0328\256>\202\335\215=\367\365\205\275!r\244\275\201\361\030\276csE\276h\372\255>.E\002\276ak<\276\322\213\205=t9\025>\346\006\300=m\337\211\276\361\340\332\274\224\317A>n\245\324\275\320\321\222=cYN\275\370\006%>\020\367\231\275\306[\225\274\342\337\006\276~\221`\276\302\356\274\274\002\316\270=\030\020\371=\261\305*\276\372Q\265\275\277j%\276\245&g\2769\211\233\276\354 S\274\306\204G\276\232\021P=\203nF\276\312\317\371>]\017Y\276\302\024\213\276}\242\201<\230\206\344\276\355\261\262\275\355\255[<\271\027\324<\207Y\022\276\025\203\203\275k\326\230\2752\227\022\276\017\214\211\276\331H\341\275\022\245w>m\314\346=7\237u\2761Z\371=\375\0164>*\026\231\275=u{\275\200\014i>g\206\021>\333\2678<\002\340\013=x\n\276\275s\263\333=K\237z\276\211\340\325\274#/d\275:\023\214=\361\300:>l\0341>lK\016\2767]\267>\353eY\274$\035#=\231\333\333\276A\370>\275\"~\032>-\006G\275\311>$>\255\000(\276 R\252=\223\347\224\276\245k\201>B^x\275\312R\346=\213\024\225\276\251\311\276>UbR\276\355\021\245=;\261)\274\002\334\347\276B8\212\275S\243\375<\2004\300=\221\363\035>\327\363\207<\225\211D\276;-\213\276\034\022]=\273\360\013\276\345\347\366\275ge\007\276\nD\232\273\344\305\034\276U\220\301\275\242s9\275\032\371\356=@h]=C\262\357=\255$\266;\216\037\r\276\037O\224=$\203\321\275\373(:>a}\306\275\266\257\237\276\371\241\000\276\221\024\346<\024\360;\276v\'e=\346\303\001\276+\353\225\271\330\250\003?\271\017\273\275\001\356+>C\266R\2769\237|=Fw\237\276\177\022\206>\220\266\214<l\237\203\275\001\r\333\275=\212\300\275\001]m>\323\177\003=,Kg\275\350M\313\275\206q\267=v^~>\216\340o=\031?p\276\336k\210>\225\307$\274\3647\361=\204J\017=\272lH>\367\345\020\274\3012\206\275\247i6\275.\204n\276O\211\333\275\025:\343\275]g\235>\267\033p\274\346\264\000\276\336\016\234\275Y,\213\275\n6\032>.\207C=\204\335\032>\254\363\264\275\336\356\"\275p4\240<\216\034\004\276\355\216\021>\325\213[<F\2312\276\316~#\276\374O\333>\362I\234\275\344$\224\276\000b\241>\2738\355\275Uq\322\276`k\t\277\201\275\205\275\2507\007\275\212\006\230=\210\t\320\275\265\004\231\276\003?\331\275\353\355\177\273\213\365$>\266[\327=\242\'\244\275\223O!>\374\035\376\272\350S%\276\013\265\216<\317~+\276\001\342\217=\243\374\006??\371\351=@\222[\275\034\341\243\276\2329Y\276\274\207\004\276\312\204y=S\032N>P\312\375=c&*\275\007\276\222\275\3273\306\275\240\274\000\276\305\335\337=P\341\211=\024\034\007\2757\352 \276\010:\t\276<\002\301>@\360\360\275\241\250\016>\371\267\235>\322\316\321\275\242U\247=o\"8>\232\340\017>i<\003>\330\r\213\276\376A\321=]\252\253\275Z\233\245\275v2K\274\213i^\276\244\2501>\014\333\356;\312\333\311=\207\t\325;\270o\035\276\265`\372\273\213CM\276\2608i>Q(0>\003\243\204\276Z\016U\274\365=\001>\320\2735>\201\240x\275\377Y,>\206c\237<mZ\017\276&\340\244\275\010\310\025\276\312~\277\275\036\273\274\275F\236\274\276\267\014\035>\224\342\216\276\257\351\232\276\177\257\201\276Gd0\276Z\260B>\030\234\355\274X\231\363\276\243\364\237\276d\333\013>H\3049>\031\246\241=@5\n\276\220>\207\276\\vE\275&\330\231\275\222F\337:\031\357`\276\000cZ\274I\\\203=Q\227\220\272\344\353\177=\314)\272\276\367\\\200=\n\t\214>\213\000\305\275\340\002\n\276\331\021\026\275\324\004\204>X\254l<\321\267y>t\210\301>\263\315\351<\243\324%\275\021\0134<\t[\346\275\366]\315\2745\332\273\275\272\356n=2\356K\275\231]\350\275L\277\207\274p\204\360\276m\316\225;H\035\205>\247r\017\276\277\271\205>\310V\214>\237Y >\246?\n\275\323\017\230\276\366\261\006\276g`\332\275\361^\032\276\215\242\022>D\333\241=5p\034>X\361H>i\205@\2760\244T\275i{\303\275\241\316\'\276\035\375N\276*\003\373:\302\226\277\2759\331\300=\227\':>\32315>\2705\313\275\376\207\t\275\217.;=\251H?>\\q\332\275\226\n\"\276\203\370\223=\363\343\036=\3450c\2760\376\261\275\017#\374=\'(\337=*\333N\276<\325\323=l\020\216\275\024T\220=\021\ra>\334\004\233>G\275\t\276\337}\316\276q\035\331\276\320\241\337\275\272m\272\276Sj\272\274\377\2673\276\213\236\366\274z4\236>\025\204\311\276\350${\276Q(\265;V\213\367=\355\270\003\276\t\277\214\275\330\233\313=\241\035\t\276S#0>\266\372\n;s\236!\276i\375\315\275\035\220\200\275\342\026[>\333\360\207\276\033\337\023>\r\322\255=\251\022O\276\014#\307\275\037\363\256\276\321Y+\276\'\237B>\236y\246\273j\274\375\275-\315s>\0212h<.\351m\276E\352\230\2751\253\302\275X\177\014>*K\024>\350*\303=\356n\212=\267\002\330=\300\203a\276~\"\177=J\311x=\242\217{=5#\361\275\024\320\354\276\344\312D\275\261\210^\2761\364\214>\317\244\226>\221\326\243>\207.\255>U,\307>(\225!\276)\337#>\367R\360\272\333Y\331=o\025\262=\007\320\025>k\235)>j \003>5\017\361\275XF\026\274\312\027\271\2754\221\210=l00=x\227#>\003\377\213>\2136\210>\262\210k\275\2650[\273\325\271\255<:K\263\275\003\366\335=\333\341\306\274\006\344A=\240\266\237>\273wU>\371\010\275=\254G\371=\270\374\316\275&@\314<\005\335\366\275\351\372\252\275\301\223\311\275\345\314\001\276\037\347I\275U<\324=\277\213\212=\034B+\275\014\023*>z\360:=g{\212\276i\242\344=\315{\266\273)\261\352\276\364+\031\275ib\212\276rV\n\275b2\303=\261 k>\022K\267\275\216\305\037\276:\'\217:\265\350e\276\370F\342\275&\020\021>\030\260\212=\205X\027>\026\304\267\276\300\326\213>\022\375\037>\375-]\274\210\2171=\212\000\205\275X==\275\262\347\375\275\3477X\276%b\260\275\326\272\256\275\325\rX;\241\200\365=\225?3<c\361H>\032\020\020\276I\215\266>p\314\374=^\332\025>\313L\201>\207\324#\276\027\3332\275\252W\234\274\207.s\276\340q\021\275+\326\216\274\016\274\014>\276\232\026>\331z:\276\252N\232\276_\361\235=\206\334\301=*\025d\276\302e\036>4\020\332>\220\244:=\004*\372\276anO\275\244$\\=\224\256\342=\341\225F<\233\t\256<\336c\245\272\375\022\221>\237\262\021;\210\237\231\275B\272\373=N\340\014>\227\002\235\275\251X\202;6\307\211\275\340f\037>\377*\n\2764\267\010\276\234|\034\276\002\217\003=f\215\327<\346\244@\276\215\353>\276r5\006\276 \243\030\276\207\333\327=\333@B\276\013N\371\276\014\344\213\275\310\212\266<\314\274 >V\321\211\274\231TJ\275\274\260\005>\354\321Q>\340\270\231\276\0315\334>\271\221x>\212\262\005\274\330\221\253\276\312\037\360\2754\323\036\2755\345\204\276\346\013\257=I-\266\275\316\207p>\373-`>!\251\366\275Q\324\014\275=\203?\276\241a\316\275H-\272\274\375\316\347\275\226k\331;\223H\002=\035\304\201=\277j(>\346w\211\276\220\274\'>\266<\216\274\371\203\252\276\345\324s\276\014\241\225=\253L\"<\213\\f>\236[\201=\270\310\025=\263\202\222\276\351\311$\276\204\202\022\276\035m\001\276\022\017$=\003\326=\276j\033C<4\342\222\274\212\022\231\2755\352&<\007\335\304=\361x\031\276\034\317\037>\363.\233\276\343\272{>\274\274\237=\224\241\207\274\314\275\364>J\323a\276<\'\370=D\321\264\275\257\342\035\276$W\203>\n\267\037\276\224\300\340=\302x\273\273\271\317\265\274\007\2023\276\207z\310<\340\320\215>\364\332v>\346\257\017=3L`\276\357c\">\204/\375\276\277{\247\275\312\022\200=\354E\305;\001\035\301=\n\021\212\275\344\222\244\276C\2414=\344\2267>N\032\355\274\276\354\200=\335b\221\276\254j4\275w\231h>\017\023+\2762~\005\276\177\177;=\202\226\345\276\371^\235=\210\276\357=\223c\370\275^ta\276\005\313]\276\212\311\371<\203\370!>5_ \274kPS>g\017;>b\262\215\275\372aG=$\014\030\276\333\371\221\276\017\030\375=L&\364=\222\\\036\276\320:)>5\242\272\275\034\000\361>\333\337.>\\x\033\275!\007\214<\017f0<f\332\267=\021\377\360=\342\3435\275%\256\013>\366\225\221>/\000t\275\337\376\203\275\324\324f\274.\tY>,\202\207\276\215\266\014=\363\332\344=\221\253\030>+\272@\276\266\251\223\275\256\237M>\376I4>\236\t\261=\362Y\225\274>T\017=;\233\363=!\031C\276\306\215\241>\216\213j>\366}\353\276\274\266\302\275\377\273\220=&\210P\276\3728\265=\024\200\014=^}\014\276\037\375\027\276\322\352\250<IgL>\177\3565\275\250\241\375\275\315\306~\275\022\214C=\356@o>BM\246\276\t\235\223>\312ku\272\315=5<o\240\234\276\213H\315\275\017n&=RKe=\232\3009>\366\212\217\275&t\344<E\314\335=\026\217|=\330\342\222>\201\0033\276\331\235\014>\277J\034\276\200R\010\276\363\336\302\273\203\016-\276\315\254\243=4/1\275\210\r\001\276\265\324\206<S\311\224=\n\221\205=\372#\200\274\216\346\006>\rp\333>\211\241.\276\014T\024\276\362\275\331>\357\351:\276*\340\300\275\361\341z\276\325\035_>3\0278>\322\'N\276]\207\252\275\314gk=\260\314\224\276\370\314\346\275\324\0101>Q!\203\276\242\346|\273\026\373\031\274\223:\200=V\025\257;\2605\276;>(\336\275\027d\231>\177C\360=Q\016\340\275w\030\247=\265\216\204=r\334\210=\231e.=O\236\026>\315\222`>\227\273e>\006\205\260=J\023\204=?\326^\276\231Me>3\206\350=\261\344\013\275I\271h>HX\337\275\252\366L=Xe\247=M\220\022\276E\025\000>!2~\276}\031\245>T\033I\276\000\366\313\275M\327\330\275\361D\303=\350C\272>\331)\215\275\307V\302\276B\nc;s\335\037=\355as\276-_\217>\007%\310\274px\200=N\213r>\260N\377=\235h\026\276\215 \345\274\302\242\004?\222\365\205\274\316\021\330=\353\022\355<\233M\306=@\3452>\222\'`\276f\377\'\276\023\344\277\276D\223\300=A\316\025=\210\361\334\274\2370\034\276\250\330\277>eg\r\273\355:\210\276\262\017\324=\340)\306\275\"6 :\030\273H\276D\312->\374 \262=\272\024\265\275^\332\261=\037\214\255=\215\233\213\275\204\230\326=qW\274=u:Y\276q\227\222>\224\037\253\275\251me\276\000\246\021>Wz\204>e\"\221<\264\204\376\275Dc\221\275\374\301%=\353%h\276=\032\024=\257w\237\275@E\021>\303\215\206\276m}_\276\315\321\254>4\225\001\276\'l\312\275x\036\231;\204\351I\275\276S\240\274\364\303\211\276\031\353i\276\030}\240=\005\001]>t~\330<3\200P>\366B\201\275\\\024\350<\267\275\305\274a\203\001\277\336\263\330\275\355\277\031>\263\255\251\275(\273>\276\334\335\222>\333\334b\275\372\354\230>\260\364\202\276\362\372\032>\236\273\366\275\353\035i\276\364gZ>\234\022\352\275\223>\005\276\366\"3>\364\315\260<\355=\206\276\367]%\276\'\310\254\276\310a\007\276aG0>\234\375\033>\247\320\331=\010\250\r<\220\237\266\274\242\033\307>{\273\243>m\324\213\276\n8L=\367\364\264=By\036\276\256\305:>b\277I\276e\035\237\274c\313\216\275\216\367$\2769\321y=\004\017\023\276\365+f>\372\214\217\276 t\230<2N\323\275mh\324\276_\005\233=\016j\022\276\233\314\337=\236\177`\276A\205\007>\374\366v=\302\302\317<\003\3041\276\3154Q\276)s\010>X\006\315=\275\3624>\306\026\261\275\210_h>v\300$\276E\316<\275Y\032\244\275\205X\013\273gBD\276\364+\365;@\220\237=\003\032L=\240s\004>\003\232\350>\024\257\377=|\351\330=\303/\345=k\370N\275\217\024b>\366\223&\276C\257\224=\201i\211\276&d\220\276\226D\322\275\322\377v=5\362\007\276\026d\255\274XY\230<|*\354>\327\272.>\336;?\276\233\177Q>(h^>x\327\007\276\377\023V<b\'i\275\245\210\022>\374\345=\276\320\245\273=I\237\200>u,\310\275\214\342q\2752\210\305\275\356\372\222>\234\223\017\276rbr\275,:u\276\210\221)>\032\034\234;A\362\342\275T[\242>Q\200\005\276\362\360\305=\347\001\245\276\356j!\275\216\237/>\006\325c>\343\262\256\273\336f]=\000\341x>\263b\224\275\362\366\221>\022D\210\275\366\260\262\274]\272\207\274y<\007>\263\233K>)\210(<\033:\n>\211\200E<\276\315\000\273\343/J>Z\227Y=8\356O>\266\206\246>\020\224\215>\217>\377;X\017\311\275\202\243\272=\305s\341<\223;\006?\014\377!\276Ex\253\275\3703T\276\250\321\377=)\361\274\275\036f\347=2\331\210\275\215\270\026><\210\035\276\324\001O\276\224\226a>g$\241>\310\206\371=\350g`>\326\340\221\276\017#\022\276++f\276,\030\254\274\344\335@\274\036\372\311>\030VZ=\034A\353=\355\270c>\312\230\333=\362\254\037\276\274\271\207\276h\021\016=$Y?\275m\336\t>\233\234\025\275\267\351\304\276t\352\'>\022~V>\306|(\276\372~\236\276\213\r;=(\217\236\275\2501>>q\2714=\001f6=\210$=>\002\356\205>\346YI\276\316\320\201\276 \017\237\275\025\331\316\275b#D\276m\376\356=^,3>\27342\276\001VZ=j\251\364<Q\022]\276/\007\354=\016\250\375\274\033m\261\275\035kg\276F\372\277\276#\247\272>\272\337\324=\364\340Y=\247\270\\\275\360\020\362\271\307\027\322\275\343,\300\275\354\231\257=G\2719\275}{\367=\352\025y>\314P_\275\251 \333\273t\037\022\275\212f\220\275\270\217\212=*\271\215\276C\313;=\273:\264\276{+\200\276\227\231\235\276I`8\276b\223\277\275R\026\033=\354K=\276\0305\262\2749[\007>P\025p>O\261\243\271\245\231\020>Z\026l\275\201\317u\276\335\222w>\310\3419=\234\264\212=\224\017\335=\352y\254>\327\037(\275\277\342Q=\003\253\027\274\267\2274\276\370Z\367\275\266\034B\275\250V\374\275K\220e<\232\312\001\276y\352%<\331tr\275\364\377\n\276\261;\211>p>\310\276\003t&>\2017\313\275\361!\025\273\033\332\234>kw\201\274\253\332\000=\231$\214>\231\013\\>\'=K\275M\251\207\276\342\336H>\013\336\006\276\200r\260=_\376\254>5\r\240\276\241\007\363;xE\366\274))\241>\024\240\">\335\247\224<\221\261?<\372\356\341\273\2262\204\276\253\316\036\275\013\375\253=\302\272p>\335\3256=\271T#>\001P\321=\257\220\245=\310\004&=\'\205\211=\351\250\277>\250/\256>\217<\357=x43\276\214\002P>g\350\264>W\342\243>\331\036\t\275\002\374\235<g\0310\276\323\031?>\030\340\246\276\267\250\205=\216\301g>\320p@\276\023w\223\276\006D\035\274\223(\361\274g7\306=m\273\027\276e\372\r\276[\007\332\275\343D =u\246%\276\321&\300\275\2441\263=s\036\225\275\326/q=VU\207\276\216\347\255\275<PL>\314\013\213\276\034\335\342\275\205/\273=\033Qb\276I\344\252\274\024.\211>E\371v\275\177\233V=4\361\r\276\363\274\023=\035\360\366\275\004\270\211>\334>o\276\266\002\240=Vh\222\273\000{/\275%Z\363=M\333)>\327i\241\275^\260\375\275\201%3\274a\243\217;\035\n\257>(uv\276\262\336\221\275\202\210\210>\007)\257\276`\324\201\275A\316K=\330l\r>\010\003\222\275\260\rw\275\377\266\016>>\351z>\356\274g>\302l\017\276C\344M>E\343\220\276\354\027\374<};i\276\324\n\211\275\241 ;=\337P\000=\005+\316\275\266\354,>;&z>@I\243>\377\026\246\274^\315\030=\236^c\275\021f\222<\377\355\327\276a\004\230\276wR\233\275\237M\224\275}\254\311=\3618\237\276%\261\021=\236=\216\275\304C\232\275\327\005\002\275\002\357\215\275&\203~=Mub\276\262\367R\2760*\013>\354\002\324\2764m;>\334\022\367=\3078m=\004H\362\273\352A\232\276W\323f>\200\277&>j\224_>\331E+\274\200\021>\276\216\003\234\275Cxx>\215\251\n>G+\310>\025by\272\222a\013<3\224(\275v\270\375=\220\227\006<\341\203\325=gX\243=H\304h>\265\230F>/+\211>\301\316\322=)\216\235=\304\001\002>e5y\274\224\272\207>\001\333\233=s\240U>\370Gb\276\177\007\025>\233\304\317>8\273t>\335\3247\275\371\257E\276\357*\023\275\337\276s\275dt\217\276\345\334S\275\340m\262\275()\303<\007\321\211\275,\322\253=I\334\226\276\257V\256;\367\364\274=N\023\235>\366D\321\275\266\341->\260\032\220\275\213\210\377=\005\246\317\275\'\2462>_*\004\276\272#z>\266\331%\276\356M\205>\302\320\226=\227\2028>\251k\254\275\3667\\=\342\370\237=\336dl>\357\232|<\251\233\337=\261\237\275>z\372\033\275\3657\307>$\372\370;FL\232\274Amr>Cf&\276\3615\000\276\307\304\250=\303\014\016\276\000\276\277\275k\300U>x~\002=\354\362s\275M|:\276\344\324-;\356\363\\>\267L\235>\024\3170>>\251\234\276\014\032\025\274\303-\213\276&\256\210\275\344,\203>\344\243\242=p9\036>^0A>xI\212>\002\267v>xpp\2755\243\245>\374!\322\275\025\304\343=\017\001\342\275\376\277O>-\276\026>\273\237^\276\300\322Q\274\2309\004\276G\374\273\276\n\267\220\273\032\354\267=\251\301\030>\305C8>)\235\204=\3707\254\276\232_\234=i\354\013\276\326\304\357\275\250\301\347\274V\003\242=\026\375\270\276\336\336\200\275/\017\236=\236\336\276\276\221o.>\215z\263\275a^)\276\002\374\314;\320J\225\276g\r\234<\267\034J\276\362\267\242\276\375+%\276gc:\276\241\273z>\236\266\341\275b\375\330<\025\266\223\276\243Q\036>m\202\346=A\222\034>v\311$>~$3>\267\3360\275!\211\242\275\010\001P>\370kT<P\205\205\275\364\324\177=\010_=\275\350\301C>\364=\370\275S\324\250\275\341+/>\322>\211\275\361\205p\276\035\203$\276M.\366=\222L\243\274\027\\\226\2730\021=\276\317\n\014=\3022\030>\225v%>\245B\206>\030\261X\276\004!H>\351;\245\275q\'v\276$GC>.\375\270>\343\241\016\276\360?\031\275\247\2270=W\376\224\275\264V\035>\260\220e\275\n\345\364=\204\021\356;\021\252\231<\034a\271>r\363\017=\342\002\337>\261\307\347\274\352Is=@\357\347\274\004\205\323=\303n\256\276Q\027\206\275\336\020\374\276e\200\273\275{\347\005\276\302E\354<?\t[\276!5F\276Qr\007\276\317\231\'>\242!\036\275oh\203\276{\331\213\275\323\021\'>\261\266\310\275\215\023\\=r(\007><\005V\275>+C\275\020\0069>\002\0019\275\325\375\016\275&\204\025\275\317+@\275\017\313J>i_u\276(\325q>\213\207#\276\237\024\223\275\307\236q\276\206\000\303>\272|\301=0Vn=\'\276\213\276\233\273\t<\247\256^\274\206\221<\276Z`\376=8\007\230>\343\315\263\276\277\2578>\360\034K>\037\223R=\376\037\205<\316\013\027\276\3217u>E\316\331\276u\334\325\275\200-\365;\266ui=\352\026\221\276F\307\243\275U\027@=\203\352x\275\036\220L>\241\304L=\353\236\347\274Nh\347=\311\2544\275\275\257*>\002\220@<\331\032D>mz\337\275\003\\\235\275\013\031\t>/\235\327=:\244F\276\307\277\342=\225\322+\275[\r\033=\335\375d\276\371\3236\276r\333,>)\233\275=\255\337\314=x\230c>\305\274l\276\351\363\210\275a\345\003>n\2656\276\377\313\003?\336\034\322\274)\013\007=}\031\203=1\316q>\315\006A\276\374\234P>\007\004\201>t\023\263=\300\325:=\031\353\313\274\262\302\325\274\352\276\270>\250^\211<O\231N\276\343n\203\276\004\366\227<\252W\000>t\026\302<7\230R\276~\205\243\275\023\334\246\275~h\374\275\036\nt\275\034&\027>Ai\270>\211\335\021=\302t@\275\335\332\277\276\225\2000\276\227\202\021\276]\306*>C\325\265\274\251g\002\275k\3312>\323[%>\037/\'\276\244\305\032>\2175\207\2760HF\275\236zw\276\325\360\354\275\300\313 \275VFL\276\315\246\230\275\361\324\031=\302\345I>\264l\272\275\372\363\326\2745\005g>\253k\030>+y\250=J\271\217\276\201(R\276\263\314\r;~B\362=*Qw<\332+Y\275K\231\334\275\333\243\034= \005\255<23\302>\371\3077>\216cq\276l\300g=\353&\020>\254`\253>\256\r\343=\005\200\205\2761\273\302\276\222\230\325\275*\225G=\364\274\261>I\327\200\276\337+;\276a\221\206\275\243\343-\276e\270.\276\250*q\276\346\212\216\274\277n\007\276\002\276\207\276\016j2=\365@\026\276\351B\036\276|\257T\276\365\007\202>a\270.>\333d\210\2753\351\374>\216\376O>\247%I\274\001/M;\244\271\330>q\251\346<h\256\356\275V\335X>\002)v\275\013\016t=\212\320\002=ks\254>\200\320\026\276\300\365\214>t\373Y\276\326\340G\274\210\2162=}\316\330\274U!\\>Z\334(>\273\362\237=\021\342\013>*S\207\275\313\303\361\275ze =G\272=>l9l\276\221D\277\275\262R\347<yN\214>\016\351\300>OQ\361=\312\231\205\276\234%\205\2755\224\026>b`5\275\221(\033>uQ\037\276\037\032\020\274\307\271J\276D\202D=x$m=\325|[\275q\010\003>\331\310M>\027N\214\276\364Rt\276s\221I\275\210\346\033\276\352JE>2\306\332=\021\252s=\207\217Q\275-p\250\275X:\230\275\372\0317\276\333\314<\276\301\343E<\rvq=\024\232\264\276B5\022\276\020\267\266=\347p\r>\265\353\375\274+\002\240\276?tR>i\372)\275Z>0>\250\"\345=\022u\217\276Y\217\244\276\203\350q\276~}\006\276!\341X>;\256E=\362j\302=1\336\030>s\020\305\275I\220O>\273\252Q>@1\363=\373\231\205\2742\231\201\276\242\231\256>3\342\223>\207\017*<\273\3264>\225\221\272=)/\257<\240\314R\276\236y\262=L7:\276\310\212\255\274\360\357O\276\276|\203>\267\010\302\276\335\367\004>\n{\367=\375\223\034\276kV\352=\nFu>/\205?>\305\361\340<T@G>o\363\313=\327j*> \335f>\033Sp=\223@\215>\310\237\001\276d\335\314<h\274c=c\217z\275$\002\233=3Q\223<\005\271\204\276S\311R>\361J\301;N\334\017>\233\2342\275\211\013\034=\021\256j=\030\263\023\275\267G\365<\351\206(>q\274\034;\006o\020>\276a\022>e\366\250=O\006\032\276\016\371\202\276\r\347\317=\024u\037\276\026@\327=z\267\250\276`\201\313<\315\026\n>\274\353R<\363U\245:\213\320%\276\n\201y\275\351\036\355=U\226\036\275\217\346H>\376\033\014\276\244\3345\276\212]\365\274l\303\211>\310]S\276@\267\024\276u\356\">T\031\254\275\001\353\255\276Q\312Q\276\204\201\306=\017\360\027\275\006\334\n\276\211QA=\027\350v>,,\224>\352.\250>8\336\016\276\221\222\315=G\333\374\276\324\002\024>\003\210T=,\316\003\276K\335\316\275\037\344\246\276\342\353%>\373\277\303\275\356:F=\304\022?=uL\024\275o\261\030>\364\326(\276[a\371\276\033\313\205\276\020m\201=\267\020\022\276\003\304\251\274\227\310\202<\232\323\371\275\303\377d>\2077(;K\245e=_X\212>\345\000\002>\256b\214\275U\231\000>\002\033\255\276aq*>\320\2270\274\300\201\347\275P\275\035>\313k\n=\3543\217=\277\327\"\276f\036\315=`1y>@a\202\276Be\t>\360I\205>S\311\230=\226\276\213\275\375\204d\276\233\2370\275\343\207\247<\326\246\217\276\206\344\274=$\360\270=A\252\033>\305\337\223\275\351\263\342=\330\330K>\336\007\347=\037t7\276([\220>\243\370c\276\313\204\236\276\301\214<=\246\201b<{\311\034>\'\022\347\275 \216\307>w\274\035=\354\330h\275\016\205N\275\236Xu\276u\266U<\000\212\004=ca->\3730\014=EJ\366\275\353CT\276\347\020\214=E4r>\375\014\t\2768p\323=\313#H=\305?\220;v#\n\274\"\035\214\276\345\022\203=Ej\016\277YA\360\2752o\207>\201\320R>N\010/\275\203\211\236\2758\204\361\274\024\271\243=,\304[\276\304\331\r\276`g9=\375\004\243>U{\r\276\312\210\345=\365\3078=\006\355\204\276\2255\036\276\304\270\017>`\367H>\203\233\260\275K\255\006>\342X\035>\231^\334\273\377\307Y=\241\357j\275\2572\323=\324\034\222>9`\271=k\277o>+\207/\276\272\334\032\276\316PW>\rD\025\276\351\237\034\276\315\361\014<\251\360\227\274\311\316\031>2BT>^\220\320=\037\263\267\275\221\346)>9F\207>\212H\202=wVe\276\374\207t>(x\367\276=\347\256\274\357\300\001\276\000\321q\275\n\365\245\276,J\210\2756\375\300<7\337_\275\016\013#>\342XY=\250\231\343>i\256\023=\233\256\002>\016\254\002\276\214\333\'>\225H\017>\321\303\t\2761X@>AR\320>o\333\003>\007\241D\276:\356H>6\033\234\275"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "Sw\023\275F\317!\276\"\001:>\022\305\241>A\242B>]\323\231\275\223\302?>W\010\254\271\212\342\215\275X\203-\276jD\n<\232\344\346\275M\'M\276T\256\202\275\003\256\202>\302\007T>f\222\201>\347\016\214>\265\000\241\275\373\341\352\275W\215\030>\006\2238\276UjO>\255\312(=\341\231O>Z\324\232\275\035\216,>\316\013\016>\356\331\237>\217\264]>\250\302.>\363\237\373=<]\026>\014#\335=!\346\210\276U\335\323\276\020\311\014>7(\212\276P\320\331<\363\031\313=X\316\301\274\024\345d\275A\037\327\275T2\242=|2\254=/|\244\275\032!\206=\314\343\241\276\001\275e>\312v\210\275\233\311\333\274\002\354\231\275\205\246\363=\361\212\021=(0#\276\222\\\030\276\362\326\350=\344\037R\273D\207\316=\r\236\245>7JX=e\225\036\276\013u\331<\301m\342<\023\344D\275\002\212*\276p\262\023>\024(\331\275y\367\013<{\025\207\276\303\317M\276>P\246=\303\350\357=\251\232\264\275_3\235\276\033[N;\375\363\223\275f\363&\276\223\277\325=\031\036\003>\245]\223=\361#!\276\304\345\254>\324+\004\275\372\022\025>\356Z\260=\221a\340=\337\000\224\275\322|G\276\231\275\273\274|\341\341=qR\236=\036o\275\276.\277\020>\t\024*\276\321W\327=\312\307Y\276@3\206\276\247|\344=\036\211^\276Q\360\331=\020\225P\271\373\337S\275\2016\270<o\244L=\244\313\202\276Vm\261\276\033\215_\2764\360\352=rK\346\274\363\363\037>6+\257=\333\205\335\275\')3=/\265\337\275H\271\237>\361\340`<\267\370\360\271\234\264\377\275\200q\231\276\023)\271=\221\207\236\274E\350\217\276\364\361\232\276q\330\300=\224\242\207=\332\010\247=\277\356\202\273\316z\'\274\324d*\274\021]\320=Jo\362=\253\223\320=\226\2611>&\324d\276\327\310\021>o\363\203>\021\371\025>\023\246\240>\344\371\244\274\213\3475\276%\242*\275h\244Y\276[64>B\375\347=\353\354\267=\213 \237>\240\2510>\240\237\254\274\312\033\025\276\177\300\026>\273=\014\276\354\355\334=f\0254=\234\371\':\327\221w\276\013\r\177>e\204\272<\277\r\210\274?\247T\275\005=F\275\356\033\t\276_\025.\276\241E\314=\364x\273>\223\311@>\373|[\276\253\244\374\275\236\375\276>A)\224\274\213\362$\275\321\253\325=\3067\244>\245 \003\276\231\206\251<\230\205\225>M\367\t\275\245\005\370={\263\270\275\230\035Y\276N\230Y>\254H\216\275j\302\213\274g\230\354\275\275\032\275>\374\375\254=6\323^\276\253\356\353\274\254\330\367\274\205\267\\;\027\3239\276\277\252+\275\340(i\274\245\021\222<U\021<\276\253\002\327\275\335\363\357=\340\335\265\276HED\276c\375\344\275\204\010\031=O\370\332\275\2572^\276\030\035?>w\324#\276N{\205>\'n\275\276\253\321\220\275\250\347\330\275\310\235\272>\233\256\016=\034\376\001\275\003\036\203\276.\203\222\275\275:\252><Z\016\276\002%5>\323\262\234>f(\323\275\330S\031\276\000\300b\275\013\261\273\274\300\202%>\0130\206\276\223\031\210\276S\210\335=;\212\261=H\211\211\276\201 \237>V\374\250=?\200\224;pbe\276\345\340f=\356\307\336=6\264\345>\355\216\220=H\276\301\276o\356\340\273\234\032w=\212\376\030>\220\033\217\276W\270\324<\230\364.>\352\343W=\274\332\223\275\003\337\266\273qe\202\275\376 \240=\274\356\351\275\277\235\346\275o\332m>\354/\004\276\267\037/\276^\202\324<h\"\230\276\343K\223<\301\311q>\000Rh\276gy\225\275\367&\307=U\236\326>\004\202\322=\3704}\275\372\217\205\275]%B\275\026\336\005\276a\306\252;G\351o\276f*\004\276N\370\210\275\232\313\345>\000\030\352<\n+\246\275\374\306\277<\205\034y\276\331\014\244\275\275\255u\275!t\254=t\021\267\276f\"1\276\251\320W\276\013D\210\275\245X\035>C\255\200<\262\227\025\276T\320W\276i\363\200>\373\316P\276S\345r=\212<T\276\016/\036<\244\262\212>*m\"\276\336\022A\276\374i\256\275\031\000\220\274K\203\030>ZT \275\207\001t>\000\014 >\304\202\242=\332\370\377>\201@\005>\221R%\276\363x\207\275\022\215\'\276-,N\276\017(\002>\355\244\236<\270x4\276K\214e\276\321\024\n=\220j\243\274\337A\024<\'\213\027\275\253\007\216=Z\277]>+\212\353=^\320\216\276\252\301\027\276)9\007\275,\346\005\275\217\276\225\275\177Gr\276\205\006\215=\361\223u>\\I;>\366A\017<q\324\275=\333\316e>Oh0\275\372\307\005\277\034\273B\276\033\327\312\274\200\367#\275\\\253\032\276\035\203\324=\210\033e<\036u7\276\341\361\332<\227\026\277\276|\334\261<\251\017\251<\237\320|\276\340\360%>\334\373\274>\r\244\345;\272\273\016>\016\316\300=\013\255r>\010\0232\276\366\265\201\275\313*\236<\226\375\327=m\r\030>q\236\216=)|W\276\177\245I\276\343L\203>\262\334\255>\332\356R\275\264l+\274K\237\266=7\371\273>hZ\003\276/8\037>\244\005\007\275\232\034\001>Pm:\276q\020\326=]\315\027\276\325\277\206\276\232\313\202\276y\304\313=\257\335\273\276\305\254\206\276&\037\'>\373\334\212\276\243\341\235\276>jk=\360\242;\274y\311L>6\201\324\271\235N\242>H\305\240>\266\256\317\275n\\\017>\300\021\211\275\3317/\276\322\357\002\276\342\351\221\275\307<\243=]\350\363>|\251\265=\263\0132\276t\234Q\275\010\363\360\276\007\322\277\276I\177i;\350\314W\276\354\357\236\276O\3459\276\017\323F\276\317\017s\276\237F\204\274\200\357\005>2\364o\275L}<\276~*\003\276\2721k\276H\324\243\275\352\246F\276\004\213\375=\244\017\210=\006\277\024\275\376\317\026>i\253\225>\216/\001=\345\306H\276\237X\"\275\t\312\026>H\025\'>\325x\221>B\233\207>\356\334\026\275\374.O\276\275\031\246\275`\001-\276At\200=\341\370\327>\022\277\001\276/\035\007\276\217s.>\224$[\276\322\\\322=\274\227O\276\021\001\210\276U\005\232\274u\276\031\275&v\335>T\222Z=\372\370z\276\221w\250=\331\300\316\276\300\233\200\276\225\004\177<?R\375\275\350S6\276\241\033n\275\017A\241=\031f\266\275#xw\276*\325\222\274\227J#>\3215\367\274\031\361\'>\331\274S=\005\323\206\275\"\364\301\275\002#\205\275\253}\347<h\205\257=\353\024\005?\273\315;=\233f\363\274\016j\336<\035\035\017>\216\031\302=\361a\227\276\320H\343<\017\376\010>\233|\300\275\016=\353;\347\361#\276\313\374r\276\217b\275=2\342\272=\332\314\241>\266S\264\275\002\342&\276\2671t=lm\226>\336\0321>]/\213\275c#I\276\001\362\\\275\247F\302\273\230i\271=nL4\276V\022\220=\223_\272\276&o\265\275\277O\340=\352U<\2769\245,>g\243\235>\213\032[\2766\377I=\231\377\213=\006\177\261>\tn\350<\240*h\276\037\013\r\276\372\207F=|\356t<\223\327\251\275\337\374\255\274y\233.\276Q\'\277\276+\206\023>\315\021 ><a\304\275Hu\205>\316\266\202\275\272\300\306>\312!g\276Z\357\r\272\364bq\274\370mu\2769F\233=\260<\310\275[\203\006\276\307O\332=\301\357q\274\370c\234=\0019\220\276\314)\305\275Z\2012\276\301H\r;\007Cn\276\360%\333\274\345\331\202\276\355\017\014=\332\303\227\276\223\020Y>\3614e>C\254X>\360!|<&\315\275\274\247\025\265\273!\275\346<\016\236O>F\357_\275\376d`\276\316K\262>\227_\260=\265\333\004\276:\3417\274\003\374E=\017W\204=*yy\276\256\3375\276R\000\217\2766\315\201\276E\031\305<=\325V>\221=\357=\322\312\273\275\355.\216\274p\203S=\331\362\205\276\262\221\376>\250\314\200\276\277\244\031>\246\261\345\274Fn4>\243F\333={mC<\227,\323\274N\360i\276\353^\030\276>,\034\276\":\227=m/\036>\363\367\256\276\263\373\206\276@\230\020\276\031\225Q>\024g\240>-o\'\275\232\n\234>nPA\275\006gF\276Q\000\326>J\342^>n\324\370=\253\274\315\275\373\243;>+\024U\275\025\247\347\274\231g\021\276\007\224\272\275\361\2355>o\355\336=)k\251\275\374\031\211=\250\000\273\274lq\220\275\'\021\'\276&\204+\274\'\204u\276\031hL=9\325\211=P\274f\276\030\034\246<\321\370\341\275\235\374\247=\020+O\276\365\245I;B\234\023\276\301\372\010\275C\233\020>\203\320\267\275\272\006\032<\366\n3=7r\301<\251E3>\263\270\026\275\336\251,\276\210*o<)\226\202=n\330\235<p3<>(f\230\276bN\254\274\201\035\034>\024!\327>\362\225\210>\024g;=\307\224\234<\262\002\001\276\023\242.;c\\{>\360\274\376\274\n\236\253\275\035\366\374\276\231\372\233>\203\325\224\276/\351\236\275 >\277>R\0226<\211\334\212\275\227\221\230\275\314\022?=-\211\240=\223\002\271=(h\366\275\t\013/\275\205\003\007>0\325\220\275 &\224\274\367\362}<]{\262\276\3633\177=_\342\032>\014\\\351=\237\r\220>\261\241I>j\355\274>\026\2465\276\361\305\033\276\231\370{\276\235\373&\276WO\256>%\201A\276\353\361\231=\253S\306\2765\221P=\010_\014>\356m(=h5\260\275\263p7>\360\243A\276\177\274z>\225n\355\274a\177 \276\254\331\234\275\352_\035\276\037\370\211>9ng\275\001.\243\275Gi(>\316q\337\273\216\306\036=^\202\320\275 j\217\275x\003g>6g\256=\314\0233>\300Mc>\203hY\276TL\201>\353\340a>\204\316n=\266\303/\276\212\314\274>$\330\203\275%t\303=\202/\203=~\330%\276I\343}>ZVw=\377\213m>\242\222\034\275\377\016\346=\206\201i=\276|]\276\263W\201\276\333\327\000>9a\213=c1\025>%.]=`j\247\276\326\216\244=\004\327x=\365\204\034\276\341\006\222>\347\365\035\274G\227&\275\374\241A\276\242\322\225<\001>@>\246C\201>\332\263\031\276W\003\220=\347\350\210\275\320k\210\274p\216\250\275\300\346\252\2764\0275>\242\224\360\275\252\266g<il9\275s\355\252>\215\027\207\275\362)\000?\272&d\276\006.W=\247\334(\275#\205\364\273X\n\361<m2\244>#7\343>\020\006a=nJL\275\333\014\031\276=<R\276\364\242\250>\030\250N\276\355|,\2723\337\206=\354I\265\275\363>\206=ta\272>\346{\357=\267\330\n\276\026\370]>\360]\237\275\341\017\t>\351\316g\276\263\2709\276oS \276\';M>\360Lu\275\217\275\r\276]\035\343\275\327S\246\275\231F\357\276_S\217\274\271\221\271\275n\3301>\204Y\354=\216\017\215=\265j\216\275\024\2279=t\356\335\275\242s\345\275\277\224a\275\227#\215<\224#\223\275|\267=>\016\177\010>\237\2419>v\002\335=\315\313\201=)\355\257\274\264\260_=\021\315g\276\355\346Z=\313Q\264>\247\2253>p\273&>[\212\250>\030v\337=\017\324\371=O\037\271\276\313\245\306\276\236\235\351=\374\024l\276\202\266B>\023\010\324=\024\340S\276(_\201<\253\365\343=\323\2604\275\271i+>\264\034\337=\227us=T\201\215\275h\332\365\275`(`\276\356d\014>\306\264d>G\334\244\276F)s=\244\004\002>\256\363Q>h \007\275f@\323=\rh\263\275\266Y\240\276\365t5\276\023@2>\245\302\353;\370\304\264\275QZ\241\274 5\317\276\363h?>\204\342\337\274\334\231\245=`}/>d}\300\275\001kP\276t\367\233<\n\"/<\352*\242=\305\317\240\276`~\013>\274o\241>\351\177R\276R\212\006>\326\202\025>~\315\302=\034\262\252\275X:\014>\303#\344\276\017\323\317\275w\203\236\276\220z&\274\253\315\304=.\275\332=\177\322[\275\310\270\244=W\247\242=<\036\006\276`\007\r>\210^\271>\366\005\357<>\235u\276-\326\344\2751\360y\2766t\236\275;>\r\276\217la\276\033\240\373\273\007\321u>3\344\236\276\230\003\343=\245&\036\274\341\0221>%\344\013\276\177\376\327\275\316\226\217>\317\312\033>\333\307@>t\301\007\276iP\343=#\'\026>\240\330\r>\265\324&\276\252g\316=\252\016\202=\200\177\230\276\306\201\340\275 \370\327>\321\245~>5\216q>\036\177\267<<\304\324\275-\013p\275\335#{\276My?<\025\320\324\275\372\347\220>5a\353>\005\3105<s\213\3629\304\005B>S-\233>\330\'\254\275\347\370\322<\273k\335:#\314\025\274|\002Q\274\300\237\013>E\024\264=\'\372\203\275\315D\277\276\207\265\360=\360\212\010>\355/@\276\033\210\224=\267\310\225>\327\247\366=\262\270\337<puY>S\333\310=\372Tn>\023\336@\276\361B\241\275C\343K\275Ck?\276&\031\032\276\202\006\216\275\275\247\035=(\216\221>\313\313O\274\360\030\241=1\217/\275\024*\030\276\323?(<\254.3>\331\322=>)\216\244\273\177\357\343=\034\023k\275\230\266\274=\277\377\222>6\212\311\275PG\344<W#\026\276q\003H=z$&>\231\306\005=\017\325\207>\323\177\256\273\252\365%\276^[\216\273\241\023\n\276\363\247\245>\017\300\202>}\005\n\276\022\364\221=\357\213{\2768\003\254\276G\010\022>H\214\227\276\256\270\363\276\251\373M\276:A\213=g!\002\276o\031\236=\255\227\333\274\222\251!\276\013\326\214>y\345\200\276\020\352\256=4\224\030\274j\333:\276S\335g=/A\214\274\347:\313<\037\325\\\276\n|\013>\306\370\370\275\234\032\315<\233\304)\275\013\035\026\276x\314!\275,\372F=\360|e>\222\272\275>\222\332\246\273l9D=\350\002\004=(Y\024<\254\375\251\276#Qg\276\3403\341<W\0355<v\314\322\275\262\217\201\275\345\276\022\275\321\r\346\276\220.J\276\031\261\222\275<R1\275\277\214\211\276QP\245=\310/\317<\016\203\306=\2722\230\276\003\240\230>\237\212\031\275\332\264\312\274\007\361\214\276/\365\251\274P\330o\276`2\327\275Yx{>\026\374\016\276~]\026>\367\366\007\276\223\250Z>\334Rs=\t1\275>\223\360x\276\221\004\227=\206:\261\275\214\317\001\276\016v\243<\317E\356<ka\216=pK\225=\240H+>\000\3506>\255\241\235=\013\0202=\345\335-=z9\240=j~\265\275\265q\315<\351\261\251<\241P\321<\266Ef\275\267T\221<\237\271\t\276\221\376*>T&\274>[\373\177\276\363\004\022>\010\344\276\275\326\204l\274\211;i=b\373\207\276\250~3\276\344(\221>D\374h<\326\215\344\274\017\303\237>\205)h=\303\355p\276\n*\036\276\2719\224\276\016lP>F\253I>\200\3668\276\341B\232>\324\220\303\276\223\341\270>\351\225\216\275\005\263\335\276\313P=\276FR\030>m\314W\275(G\214\274i\244>\275-0P\275Q\274\346:\264\367\230\276\3727\256<D\220\331\275\031\237\270=[Z\r\276\213s\246\275\264\375\036=\372\347\025>\314\315\203\276\034\210\216>\246\003\314\274\253\222i\276\356\273\315\275\206\343\230\275n\236\004\276{\236\273\275\316\321\304\275\227g\216\276\356B\021>\305\266.\276\264\357\235=\t\212V=\305\206\212\275\3713&>\317\225?\276j\031h\276\253@\215\276v\000Y>a\022W>\n\252t\276+\007\221>\024\300\033=\235r8=\272\324\252<\365\321\227\276\200\'Y\274\377I\234=\330q~>\302r/\276J7\220\276\005\230\261>\203\314,=\277\025+>\034\024\204\275\324\275\216\275\007S\004>\274n>>\262\247\247\275\333/\270>}ER>~\367\316\273\360\325\007\276\316\237\000>\222KT\275k\261\275\276\214=\247\275\3748\221>u\t\216\274\205)\316=yw\331=#8D\276\362\333\275=\022\377\036>j\021j\2760\3575\275\205\207A\276\234\036\307\274\326\346\272=`S\207=\252T\006>\305\2002>\305;y=;\212d=g\336\203=\277\206c\273\236\231.>\"\214\310=\3102\240\275\rkM>i\032\242<V\275\241\275\347e\360<\263\342\251=\227\3412\274!\263\200\273z$\342>\2008\373=\033\353\260\276\305\361;\275\227o\351=8Y\250\2764\005p=%\300\325\275\332\302\234>\325x\343=i\376\027\276\r\023d\275\220\0006>)\r\376<dS\353=\300G\266=\345\315\334\275\250@\256=,l\036\276\355\300J\274\223\362\236=\320\003\263\275\261\261\357\275\336\203\237>\241\352\005\274\246+1\275\224/\317\276\232\206t>qAf\274\202\272\003=\273Q\032>\021\275\234>\274\315<\276|\252\355=dK5\275\321\302C\276\235?\203>\326\243\213\275R5\223=S\211\307=\266\230\250\276\257\352\341\273\376q\227\275\244\353U\276x\212\301\275\245\365\267\274\231\013:<\013)\003\275\036b\007=P\215t\274\372*\232\2750M\036=}\310\302=G\327\033\276\3060\001>4\353\'>\234\213\304=n\013\206\275g\223\361=\375\375\006>l\020*\276\321}\305\275\347\357W\276l\246a\271/9!\275jD\320\275\346x\207\274\216\223\262=GZ\005>Y\206c>Y\201J>\035\204\230\276pI\212\275\345,(\276\362\335?\276\341b\310;\267?\031>\240\342+\276\370\207I\276m\220F\275\010\2709\276\267\253\311\276\311\'@>$\206\020\275\254\023\371=\337=\036>\03671>\224X7>\023\222\021=*\275\031\276\3677\016>\377\374\202>\373\372\307\275r\022\255\275y\250\220>\331,\024>nu\325=\372\026\326=1\377\234>\321K\263>U\240G>\352\202\354\275@L\007>bG%\2764\351\370\274\241\237\215>m\365o>-\227x\276\336\263h\276\245\301Z>r\240\210\276\2025q\276Oz\304=5y7<9\266\327\273\\\264\245>RY\252=\312\200\361=D\267-\276\206\331B>6\251\217<f*\036\276ph^>\005\021\251\275(\007\231>\027\350\205>\226On\276\223\262\362\271D&\r\276\225\034\247<\242r\026>Q\375\243\274R2l=\256\245g>\014@z\276\327!\206\276\336\326\255=\312t\\\275\370\220\253\276\1778e\276\301H\351=\272\202L=\275\306~\276\354\260\031\275L\250\206>l\'\277\274\217\335\355<\\\336M>\374\226\302=[\356\024>\244\347\373=\360on\276\362U\237\274\017\272V>\203Yf\275\362\277\212\274}r\023>\371\307\022>\270\365\233=\026e\314\276\312.\376\275\r\373c\2765c\236\275\223\262\201\275J\203\253=\260\200\014\275\267\3119\276\335\375\025>\315v\250\275\212\211\242\274\305\350G\276\367\327d\274 \017\\\276\201\272\025>\316\177J\275\355\006\230>\2533\207\276#\212\320\275O\356\325=\356\204\215\276\330\361\004=p\001\\\275\361)\201\275p\245\223>k\266>\275Q\3371\276m\025Z\276c*\364\275\343\325\007>\240t\177>\234\215\274\275\364~\001\276\212\255\377=\\\026\222>\377\276\177>\302QE\275\216Z\335>\212\000\243\275m3\'\276\r0\236>\036B\225\275\032\034\375<s\006\222:O\r\355<\230\352\275=0\232Q\276H\n@\276\365l\035\276\212\003b>\311&\347\274*\033\201>]\016\021\2769U\223=\375=\261\275\311!\250\276\275\010f>:A\232\2765\232#<\242\345L> \367\362=\035Q9\276\257\324D\276y\204(\276\315\336\272=jU\212\274-\250\006>\020\022\275=\261m!\275u\270\313\274j\010\002\277]\235>\275X\307\276\276B\036\020\276\337{\225=\024\277\274<KlB\274\356\275!\2750\370\212\275\352\225\332=\343m\"\276\r\227\346=G\231\242\276\247^\356:Y@X\275.\356\333\2768\335\251\276\330\314\026\276\266-\375=\220X\'>(\313\347\275S\365\n>\226Y\023>\243D\357\275\303\367z\274\261\327\352\274W\270\251>\247\000\234=\302u\200\275f\033\n=\226\221%\274I\277U\275\224\206\326\276\327B$\276\005\362D\275u\004\021>\210\375\231\276\006\235\025\276\304\230\200\276\241\020\321\275<%M=\362\342W>\344L\030\276\276\007\362\275\013+\005\276\267\376O\276g;$\276\203\362V>\234\202\245=\211\353\352\275\235D\334\276C\321S\276k\240 \276\222e\215>\305\373\016\276\362a\266;\204\267\310\275\240\373\307\276\321\234Z>,\254s>\305>9>v\257\275>\203\311\341\275\305\340\227=\2667\251>T\230\370\273\222\3178\276J\323\022>\002 \327\275\234\246\250>\351\264X\276\031\371\302\275\271\332\013\275\377\2313=r\235G>e\201\254\276\025\246\002\2756\324\305\276\345\214\306=aj\310=\370f\000\276\007Vn\275\210RB>\240c\026>J\330\253=D\320\356<\277R\232\275\260Na\276\034i{>\200\377\216\276VC!\276\334\177\"\275\021\205\035>N\251\316=(\262E>\244\317\243\273\'I\236>\266\211\355\275\234\202\345=f\016e>\321x\036=\277\027\001>\375i\037\2751\255\327\275M\010\267\276ozs\276o\370y\2769\342\214\2743\016Y>\3204=\276\260F\242\275\'\340/=\307\\;\276\013\003 \276\361D\353\2752\241\363\275\261\245Q\276\231\034.\276\371\371U>\231\272s>L\371B\276!g\r>\007,\305=>sH>\353\257\007\276\225*I=w\024<>K\363C\274F\343\004=\201\201\250>\020\365\204\275(4\030\275\3167-\275\276\010\333=Q\234+\2750\2139\274\245SQ\276\341n<\276\001\361h>\227\351\223\275b\273\333\275\024\247\211>\336y\201\276uV\250\2753i\342=A\226\265\276\236\213\222<\212\373t\275\032c\320=\036}\206\276\'\211<\276\200\347\016\276\375\227\273=\017\373\030=?\267^=+/a\276OV\361=\244 \035\276\355\213S\274rj\345=\345\364/>\225\205t=\336\033\025\275\372\264\n\276\372\275\353\274\007\212\363\275\261\"\356\275\'K\207\275\003\t\272>\227*n>\003\261\361\275\266\3237\276\253\210\030\276\216\262\t\276g\3730>\343+!\276\234p\252=$\207E\276\325\2435>dX?>\302y\266\276x#\362<\375\324\317=\325{X=pU\314\275\327\362\333\275\255a\245\275\\\227\251=a\217\214>\237\224\233\276^\352\204=p\026\273\276V\240\\>R\321\205\276\350\325V\274\351_\344\275\022x\362\276\257\223\030\275y\361,>\363\345\026\276w\200\355=\317P\215\276[>j>\001`\200>/\266{\2762\300\261=\205h\231>\021\330\031>z\246\006\275\027\005\177\276\234\374\317=\254\237j=\2774\232=\263\375,>\rv\255\275F\235g\275\316\r\001\276l\201\312\276W\'\200\275\313O\t=u\021\000\277\372\200B\276\252g\217\275\007\344\371\274\027\302\353\275\220\016`>\017\316n\274t\240\227\275\025?\201<\031\237\321>\274\r\023>\3479\241>N\027=>\202[\225\275\311\177\262\275v\177\317\275\303\321\005\276\227\261\206\275\313R>\275\347\315u>\355\302\307=u\357\224\276\311\362\226\275\367\0356=\302\246\021\276\312\321]>S\245Y\276\024\355S\276\005\310\233<\'y\013>A\255\245\276.kN>\227\374\177\276\306\034\231\275\017\265D\275\377\331+>h\316\214\275d\313f\276\355\0234\2741\210>=R$n\2750\207\374=\310\352\r\276\313\2615\276\257\315\001\276\310go>\356\320\024\275\336~\264<\235\365\277=\257\272\276\274\353ho>\272A\221\274t<\243\275\206\311\252\275\332\220\333\275y]\000>\325\370}=\221\001B>f\354q\276\227u)\276\365\331\262\275\212\257\311>\324I\203>g\010S>\272%\236=8sx>\313\267\257\276\216,E>bZ\252\274\311\323M>/Jp\276x\373\262<\345\242\245\276q\301E\275j\213\355=\003\310\267<\235\224\025<\300h/\276\261\247\001>\307L\027>\273\374u>\322H\304;\220o\301=\010aI\275\331\027@>\251\222\306\275\347\024\210>\001\034\227\276\260\210\212>\323X\234\275b\030\001\276\003x\010\276g\363u\276\025\001\265>7FH\275\322\253\214\276Y)\231\275Q+\027\276hMu=9\251\357=2V9>\320Mj>\356\"\252>[[\\>M\005Y\274R<\360<\177\347\307\275\250\240\017>OB\242>\020\032\036\275\016%\264<g\000#>\007e\023=\370\216\261;\236\360W>\311\303h>\326T\200\276x\324\'\276y\200\222=B\232\210>\035wg\274\017iP=\312\267\212= w\201\276J\200\333\275\373\231\370=\244\333T=\254\324\227>\337\331U\274\023\255\324\275x\224\201\276\020\255\302>\234\036\021\275\326\177)>\220\n\\=<\307#<#D\256\274\212\033T>\24439>\235\"\253=\347\277\247\2757\237o\276\375\262\205>3B\333=\267FM\276\360\032\272\275\347\3327\275\270H\301>S*\317\275\273\365\364<\007\266\211\276J\202E>\177f\203\274u\350|>]\243\337\275\nR\256>\257\004\032\274\356\332\006=\224\275\225\276\220\365\363\275\267a\252\275F.\302=\320\017F\276\353#\374\271\222zI\276\371?C\275D]\276=\217\"\337=\200\021\'>b\200$<\316\2762\275\"\246\247;\204+\246=Q\2073>\347\306\321\275}S\312=\304\211\262=*\242?\276~-h=\206\356\302=\007]\312\275\221&i\276\344e\243;\272.\333\275:ni\276`\216F=\233zN>\236j\017>\006`\013\276rJ6>\242\223L>\255\275q\273\346\357\214=\217I\212\271\306\005g>\"\304\201\276\250\345W\276\'\345\230\276!y}==XQ<\377\217\302\275\005\202\274\275)\373N\275\230~]>\311\226\327\276\010A\210\275\244@\207>f\026\t=\245\020l<\346\213\303\275&\242\323<\270\245\004\275\324\224\207\276\313\335\250=\245\255\324\275\237X0>\213\010_\276u@\215<\212\304B\274A\376H\275]\031Q>$a8>c\274\002>\004\226q=\010\346\247\275R\350\277=\271\255\033>|\303\007=\033\262\'=\323WQ\276\253-\240\275\200\252\363\275Z\344\263>M\323(\276\002\322\213=\032OQ>\021e!\274>\347\000\276\334\212\227\276&A\204\276\324\025\242>\372\333\335=\2033m\274\024<\250>\340p\255<\324\177\203=G3=>+\024\253\274\022\rr=\230F<>\003\210 >\212S\225\2768RX>\362h,\274\252\340q=\323\253\273\276\2751\244=\356V\341=\013HQ\275\275De>\002\0038\276;\377\204>\3603\321=\326\261\023\274D\025\003\276\341K\343=\302n\313;\337\265\025\276\243\356,>|\314\233\276\330\203\024>\370\221\205\274\277U\352=\377A\252\276\264\210\302\276\256\241\312\275\355\240\007>\261M\212\272\226K\215\276\277\337\020>\t@\307=\021y\256\275\262\037\312={n\376\275\354\324L>\342\273?\275\230\205\035\276{,\024\276<?\303=\\\271\023>\245rg\276\037*9<\2263\203\2759`\n>>\014\273\275e\364\322<\2336*\276\235\030L=\263mC\276n\335\010>\270\354\217\275\242\213\337\275\220\030\021\276O\254.>\262.\266>\323\353\317<\354\025I\275\205D\016<]6\211<Z\373\203>/<\031=Hy\271>\275\224\333=\344\264\034\275\354\200\326=\353\364\027>\365B\t\276?\3506\275\352s\017\276\010\334\317=\020_\315\275\310;Z>\224J\026\275n\347.>\330pc\276\305\353\037<]\346\372\274\306\333\364\275q|{\276\225\034\024\276\230&\215>`B\253\276\310O\270=\354\351\t\276\314g[\276\037\351\277\275 ;\203=\313\377_>~ln\276\335\300\212>\262@@\276\334!\227<M\223\207\276\2012T95\'@\275\326\211!\276s\303\266=\334P\360=vBd>\363`$\276\270\".\276f\007\213<\324\226\202>Cu\'\276\312:\277>\342\361M\274\013\3345\276\347b\376=\340\216\270\275\300\252\t\277C\245W<\020\207!\276\347\"\312=?\226{\276\350\347(\276\301i\021<>zV;_\276\177\276\224\340\252>\007\313\005\276~\347#>?\274\317=\200,\241>\221XR\276\2454\275\275L\013=>\233\243x>/\311-=\005\007\326=}\377$\276g4\010>a\241\354\275\377\000\177>p\303?\276\034\273{\274\216\201\253\276\363\343G=\303\277\354=\366\322\021\276\371\344\030>?i\027\277\265\375J>2\243\315\275[\230\332\274\021\275!>\024\261\336\274\010\226\235=^\221\251\275\267\036{\276\235\023\003>\212x\222=c\342\235\275_\362\307=\2046p=w_\270\276\343q\335\275\204\351->\0103<\276\267_5=\037\300\264\275\233jq\276\257\337%>\006\306\234:\310\341;>\212<\241\275\003\255\342\273\365\373.=\254M\177<\373\2564\275\244\001\305=\260\211\035>\325\345_>\234\250\315\276\033\260\036>\273\275\204=`\000\303<=\353\234<T\227\003\276S\266\005\276\263\341\367>\317{ >\277s\221=\256\261j>\\\363z>H\226~\274\302\302\035>\321\335y\276\315z\001\276\264\377\225\276u\376\017>\232\030\217\275\247}\000\2766.\221>\024\r\343\275oJ\276="
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\036\020\230>2{\362<L\027[>\2432\211\276\363\021\327\275r{\023>p\215\025>Y\275\324\275&N\020\276Yc*\276\224\304$\274!X&>\207m\274\2760\305\247=~ \203=\201h\024<\225^C=\360\250\016>(\002j>\030R\226\276\200\272\204\276$\240\245\275\035~\335=\367\252\030\276\355\210\033<\332\366\n\276\226t\347\274\337 \241=\225\237\372\275\353\203\217>\031{\371\275\364\373\223>\021r\276\275h\335\211\276\210\330\224>U\206\222>*/\313\276\021\003\362\272\213\314!>\270w\364\274\363\223r=h\345\022>\365\271S>\333\221i>\250\211\267\276\306&\277\275R\2346=\224\251\251=\201\3616>B.):H[\004\2769\227\237<P\331&\276\230\307S\275\r\366*>$\223_\275\177\316\211=\231\271\211=\324_\t>\260\206d>\023\244\202;\177\215\235\275\321\217\322=\314\032 \274>\214k\276\331\343c\276E\330\253=NW\262=zs<\276#\303\273=,\210\276=\034\2458>T\327&>\377i+\276\276\265\207=^\364r==R\351>G\353\232>\376\315\205\275\361w4\276\221\212\371=:~\274\275H\330:>b\246\221<l\351\235\275\251\017\205\276>\233\202\276\305\004\241\276D\030^\276Fg\211\276\217\334\033>$\233\036<\241\235p\276\n`c>\001\271\211=;v5>\021t[\276\205\025\t>\224\036\214;\203\3547<\3433i\276v\\q>\360\0040>R_\222;\331\0010\276\3142A\276I\326\037\276\221P\003>\017h\313=\005j\024>t\314\256\276\354\323\203>\332yg;\301\327\031\276\014\033x>\253\201D\276\277\316\207>\336\272\036>\331<+>\361\177d<\267\346\227=\227D\265=\226&\240>\227\\\001=\315_a>\265_f<\026j\200\275\233\360\300>\316-\256=\223\247\367>\\\350\n\276\376\313\023\2762\"\037\274>`\324\275a\226\247\275\315*:\275\"\214\266>l\030\260\276k\3105\276\013\311\260>k\244\231<\267\234E>3\225\232\274M\227\204\276\301\033\221;\2717\242\276\364\274\234\274\3739I=\323\372\373\274$\177\023=Y\345\016>\027W8>\342\227_\274\266.\014>\213{F>m\210\261=X\244^=\260k\000>Y\253\235\275\353\"Y<\364g\001>b\306\014\276\252G\201>\206b\332\276~\342A\276c)\240>JE\335\275\346\270\270=\256\303\352<\205\364i=\376\323\363<\364sI\276-u[\275\r@\235=yVt\275u\0278\275\355\201\200>F\036\031>f\016@=\320\"j\276\257\254\345=\000=\237= T\204\275\263_b>\000\3153>{`\220\275U\025.\275\203Ym\276K\343\013=e\230K>\037\026\205>[\335\206\276\262\200u\276\331\216m>\324\242\277>\\\214~<\355\252\306\275E\227\274=\340B\244\273\2226\274\275@\316\027=\256E\337=\374\006L=\222_\244>6\341\217=(\027\327<\341.\026>\254\257\262\275^H\242\272\370\010W>p*;>\252\335\322>\376\355\245>2\371\013>Mq\027\275\032I\221\276\236\336\225\275\2302V\275l\231(>f\330\305\275\361\362\"=<\200\236\276\200\t/>9+\311\274O\014\327=\027\\=\276\262\346\244\275\2679V\276a/0>g\034\230=\235\301\355\275\251\007s=T#\335\275ig\311\275k\302\325=N\243\266>Q\314\257<\034\334C=\256$\273\275\032\377\276>~\355\233;\341\312\277\275.\024\014=O_\221>\300\317\225>\267\025G\276/\350\033\276\177\212\007>+\363e=\334\306\306>\372AM=:\203\354=X\212\236\276Ud\247\275\316\367\341\275\245\302\211\276\3526\206\275E\\\037<\220\222\t\275\234\337O=]\037\353=6\277\360\275\213p=>\nW\310=\307(\003\276P&\210>|\305P>/\016\307>\000:S\276\355\226\204>\344=\261\275H\216\230\276.O\313\276k\335\004>,wE=\020\267\310\276\377\373\225>\305\250S<\365\031:\276-\000v;Nr\310\274\345\017\014\276\301=,\276\304\254\025=\263\310\022>\236d\324\272H\307*\276\336+\026\275\253\353o\2769)\013=\202\272\262=\316\344\273\274\251\007|>y\371 =\361\301W\276A.\010\276}\007h\276@*\230\275\347\007\000?\217L\017>o\257\300\275<\341\036\274\236\214Y=\370^,\276W2U>{K\204\275Fx\206>D\266K\276&\2033=\013\251e=\242\247\236\276\035\021\245<\204\230\010\276\225R\t\276\023h\273=\321\315r<&Yb>\234\214Z=\225{_\274\322\331\313\275\275\257==\3146f>q\2156=\274\251&\276p\332\232=\014,*>O}\t>7\311\177\275l\237\223\276\230Zf<\312\241\034\276\251\317&\27629\364=_\355\250\275YN\023>\236\177\275\275:]k>?\363$>h\266\004>\200\202\330\276CG\365\271\365,\236>V\354\215>\002I\005>dj`\276<q\213>\237\227\233=\247\262\227=\323)\315\276\336\323\235\276W\331\026\276\304\220\271;\214\251\252\275\rP\302\272\025!\014\275\367\033\247=\327m1\276NK/\276\202i\253>\240\370\r\276y\226:>Dg.>ND\247=&\256\021>\202\217\222\276\034\303\177\275\264Q\002>\014i$\274\303\215\213>\361\177\000\275\243\241\276\275\3701\263<\372B\337=,On=\373\200\240\276;\201Z>\343\007\007\276\370Q\242>y\305\"\276\233\3229\276\005n\357\275\264\236J>\215\031~;\030F\204=\311\224/>\252\335.\276\220\257=>\373\314\223\275\"\022\366\272\363\355\200>\356\273\213\273\224>\031>\022\245\324\273j\031\334\274\225\270\376=\367m]\276L\204v\275\017\r\360\275\271\272l>cS\232=l\327\020\275j\276\257\276ulh\276+\031\306=\037\321y>\331i3=\351\022m=9\351X\276-Y\320=\0317\237>H\245\200=\330r\206\275R\274\357=\236m\032\276\342\276\007\276\003\365\034\274\356\231v\275B\226\037\275u\030\343=e\265\004>\375:\370>\341$(\276\332\352\362=4\225M<Y{\361<\\\336_>\010\217U\276i\3546\274\311\251#>\250\267\227>\177\006*>\317\343\236=B\3511\276\\\020\337\275HGd\276\310\224\243\275\375\t\002>)\002w\275%\341/\2769\374\235\275E/\004>\240g\376=\347\006p>\252\262\367\275\351\257\030\274\3666\264=\257$\336>B\265\244=\243`\212=\275\206\"\276\035\274\256>Lo\251=\367\264\034>\376\031\332\276\376\035}=b\352b\276\334\324\207\276\300\177\">\340\':=\321\233\005\274\322\216*>o\375\r>&od>\210\250\220\276\315.\262;\007\264\022\276\237@\222<\020<\n=\276\265\227>\277Q\233\276\347:\263>\261\013\034=:\2677>\244\003\235;\244\272%>B((\276\242\271\004\273\333\306\235=\362\201#\276\327\324.>(a\006\276J\2653\276;LB>C\232C>G\230\027\276Y\027Y\276\304f(\276\245\375\236\275\271O\262\275_\007C\276\234\262\322=\317\246b\276c\002\032\275\006N\025?YV+\275)\2400\275\2772\354\274\341\265\366=\275e\037\276\0308\276=\200\261}\275O\351\016>wM\257=u\033\326>\351/\314=\256N\227\273r\033k\276\271\253\234\2765\212N\274LZ\"\276\321\\\232\276\237L\004>\032v\235\276\000\251\257\274r&\246\276m>\375:S\003\230\275\214nv\276\271\351\030=~\344\225\275\037\017\230\276\207&O=\354F?\276H\242|\276@\320\264=\313I\005>\344\032->\312S\204=7\337\315=\203\0165\276\304\007E>0\033\231\276\205\2538\276\360\264c=J\221\021\276<\300\341\275\213\253\365\275\365Py=E=\016>\3210\324\273\342\026\021>\370\305\350\276:\205\010\275\371`\006\276\025\301+\2769$\216=\353\364\216>2\212\273=he\022\274\301\006*\276y*K>\2147\222>\324=\250\275\026\336\374\2750}X<kB(>\240\314\320<\326y1\275L\020\316\273\217p\331=\263a\312>\n\004\225;\357\242y\276z\245\014\276\213\302\007>;z\342\275:\037\031>\306}\326\275<A\263>\216\365\215\275\226\t\t\276\222\241\342=\315\324J\276\214ib\276r\232\216\275!\353w\2766a\254\275d\216\315\274\326\365[>\006&\301\275\"\203%\276Cp5>\023\025\206=\034\276\204=\214\211\203\276\262\255\305\274\010\031\377\275\323\363j<?rT\276\263\306\">\324\224->\002\350\037>\034\311D\276\034K\036\276\204\016R=\0066\216=H\'\214;\301\326\027>O>\231\276X\227L=\2364\014\276U\024\317=\\\375\335\275\235\312\230>\177O\013=\312%\230=B+V>\215\370\232>\340*\247\276\005(\027>\236C\245\275p\317\200\274\326\222\226\276\320\2242<\225\271\234\275\016\001%\276\ty\250=0\004\022\2750ME\276_\273\225\276\355\201V\276p2\001\276\215\246B\276\344`\304\276Y)j\274\226\346m\276\344\006\023\276R\016\006\276\245\007\256>.e\025\276\365\016\026\276|\035\243\276\222\273\313=ria>$\031\263\276|\263\220<\3556^\276\034TQ\275V\241[\276\t\240\233<e\232\233\276\\\177\233\275\276\361)>!-\367=\354\007\333=\217\013&>1c\230=\213\312\205>\024\336\225=\236\235\372=\257\375\255=+\211\325;\032]\375=S\356\210=N\320\215\273Yc\210>V\",\275v\210\245=\271>\200>7#\257\2740\201x\276 \313\317\274\233V\013=\242<\367=\346\270\006\271\257\025T>l\243\005>\'\021&\276p\312\024\276\207\267\210>{\177\334\276\214\361\231;\335H\215>\370\373\265=\005^\316\275\312\250\303\275\276\371\325=\036`\301>t\370f>M\306*=\366\321\320\275G\265e=\3759\306=B\326\370\275\357\341\023\276aO\206\273\370\243\336\274\320)j\276\t`$>:\234\267\274G\264\302\276\304\353\361<\360\020\223=\205\355\003\277\317\275\206\276j\241\264>@t\017\276\030\000\016\276\352\340j>o$\211=\320\201.\276\023E\236\276\227\030\n\274\223j\374>\341\0162>\277y/\276c\252\021\276\r\'m\276*\220#>2HN>\303\257\364\274C\360r\276\024\377>>\300\326\377=\216\017\231\276\253\335\177>\020X\310\275\273\267%>s\366\020=\022\265\223\275\372\333\000>\237\323f<i\214=>8Cn>gr\003>\2726\267\275%\276\217><t<\276\004\025i=\025\247\352\275\317\235|=\200\363O\275>L\205>\\\251\240\276\321\353\270\276Q\211_>\2520\246\275\032\3161>h\351\"\276X\342\365=\214\002~\276\206f\333=\311y/\276\264u\034>e\024\020<\36026\276\3444\201>\200\337{=\220\345\220\275]\377F\274\322\017\327\275Y}\227<\314\0032\276;~[\275A\253\220\275\220\023\014\276\372\361&\275\257\373\241>VlK\276\273\223\t\276\246v\037>\3620/=K\016\273=\327<\232\275\315\336Z>\364<d\276\273!\213\275\201\334S>\246j\270\276\021\243\031=\224\032\243=w\n;\276\331\350\036=_t\207\275\265+.>\345\241\226\276\316f\203>l\253 \275\205L8=:<\013\2767\334=\276\337,\321=\245\245\260>\211\036G>>\'>\276\3361d=\230w\220\276Y\r?>L\016o\276o\036\244=p\262.\275bJ\357=\021:U>\343\326\264\276\311.\203=\275S\266>\357x\206\274\226\360t\275\324\202.\2767\213\204=\357\374\233\274\224\\\017\276&\323\'>\255\274\r>\305D\362=dl\272=\346\010\262>y\257\"=\255\376)\276J\270>\276(-\005\277P;?>\351\357\010=\333M\366=dD-\275\013Q\337\275\241\320\277=\303\211\257\275\\\336\r<l\332\005>\251\253\260\276\230|\037=cb\t\276{z\305\275\321\221\255\275\0327\223;\302\206k\275\203j1\276\036^\375<] \026\276\276F\274=\355\364\310<t\223\205>\203\203\262=b\007\336=r\022\r>s\220\034=\236\345\207=\246S\254\276Kg\230\275\344?\301=\237\262\212=\3713M>\035\317`\275\177\005P=\234\334\014>i2\372=\246\035\026>\253]~>#\335\211\276\370\002b\274\343\265\357\275\201\t\202=\330@{=\305\360\210\275\000J\035>\3751\241\276\356*\347\274\344e\005>wB\344\275\364\356\026>3\225\214\274\313\016_>\341\363c\275v\006\374=N\177\253\275u\205\241\275\254}\353=\036\200\332\275\"\327\035>\274N!\2763\026\276\275\274\031\342\272U\252\361\275\305\t~\275\256d\260<\360\202\006>\310\234Y>4[\212\275F$\244\273\265\347\217\276\250\371\202\274%\337a\276\035\213\\=OTE=dm\221=\231\232\322\273\033\347\035>\227\201\244\273\341w\021\276\354\\\336=\255\036\035>n\370\260\274t\222\277\276\345\343K>;\266\205\276j\332\372=\024\354o>e\311\344\273\275\313\267<\262\000\024\276\224\243\272\276@\263#>\177\316\341=\242\"e\274#4\022\275o\025\375\274\007\307h\275\304\257\304>\213I\352\276\241\036\233>\202\nC\275\254\354B>G\362j\275l\272{>:!\357=F\222\214=~3+<\236\202\220\275\032\365\000>\202\345D>\322\341*=T\323\000=,\377.=\231QG<\324\250z\274;\007\267\275f\325t>%b\031\2748Y;>C*G>\335\025!\276x\340 \275.\313>\276\323\334Y\275\'\0148>\347\032\214=\020\221\307=fe\260\276\025j\257\275\246\333n\276\260a\331\275\0168\362\275\226\331\362\275A\306A\276\025\320\273=\252I\201\275\207Dv=\3578\253<Z\003\224=\262\350D\276\026\207g\276\2335\022>\017ag>k<!>\030\372\345\275\375\224\003\276YA\340<\235\327\303>l\202R=\373\3266\276\314\376\037\276\375\334\330\275\205_\206\2762\n%\275T\205\326=\213\265\300;[\007\010>\301\202\227\276\r\300I>UA\233\276\034\235\262\275\021\375\206=O\266\'>(\201\004=\271\216\251\2757\215\222>\340\266\274>\363aa;\2241\264=\300\304\301<E\014\002\275\377\223f\276=\023o=\002p\214>\007\310n\275W\303\360\275\373\243\276\274\017?\006>\344v\001=Ym\022>\237\273S\275+t<=\253\203V>\260k\346\275.\007j>\\?\030\276z\nC>\214\214\262=\333\365\352>N\341\373\275i\000\377\273\253\006\347\275\260Y!>\304\337\204\275\276F\000\275mW\000>\257\0314=\004\237\026>\241\272\371\275\237\007\376<\363\rp>\233b!\275T\246]\275\224\'\010>\000g\212=5\032j\2767l\256\276\277\\\206\276\255\263\335\275s\313\031\275\254\022\036\276\021\3009=\230>\274\276\027\344[;\332\221m>\227He>\022 \270=@\267y\273\373\356n>\246\3551\276\023r^>\003\374~\275\354\235\356\272\234\016\272=\371P\243\276\262\036\217\276\325\002n=\363\016<>\230\346\303\275\327\265\241<v(\257\275=\314\203\275=\374\307<\240\234\241\275\215\273\026\276k\274\237;P?\000\276\262\261A>\270\021g>\315\333\272>\200N+\276<\007\300>\302-\270=g\020\205\275\204\255F\273\357\365\035\276\247\376A\275\207\312U\276\227\304\262=|\271k\276\234N~\275\277\373\020>|\020\032\275/=\256\275\204f\335=\2762\356=<\206\206>X\236\246\276\037\302\214=t(z>v\361F\276\\\247\033:\014\356\025\275\224\242\320=\345X\305<\004\240Q\275\375\r\352<\256Z\266>ci:>\226=\031\276\002\345v>\360_N>\356p\343\275\325\340^\276$\205.>\344T\246>4Q\353\275\3467\033>*1\274=^\331\327=z\3116\275\237\237\312\275\377\013?>\300(\213>\314N\251=\361s\"\276sZ\016\276\327L\261=M\345$>\360\215Y>\215h\r>d.\321=\035si>Qv\217\276\335\262\004=\260kn\276\210\211\343\275\002>p\276\316\251s\275\371\006\302=\315y~\276a\366\247>]sB>a+V\276\3166l\276_\231R>\345\326Q=\223\253\023\276\014\204\n\276\n\326\020>\247\357\307\276\335yG\276\340\202\223>K\036\">(\257%>5\356\001>\310\266\350\275h\365\252=xI\221\276\305\301X=\000\344\350\275=/\257\276\236\034Z\274\275P\354=\244\023\230\276\353\205m=nZ\"=\344\353\004?[\3353>\022*\317\275a\245\204\275+\206\357\275\014*\036\275\306\302\304>\265\340,>\340\266\000\275\275o\231=\261\031==\253;\212\276\312\007\257=\323/C\276\232r\001=&(\231\275\372\320\237\276\313\324\037=\365\251n>wr]\276\361\3325>\327\2770>\226\243\035\276\343\014W\276\250\336E\276}/\266=E\265f\276[ \326\275\334\210R>8\376\212>\224#\234\272\367+Z\276\002l\005\276_Wk\276\366\257\317\275\311\r\030<\217FI\276c\033b>\273\277\314=\334r\227<\2047\234>\250\016\300\275-\214\340=)p\312=\004\025\313\275\327;\301\2756\374O\276\267\234\2069m\367\217>sM\036\276\002\242#>{\233\313\274\224\243c=\222\357.>\270\250\030>o\251\333\275\225o(\276v\242\000<I\016B\276P\206&\276\254\270C\276F\322\231\276M\355\330\275\006\257\373<\331F\365;i%_\275t\241\225\276\213\254\277\276\303\216R>v\010+=d\376\327\276\316\237\321=\274\037\024>\\\277+\2767L\261>\0223\346\275\206r\224\275<\034\211\276\036\000O\275\351\022\265=\201\245J>~u\330=\310;\361\275l\255\251=\327t\206\276\345\341(\276\252/\240=\231\334\227>}\000u\274\334=\213=\3645\240<H\323A\276o\316\235>G\201\252>\234\003s\276\307\231\343\274$X+>\205\002\224\275p\332\237\276#\356\211\276\326\003(\2754\222\310\275\222%\242\275m\027\271<\220\341q=\030\337 >\331\345H\276\230\345\213\276B\275a<\203\217\307=\243r\210\275\215\026\341\276\371\256A=a\0273\274\323\n\005\275=\325p=\221Z\266\274E=\023\276p\027\336=\360\337\000\276\257\305\226\276\343^\005>\\\020\002=CU\354\276C\335\254=\216\255\366=`\342\265\276\007\200:>\207\350\300\275c,\021\276\037\306\223>\260\036\003=\215\003s\275\252\257\031>-\330\310\276!\324\207:8\302\364\275\033s^\276>\272J>k\207\325=\320\013\021\276\206\233\342<\265*\215=\314{\016\276\225Y\036\276\314\244L>\240\251m\275}\027_>\022\327\204>_\274\216>\362Jd>\345\013\301=\270\002->\2650\234;\373\327\354=\242lY=S\327\200>\270\216Z\276\214>%\273\271G5\275q[\210\276HV\240\275\243ZF>\023\307>>\277\206\352\275\204>\205\276\266\313k\276<\334\375<\203\366\026>\367 \371\275\0348\026\276\306]\r\275{\340\300\276kj\315\275R\242\257\273\206\331\250=\334\360-\275\225q\226>\256I\005\275\236\313\316\275?\\\244\274\031$\010>\017\027\355:\020\243\210>\323\177;\276\031oi\275\034\037\317\274\256?#=3g\224\275\352\007\333=*\246:>\224w\261>\2143\206\276\234li\276b\343\224=M\300\203\276\366\240\230=p\325\347\275\261\357Y\276\317\344\246\273\244\271_=\233\215\266>/\353\305>\021\216\333;Q\005\204\274\222\310\376\274-\261\206>\001G\212<\300i\023\275\027\260->7u-\276u\222\321<)\231\264<\003\356y\276jHX>\260\345\202\275\2706W\276l\032\204\274\377\221u\275\214\033\312=nw\245>\245\357\336<\334G\304\275\005n&>l;\314=\312\204{\2765\003M\275\nq\231\275`\032\310\276\331\242!\276\276a\241<=X\270\275\204\303\275<\266xv\276\177`M\276\233<a\274\017\225\353\275\375\016J\275\265\266\366\275\226\336\233=Y\325\006\275\n\"\310>f\241\342>\375\341A>\363\211\255\276\2676\016=o\233\332\273H\016F>\271\317\016\276,\374z>~\366\027\276\201\314\220\276\202\325\352\275\201\205\225=\020s\252>>\342\236=\013fS\275w\373\205<\265\302\213\275u\006(>?\'\240\275\353\376\013\276j}@>\273\374e\274\0130-\276\245u\212\274\270}\313\2738j\342=}\270\032\276\362(\242>\203\n>\275\367}\200\274$\346\222\275\213\335\204\276\315\002\240\275\230M&\275\350#\312\275|\343\214\274\233\273B>\232\'e:\264\350\003\276x\340\002=p\323P\276>\260L=\017\024\240=\224{\206>w\273O>|\374\367\276\331v\007\276n]\023\276Zv\322<u3\032\276X\2100>>;W\276\265G-=\034\027\332\276\307*4\276Y.\236\276\266\304\332\275-P\377=x\314V=\252\214^\273;\323\214>\345\305d<\275\263\271=r\243U\276\345M\000\275o\307B\276#GO>\306\264\032\276\315\347\271\275\225<g>\200\216\242=\317\311\032>2\347\254\275\267\026\216>\350\005\244\276\336\271\262>\321\313\315=ZQ\000\276-\336s=O\266\260\275\365\215\232=o\366\313\275\302w\025\276\032*k\276\266\241R\276d\270r>\233\377\003\276/d\370=Lx\234<:\277~\276\t\002+\2753*\326\275:\227\214=f\034\333=\352\331\325\276\034\373<\276\350\005\315\271\033\240\377\275\231\257\336=Z\222^=]\032i\276\355\324!\274z\311\256>\037\321\257<B\030\241=\347q\230\275\263\222\246\275\304\302i\275\205h\331\275\224\333\203=\'\013\016<H\330I>\345\303G\276.S\313\276\n\242\326\275^\230\213\276(?\234=\301\223\231=$\225\234\275\367I\357=\332m\033>\rjR>\201\202\252\272\262\360\237\272`\200e=ZMC\276\321mx>Ztq\276oK\271\275I\301m\276\257\200\247\275\315\277\213\275\347w\003<Mi>>\233\310\000==\274v>\326D\371<\0328K\276X\266\030\276P\221:\276\225!s>\227\310>\276@U\210\276\305sq\271\304\200\244\276\325}}>\346\270}\276U\217#>Q\227\212=t2\255\273o\357\325\273r\036\266=\372.\205>\202\314F\276 \275b\276\201\234\345\274)t\361\275(\330\020\276\236}\023>\277D\237\275O\363L\275\351\366\310\275\006:\273\2765\315\006=H\313@\276/s\256\276\357e>\275\256\352\">rBO=&\005\220\275\374\264\313>\235\220\227\275\307\334y\275\203\"\200\276\321\371\337=`\027l\276|M\360=m\320\241\276\362Ag\274D\216H\2759\372M\275\231o\363=l\332\275\2768u\023>\344b\016>w\265\213\275DQ\352=\213\200R<\276\0222\276\217\025\225\275\037\232\326\275Z\017\027\275\221b(>\333\345h>\356+\034>\204w\227\276\233U->\232\363\t\276\260y\306=\355\035\374<\234]\217<\254~B\276\266\274\376<$\334->\356X~=\263\355m>f$.\275\302\317\272\276{\251\236>\313\216\256\2757\3022><\267\235\275\313\347\211>\215a\377\275&\006s>\'\334\'<\277\037\027=\247\007\272\2729\021.>{xR\276\322\224\205\276^G\262\276>\231\007\276N\024\321\275\026d\225<d\346\247\273#\3159>\345\376\034>\354\316\223\274M\023\204=j\226.>\021\036U\276oK\311\274\367\257\220\275\"H\247<M\327\r>\223\316\025>e\232\217\276\036\301\351=\204C\355\2735\257\243=\302\035\363;m\200\303=x\340\251\275\304\333\271\275\252.\203\276\017\313Q\272-\360\236\275\022\236\363=\177f\356\275[R\025>\331\207\206>KY\211\275Fi\034\274\330\325\201\276\215\317\007>|\301\220=\"lx>\210#\006\276\202\224\300=E\277\276\275~\236\031?\235\2236\276\330c\305\274% \026\276\027\227;>\036\372&=d\255\\\275Q\032U\276p\007\265\276\311\236\016>`\377\261<$#\242;1w7=\344\276\216>\2341\377=\267Q\327=\365 ?=\2710\206\276\257^\205=\260\215\232\274\254v\006>3\272\213\274\305\006\025=\261\340\245\275l(\331<\272\340&>\003=\376=\017\252P>@Z\177=\rpZ>\251\225-<\251\375%>o\356\225\276|\020k\275\227\327\324\276B>\213\275\206x2>\3746N=~\013\361=\213\227\302=E<\010<\247\0338=\305\"\004>x\315>>r\256\233\274\372\361\250=\310\213\023=4\264\214\276\365-H>\031\335\200\276\275}\030?\361\364\007>-jw>\372<\214\275\355\036\200\275\244\037;>\264\014{=i\232O>B\317X\275\212\306\201\275\rD]>\240\336\222>\244{\005>$z\033\276\'$\t>\322]<\275~\206\205=\311QN>\374_~\276\352\276u>\364\210\370\275\265\316I\2768(\032\276{\r\003>0\376\320=x\310#>G\321\347=\026\320\356\275\001\236\220>\300\366\253=p\024?\2765\252Q\276\326}\306=\302\275\210>\373\371\251=\342\244\341\271\331\272\377;\373\260\206=\324\371\264>]G\231=\006\r\304>qu\223\274R\215\236=+\303\005\276\235(\210\276\243\345\366\276V\255r\276,\326\021\276A\023\303=\363\001\034\276KMS=\217\301\342=%\344\372<\022\333\202=}9\222=@\027\013\276\034%\037=i\374&>zi*\276\214\351\250\275d#}<\374t\034\274\216F\223\276D\216\266\273S\235\023\275\273\020T\275\347\3353>9l\360\275\342\247\037\276W\247\325\275-\232\307\273\ngG\275y\315\362\274\201W\272>\367{~>\017\025\273\273\365\004.\276r\250\271\274\001$-\276G\270s>{:4>\302\275|>\257\346\271<\332\2033>x\307-\276\2543\257=\236W\216=\007j\271\276\332\267\013\276\207\343\240\276\rY\305=f\211?>\206\016\022\276\241\023\006\276\234\000\235>\346P\336\276\261@\362\275]D~\275HQ\304\275\241\307\253>\224\234\221>H\274\215\276\225\227h<b&\026>\304R\212\275\370\312\267=\212-j>\316\024b\276\325\227\310\275\247\222\205\275\255\274\274=\2018\247\275n\365\362\274\255\247\337=1(\260\274\r_\014\276\304\224q=.\022\203<\337\021\347\275\207\020\214=v6\245=\232D\256\275\357\034\240\276\251\355\237\276\263\2523>\335S\\<\225\343\016>\205c\244=\377\265\372\275\312\317x\276\233\t>=}\003\225\276\246\0148\276\247*\331>\326\t\205\276\034\246\252;\261\\\327>e\274\254\276\262LY\275\307p\241\275u\330@\276\354A\231\275F\'[=\"aN\275\225c\r\276^\2058>|\025\227\275g\232\200\276\334\370\200=T\264\206=w^\006<\024\022\033=\031 \254\275\272\360\275\275\323b\036\276\327\236\251=R\236\026\275\236S\000<\210\321\020>\236\231\003\274\004C\233\275HJ\351=\317\221\303=\214\364\245=\262.\356=!\254\272=#]B\276\247\343\242\275\r\375\031\276\014\3571\276\177U\207=IG\250\276)\267\211>\243y0>pf5>\210E\035\276\020\274;>A\324i>\177\301O>Da\254>\360\300\216\276\370tr=\217\023\261=ApU\275Q\366\226\276ym\303\275s\303\326\274\035a\337<\350\221\260;\036\327->\275\361\231=\'\360\017>\021\261\362>\025\253K\275\014\217\370=\240C\002\276\322c\337\275,Z\267=\356a\364=\005.\016\276eS#\276\241F\005\2747X|\276`\344L\276x\025\271>\\jh>\307\271\235\275\362\204\025=2t\373\273\027\3364\276^N{>\026\363\272>\367T\214>\301a,>\225\201\364>\'m\024>0)\353=)\316/>\232R\274\275\352\005\365\274\251\362\202\274\204f\037\276\361%\017>.\306D\2768\322\204\276\323Q+>\020\272!\276\230\030R\275\3670\206>A\000w;ku\264>\320~\033>\247\201%>7/\310=\236\246\217=\232\277\216>}\036\320\272\305\255\003?b\340+>\023\266\316=\353LC\275$\023\371=\330\031<=W}\352\275+\026N=a>\204\275H\210\356\275@\007\244>\272@\254\276uuB\275~v\217\276\264\230\265\2753\223\253>Y\341\177>\316\326\017\273\373r\251\276\215\332\267\275p-\377=b\234\212\276\307\376\016>\330M\026\275E\321\013>\r\221>\276d\303@>\211\000\237=\024\001R>\203\357b\276j\3456\276\243\366\016?\224*\334\274\tQ\\\276\"\"r=\240O>:b\216n\276\304i\003\276K$n\276E\237\274\274\225T\234\276}R\037=\251o\270=\325bL\276\364\351\201=\376\364p\274q-\274=8\325_=8\343\236=,\014G\276\277\373\336<x/\313=/\224\320\276\322\363|\276\225\314[=\304g\201>\231[\232=\304].>\013\n$=d\331H\276D5\275=e\345e\275\233\016\223=(\330\201\275\001\363\204\276\032\252h>\345\210D>c\'\242\276\014%\215\275G\332\333\275\251\002\271=\311\323\014\274\312\207~\276\326\006\261=}RD=\301\321\244=\376\364\342\275\017\325$=\271\312\370=\253\267L\276j\220/\2768\255&\276\014n?\273\225\321\021\276!\025\023\276O\357m\275\353\302\r\276\221\277\036\276\273\323\265\276\347.\303<\210\245x\276d}X\275h\377\265\276\340\"\377=\272J9\275\375\376$<\217\232\332\275-Y\202\274m\3456=Y\310\004>\330\000\244=\304\024\366\275\353z\334\271\324(w=q\030\377\275y\307E>(\342#\276 q9=#\225\353<kC\313\276I\227\027> \272\247>\010\001\263=#m\022>\324\334\262<Ch\t\2763\360\020=Nc\014\276\244t\321=\3319A>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "N\237\r\2767\036\275<\307V\377<\351K\007\2765\026F<5\376\202\276\243G*>\235\340\225=\315E\251=j\230\257;\357\025\261\275\"\002\223\276\036\267\210>\214\221\302\276\363\323G\274J\'P>\024\367&=-7\277\275\223\333\t<<}U\275\256\335\233=C0\216=\365\202\220=\377A\304\275V\277\355=\313\316\243\275b\333\236\276\310\014\367>\2626\223=\244$\245=\245\315\242>r>\311="
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\005\005\334:\322-^;\336\016\362\272e\315\303:y@\341:\007/\365\272\2575\373:\007\235u\272\'&\364\272\034\177\037;\017*\351:\332\317(:p\364\";\"B4;(\353G;IL!\270\324\345\303\272\226\363\325\270\2218d\270\215p\230\272\374\324\242\272\312\207\355:*y\023\272\030X\273\272\025\270\014;\007$\200:\025cC;\323\346H\272Gz\345:)B\233\272#\204\327\272\031$\002\271"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "r\332\237:u\2264\270 )\313\271\332\013L:9\232\251:1z\177\273H\2078\273>`C\273\245\035\0229Mm/:\347\360o\272\36628;\215\256\007\273\245\226y\272\027\335\007\271KHm:\330\207\002\273\0024\026\273\306\367(\273\026g\036:\221\236\233:\341#\\\273)\\\354:=L\212\272dIU\272y\025G9\352\303\261\272_\003<\273\031k\257:\250zP9\367\004\257:aS\215:"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\324\225\243>\017\271\314:<\004\222\276)\002\t\276o\372Z>}\334\250<\344\023\223\276\245Rp>p\343\200=\234\204e=\007)\211>\365\002\002\276\320\317\237\275\013<\252=\231\365\320\275\014^\233\274vQ\305;\243p\201>\n~\213\276\256\313\234\275\244\217\326\275\214\345\035\276L\034\231\276x\323\022\276\352d \276W\214M\275\273\264\235\275\3004\204\276\331\032\315<n\023\214\276\242\276\324=\342\251\220\2762G\003\274\253PN>\267=\245\274\327\330\200\275/\205\234>$\251E\276\035P\243\276\241\211:\275\025?_=\034\310\242\276\221;\023\276\236\256(\275\275e=\276G\375\"\276=x\302\275\200\027V\274\265\236\363=\302C\001\276\205$u>,W>>F\240\230\275\362\017\231\276\030\333\201\2769\215\231\275\372\026\016>\235\320\204>&\333.>\344\031\003>\325vA\276\242\346\275<\005vO\275<\251\304=\375\327\010>T\016\010>]^d\275\352\025V>\367\321\321=\177G\247=\370\233\314\273\361\201&\276\275<\273\275\276\2763\276\315X\210\276\332\310\332\275\250\343\202>\372&\325\275\375\007\312\275\212;\323\275P\273\022>=m\253\275z\366\213=N\371\231\276m\223\210\276(\360\307\275(,\020\275td\n>\360nX\275\212\251\242\275\320\031\224\276S\305+\276\234\375\353=9\261\001\276=\'\367\275}\341_>\253wD=\353\347\236\276\246\365D=\233\363\305\2756A\330<\371\237g\2765%\366\275H\215\264\275\034i\234\275\262<Y\274qVj>.\003\372\275c\030\n=\317\212Z=\223Ez=I\370\270\276s\\\271\275\240x\307=g\236\020<M\310@>\241%\031\274\220\254\224=\242\271S<\255\346\032\277<\305\253\276\325D\215\275#\211\221<\256\324)>ne\233\276\255\362V>\275F\n>\377\037\242\276\206\333_>`Q\216<<\224\251=\264^\313\275\246\251\224\276\374q\244>,KL=s\360\014\275\3537\213>\316\347$<\266O\205>?\0260<\367/\214<\237wd=R\314\200\276h\335\241>\266\026o=\205\305\205\276s\234\332=\251\no=\210M\203\276#\356(=\024\2330=\327\363\210=\032\376\211\276;s\365<f\346\221\276\305\345\346\276\230\024,\276\255k\302<\244\325\001\274\225\274\341\274w\277\202>Q\005\337<[\304\341>\037R\272=\243\227u\274\262\n\027>\322B+>r\367\256=\013\250\273\276\272\252\355=!\312,=\301\340\006\275\346/.=\300\205\243=\333\037\361\275\254r\016>\340O^=WbG=\031\010\004\275\033S\001\276\026\025W\276\346\204L>0\344\006=\346%\006>\236}\332=\006J+>\177\nO<\211r\340>\232R\264=\023\266c=-VC\275\326\320-\274H\037\327<h:\200=\005\r\271\274\216B&:\206VJ\276\211&9\275\227\264\212\273\025\0214\2757^\230>\331\334\030\2766;\250>\311-\371<Q\372}<r\035\017>\017\001\304=mV\206\276\245\304\334\275\n\212\303\276\235^\201>Z\025\023=%\334\256\274\301\371\002\276\276$\275\273\234-N=\372S9>M\207-\276z\210\035=J\272}\276X\377\355<\332\263\224>\032\024\007\276\035U5\276.\214\266=\001\324\346=\367\246\323\276t\242\214>\262\340]=#v\342\275\376j(\276\342\0103\276s~\224>}\265\247>\340\260\241\275\206\227\374\274\005\205\264\275\021\370\306>\356\234\213\275D\r5\276zJB<\310\024\261>Y\242);ql\017\276\241\210\276=\307\204D\276-\242u\275G\325\241:\357i\014=p\200\245=ri!>Mn\232<\'\n\224\276\263.\177\276\236w<>%\233\261\273\367h\203\276\363\224\023\275r\217\025\276RZ\036>\022\340\350\275\001y\262\275Q\020\221=\021\374\207=^\304\362=\303\234/>\016D\376\274f\273+>\231\203R\276b\352\204>\264\002\236\275O#U\276f\315h>\216vh>v-\211\275Q\304\224>K\2325>\213\333R>\007-J\276\375\313\236>\240N)\276\300#2>\374ag\276\312\276\036\275\262\317\257>\252zM=\034\360\312\275^\242j=\221\311\244>\230\355\373=\266r\376\274Z4\343=J:\213>\376\264\313\275\310\222\224=6\225\314;C\325\277\275@\305D\276\026s\'\276bSB\276\330\027C>\262\273X>\021\022\030\276\277N\017\276\010`\354\275@u\177>!S\001>/\003\245>&\357\335\2759/\252=\334\341\030\276B\274\350=\225\r(\276\013\020X\276`\231\204<\362\307,\275.r\262>\020s\245=\3503\214>\227;j\275\366\265\200\276\260\220\t\277\304\2154\276[\037\227\275\325\326\350=<\213\234\275\252p\331\275\n)n\275CnV=\352\t\335\275|8\204=y\301\322>\235O2>\360?\227\275\355Uo\276\014W\023>\347\240\245>\021j\312=\227!\220\275\310l#>\0067\243\275U=\327\275\236M\241>\254x\216\275fU\206\276UP\326<\217\310\024>\233w\215\276ec\264\276\020x\031=\025-z=\261\256\353\275\032r\375\274\206\'\307=;p8\276A\030\365\273\034\374\025\276\023\315-\276\005\220\212\275\337\267\222=.\350\375=\303\230\034\275\024\013*\276\324\227\225=+z,>\203(\251>\206\305(>\315\265\300=\207\320\324=\244\257w\275v\331&=\033\177\377\275\244\241%\275z\345\367=\272\320\021\274\263p\267\276\272/\001\275\025d\000>\031\311\006\276K_\233\276PoX=\364\304~>u\330(=P\365\267\275\225J\212>\274\n\245\274u\223\323\275Rg,\276\265\332\013>L\342*>\026\021\374\275\373\275\202\276S3\203\276\336`t>\373!\222\275\r\341\323\274\342p\212\276r\361\252\275:b\240;xS\320\275\255\313\215>\003\255\033\276\222\025E>\375\302\254=\211;,>\377\020j<O\035\031<\2656\360\275G\262\212\275%~0\276\250\262T>\033u\026\275\252\221@\276Ux\207\275\316\226\233>!\344\325;j\355\223\274j\261\">\007\326\222\275\257\3159>^BI>\010\347\215>\255\001\256>\232zg>|\034\255:\300\261F\276A\213\302\275c\021U>\360qf=&MN=\323\201T>\253\301\304\275\265\256\347\274\354s\324=U\266\014\276>\257\227=\033\024F<&\224\254\275@\t\200>\353d\350\275\030\032M\273\024|\263\276\247\256\277>Z\306`>#\232F\276\026~\312=0\214\317>\221\317\307=\271\274\010\276\031\177>=\340\013&\276\020[\007>?\303\236>r\376f\274\246\234\321\275\0343\317\275\235\023E=\035L\277\276$,\355\273\341l_>N\357\213\275\370\220O\275\303R\254\275\366\374\016\276k\3204\276\017\262\006\276\264,\312\275\242\276*\276\264e\031\275&E\r\275k\371Q\276`\243\321>%S!>\311\333F\275\014\"\301=\355C\367\275\231\350\273<\364\373\315>J\343\032=\263\251S>{\017-\275\r\272\340=g\201P>-l\316\276\2053m\275\246\303\306>r\020#=\373\0268>+\375V\276O\217\301\273\036p\257\275!\360\375;B\263U<\345\013\005\276\2438f>m\270<>$\365\214>\221aR>]\343\210;94\353<\312\215\213\276\310\"b\276\244O[\276&\351\000>C\344#\275%\347\">\242\020\013=\323R9\276m\275%\276\244\272\004>\214\237y>\373\020\367=\212\350\310=\262Z\005\276X&0<\270\341\355=\222\007`=b\246\n\277\212\031Y\276\3768\377\275\363\034\210>.\271\313>\274\034\031\276\256\004\354<g\366=>\200\026\t>I\355\241\2765\364O\274\254\332\'\276\217\311\201\276\364w\325<V\316\004\276d\335\217>\221\353\327\275\372Z\247\275\367\027\316=T6\025>\351\343p>\"p8\274\005\"\013>x#\207=Fuo\276\317{(=\354E\315=\3511\034>\030\034\216=,\240y\276\035\006\014>L\304\342=]\225i\275\230x\231\275\332\3254=]\235\235\276Y\263\017=\335\227\207>~\260\224>\005\000\210=!\230\360\275\2257.\276\374\034\036>\203\303,>)\215d\2754k>>\034\366\315\276*\376\203\276O\014\003>\330\203\252=\233\373\344\275\365)A\275\353b#<\356\020\270=\254\037\212<\n+\327\275\036\376u=\230\361l=\221\251\255=\3345\r>\005[\271\2767a\r\275\367\341\226\275\022\302\330\275\216.\230>\251\330t=52\347<t\203\204<\207\340_=?s\226\275\177\261\270=::\212\273,|->8\377\314=\313\211!>4J|\276\335h\\;\274\001\263\276(\005\356\275\371a\221>X\327\357\274\242\007a\276\354\267@>\322\235|=\336\036n\276\257\373\200;\317\233@\276\324c\371\275\016\336c\276X\337/>eU&>\260\240\201=*\265\322\275S\224\235\276\210\001\250\276\263\212C>\267)\006<\035j-<T\031r\275\240\236\246<\235\243\264>\306p\325=a,\210\275\350\217_>\312\024\267\275\215\237^>\274\005\262\276(\265\225\274\310:\006>_\3710\276\341\337\035\274\0143\026=*\376\262>\350TA\276\000\352S=\212N\310>*\270\007\276\237\2707>S\213\275\275\352\202\270=N=\361\273\261\351&\276\277 \256\275\010+\035\273\177\310\234=e\375\304\273\031\376\260>\341\321\352\2755\204\201\276\016u\017=6gB>k\245=>\027Y\217=i\016n\276a.\363;] \264=\374\365n\275\"d\201\273\375jz<\221\270f>\323\234R9\302\317\230\276\3332i\276\036\321\230<%*M=l\314\323\274#T\277<\354@!\275\372\025\235\276JmQ\274\344\261\334\275\2523\007\275\'Zv=\304f\007?;d\220\275\260\213\242\276\242s7>@T\r>T\275\340\275\310\032*\2764{\033\276W7P>\261H\016\276\227\336x>\306\336\271>Jk6\276\234\241s\276z#\257==+0\274\024:\247\276\317\263K>KV\256\276\306Vy=\326J\337=\275\332\217=\034\212X\276:bI<`\267\217>\277\300\304<K\021\373:\377\270\377\274.\370\212=p\022\370==\273\307\275ty\214=\232\216\270=\006&h>\270#\245\275\004\300\326=\2216\024\275\323\342\361=\303\035\236>\216\262\276<\361\223)<\324S<=\216v\234\275\210\225\317=1\227\313=\030\260`\276\t\215\356\275\256),\276\252w\211>\202\017(\276+OR>rb\007\276\274K\264\275}\024y\275\t$w>\204m\336=\346H\031\275\016\203\331\276\2356~\276Sg\224\276\331\225\001\276\251\026%\276Y\367\262\273\000\225\217\274~G\032>\254\302\351=\252l\275>7\220\240=\257\316O\273\201\256C>\027\204\247<\016J\336=\327\242:\276\316\361N>\371\242&\274zv\210>\231l\276=\006A-\276\016\232\201=(O8\2769\010\302<rMi>R}p>\337,\014=c-\001=\355\\l\275!1f\276\371\030<>\340k\303\274\351\327y<\217H\025\276\034a\237=%7\200\276\214\242\224\276\207\202%\274$R\264\276O\227/=\027\373\343\276\223\321\227>\244\314\016\276\264\3422=\243\226\277=s\322h=\037 d=\366\224T\2763\320\264>\217\271\237=c\256\025\275\273\021\372<\273\330z>\262\007T>\303f\274=\003\233\006=Rgd\276V|^=\322\2336;MG\037>\255mL=\342\312M>\332\210\210>\026\205\311=\311\255\204\275\005;=\276k\237\262<\317\234\331\276\242\006L>\362x\016\276\\;\200>x&\222\275sG\017>\355\241\t\276y/j=\264}M=\363\237;\276\236G\037<\000\221\206\276\366\226\"\276\266\202\034>h\252\253\275\325\201+\273\345\325\305\275U^\277>;\345\216\276\2777\302\275C\265_>0\037\300\276vNT\276A -\275o\212>\276\372\005)=}\r{\276\236\036\"<\360\036\267>\245\014V>D\213\330=Fn\025>\333B\014\276\202\234%\275\005\317 \275\276\305\037\276|\213\030>W\233\272;\324a\032\274\372\207+=E\367\235>U\247,<Q\356\240=\247\221\310\275\300\"\t>\036\330\301>\246\245\225=\252 \350\275\224?N>\022xg>Z\317\205\276\212A\034\276l\277j\276\307=\214\275\255b5>Q\325&>\250\006\325=4\343\024\276\267\000\361=\274\370\230>\213/a>\017\024\"\276\tm\223>\235g\r\276U1[=\230\032K<9\233\237={\264\206>\344\320:>\330\364\215\275\240\233s=Z\214\217\275\013G<=\\\227I\275w\313\344=\323[5\275\364\323\203\275%\022\211\276\241\374\220\276\245(5\276=\201q>\242\312\230\276\223\363Z>,\007\372<\177\311P\275\320\336Z\276\330\000\226>\346\270\211\276\271\005\351\275\014\324\032\276\206.\307=\274(\271=\004=\235=\247p^\275\246#\r\272\374\206\321=\264:\010?\250R]\275\320\0133\275b\r\225=x\\\202\274\357\310r\275L\354M<\201\305[>}\3025\275J\257\251\275T\333\202=\314Q\303<G\225\205\276>P\233\276\301\254\214=\311q\234\276 \3253\276o\377\246>\206J\261\275\036\255\375\275U\315\265\275d\270L>\020\036\231;o\023\306\274\217\223\"\275\342\025k>\203\252\307\274~\310\027>&\256\254\274\376D\242>i\017!\276 \371\023\276F\2723\276S\363C\274{\262\016\276\236\033F:Z\302\350<\357\221\001\276\371\347i>9\347\324\276\303\252L\276\017\327\031=\377\254\275>K\274\304=J\261l\276m+\200\274\270\3673>sqz\275\244\222\360\275\370\347C\276J\212M\274\376\256H\276Uq\017\276U\026\035>\222\274\225\276\252\340\244\276\236f\261\274\177\342\211\276\260\323\361\274A\231\227\275\311\306t>\2367L>\313C-\276p\364T\276\317\332\260=\020\353\014\276\007c\037\276\265\234.\276\375O0\276`\272`=\227!\267=$\014_\275#\215\276>\225\262/>\364\264\025\275\001\031\036\276y\365l>\3762 >\207\366\224=\035g,\276R\237\343\274\027\n\013>^\372B\276\227\260\032\276+\357\243>\301B\010>\225\217\353\275\243\375d\276}\352\354\275\305l\304\272\216~\247\276\2056)>Z\270\305=E\274+=d\033_=\031\320\204\275dW~=b\312[\276TY\007\274\304\\Q\276\336h\246=\255\353\207>\252\270\007>\217\023\377=\272\217\023=\177\271:\276O#\267>DY\207;&\3564=\353\2600>\374\325\242>\317V\265\276{\006\220\274\374\367\224>ENe\276\224d\004\275\342\037\254\276\260\262\023\276HUC>\350\006\230=\220\274b>\350@H\276\357\357\'>w7\224=H\010\225=\331 !\276H\330\356=\344\353\216\275\313\347o\276jt\253\275\316p\035>\226\234\361<\315\346\203>\363\177\r=Cy\255>\023\0225\276\316\336\276\272\220EB=_\225~>y\225\241;1,o=\222\211\233<Q\364\'\276\264\2454\276\335\360\001>\330\317@>\317\225\217>\210,T\276LJl\275\203\262F>)Q\014>[)Y>\371\336\343\275^\r\031>\230\0161\276r\335r\274\300\231?\276\216\362M>\231w\200\275\230\216\"\276E\3745;\003\230\356>\244\264\206>\026}\000\276P\205m=\007\n\314=M\336\010>KI\205\274\333\341\221>^\271\366>8\013u\276=\221F>\025\207+\276\324lc\275P\241~=!\3717>\021y\000\275,^\373=*\021\032>n\020\361=\311\201t\276\323M0\276[\016\">\201\177\222>u1\034\275\353\"\267\2759\240\271\275\370\261\373\275R\304\032\272U\253\n\276\327\005\205>?Ax\275Y\276#>\223\306\327\275\340Q\236=O\251Y\276A \233\274\366~\373=Bq.\276\224\207}\276^\276-\276\212\353\215\275\313\343x>9/\246\276w\254\367\274\010\3140>\244dS\276,`\205\275\261\004K\276\227`\307<o^\337\275BL*=L\007\004\276\234\010[=\257%\300=\001r\343\275UJJ>\224\317E>IWE\276\354~\243\276\tL\231=\245T\375\275\027\304\217\275/\024\013\276\033\253\032\275\267n+>/\341\276=\006}%>\265\331\020>\326g\000>\315\324W\275\334\362C\276G\254\260<h\200\232\275\232\312\232>\362\'\267\275\360l >\261Vi>HF\204\276/D\266>9\252-\276\242\002\240\275\206He=\220\313\202\275\350\236[\276=9P\276\373\310\016\275\310\274\243\275\025\335\020>\020\350\351\275w\355\313>\266\345\305\275\266\323x\276e$\214>0AH>\207\303\312=\224\326\"\276\275\366\303>%2\356\275\221=\336\274SE}=\303\370p\276\227{&\276g:\251\2752\3776\276\022\022Q>\316\006~\276\024 \342<\316\233\211\2768~d\274\220-\301\276\177\334I\275\257d:=\230\021)\276\207\217$>\r\330\354=\221\032!>]\240\211>\206\236*\276/\275)\276pD\306=\366Wz\276\214\303A\276\037\002\315>\217\003X=\331\232\'>\034\241f\275Ryg>\352\350\232>\331i\235\275\360\300V>\252\375y>\345\341\246>\200N\217\276\341\337\344\274sG\323<\262{\236\275\325lh>\033\207\002>\005T?=1\261+\276h\251\333<B\014\336\275C\337 \275\364\023?\276\027\277u>C\372Q>\261\273\201\276\'\210#\276\274b\374\275\315\037\350\275\306\310\014\276\352\257L\276^\032\030>\006\325\234\274\325\007M>\332\270\210\275\322\363\000\276\030\301\273\274\300\336\214>\333\343\254=JZ1\275\202\342s=\251U\367\275\\K\010>\250`\035\2769\227B\275@\025\025>&\3416\276F\352\256=\271\204\332\275\000+\034\2761\247C\276\203\324\006;#\364\271\274\304\346\206\276n\001\277>i\361\266\275\021\213\003\276\335\301\356\276\231\331\020\274\312\324\327\275\007\357\265=\037\257\005\276p \341\275\273(\222>\335z\201>B\213$\275p\350\227>n!\204=\'y\201=V\016\226=\240/\230=\253%\206\275\0047J\276\035U\333\276\343\256Q>\371{\241=\264\204A\276\206L\317\275IG\032\275\367\244\265\273\035\010\276<\0278\021>#r$=\262\367q\276\3667{\276\363\275\347=y\232}>n@\354=e\235\223\275qWF\275\241\"\231\275V\006\260\276\313\313\230\276U,\022>\314u\337\274e\003\201<\257\272\024\276\233q\033\276\027:\215\276\354\032E=\300\016k\276\024\304#>\345O\373\275\214\374\207<\036\031\235>\227\255Q<\352\327\316<\033<\337=\274\355g=\354\017\203>\374F\334=g\372\274>S\367o>\037\341h\274\202k\266\275m\345\377\275\373@O\276\202.\234\275\037\023\225>\341\203\021=b?\307\275\211\207\225>\263\003\014>_O\303\275I\020\275=Y7\224>\201\371\221\276]\342\273\2741\277\222\276k[F\276\243\375\225>OW\253=\205\010:>?\237\233\272\356\254\334<1\023\254=\315\003\353=\2239|\275N\2074=S{\337\275\336\214\316>v\257\262\275\273\273\032\276Ktt\275\316DF\275x\315\260\275WK\032>{\212b\275\361\320\331=\003\276g>y\006-\275\177\000\252>8\200u\275j\354\267=7s\310>\242\223\367=7{\362\275h\220\007\276\003\226K>\374\036\024\276\203-\352\275D\244*>?\260\373=\213\242;>\271\334\003=B\374\001>6JM>\255\321\216>\027\2574>\2162(>2\023\202=\316\005%\276\220\266\024\275@\025\032>zo\342\275\371D\254\275=H\266\276\212[\216=\224\036E\276j\202<<\177m\334=f\177\371\274\017=\006\275e-\037\276E\303\331\276\300\360\227\275Pn\313\276\205\317\334\273\tIm>\271\037\257>\250\001\352\272\254_\205=~\213\030\276\321\222\222:\367\374\314\275\326hk>X\223:>bKb\276!\301e\276~\003\225=\'v\327=\245Mw\275\nH\201=\241\355`\274\201\003k\276\244O\336\272\027\361$\276\350\036\026\273\336V}\275:\203\323\275\336\221\335<W@?\276Q\2642<K\002\244=J;\333\275\274\305\232>C\303c\273\005X{\276\314\020\331=\315v7>\312U\314>\006\032\003>\373\\\200\276\014*\020\276x\266?>\244\376}>\213U\236=\253\215!\276ax?=\315\316\240<0\207\302\276\372u\332;\245@Z\275V\347f\276\314\240v>\243Gh\275\211\212\202\275\341V\243>\340Q\003\276\017\324\242\276^\264\242=Z~\244\275\245\325=>\235\201\355=n\t\217>{\327\245>O\025\327\275\3272j=[\023\240>0\327\002\275\313\036v>\006\373G<\264\235\331<5\3072>\231\2459=|\004\323=\266Dd\276\027-i=\026\353\035\276\235W\313=(\3160\276\345\027\316\276S\261\241=\214z%\276\2700;>\2333\344<\\E\337\275\265=u=s\316\250\275f4K\275\240\225\257\276*\2421=\037q2\276S\371\275>\251}\">\"\375\023\275\254Q\227\275\235X\024=\370\314g=\375}\263=\031\024\324\272k\313\274<\264^1<\216\222\231\276\317\211;\274\277\354\t\277\253\205S\275|\226\342\275\033\000\016\276G\213\221\274p\021\262\275\247\257\331\274\220\357\251\274\007\"x>\255\361\212\2751\203:\267\2349\">\312b\335=\263\320\225>\263\271\252=\202~{\275\252\344\031\275b5!>W\373k\276R\344\271=\270.\006\277p \326\2767\244->u\361\254=\0351K=\342\315\303\275C\220\217>\362\300\n\276\215\007G\275,\336\206>\277\310$=#\006\373\275\227\177Q\275\361xq>c=R<\022\030\231\275 s\343\275\006\3719<{\311\201=d\224\215=\255\253\003\275L\374\363\275\310\334!\275B\3277\274p\367\332\275\365B\331\273}\234\320\276\365\216\203>O\373,\276\000D[>Z\037\302\275\263\334\266\275>\355\367=\222R,>\374\025:=\256m6>z\320\036=\215\211S>\333\336\003\276\320\231Q=e`\030\275n\206\201>`\244\221<h\225b<s2\366=I\n\356\275S\027\364>H\236Z\275\250cd>\007\026\017\274o\032\230\276\270\372\341=\326\206\205=\016\260=\275\235?\023>{\353\260=\034\252\241\276\264\322!\274E\375M>Y\266\225\2752G\253=\377\035\323\275s\337\276>\361\031\200\276\027\372\245\274(\274E>\200\310^\276i\201*>w(\222\275\033Yk=\214\267\255=\302\310\345<\270\363d\276\335=(\276!0\020=\014\204.\275\231\355\253=O\360U>y?@\275x\365\004>\364p\365\275\036\004 <E\305\264\276\346\245\207\275\000\n\244=\271\3753=\336\214U>\271M6\275\3227<\276L\322\252\276\037\013\205\275\014\0300\276\006F\216\276\247\316B\275f\004\212\275W\000J>\355\354;>q~:=\252\n(>\271,\332>\272\037\221\275\024\177s\276\347\322\315\275S\313\265>\365E[\276\315\202\204;V\3654\276@\254q> \367\367<\000\256\315=U\230\003>\272\315\300\276C\306\345=\253\035|=\305\365\350=\217\373\177>X\r\232>K\345\370=\353\'\035>\343\256\005\275J9-=\330\354\035>4\034\236\275\374\020\226>k\222@\274\215s\273\275= \001\276\311\357\300=0\274\337=\232\024\001\275\353\307\266\274\374\210\272={\375\321\275}:\233\276\026z\373=\207\324\261\276\212\371\003=\022\253\004>\357\353\347\274X\303\177=N:\213\275\363\351\202>\210\263\007=DDq>\222\036\223>f\344\244=\272\375\'>>@\250>\250\222u>\031\016\275\275\233(&\276\306/\r>\255e\231\275\374=\216>\251k\177>[`(;\031\205\365\275\202\025D\276\317p\212>\332\206\360\276? I\274\321\301a=\352\3430=\005S\033>\354\222\251\275\355\005\201\276\324<\344\275`\016\001\275\300\\\262\273\230n\330\273\243w\371\273\315mg;]\303\272\275\346=\234>\303[\003=\223\213\025\276X\360\001\276\\\004\300\275\2709\320\275;\366\204>\365\204\224>\367\233\t\276\027\003\">Xv{<\254B(>?G\224\276oM\207\276\231\312\237=`\261!\274\3172\241>\210z\231\276\235\342`>\320G\314\275\216\253)\275IfV\275W\315\204=O+\231\274\'\344\340>[q\267\275\307e\031\276\014i\264==\260E\276\032`\350;\200\017v\275\370\244\272\275z\322X\276\222\312\214=\274s`\276\242\333\313>&j\007\276\232\301\036>\004H\330\275\352\210\205>>\272\372=\325\374\005>P\207%\274<\313\277\274\220&\021\275\013#p\275\017\371\335\276\031\t[\2751\336U\276\332\315\207\275\223\370B\275\243\377(\275\3703\010\276LC\274>4Y\027>G\344\252>\220T\234>{\205R\276\214=8>R\337\264;\337\227\370\274y\350n<\217\265\312<\247\177\221\275\177\004\251=3[I>/\032\350\275\225c\000\276\370\2645>R\357\266\274\3172\257<[\234e\276\373g\005\276\331Y\030>Z\372H=\266\351\337=\370Q^>b\223\222\276\232\224\331=\322f\\\276\n\344#>U\277\352=\3200i\275\230\001\242>\276\272\007=\022\373\222=X\321w>\302\320\024=\373\206\335\275\363z\025>\236\266\375\274\357\262\250=a)\301>\356\177\217>W\255\026>V\246\251=\315\371U>\024G@=\242\277)=\200\337r\276\330\265\272>\222\353z>\005G\000\276\257FK\276&\207.>/d\242>\374\254\206>@\213\215\274<)\225=\302\332\217\276`r\205\276\376R\217=\323\232L\276\310)\210<\375\230\235>I\276h<\023\277\227\274\025\356>\272 \006J\276\245\300\337<IPN>\365\234\022\276\000\357\243\276*k\331\275\037T\257\273y\"6>\3233[>\235\276K>\324L;:\2455\316=w\022\256\276\377\277\327\275-2\227\275\244\006v\274\302\320h\2767\030\330\273\331f\223\275:b\207=\275\222h\275\234\221\021>\227\"\274\275\260\027:\276{\314\240\276\366\275\274\274\026\345!>8\213\220\276{\252\035\276b\352<\276\344N>>\244H\201\274\'}\201\276\2061M>T\305\305\274\200\'#\276\372\037\007\275\257z\203=\332\200\217=\024\007\'\276\247\371\202>\010\3455\276+]G\276M\364a<\000q\021>d\213\216\273w\310\261=#\353Q>\2018\021\276\357\325\022>\353=\207\276\020\322\267\2748;i>\357d\234\275\347b#=\206\254\207\276\343eY\276\307\225\330\275\023\374\201>\335%\230\276\334\350\276=o\210\342>D\347x\276 \333\020\276;\356C=3!\022<\357\024\220\276\332=\322=Z\311.\276a\0066>\255\230\006>wH\020\276\315\306\010=\307V\261=\236\253\002>\273\035\265\276\\\3478\276\2751\264\275}\331\376=\263\313U\276U|->m\345/=\243*$>N\353\252<LM\343\275\177O\222\275&i;\276\333Pi\276\242\243\205>\212\330\002\2761T\360=\251\356\234\274\235\272\255\276^\035-<?\372\206\276{F1>\025{9\276\001q\033\276\244e\013=\'\272\207\274\205\272G\276\317l\334=\250\247 >\204/h\275+\0145>8\226\326\275:\006\217\274\223\021\034\276\357|\313\275\307\347\270\276\364\270\214\276\031\304\222\276\375^ \276P\023X>\354\202s=\214\235>=\231q\256=\005\222\224>\376\261\272\274\201]d>\353\317\222=\030\315G\276qc\203\276\336\260\344\275Tt\200\275\304\331\245=_\345n\275[\300\251\274\212\327\213\275\013A\312=\372eR\276}w\204\276K \250=\336 \324\275\233K\361<G\355\030\275c\035\343=\252u\257\275\357\206\374\273\375\350\214\276\325\332I\276\006\243@\276\214}\340=\217|\220\276\033fb\276\367^\014\276\270\3505\275\211\277\201=B\035\000?\314\333\273<\2031p7!&\247>J\025]=\t^e>\021\335\213>\212\214\271\2747U,=\261\376\353<\007~\245\276\211/N>C\202\t\276\240\314\220\276\000\250U\276\004\277)\276\276W\362=\r\256\200\276\314\354\315\276\253\213P>^U\271\276\247-\345=\271\337\021>\306\030\362\274\272o\203>4k\371=\251\n\240=I\270\354\275\235\206\201\276*\230 \275\253\326\267=R\367\234\2757_\230>\355\001\004\276\311\233\306\275\212\344\224\276\221<=>S3\227>\341f\036\27628*\276\024.5\276*%,=\313\025m>o\017\207=\354\2118<\002\305;>\221\227\236\276\324Qp\275\376dq\276\326&=>\332M\365\273\000\247Z\276\311X\340=\003\013B=Jn\361=\212]\363\275X5\230\275\230!\313= \025\366\275\021\305`=\026\007\201\2758\\\224\276m\332g\274^\2109\275|*\304;\352U\026>Lu(=;\363\316\275\006b_>\303\353T>\353\315\364=M@\023\276\303\260\272:\267\n\242>\206\375\021<\007\264\210\275>\n\337=\010\234\354\275\250\366\210\276\243\037\010\275\366te>\252$V>-)\037\275\034t\304=5j\230\275\303\241\337=\216\023)\276\352K\234>\341O\225=\216\355\206\275\014\210\245\275\005\307p\276\357h\204>\37698>%\'\223\275\320\3231>\204`\005\276i{\034>\340i\254>7\256\211\276\0338b\275\326Y\305\274g\237\361<\346Q5\276O\241&>\014\016\017>c\362\360=\214\026\201=\202\274\375\275\322\t\024\275X\337\360=\260\032?\273{N\222>\003K^>$\212\330;E\250\276\275\003\302d\275%\320\032>U\276\001?\005\0274\275`\025\013>\257\2219=\251\027\227=5\310*\276\276\346d\276\244#\264>\004\221\357\275.\2065\276rQ+=\316\360\253\276\314{t>\311\370\250\274\310\362T\2767$~>\013\"\206\275{\242\034\276\273ln\273\342\375\331=\304\345\037>\004\257\371>Y\321\222>\360\005(\276\343eT>\005\325\320=p0H=\201\230\334=_)}\275\r\256\214>\250\360\351=\036\273\204\276\356x\203\275\020\227<\276\243\323\301>]\321;\275\0223\023\276\254\201\204=\030.\004\275rZ^\274\306\335\315=!C\213>\035U\037>n@;\276hV\037=\003\270\177<q\204U>\312\262\242\274\210>\022>@\325*>\037\356\265=\366\251\203\274bO>\275\323&\211>\364\363:>\351\355\032=F\331\372\275\177\247\314=O\213\003>?\207=\276\360c\261>\234C\307=\272\201\207\276)\266\247=\307\310\355\275\366\216\020\276*\032\264>uu\351\275~;2=h\027x\276\301I;\276aA%>5\204\250\275\325\366\330=\037\375H\275\035L\242>\307\0004=\274M\347<"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\036RI>\036\037\334=\032ZQ<\204\010\232>\371n\253<\025\372;\275Pv\204>\375wy<\225\354i\276y[\363\276\346\344F=b\256r\276\317<u\276\223\220\231\275},\022=\322\312\237\275\314\210f=\362\311\\\276\001]u\276!4\222\276\032\321e\275\013\357\235\275\374\300d\276>\377\222>`N9>\344\231\332<\325e\226<\332\335\260\275#\356\025\273u?\n\276\313\024K\275\006ZS=\232\"\210>\206\301\255\2760\276\237\276$\301\344\276\351K\026\275\200Z\315\275\256\276\205\276z\2664\276Kg(>\035z\033><\3136\274\345\253\243;h\257#\276z\331h=\3126\353\275-B2\276AP\205\2769fM\276\244\312\020\276*]\r=\223\354\013\276\001\207I\274G\353\267\274\241]\361=\242\377\035>\336\371\213;\203\027\014>\"x\003>\263+\032\276\201!\026\276\212<\237=\307\262\333\267\354\306\020=$\207\201\274\314 \275=\001z\302\273\202HA\274a\237\254;\235\311\261=\017\371\311\276C0\255\275\232a\213>\304i\211=?\330\207=/\215.\275$\310\233\276\223\246\311=\213\001\006\276\214ls>pF\301<\354y\211=\013H\003\276\265I&>n=\337=9<\310\2750\373\235>F+W\2751\250\232\275L\260\333\274\255\313\265>-+\223\276\362\322q>y\263\263\275\265\025N\276.\370|\276\315\305\345\274\313~o>\243,j\276\355\016\270=\274\273?\2762\372\014>\023\254t=\265\022:\276E\231z\275\322\241,\275J\033\246=(9\005=\371\264\007<\315\313}>\360\220\353\275z\255\245\276_\035\367\276<\327+>M\301g\274s\006\265\275N\274\333>C\226\333\275\3633\207\274\300\303\024\275\020\353!>\317\236E\275\355\025c\274\2233C>\204m\275\275\204\320(\276\333S\\\276S\306(>P\304X>JH \275\304r\332\274B%%\276S\207.\275\033\026\347\274G\272\302\275\177\332\230\275\'\277\013\276\030\354d<\341\206x>1\371\026\275\035\311\253\276\240o\226\275\303\346\246=\255\034\230\275\357\351q\276\026\371\377=\313\3161>x\262g\276-y\367\275\345\031W=i\014Z\276\376\237K\276\306\242\017\275d4\275\275{b\277=\204!\233=\261\t/\276zv\322\274\263\366b\275\212\254^\2767\360\013\275\372\202\210\276\351Q\353=\033m\227;\250*\004=\305g\324=&s\255=sZ8>\204\256\231<\231\n\322\275\225A\r\276;\351\323\276o\317b>c\023\204\276\205\234E=\3639\265=;g\244\276\246\036\231=\232\326i\275\240\303\207>\246v\220\275b~\200>\342\0371\276]\333\267>P\262\242=\203a@\276c\203^\276Qn\350>\372\242W\276\211Ic>\034hj\276\274W\010\276<\336\233=\343\310\203\276\245\355;=\005)\022=\342!\367\275vI\217\276\340\016m=U8\001\274\212CP>Y\274\214>^\306\234\274\206s\223\276_s\004\276=\005\n=\345q\210=N\344\004>\304\2561>\265\007]>\002R\234<.\030\206>\340ud\275\345\233.>\375\3472\276:v/>\257\376\204>\241\211b=TN\306\276j\353c\276p\225\271<\010\353\310\276\'\357\206=\240\252\304\272v\244\007<\200i\023\276\273\3433\276\211\277\213\276\204] >\372\333-\2752 \370\275>5\332=_\271\253\274R+3>m\255\242=\227p3>\361eZ>\204\322\202\276\312as>B\316\270=\311\002\214\276\007\313\005\276 \375\r>\215\355\272\276\261aa>\3159\221>\227\274M\275\333\ri<\373I\323=\317\336\006\274@\315\260\271%\337\234=\250y\230>xf\002<mb\016\275\334l\201<\212^7=\340\257\\\275(4\235=2d\207=^O\254\275\013]\245=\273\262l\276\201I\316\276\215mV<S\312\307>\264\262\211>\310\336$>Nr\206\275\303\245\263\275z\237\033=\0303\336=\344\350\017\275\261\326\213\275!\370&\274\313uK>\334\301l>\031s\260\276VVE=\031\204Q>d*\261>\350\305\275\275\032\030\007>\035\214\372=\3354l\276\370\246K>\375\003\006>\333\250\201<*m\252>\217i(;\306%\004\274o\211\210\276 C\243\275`\332\022\276\336[O>!\323\271\276\334\3611\274\301\345U>\361\334\246=D8\035\275\370\"\332\275\307\270\020>\345\031D\274\251v[=_\\\305>&>\033\276O\007\005\276#\035q\275\032~\244\275s\331\254>\233\330\357=\006/\247>\364\310\002>\226\021\200\275\374s\341\274\357\201\016>hDG\273\223S\217\275\224\214\353<H\006\271;b\241\t==y\253=\232\263\344\276~\232\233>}\006\032;\301j?\275f{\353<!`\316\273\002\276;>\365\023\r>\344\336\002>\325\366y\273gku>\"z|\275/\267\227=#\202;\276\007\307\207\276\3040\t\276\016\250\036\276 \245\224>(\314\335\275)\275:\276\347\036L\276\343\235\313\276\273~?>7\243\203\276\033a\273;k8\302\275\264\304\005>\n\336\307\274\374<\253\275\311\367\220>]\036\312\276^<\023>\r3<>\033i \276\255\004H\276#5\364\275\037t\033\275\216\263g>\360\354\276\276\023\351i=\026\331\377\275D\001\206\275\r\225\206=\272\247@>u\273\206\275\244\304-\276\350a\316\271\341k\357\275$;k=b?#\276\232\320\235=?\355l<\242\365\374\275\017\315\036>\355\307%\276w\307\354\275%\267\221>p\205\303=\270\234\320\275\305\344\204>\325qf=\353\372k>\345J]=\242j\205\274\271\331{>\032\272\347\273J7\216\276$\252\340\272\307\237\206>\336l\014\275\007{\261>\241\000(>\210\267\271>\376+\260\274W\350[=v\017\237>VJk=\377\303\273\2743\365\232\275\333\210\345\275\375\343\255\274Z\315.\275\332\257\233\275\201\340\024\276\321\372\335\275\307n\207\276d\317t\275\250\314\357=6L\363<\362\255\311<\255bq>6\373a>n\334P\275m\002/>\304H\364\273\231\232w\275\2046\255\276/uw<Q\322\010?\317\266\370<\363\373\240=\023\217\366\275\202\001k=}\361\023\276\244sZ\276\250\303\\\275\327\234\343\276\371P\n\275\250\025\r>n\311s\276\354U\307<\204d\017\274\035\322\206>\000\243\364\275\201)\313\275\372\327{\275\347Vw\276\372\273+\272\343C\255\275\261\332S>lN\222\276\266\307\227=\037\234\032=\324\346&\275L\227\201<~eM>y\247z>/G\003\276\340\224G=\371iY>d\002e=cZ\231\276;>}\275o7\252=|\315*=\246\263\332<_aT\276(\257\330>\334\256\210>\375\364@\276\031\352\234\275*\363\255\274\227l\315\276\241s\211\276I\311\256>p=\001>\250\020\252>*\245k\276ss\317<<\024\325=\214\230\036\276\337}Q>\2003~\274\343\013\005>\323)\t\276\267\345\003\276?\203\373<n\270\204\275\035\300(=\374{\203>S\035\017\276\231\211\017\276\r\252\207=\3214\316\275\255=\227=\205\033\010=\025\330z=\370\327\367\275&f\366;\270p\250=\234\206\273\274\310\356\216\276j\245_>\305WN>\330j\235\276\366e\205>\213W\n\275L\271K\276m#\017>!yW\276*\215%>\025\320/=\025Qs\276\273\'\215<\256\326&\275c\340\017>\345\377.\276\251Ul\274\210\311\306=\250e\231\274\275\034\273=\031`\312>\272\334\271=\366\3133\276\256g3\276\265\024H\2767\2170>\331+\243=\237\254\032\276\006\237%=\223\252;\274\004A\245\276\270\345r>\326K\330\275j\206\363\275\200z\002={\277\002\275\004H\\=\352\216N<=\002P\275\320sC>\275U5\276B\3077=Q4\302\274\337m\273=\302m<=\267P\310\275\362\220]\276\257\221\023>\270\tj\275\310\370\353\275\025\030\210<4\235\321=\220\377\025>\024\024D>\312\216%\276\023\033\355\274a\234\236\276\303\030\305=P\2534\276\007\034Z>j_G\276\354\375\247>;$\336\276\224\275\013>\001\362\230=\022\352$>\023-\245=\253\324\322=\313\3460\275\030\023\n=Z\201\231\275!\335*>\2137\334\273\250\t\333\276K>\231\276k\341\205>\302\223N\276\333g!\276\216w\326\275\3270\274\276\032\335m=\334\231)>\364R\014\276P{\216\2740\2561>\3666{>5\222\007>&\t\324>lH]\276\217\302\216=C\350!=\177\270\037>\205\242\030\276\\\n\237>~\336\326\276\333\032L\276c\363\350\274Y\327d\276\036\355x>\010\302L\275\201\250Y\276\205\335\205=\205s\362\275mK`>.\225\217\275\244\3375\276H\031\213\275\022:i\276+\303G\276=z\223>\234\243(>\025\217\\\274\027\032\310\274o\247\242=\365M/\276\212#\000\275\"\317\201\276\363\353C>\014\273\355<\202>\026\274\366>\213\270\374%}\275%\367\220\275\007\346)>\233\222\354=n\275\007\276\226\347;>`W\t>\273C\335\275-O\250\275|\356\006=\330\364.>[h\270=\344v\022\276x\036\017\277FPZ\274\216\024\034\276\304\3532\276\200l[>| k\275\002W\331=\363D%>d\346\027\276\305\307\223\273\250\020\353=\302[\010=\025\231\357=2&j>{\357%\276\243\230\323\275\267[\226>?\370\235=\365\017\227<\005L\275\275\"2!\2763\336\221<\216m\276>\257\213\302\275\320\266\002=\276\242\020\2767\344\271=\201\337\237\274\234\367N>0.\035\275\206\310\320=s{x\274%\311\034\276<.j\275e\306\200\276ow\013<mnc>\036\243\'\276\274jJ\276hDq\276\253>\206\276l\177\310<\334q\331=\031\3315\276\370tR=\205\330m>\024\351\340;\267\325\">\252r\330=IH\036>\030H.\2741\321!\274/\034_>\361\n\372\272\204\013\366>\250\2207\275w\003\220\275:zk>a\260\275=\255(\r\274\264`\020=\2273\033>\317\365\263>\0161\200>\362u\024>\215RP\276%\212\004\277\325\310\001\276\026\031.\276cf\021>y\220\321=z\027\264\275\361~\207\275b\035A:WC\201>\210@\335\275\263\2411\276\356v\225>{\262\027=3\'\226<\277\361\204\276\204&Y>\010\321\304\276Zv\234\275\353\310i\275\210\035Z\276\340\325\241=\216\264]\276\374FD=\261\240 >\3179\220><\007!\276\177b\277>\3779~=\314\373L=\216\016\006>#\nA\275I\253\303\275\335$S>\324I\246=\031\270\377<\2376\372\274\307X\337=\272t\037>\2662\030<Y\033\267=I\275Q\276\354H\376<\024\371/>\212\217O;LL\332\275\366#\367=\274r\234\276\332\320\261<\347B\217<G\341\010=\232\227\n\275\261\332\357\276\336J\365<|y\362\275\367\004>\271Z\247\327\276.7\365\274,\351*\275\220\374\240\276\357\304\n>OFA>f\312\240=\204\372\233=\300\222L\273\200\016\226=8\332\203=\004*W>_\247\203\275\362\361\222\276[J4\276g\301\220\276\025U\036\276\275\357\034>8\245Q\276^\265\212=\244h\204\275\310\024\350\274\311\341#\276\006\n\212>)\273\242>\346]\221\276\376\356m\2749\215\210>r&}\2761\374\216\275l\022\321\274\002\2411\276l\2056\276\2277B>\203\201)\274\360\216_\275\225D\270<\031\032)\275\230\255\032\276\305\214R>Mmp\276\343\222\005\276\267\3766>\216\231J>\357\330a>)\363->\207<-\275\232c3\276}b%>\244\247\302>\024\246\351=\242\247\257=y\3626>\246\027\366\275s\037y=\347D|\275t\003e\275\023\362\272=\376\330\237>WQ\304\275\346\207\264<\n\364\316\276\376 \263\275\332\263u=\213[_>\032\366l:\320,\206\276P\302\271=\333\346\362\275\307p\206=\364L\213>Zz\037\276\276\002\232\276M\270\237\2745\332u\274\r\340\207=+\247b\276\324\264\205\276\261\353T\276\312vN>\031zN=\234\010h\276\376\335\025>\305\213_=\262[\304=\323a\314=\272cA>M\232\343>\275\307W\275\t\357W\271\334\207\241\275\333\207\230>!\360E>A:_\276\213\335\\>B\245Z8]\277\321\273aGM=\020\261\">\033\365Q\276w\\\233\276\254a\357\275\316\227\224\275\324\251\257\276M\022\351<I\353\037>\236\036j\275\221\314m>\303`O>\376n%>\016\241\205\276k\300\304\276\032\001=\2759A?\276C5\013>\210\337\227\276\033\276N>?\035\225=;\256\014;XO\314:\0162\321\275\200\310\217\276\324\223\272\275\034\370-=\354\322\202\275n<2\276\317\222X\276\367\032\027\276\010,k\275XU\250=\234\341\240\275\224 \207\276\346\323\216>\313\331\207\273>\353\320\275\007(\354=0\232S>\037\\\327\274\0105\016>D\274N>R\263O=\000\225\211\275G\356T\275\374\360F\276\344\350 >2\374R\275\030\247\236\276\335)*>\267\272%\276\014b#\275*]\234\276\305>\302>\223\210\323\275\277c\341\2763\205\243\276\017\251>\276\262E\256\275\001\230\261\275p\202\246\275pl>\276\213\274\366\274\035\325\311\275P\014\344;!\257 >\"\022]>\241a\034\2755\242-<xa\314\275\327\t&\273\037g!\275\344{\031\275\253\201\205\276$r\004\276v\265~\276\352\362\256\275\024Px\276\024\276\212\276\367i\023>\320\337\216\275|^\250\275]\266\337=\034_%\276h\033\035\276\030\337\013\276\032\302C\276\311D/>*\315S\276t\010l\275\375\321\233>e\037\236\276\204v\216=\017C\276\274\212\215\016\277\275\243\376\275J6\335=\215\321\361<~\352\013=\023\312\001\276@S\256<0\032\r>7\302K=X\036=<\210<\324=b\037\023\276\301d\321<\202-s=\312\373\212=g\362\315\274\304t\212=+\272\222>\213\344\221=\321\247\255<\220\027e=p\004\205>s\377\204=\007\363\216\275\362\225\244=87M\276\203\004U<\321\264\320\275\316\240\203=j{\'>w6m\275[x\026\276\345\002\263==n\227\275q\223\264;\323-\317\275\315@\271=\025;\237=&\3702=\334k\203\275]\251\347=\342\340\275>[\213Q<\202\264\210\275N*\377>Km2\276>\234\211<\010\247\370\275\016\306 \276h\265u\275+\267g>\246\013\354=\221A!=E4\207>} \026\276\365\345\000>\251:->\361\205\036=y\371+\276\370\016\225<ls\265>rwv=NH\t\276\020\204\276>d\211Z=\250\362\376=\207\327W\276\036\324\204\275F_\271\275\300%q>qS\007>\247M\304>mS\214<\022\251\366\275\002M\324\275\326\305\313>\036U\240\275\343\362#>\233\034\005=b\022\243=\210\310\301\276|!\030\275\267\264\246>\336\236\256\275\276\324\273\275\340\243\205\275+\002)\275\003g\247\273jq\210\274\343\033\t=\212q\205=D.0\276\2761p\275\235r\\\273/!\352=\336\351n\276\037 \257>\254ZL\276?m[>\213\002\312\275\374\342\312=\330\240\035\275-?\204\274\346\277\276\274\205\315\004?\232\330\271\275\014n\030>\310\'\225=\214.>>%\366\316\275<?\320\275\377\236\005=C\243J>K6\241\276\265iI>\t+\314=\336{\032=\255\345g\276\263\221\201\275\310\252V>U\373C\276\201\227\032?F\264\257>\314\252\222>\3636\017\276f\216\361\275ug\357\275\321\256U\276\317\177\024\275\320>\314\275\234\257\256\275\201?\357\2756(%>\035\222\222>k`3=\356\342\372\275\366)\366<\272\222\251\271\000U\022>\302N\032\276xa\211=\211`N>*\021@\276\322\344\007>\023\233\343\274\215\224W<\315\002\257\275H\267\310\275\032\3007>\245JJ\276}rj>\340\t\237\276\030f\324;\375&\021\276\233\310j\276\305e\220=\202\"(>\276?\231\275@q\376\2757\260\236\275\311\365\342\275Sr\322\275\213 =\2768\317\353\275\221\341>\276\310\320\201\275\034J\034\276.\315m>.\215\310\275\330\376\302\276\235b\364\273\277\230W\276n\315\226>\334u\306=/m\215=Z\376\204\275\206\251\245\276nv\273=\314\251$>\231\363\202>/\362d>\221!7\276\224\346\023>\326\300\253>\225oH;\341h\332\273\201B\303\2740\216*\275\203}S\276\202s\207\276)\316\316\275\273\363\337=\362r\202=\367~+=Alr=\213\324\034>UY\004\275\222\343K>\242a,\275\351\225p><\305l>\330 \375=\026X\204\276\001\371n\276?\211\235\275\250<\220>\313Q\346=Y\252\222\276<\341,>n\006#>\323=E\276\363\004\n\275\003>\201>J\310\220=y\262\030\275\263\265|=r\0142\275-U\260=0\205x>\367\313X>9\307\216\276\361\354\265=g*->f\236z=\023\246\275=V\234}\276\306\327\032\276\034b\032<^Z\236\275\342D\237>\270e\253\274Td\n>\030\r\247\273|\354(=\002\273\377\274\324\302\307\275\r\027Q<\201c\313=\330\003\323>\335B\325\276\237\373\251=8\325\226=\230\222\271\276\260\241{\274\275K\245>V\215~\275_\244\213\275Q\306 >\234B\341=\230\372\200\275\223,\031>m\223\252>D\217\274<3b\263<k\324*>\n\013\245\274\006\234~\276\236\270\236\276\234B\354\275>R\373\274X}\232<\025!E>\241\\<\274\361\030\201\2759\360\232\275\276l:>\376\351\024>\017\352<>Tx\037>\343\346\374=\270\317\354>Z\306\240\275\262\344C>!\220\007\276\200\3208>\377\177\263>\277\364\207\274sCN\276p\245\t>\214u\237\275\000:\204\275\220/\274\275\361e\225\276\270\217\003\2751\355\245\275\301\260c\276\202\336~>\203\177\354\272\365M+\275\346\037!\276\272\230z\276\323\252\220\276C\256\257\275\327V\002\276\375\360\215\276*\220\021>\241\267;=[\301/>\354o\024\275+Y\236>H\337(\276\371\241\265\275\264\0062>\234s\'\276\006\022\334<goi\275\375\312\367=zcl\276\311\263\253\276\014SO>\270\237\254=r\324\026\276\315\342 >\257\264k>\236\331\273=\227\014\366\275\007\330}\275ZD\230>\302\253 \275\222)\313\275\035\260k<\005\2605\276\235\300\003\275@\325\265\273Fh\016>\213_\213=\335\303\375>>T\n>\021\027\005=n\307\230>\253L\247\275\250\000:\276\210\030\247\275\266b\225\275\304\013J=\200\000\203\276F\366M\274\370\251\266=n\247\232>c\235\323\275\024n\202\275O\3166\276\310\233\026>_\212b\275\206&X=j^,=?i\362==\360)\276\370\2540>j\206\037\276l7\n\275#_\234\275f>\234\274\373\302k\2765+\255\276\214!\242=\"\212\307>\333R\316\276\005\205v>\227N\247\275\226\323\237\274`\020\224=kH\213>}\375i\276\003d\314=\352)\331<\215c\250\276\250Q7\276V\253\225\275\357\360j=\207?\264\275\374\323\242\275u\242\305=\377\215\203>\005\025$\275054>C&?\275\037\001P\276\203\313\010?\005D\356=\3009J=\216\373l>:+8\2757\331\032\276^\202\230\275\203w\313\275\335og;\357\022\002\276W\253\331\275\014;;\276\037P\272=}\272\030=\327\264<\276\202k~=\320\363\372\275\221`\235=\370\230\261\276\213\323D\276\247uz>\212\003a=F\372\363;k\313\244=T\035|\276q[\377\275\270\252\324;\364\226\264\2740\021\020\276\207\273\204\275i\010&>2?Q>\257Pm\276su\020>S\016\010\276\2132\367>\241r7\2763\370C\276\016\307\302\274\363i:\276\350\302a\276\223\264\024=2k\240\276\202\235\255\275\304>\367;\'\003\270\276\'Jv>\345\342\201>\352\352\005\275V\261\335\275\213\274\207\2769\231{>l .\276?9\255\276z\260\243\275\300S\207=\366\315G\276\034,g><r{\276\027\022\201\274\023\371\000>4dr=s\207\217\274A\342\375=\363b\030>\267\254\223\276\205\'\314\275\355_\211\275\201\2535\2760\337+>p`1\274n\247\271\274\376\022\327=\266\016\327=\016\025\\>\260s\222\276\252\264\247=\324\205.;\247k\022>\002+\266=\264;\204\275\241t\265=\247\260m\275\343N\201>\375:\314\275]\310v>\355\031\252=\257Dp\276\253N0=F\302\376=\\\200\220=.\352M>\322d?\276\224K\300\276*\341\256>\313\207D<S\306`<V)\332\275\321\327\301\275\337\002\010<\001\024\206>\356\027\256\276\225\006<>7\351G\276}\224\274>\032q#\276\203\005\266\275\336\267\256=\177\304\325=.Xv\276\207<\313\275f?}\276\nb >_\366E=2G\222=q\357.\276-O\213=\267\031\037\275\001e\347\275\335\026\237\275\244\370\013\2765\326\014\276\335\357+>$jt>\357_p\276\376\016=\276\371\226\267=\306\332\267\274\333\3143\276~\313,\276\324^\202\276i\t,=\327)g\276fN\226=\035\364\243\275q\251-\275H|\363<\344\271\245>\367%]\276\350/E\276\216`\203>\300\245\210\275\206\275&\276\276\210\025\276\274\022\374=\236\200\024\276k\344\312\275>\212\204\274\232\023$>.\3621\276\260\212\227=\022,A\2766\233\246\276\342\203_>\"C\306>\346h\035\276;<\247<b\263=\275k\216\004=\354\002\253>\370J+99$A>\210+\206\276, <\275c\177&>`\3741\276|\216\235\273\223\335\220=\230x7\275\027\357\346=\226\340\223=\343\314M>\335\375\365\274xP\277=L\347\031\276A\225\023>\377\014\212\276\003\370*\276\033X\336=M\204(>\260+f\276\220\266\205>\241\206\t\275\276\3104\275_\035\007>b\006\017\276\235\217#=C\217\302<\320\356\257=\256\201\230\276\\d\331\275P\227\367\274I}\257>j\025E\276\207\014\177>\235\2375\275-\314\241\2750C\026>r\256\017\276:\261\205>\343Z\221\275\354v\345\274\216\326\260=sB)>\253\324\030>F\276\336\275\035!x>\013\003\035\276\206\314~>\205I\222\276%\252\203\275\267\2668>\365)\256>\234\276{>O\034S\276\316\205~>S\206\027\276\332\266\201\276\244\327\343\2754\227\362=\366\036M>\233\033`>u\310\224>\023\260s>L\026\233<\234\324*<C\251^<\211\244Z=\212\035\335=v\375\333<\017\247\036=\330\322\200\275\374,u\275\220!9\275\216\205\004\276C\316\024<\257A\301\276[\2449>\027\345\016>%\271\230>\334^\262>e\355;\276~\314K\276\207=5=B\001E\276\300^\023>yy\376\275\201\r<>U\020\221\274V\"\266\275\342E\000?-\331\331\274.\210\363\275\245\201\276\276\265\"\261>\203\244z>\034 m\276/iT>\020V\213\276\3646X\275\333\250:>\245EV\275\352|\240=D\330!\275\274\361\373\274\2701\227<S\355\005\275\035\327\016\276\376=\342\274\032\231\250=(\033\036>}\315\021=\030 \362\275\017\373\271\275\007L0\276\341\262\337\274!\340\003;\024\246\262=\3609p\276\212\200\207>\220\353)<}\244\203>\016\374G\276\212j@\276h\272\236=\342\220\224\276\201\260s>\222\007\232\275\311\322\377\275\347\353}>\372wE>m\206:=_pz>F\311\217\275/\362g>$\003\336\275\021\3571>\211\010\021>\000\340\030\276\nn\200>\344=\330\275\246L\'>\013U\325=\031q#=\3723\306\274^\267\263=\363\337~\2750\223\222=:1\270\276\254|B\275\371\005C\276@4\241>\371\017<\275\240\210\004>\262.4\276\363\246\220=\222\273\374=j\024,>$\027\365< \'A\274\370\020n>\340\252\266=\300t\227=\274~\005>~[\250=\301an=\335\340\207\276\214\202E\275w\374\264\276Y!u\274\305X\231\276\007=\'\276\244\000\254\276\004;\263\275\276\244\372;\177\340\007\276\314\325\323=T@\023>\370x\244>s\226(\276\332?e\276P-\204\276\037\'T\275\372@~>^K\211=\026O\221=\2645\376=}\252\373=u\270\301\275X\231\220>\246\205D>`Q\200=\332\032\037<\205\254=>\324\026\032;\035^\263>|k\256\274f\017\352=\263lB\276{\351\021\275\230\002\343<8\235\\\276\202*\224>s\246\235=\214\337\237>\001\335p\276>X\320=\020\273P=G\234\277>(tP>\013C\010>w\273\037\276\254\261\026>\253\215\235>D\315\210=\261~\020<&\274e=\2575m=\254\\f\276)\330\260\271\274o\317=y=4>\024\346\301>\2545M\275\250AB>\205\304\303\275c\225\327\274YE\240\276\re\261=+G\035\276\243\361v\274\211]\007>\205Y\311</\264\007=\034\347!\276\001\202\000\276\233H\010>,\311J\275\010t\212>\365=\n>ie1=]t0=\343\257\271=\3451\017=G\204\013>F\355\201\276\"]\205>\216\033\362>\276\312 =\321\316\277\276\271\234|\275F\344\233\276\\0t\275\000_\212=\021\032\005=\327\216\007>R\300\330\275\337YU>ux\277=O\363E\275\230\3552=2V\014\275\367X\242\275C\003\021\276\361\323\245=l.w>\017I\270=\032\306\216\275$\"U\276\307\253\021\276\226~\177>n\356\001>\253\315\200\276\261\343\\>\325\'\002>\214\356y\275l\277\235>;\016\241=G\322%>2\366\357\274\001\226\341=\203\347.>\346U\r=\363\260\200>&k\032\275$@\320\274)\346\332\275\2518\007\277\004\n\030\276\020%\263\275\220\260\023\276\224\306\014\276\233\347\376<\274\216\377\275\013\017<\276\032B\242\276\345R\204\276\360\340W=PrQ\276\301\227\277\274r\330;>\330\263\301=\365g\240\276\021\332|\272\266\346j\275\002qb\276\277\r\034=\271\313\224>Y7\022\276Lnu>?C\356\275\267?\177>\242\325\014\275\244\271\216\276Y\027\225\276\347\355\214>/K\315<\313B\272=N\225\230\275\017\316\006\276C\002\216=\335eG\276\034\356\034>\2374\250>!\224\020>\211@\256;\256.M\276\275m\324\276\311#\000>M\"\332=\367j\377\274g\300\241\275\310A5\276\266\335\372\2749\362\310\276\261\021\205=a\343x\2764\000\216=A\0023\275.\257\335>\251\341\n=$\332]>l\306\254=\357\036\373\274I6\016\275\273c\342=\333\250\250=]\270\255\275\344\263!\275\031\320\004\275^&K\276Z\234\215=\356\np>\371\216\010\276b\032\177=\316B\247=/\210]\276R\322\237\276\360r\330<Q\302\324\275\305\252\200=\010\333r=;eJ\276`\343\004>/\010\277=\033\302D>\026li>\233\327n\276\272\307\215>]\255\252\272\355\353\000\276\247\026\006\275\326\263{=Ik\255\276z\272h\275\223}q;\270\205Z>\t\014\202=\322Y\347=do\323=\034x\203\275\t*Z<2\306\213=\337P\003\275\357S\025>\211\007o\276\'6\302=E\345\020\276.\207G\276\207\332\030>\265\357\342=j\304f>\306\301\023?,^\267=-4I=\001\274\366=H\225\334\275z\231\210\275:\323u>\024\006\314\274+\221D>\203\306K\275\323\3418\276\330\256\322>\322L\021>\2275E\276~\014\035>*\361t>\022~S>\307Z>\276\261j`\2751\370\326\275T;(>\262UU\276\201V\225\276ER\243\275\270\203A>N.\215=\3010)><\220Q>\352?\216\275}\265\267=\020\227\354<&%\r\275Q\3238\275\3362+>\'-\017\276N~\303\275\320`\016>\035n\333=\034\021\363=\323\223h>\330G\304\276@V\'>6q\345\275\370\237\276>\364)\355=\255\366\373\275u,\227=\247\020,>\r\326c\275\203\1774\2762\2011>.\220x>\030\204\221\276\344\357\007\276p\271\303<4\361\007?\230\354\020\2779\371Z>\263a\010>\366>\354=\263\363\036\274a\325\314= t\352=\225?\257\275\255\374\035\275\273\235\264=\377\347\214=B\210\215\275{\270\355\274\006\032\016\275\013\004\206\275\255\251\327\2756\227\'\275\357j\\<\022T\251>H\023)>\273w\240\275\233\372\242=6\237\225\274YdX\274\314\204S=C\232\234\276Z\010\322\275\'?\006\276\254\301m\275Z\032\354\275\255\365\r\275\2623\027>\363^\245\275\010\235q>\353\035\217>\374\216\035\275\354\245\177=\252K\356<\246\267$\276|\222\035\276\016\226`>\003\367\361\275\247\364\325\274\321I\027>\205\3342<\377\277G\276\234\374\231\276\262\241n\275\2740\264\276#N$=\340|=\276\007T \276\342H\014\276\260>\214\276\373\334\315=\013\332\1779<\270\r>\024\201\244\276\366\004\313<+\005\261\276\\^\215\275i\2200\276ZNC\276\265\377\261=b]{=\357\"\006\276u\317\222\275\347\252\345=M\320\343=\267\360Y\276\262\310\334=\205\204\247>\311\305\210=-\320\262\276,\304\021\274m\233\206\276\273K\013>\353VG=\224kS:\376\376\013>\325\377S>m\356\350\274\214S-\275\240_p>\203u\324<\213W\240\275P\347^\2767`\373\274\3419\371\274\211\007H\276Q\211\314\273\236\252\234\275\235\332^=\331\355\227=\303N\325\275\341\213:\275\207b\205\276\264\000H\276\270\034\217\275\201\322m=1\275\266=i\330\204\276\031\240w\276\331b\316=1\257\230\276\212\255\220>\235\375\032\275\026\307\223>?\343y=\355&\n\276\230\316\026>\335n\270\276\302\217\333\275\010pE>\246c\t=\347\214W\276\364z\301==-6>>\217\213>\353,%>`\233\246>AQA=Xv\r={\226\210=\350Tz<\344L \275\340&\265\275\'\220\344=\262\250\277\275\227H\306\274e\364)\276]\304\277\275\272\252\005\276\343t\265\276k\3331=\033\002\t\276\221\371\212>Q\201\331=\266\271Y\274Y\213\330\276\r7\226=\177x\252>\337y\212\276\225t\032\275\322\3614\276\360\303R>\323d1\276\261\250\177\274\353\271Z>/\343\262\274\251\302\342=\343Z\233\276\266\000A\276\305\014\036=\250\017\332=;\245\233>\360@\316<\\\353(\276%\374\212>+\346\010>\\n\206>S\007\351=\246\232\315=\220S%\276F\217u>\376F#>x\357r={I\255=\233\321\001\276pP\325;\275\024\r>7\225!\276G\344v\276l\373\202>\177eh=_\241\035\276\234\376\002\276\275\263\215>5\236\260\275\t\311;>(\341p\276\021\303?=\310n\252>h\334\177>\2447\234\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\030:\005\276\262\317->/\3459\276\027\326\201>\177\343\257\275\002\005X\276\237\314\235\275\250\343R\276\355#\225\276\343b\023\276t*\242\276\037\010\007=\014\342I\276w\026Z=1B\233\275\230\225Q\276<\032\321\274}\003\247>\313\276\021\276\"\312\223\276\264\352h=vw\347=]X\240=\200\362\377\275\247\017X\276\3129_\276\013\332\321=,\331\001\276kJ\267\275(\357\032\276q\270\005>\354-:=\025\270\317=\355\212\360=}\251\005>\222\276\033=\315\334\201\276*\202\331\275\377\256\n>\3342}\275\373\247\223=\277\302\n\276\311\234\312=\361p\247\276P\375\255\276-\272b\276\200D\264\275T,\212>5\335h\276`\\\210\276K\\\360=\373\276\241\275\016Sy\276\231i\234\276\240\340\256;\030\330?>\243^\022\276\357\204\352\274\265K\262\274\234\362d\2766gb>\340#F\276\003\232\341>m\277\345=\214oD\274\261~A\276\271\260\010>\211O\312\276Y\277\337\275\333\n\221>\340E\312\276\337\356\241\275\201\377k>\244\272\003>f\310\223\276\317\317\033>\003w4\276H\353d\276\250\007\326\275\031\334\">\372\301#>\303{\007=\024C!\276\206\271\005\276\350\216\271=\002+\302\275\356[.>2V\225=v\265[>h\013\256>\025\360k\274\002\226X>\2453\005=\236\277t\276\366w\250\275$\204\254\275d\177G\276\250\033a\276X\022\367>1\005\200\276#\207\233> \322U\276wj\r=\024l\307=\323\234\311\275\006\267\221\275\002\277R\276\231\312\331\275\334\024\372\275*!1\275{\2526>CW\363<S\337\232\275\037\r\211;\241\'\306\272\303A\316\275n0\211>\323\246b>\3614\017\274M\201\237=\375e@\275\223\362/=\274n\230=\330V\271\275\202\tx\276z\356\013>r \237\275K\331\010=\030\005\370\274hSd=\377\001\254\275?L\366\275\332,\300\275\261\340\026>1\212:;\336;\002>\357\014\353<(\312\232=\2658\321=\320\n\210\274\210*\206\275\377&\034\276j\302\333\275z\000B>{\377\303\276N\273\227>r\367\221<\0200\224<\234\3676;+2\211>mX*\2757\2673=\000g=>,u\035>L\212\370=W\243\225=\267GB\276\2208t\276d\226\335>\0021\200\276\223\017Y>R8o>\370\322\214\275\001\300\235\275\325\342\321\275\206\332\260\276\216\303\352\275\234\206\037>e\217\226\2748;K\276\204\234\322\274\243\310\335\275N[+\275\366H\003>\224^\227>\342v}\2763K\016>s\245+\276\023\016\344\275\330\240F<\361\252n<\330\003Z=|\376:>\244\306\257>\347p\032=F\rW<\344ae>z+\022=\r\245\224=AFF\275\233\211u>7\312p\276K\016\232\276\300\211\326<\266\364C;\022\256\222\274S\206\267\275\312\254\376\275\323\222\217\275CO\206>\336\037\224\276\353\243\301;\216\331\222=\250\204\200\275@\245\313\275\036\361\232\276\010~b\276\242%\223\276!r\271\276\221\246\211\276\212\301X=\260\004\373=\345\270\343=H\361\244=<Xe=\334o4\276+Zu>W\031\212\274\'\272\212;\022!\241=\3310\336=Fj\374<AH\006\274c\341F>\005\217\023\276\005R\334<\n\237\230\276\370z4;\016tj\276\270\237A>\307wU\276y\201\275\274\220\037\374\275\257<\332\274I\001\025>\203f\324\274Q\276*\274\372:\236>p\207q>\222\357\206\2752\211\274\275xSL\276;~\003=\224\330\377\275\007L\221\275\334\210,>\342BN>\002\232.\276h\262\032=\032\\\203\275\270\254\216\276\214\372\244\276\325\207\352<i\336c:\010\252\216\275\032\034;\276\002\302^\274B\255%>|\373\331\275\257K\304\275Q\315\270=L\337$>,\216\210\275\254\035@\275 Sf>\216b\247\275\203\206<=\230\304\343\275\210\372\274=\232\322-=\206-\256>A\360W\275a\331\255=\366\001\250\275\367#\310>\315C9\276Y\001_>l\'\241\276\322\220\247>\263\375\274\273v\024\025>\370\362\207\275\347N\204=\377\242\246\2754\244\231\275\016\316x\276\346\331r>\207\276\371>\234\205\227>\273\260\333\275F\302\304=\235L\327=\243\231\002\276\353#2\276^\216.\275\026\271)\276\244\230\230\276$&\214>\373\361W>\265o\021>W#\014>\257m\363=\254Pk>&\346><\202\\\333=\t\233\263>\337\272\300\274\362$x\275\001\364\032\276\344\217f\276\241\237\346\275\376\366U\275\270\265\016\276\227;t>\344e\360=8\364W\276\033\025\212\2764UQ\276g8\215\273\254\037F\275k\013w\276^\317S>*\332Z\2763\rT\276\241!\345=D\260\230\276\032c\371\275\016\375-=\352\315`>lcb<r\314\230=\233?\235>\343xG\275\227\217!>\221\027\250\276]r\214\275\355\213P>\023\302*\2764\324\232<\377\261.=\310|\273;|\312\354\275q\260\334\274\227:\340\275\2075\356\275e\237H>\274\335\230=\305\211\376\275\346\261?>\0068\221=\376\362k\274c\3107\275?\037\241\275\030\r\307\276\222\263\324=\013Dy\276\031\211~\276\364?\327=\212\267\331=\3777\030\276H8\367=\3532\235=]\006T\275\354\3064\275+w/\274]Q\240>\006\311\344>\352\256\n\276q\322F\276\251\204\242\275\0077\200\274\210\377\370\275\302\2758\276\277\351\276<\274\270\303\276\210Ed=1\177\313;2b\026\276\335\210H>y\250,\276%K\263>\332)\364=:\030I>Ly\027\276\340T\013\276t\315\023>\025L;>\r\305\232>\205\327\310\274&\203\231>\304o&=\nh\251\276:\204F>\2227\360=b\032/\274cL5=e\371\354=\314[\374\275\002<\004\276\215\216\225\276\357\002\246<\2241&\275\021q\242\274g\363\245=\324\253\346\275\237\006Q>\213X\264\275\210r&>\250m\367=\274T\235=\241\203\202\276\021\374k\276\315.\341\275Lv\264=\020\373$>\244\351\216\275v\305\300>BR\023\276.\026H\275\1779\242\275\252\316\323\275k6\313\275\257x\307\275&\re\275L\026\232=\231K\233\276\302\240\325\274X\357\005=a m>\246h\263>\345\345\336\275\225\010\n\276\317\232\354\276F\264\370;\252I\220<_\272*<\374\371\331\275\nI\t>!j6>l\316\235>\200\210\013\276\313\353\313=\005}\200\276\325@\201>8/4=\2763\342=\241\332/>\307\361\200\275im\335\275\033\321\341=\365\265:\2765\340\242\275c\206\263\275\325\212\247\275p\342\032\276\307\360\\\276\211\2762\275E|\244\275\260d5\276\312__\275\241\242\033=-\310\214\275\013~\330=\206i\250>Z\243\246\275\\\301\320=\010:\317>\037\262\347=\342\316\026=\032Fc=\220\'\032=\270\316\002\276\317\210\004>\215\260\365<{\004\375=\331\303\005\276\001\227\220\275\006\201Y>\n\245s=\336\2759=\310|\365<\340\243\211>\035\013->]\277\020>~\010Z>\003\264Z\276\265 \014>\273\315y\276\255;\037>F\204\206\274{\035$\275\'\224\205=v\315+\276\006R\254>\'\250p>\274\372g>\276\373\227\2757>\024\276\333\206W\275\323\033\277\274\260=a\275gY\217>.\237\252\275\n\356\263=\210\326\005>\222qa>\022\204I=\320S\213=\242\032\226\275\203\'\231>\274\316\314=5\270\221>\272c\303>\200\214\322=C)\345\274F\226\020\274\374,\026>\311\204\001\276~[\333\275\234\301l\2762\312\020\276q\207\262>\265\201%\2760\224\357\275\006\254$\275f\352\203=\266Z8\276zN\200\276\374\326\001\275Z\255!\276\306i\330=\272\243$>\342\310\n<kq\010\276=\255{>M\343\004\276G\203f\275\301\326o\276<\242\007<x\351_\276\332\201#\276\370;%\276\376\202\263\272\364&\007\276\270\000\352<U\177\212\275\302\211\004>\372/\236\274\266\001)\276\342\0274\276\343\251\001\275\341\271\233\275c$\255\275wq\013\275\352\201;\275V$?\276Z\332A=Z\254F\275\241X*\276\000\177\227\276\245Z\">\336\214\256<\327\322\221>\212\231\300\274\363<\315\275yb\320;W_o>;P\303<\360^\303>\371\037\236>\030\225\345<Y\007\271=U+4=o\326\013>qj\367<N\226X\276\002W\244=Q\267\235>\357\255\006>l\370\203=\255\001\017\276E\366+>\024\007i\276@\221\354=K\016\201>\354M\014>*\235\373=\373J\021>\212?\'=R\217\000>N\322K\275(\342D\276r.\227\276\221\004\223\275\323\007\377;;w\014\276#K\t\276Wz\233>\300\210Z=\t\311p\276\030<\263=q2\254=o\326\264\275A\250\221>\241\207W\276q\371\356=\334\021\202\275\235\335\300=\347\266->[:\003>f\231\347=XL\030\276\213/\023>\330\332\033<\036\331#=\361C\325\275\305Q\375<\025\3529\276!\374\201>\357\000c>C\240\346=-\261\001>\214.\214\274\177\2741\276\340\277\027>\200P\n>\311@)<w !>?\365\233\275\317\374\232<\323ox=\'E)>\265d\222>U9\217\276Q\327>>\360\301B>\010\017\006\276\332r\253\276>\335f\275\340^\300\276\377nl=\030\252\010>\352\210\243\276\342\202\210\2764x\214>m\367P<\264\177W>d&\223>i#\311\276D\303\t\276\307#\264\275\226Gt\275\375z\252\274\035T\261<J\207\212>l\206_\276M4\342\274\'\234\332\273\031\361\r\276,\336\256>\274C\254>S\225@\276\214V3<\336\263\353=\236f\205\275\006\226\317>\214G\205\2761\267\327<\361\347\277=\000N\372=\201j\014\275\236\347\273\275\262\026\231>fNW\274qz\221=1\034/=\311\275r=?\354l>\232:\277>\004+\300\275\312\270r=\226\247L\276\365\377\200=8A\335\275\030\366\036>,\030\220=-\241E<\305\274\354\275\243z8>/\364\246\276\347\226\241>h\027-=\000\021%>]\356f=\202\257\222\276/\027\312\275iQ >G\2511\274|LI\275\244\236\037=\347h\017=\034\n\201<CV\216\276\373\000:\275k\222\203\275\347\327\210\275y\331\002\276NO\317>\005\250T>\223m\375=\022RQ>\034\261\034\2769\337\'\274\245\020\247>q\320\352\274\377\2172>L\274\207\275`\315\230\276\324a\'>\226\264*\276\251\247\010\276\233\365\030=%2\307>\362\024D\276r\020\013>4\230\262\276\027\362!>\034~\275>_\r\303<\312\004\321=\256\252o=\2305\007>\226\360o\275\370L\212>7\220\244;\375\031\326\2750\227&>\024\325\343\273/n\305>:Q9\276\277\333\344\273\022\237m\276.q\343\275\232\245\250\275!\3043=\263\034\237\276@\002\360=\330\216\221>\362r\375<\353+\024\276;\223\017\276\326\010\002>\262\210\202\276\230|2\274\322z\010?\234,U\275\264\313\221>\366!\211=y\\\225<uZ\016\2753\362u\276\325C\252\275\363\014\226=\3172_\276\004@\265<|\272I>\205\334\312\275\212m\000\277\335\362\370=\213\320\032\276\311\013\023\276\003\253X\275\355\2010=+\240\243\275\257\023\202>\351t\270<\005&\265>]\230\236\276Gz\365=)\222\235\274\003\363\323\275\272\030[=\376\325\026\276\0130a\275\321d\265\275\2160\313=\324\270)\276\023\362\300\276O\211 >\257\377\275\276\240<\023\276\026>q>\223\244\241<\334@9\276\t\213!\276\343rM=\216\203 \276\255\301\357\2750\365\215\276C\017\214=?a\210\276PH\362\275\003{v=\032\371*\276\016\002\242>H\026z\276[\326\013>\215a\213\276m\037>>B\037T>\362\211=>X\357/\276\373\256\036\275Q\376\201=\026\335\203\2742h\224\276\325\2748\276\237\024\300>\313H\365=\235\264)>\212%\377=\256\314\362=PY\217=\r\0211\276\264w4\276\224I\355=\304D0\276\260\371\237=\037x\221=L4J\276\342\326a\276\300\307\213=e\013\033\275\273=\017<g@g=\263\360\257\276\306N\013>i\203\035\274\330\347U=\004n\345=x\253V\275/^i<\320>\022\276\226}\230= W[\276\246\272F<X\352\254\275\364=b\276\3612\232\275J\262\004\276)0\211\276/g\343\2759q\'=\363R(\275\301\333\026>\276\362\365=\253,h>A\275\250\276\204y!>7\353o\276q\250u\276b\333\200>\334\345<>qO\304=\227\352\240<\336\276\306=\3118\366\274&\371@>)\255\272\275\312^2>\245\265)>B\010\205>\363\346c\275\001+\261>\353:\312=i\277\225=\262\201\237>\376\374\375=`\301q\276\316X\376\275b\017\277\276\242\360\213<\\\332\344\274:\374*\276\353>\243>\374\345\'=\314\177\256\275q\377\002=\217\277\202=P(\035\276\274v\303>\366\001j\275H(\203=x\031\342<o\256\215\275\322Mb=X\273\367=\234\242\310<\221\253\n>S\324Q>\353\267\313=T\026K<!\340\236\275T\264/\276H\236F\274\321\263.\276\277!\214=V9\036\276\247\207\333\275]\202\t\276\322\271K\276\253L\233\276\210\317\t>\330\314\237\276o\020X\276\304aj\274J\226\017\275\311\240\351=\\\246\351\275\213\033Q>;]U\276C\357T>\025*\313=w\351\345<\026.\216\275\260)\235;\252\254\014<\202,g>\216\275\255=\342Y.\275\000\242q\276\\Z\305\276\227\014Z>\276\227>\275q5\364\275td\361\275\302\3357=7,\216=\027\2759=|\206\026\276Hh\220>$*\031\276\335\000@>\366\224\220=\273|_\276\244^[=\253\204\272<\r\231\215>\216\222U\276V\263\276\274\332T\231\274\017\325\257\274;\253\017<\302n\005>\330\037\243>\r6\232\276\000\016\230=I\261\307=1\325\354\275J\3312>\277\273\317>\023\2723\275\327j\262>\007\2544>\325\342\303\2740\034\022=0IC\2769\331\025>O\364\034>\202\001\351=\324~\267\276>\010\211\275q\217C=\366Q3>\232\026\277\275u]\334\275\312 t=\276t\233>R\337\327\275f\217\254\275w\340\271>|JG=.cX\274\213\270p=h\035w\276-\353.>\221\202F=\226\254\240\276\312\323n>\376Qb>A\030\315<\372Qt>\346X\216:\343\363:\276y\001N=3W\013>\353A\032\274\372\347G\276c\372\025>\021\345U>\037\234\304\275\217 \002>\272\3065\276\203\260\336=%\000\252>`\216P\276\243@s>\276v\000=\355\3118;\273\226\303\276\210N\022<b\233j\275\345\342\330=\007\r\">\244U\007>\270\017\023\275\nT\\\276\311\213\253\275\007\242[<\013\240\210>\370r&>\247\220\260\276S\271\312=\302\003\017=\276\375&>\032\345\345=\033\320`\275S\212\032\276N\355\302>\264YU>\263\316\307\275s\244\373\275h\002\252=\327\201x>\204ab\275aVg>\005|K\275\256o,=\320\2634>VC\305\274`\207\231\275T\220)\276L\305\345=\177\354:\276H5\205=\252\324Z>\237\217;>\261\364\321\275w\320\225\275(u\303\275\365\024\272=3\021j\275\372L#<\220~\215\276v\n\253=\257^\177\275\r\221Y>\252.w=5=,\276\361J\271\275\202\356\254\275\027\036\275=d\255\225>)\307\231=\000o\261>XX\242\276\354T\237>\303\003\255>#@\202\275\237\031y\276-b\016>n\016/\276\254\024\251\275p\337r>$\316U\276F)\314<\365E\262=\016k+>\210\260\006>E\206\270\276\025\267\003\275\212\217~>\364\376i>)\336\306\275\245\034\177=no\320=\0039[>\300\277\223>I\207(=\204\377\324\275G\217\017\276\027\351\2579^t\214\275t[\243\275vhy>o|\360\275N\2570>\245t\337=\r*\352<\335\241\221\276\001\213\336=\264\213\316=s\301\256<m\374\307<\302\210F=\315H\272=\364\267Q\275\270uF\276\215\031\254>\274\267\221\275\340\014\250=x\374\013\2772*\375=\376\350x\276l\331{\276\'t\222=\335\223`>\235\360S>\320\265P>\227\0030\276]0.\276\340{\206>`\373><\213}]\276\355\021\220\275\002\244\233\275\247\247\007\276H\020\234\274\203\020<=\014\363\372\272\336\301\214>&\265\345=pU\357\275\035\272\204=\343\026)=\263\035e\275\233\026*\276\233B\013\276\250d\215\276\216\221\222\276\362\332\242>\311k\r\276Z\340\n\276T~\007>\201\002\370\274d\001\004\276\370\326.\276\002\341\333\275\337\220\';\323{\335\275\360\371\024\276\213\340#\276\233\252\'\276\301\027k=\345\025\213>\031/~<.\275\370\276\265d\035\275\232\351\206\275\240\024\021\276\023g\205=\377\341g>T\242h=B.\243\275*cS\276\362\225\312<\336k\203>\031\352\222<\271d(=\021,\300\274\3559\306\275\230wi>)\010\245>\256\230\311\274(\032s<xc\023>\310\256k>\317\223y\275\026\351\004>l*k>\031\023\243>\227\357\326;FU\206\276\350\031\"\275a\371\"=\227\276\301=\207\361S=q\246\303=\315\217\261<S\0203\276r2*\275\273\243\315=\3338\273=\300\035A\275\256\"`\276,A\256=d\363\004\2755\r\342\275:\200\335<\267l\230\276\177\231U>\224\034\002\276\035\337\027\275\020\001}\276E\273\240\275\3430N\276`Z\240=\017>\352\276#\000\210=i\202G>\016\225\020>6a$>!\"\355=\336\306\210>\261\031\177>\223\351\262\276\375i]=$\313\n\276\373W#\275\215\250\216;\016|>=Ri\316\275\276Q\020\276wM\362\275R\225\304\276^b\304=\314\221\227>\\\3342>\037\2606>\313\364\307=J\337$\276\370\366:>\373t\362\275\235\336S<\013\236\226\275\243\303B\276%~\202>\350\001g\276\270B\250\274\t\017\250=U#\n>\036\362\226\273\234\243z\276\223H\235=x\207\223\275N2p>\366=\220>\271\334\377=\376\223G=\2060\000\276\264\255\205\276\262\315\204>y\344?\276n\321\t><\323Y=\323\005f>\366>=>(W@\275\267f<\276t\253`;5\371\311=\342Ja=\362s\211<F\305\360<U` \274\320\004\215\2754\352\205\2769\307\233>\035f\225=\355\200\006=\004e.>\314\215\272=`*\020=\202\355q=`>\367=@\350\273\276\356\315\242\276]KW\275\222DN\276v6\223\276\332U\234\275\324&\240>\331\341*>H\036\030\276\001\314\367\275m\260P=\002\276\262=\273Z\010\276\277\237\347\275\240\211\214\276\314g\306\276\310\311\366>l\177\252>mB\003\276j\271j\275X\231C>&\035\274=4\006\336=0D\365\274\266\221\221=\206\234d=o\020\264\275*{\\\276&\014\316\275\367\307q\275Gs\214\275\304\231|\276.\220\235=-q\200=\351c\326\275\367]m=#\332\031>\207\365\326\276\245\002S=\201\357\036\275YI\007>@\252&>Q;7>zE\357=\376XD>:\001\251\275\357\250\244\276\2643 >\231\027\244\276{}\260<.z\346=sNg\276o\032\013\275\354\021M=\247\303h>\0020d>~/\334\275Ts\327\275\375K\271=&\216\346\275(~(=\n\311\231\276\317;\246=\365\232\251>\307\301{=)\252\242=\030\370$\275=\201\310=\265\353h\276\361\227\014\275\222|8>\334\207<>\321\351\360\273\3572\037>\347\227W>{\017\220\2753\333\232>\025\004\264\273\376\000\346=U\352\233\276\214\377\310\275\255s\r=\346SD\273>\254>>}\024\326\275H.U\276\256\321?>~U1\274\356\352\034>\224o\373=\022\207U\276\005\321\345\276\265\301\213\274\026\216\033<\256!\025\274\301\205\t\276@\372\303=q\353\331\275\376\2633\276\205#\352>V_]\2767\210Q\276\3646z>!K\'\276\3303?>0\376M\275{\302g\276\331\376\372=hU\262\275\272\013l>\213\333x\274B\303.\276\261.\037\276iu\275>\346;\377=\200\257\215\275\360:\242>\006\301\257\275\237*-\276T\212\205\274\254t\266\274\010U\315>y\031C>\375\202\241=\261 o>\022DG>\256\237\277>\240M\255\275*\235v\276\230\370\243\274\223\307<\276\tpT<\370\004\022\276xH\027>\265\353\242\276\"C \276\035\017\034\276\013@\252\2751s\000\276\024\200\t>\235\325\001\276*m4\276\245\272\221=\276?]\275Nd\'=Q\221\204\276`\355i\276^m\032\275R}\\\276\300\231\016\276L\356]\276qX\302=\007S\373\275-\346?\274{\220\247>^\\\330\276\222\334\232\275\362Z->\244\331x>\r\340\251\276\203\035e\276(<v\276\221\330\033\276\243\026X<\200\201\363<\201O\242\275\262\363\263\276\371\316\026<9I[=r\207\327\276\"\372\220\275\234\250\202\274\366\203\026\276\021\357B\276\305[\263\276\365\354<\276m\316\341=4\347\324=\345\"\252=D\365\367\275\255Ae\276%/\027\276^\200d>\304\227\300=\224\334l>HE\031>{\347\311\275\351\244w>\334OK; \246k>\254\025\252\275\223\223\355=\337\261\014\274/cg\275\232\010\307\275C\350\223\273\216:\241>\252 \223=\354\337\242\276G\215\237={<\307=\324wG>\005\235\263\276X[\244>\274\\N<\362M\233>\256}S\273\350\233*\276\357\004\267\2753\321\311=\252\227\276\275)2S\275\246\3179>\357\006\243\275\275{\216\275\352b#\276\263%\334=\300\212\257\275\000m\224=z\010Z>\360z\007\276\255;\343=\235/.\276\210\272\231\275\032\356R>\326\252R\276\210\250Z\276\314\002Q>\305\nG\2759wB\276\3255\222\276\363z\335<\322d\250=Q\323C\274\002\312\255>\363\223\240\274\332\255\031\276\n\315\001>\r\327\266\275\375@J\275\036\246o>|\213E\276\rZP>j#\331\274\3347\025\275\204+\230\276\013ux\276 \350\201<U\311\007>\234\326\266;\231\017\317\2760\245\212>PL\310\275\350\032\316\276\344x\277>(\335\350\275\370\317f=|F;\275Ogs\275C\247\233=\230\341\014\276\315\260\264\274\310\222\004=\216}Z:g\304\005>.\311\256\275\007)\003\276\356\022\354=\350\364P\275\317\304\025>\336\222\313=\353\216\245\275\270r\261>\267\323\013\276X\n#\276\r\350\201\274\333w?\275\253Yv\276\202d\207\276\342\364\277\27417\350>\316\356\230=\013\323\263\275|\201\020\276\021#\225\275J\276\202\276=\267j\276\363\032\225>\321\030\232\275\360\230\256=\237\212$\275\336\337\261\275\232Y\241;\"?\202=\021\352~\276vR$\276\251\265(\276J\356\035>\213~\242>\306\3078=\366\225\306;\323\224\232\273\305\315p=$\272\373<\304\300\036>4~\367=\"\221\346\275\352G\024\276\037\361\264\275\367\272$>\320\030f=\353\367\236=l\266\335=\320K\021=C\201{>\035\336\326=9\000\326>\361\367?=\376 O\276\365,\205<\256\032\313=\200\350\241>\303\356w>A<{>\010\253\216=T\331\214>\315\360\023>\006\r{>\265\367\2759?\014\256\272\201\\L>\350H\342>\213-\002\276\350\014\216\276J\346$=\306\025\357=^\002\351\2755UL\276\357;\004\275\215\347&\275\177\377\226>\033\3010\276\207t\263=\201^\276\276\021\023\013>\216\035|\275\272\313\002\276\370t\213>W\030X\276\203\343\036>\262W\024>\374aQ=k\213\030\274Mi\331=\341\250:>\267y\300\275~&m\276UP\204=\326}K\276\010\240\222\276\314\226~\276\301\347\206\276\234\255p\275\215\224\222\275\213Z\034\276\324\352:=\247\350$>\202\366\254;\364\352\275\275og\347>\336FQ\276f\030\027\276[f\033=[,/>\266\305e\276\340k#\276t\377&\276FQ:=j\332r\275\0172\224\276B\254\216\275\n\362\213\276\014\333\321=\207\250b>\362\320\016>\033\245P\276\220\216Z>#5\352=\361<\315\275A\244\233\276\r(M\275LQC>\243\245\353\275*\365\272\275\371ma\276\3652\213>?\261\215>\222\"\336=\t\326s>\216?h<\310\326\212>2\373\267=>\342\001?\220\205\251\275\277?]\275=r\326=X\262\232\275\241Z#>6WA>\240\331\213\276^f\223\276\316\311\230\275\271\037\204<\263=*>@s\226=\217\007@<b\373\321\274\265\325\275\276\205\206/>\233L)>\360\354\000>\356\261\235\275\220\240\201\275D=G\276\345+\357=\n\301r>r_\037\276\221f\344<\204)\t\276\tF6>\345\333H=Wu\210\276\306\003X>\231\277\001\275\331\370\374<\007X<\276\334>\002\276\372d\036\275\024\030O>\255\246\303\275R\372[=d\363q\276\306]]\275)\377\035\276\336\037\266=jB\233>\253d_\275\\\026R\2760\006\220\276\222X\030?%\322\302\275\3278l=\240:\014\276[\027\r=f\316\202>\323$\227\276\005\266\006\2760\226\033\276\010,\377\275a\204\256\275\315\302\247\2766\331\245>M\364&>y\021\244\275 [\217\276\257\263C\276\020%\004\276-8\217\275vI\256\275\366(n\275\257\260B>P2\234\274\245R\242>\207\006,>\213\246\261\275a\302!\276c\260\035>\321X%\276\004\020\'\276a\366~;r\263\250>\270\035\223\276\224\245\220>\300\000\262=\035\225]\275Y\306\207\275\017\034`>\323\367\216\275\244\016\021\276)\224\330<31\024>\022\233P>3\006\326\276};J\276\245\007/\276\251>\345\276z\352\267\275\230\006(>\203\027*>\347f{=\363\217C\276\0141\252\276\262\214\253\275\031\261\212\275\372\016\211\276\004\0234\276l\021\370\275\211\375\t\276@\335|\275\242\032\242=?\231\t>p\262\254>\266\315\235>UQ$<\177\311\000\276\'j\207\276\020<\002=zC=\276(\254\345<o\010\236<\373\335*\276\272\300\236\276\000\002\361\275\204\360\373>\330\310\352\275m=\t\275\364\301u>\222\016\353=\370*S>\303\342\254\275\327\337\344\275\362J\215=\261\017&\276\356\340\200>1P*>n\232\007;\tR\204\276\266\324\341=\277\240B>\006\315 >\027cm>O\335\027\276\227f\201>\300<\370=\363\325\314\275]i.;\267SO\276\351\210\354=4\200[\275\365k\203\276s\234\350\274\000\n&\2746\247\301=\327/\347\275\"PT=t\346\025=\301~\341\275\364\323\243\274\375\233\026\276\035kH\275$\231\360=d)B=)\230\010\2765\261\356>o\252\307\275\200\235\275=W\353\224=\375\324\265\275^I\301=\346T\213\275C\353f>\267,<>\002\262!=\240\212\235\2768Z\214\276E_\244\276*\356\254=-\334B\276\261\024\216>kx\337<]\365\003\276yE\203>\003]\233=\256\274\321\275\331S\211\275\304\314\231\276o\356\267\275$xT=-\005\005?]tw>\246\022\305=\366\014Q\276\237\202\267\275\336\314\032\276X\317Y\275\303\311\375=\031\371\033\276?\007\231\275\0131[>b\245\304>\022w\307\275v\243/\276\032\336\262\274}\231\257\275\275\017\t\274}Y\246\2756\2079=\275/X\276\203\311E=\377\202\367\273t>\210\275d\264\234\276\330\343\223=2\3660>T=\034>\2201\211=\326\375\177<G\271\013\276\260\303\200<\004\266;\273\"m\030\276\376\241\014\276\030&\246\273D\222\205>\213\274\274<_P\030\275\347&6>\2300\330\274,\261,\276P]M>,\326o\275\206}\006>\243\362\303>\3301\200>\262D\271<6\215j\276/Q\342\275\316\374j\275\255(c=\206\247\351\275\332?\333=a\305\335=\261)\221\276\177N\245>\270\373\370=\002\270e=}\3238>\006jq<\016H\177>\243\027\034=\330\014i\276\2526\346\275\211d\257< \241\265<\000\227\376\275\275D.>\300+W>\316\261T>\242I\357\276\372z\254>a[\220\275;w1\276\233\000\265=(\010]\275\274D\263\275T\032F\276BL\\\276\307\271\032\276\t\334\312=ny\220>\205\026\r=?\367\231\275C\223\261\275\221\366I<q\252\337=\357q\363\275\306\350\035\275\235y\341=y\350\203\276\360\017\247\2769]\251>_/\030>\203\264\221\276\204\315\200\276\212\353\014=\304\205\236\275\3271}=h+\236=\375x}>\201c\242\276\355\001b>\365\002\005>3\237P>\3409\350\275\272\246\003=8\353\244\273\275\001\352\274\n\361\232=Y\202\017>W\220\036\276\217\273\207<\340\300\212=1\267\370=\274\205H>\r\272\321>\361\266#>e\352E\275,v\004\275\211a\013\272d\265\357=\243\023\260\275\217D\214\2760\032\337=\271\177m\274\223\032Q>\3701\377=^\235\021\274\2528^\275\310\320D\276\022,Y\276`8L>\241\207\357\276d\233\337=\337V\237\274\246\270,>X\377g>I2D\275^oy>\270bY;@\247\207>\341\220\250=t\247p\276\370N\244\275\214\325]>S/\212\275\340L.>d^5\275\272;q\276\277r\220=\353j\200=!\243\246\2756\2351>\245\331\242>\001j+\276\025\215}\276y\0211\276\004P\014\275\214\360\274>m\217\246=D\335\\\276M\'\211>\t\002Q\276\313\225&>\251h\351\275\274\313\205=z.N\276\036\377S>\346m\317\274\376\353\321\272\215^(>\2444\264\275a\334m\276\204\245\026>\027AO>=\360?>\316\253`\276\353\347\251\275\210\3415\276\276I\373=\215\307\017>\260|\350=C\271\344\275IQ~="
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\257\220\204\275\304\035\240>\025 \210\275\264\361\332\2755!Z>\342$\335=\265d\224\276sC\016>\372\241\031>\330\314\244>\270\354\222\276\325c\375=\234\311d\276\034\270\266\276\301\356\006\275\211\206\001\276\343\\\334\275>\n\361=\2063T=\322\314Q\276\246\013\">\323N\245\274/\3440\275\004\243~>\343\240\022\276u\034 \276]w\275\275]&F=\200\216\017>\\_\320=z\227\250\276\362\324\217\275V\335\362;\250\270a<\343\320\306<\277<\276\2753\252\017<\311F7\275\201\322\207\276\277\021\343\275b\212\356<\245\274\023\276\221,\343>\240\301\200<\247w\326\275\303\206\252\276\013\327U\276\177\014\026=\001\270\203\275\031G_\276Yv\227\275\30164=\325\247\003\276\272\366?>\314\034!><\310\315>\267\3513\275R\341\243=j\300q>0\350\252>\03711>\325~\016>\t\300\000>\244\356\353\275\3104<>\021\376j\276dN\207\276\3704\010\276\016s\277\275U=l>\275i\315>\006K\223\276\026\207\032\276]\220w=a\256\206\276\t\302\262\275\240\212\207\276\311k9\276yS\255=p?^\276TB\240\276\341\205\277\275\200\251\216\275\374\267M\276\001[5\275co==\021\353\034=\247\007\277\275O\256_=\246\252\004\276d\335\327>,\026\324\275\371\375\224=\316{4>S\350\027=h\376\036>\017\006\030\276:\235\246\273{\222\265\276(\257u\275\357o\023?\3607J\276\304\0108>?\363s=}\005K==\375\\=\005\266\212\275\252\306\026\276\365\003\235=\260\233\213\276\374\356\220\275\032\300\346=T-\256\275,\232A>9 W<\274\2143=L\210\225\276@\207\204<%2\242\275\373.\304\275k\243\264;\241r\241\275\350G1=f\364\017>\236}\016\275\3459\204<&\211\212\275\305\355\251<\316\016\020=\222W\306\276\245\355\273\276\261\241c\276\210\017y\276\024\211\344\275\223)\026\276\332\340D\275\375\203\001\276\310@l\276\\|\006\276\301L\260>d,\021\275\360T\270\276\334\374\n\277!\255\314\275K+\225=Y}\221=\322\020\217\274\306\214\006\276\373\0102\276\326\0216\276\223g\\\273\362\372*\274\016\204\021>\360<\031>y?\250\276\223\236\224\275\033\317!\273\r\364\242;\257\332S>\322\010I\276y\272\266\275\213\370\240\276\250%p>\270\216>;p_\267\275\253e\234\276\316K\001\276\223W\220\276\211U\216>\335\"Z\276wd\267\273\201\211\004=\331/\213>\021\234\337\2750\tC>\361\271\334=\345\372(\276\0275&\276\247\273\256\276\020\ns\275u\375\024\275\243\234\303\274<u6\2754`==\246\303\303\275\235AR\276\363\235Q\276\257\320\362;\301N\"\276\2268\367<\264\017v=\024Y1\275\313\376\031=G\254@=\3211I> \0232\276\230\360\240=\310k\333=$\342\270\274\333\264\351=\200\204Y=\240I\206=\303\001I\276\256|\034>k\262>>\311\214\223;\005[\216=P\221\302\275\362\211\321\275%NR\276z &>#\2448\276\314\230\"\276W\024\325=\231\205\213\276\'\345_\276\332M\345=\213LG\276\255u\201=\010\205!\276\201\317\212=\331\347>>\272\331\273>\373\355\326\276\016\355q=\225\224\361\275\345\nz=\034:\017>\353\231\013>\331\200\223;[\215\230\276\252\270\302\275\370\210I\273\244\211\370\274\225\324^>\360\2620\276ib\224\276\315\266\r\276D\320\312\274{\316Z\275\301\021\326\275Qu\347>0\235\360=\235\262D\274\332\377}\276\034\270U>:\310Q>!y\337\275z\257\331=\004\274\231\275}#\340\274!\326&>\260\204\034>\315\262\232=c\315\014>dL?=\324\256\006>Y\023\241\2750s\033\276E\311]\275$51\276\014\246\335<|4f\276X\262D>\267\274\214<sC\356\275\313\351\337=\212hm\275f\274|\276\256\332p<A\305\221\275\363Rq=\034\202\246\276\034$\252\276V\3306=\006k\274=\340\035\345\274b\002\344\276\320\202\224>5^\310\275\033\206\033>,5`\275\270\210\035\276\204\253$<>I\266\276?\264T\276\235h\034>\350H+\276(\331!=\027\'\000>\007)\010\276X\337\300\276|\027\n\276\2563\216>+MZ\275,\273F\276\367\010\022\274\005\024\235\276\317u\202>\037\037i\276\320\217\014=\305k\205>gp9=3\306a>\235o\237=*V\364\274\006\364\010\276Tk\033\276z\352\256\275\314\310\240\276l\222><)cG\273eI\371\275\324\203\213=\343n\204>*\323\263=\235U\014\276\366F`>[N\321\275\244\304b>\231\020~>\203TM\276k\2441\276\2140K>\365\247\366=\225\377i\276IL8=I\364\211>\213a\322\275sZ-\275tA\332\275\200e\352=\255g\023\276\200V\001>\224\306\201>\304\244\341\272[$\253\276A\367\331\271\026\250\230\275\371\024\266\275\236\370\277\275/\235@=-v\324\276\027\2551\273\200\3108=\244g{>\374\243\347<\323\357\204\275\240\222\016>\202\304\332=\336\014\267=\324~,\274\221l\204\2758\314\017\276d\352$>8\373\210>\242\310\023\276nB\332>\200\3525>Px\202\275c\357\226\274\025\300r<+\270\200\273K%\355=KHQ\276\317\306 >\271\034r\275\371\352\345>r\301\364\275a\352\212\275F?>>\206\035\323=\3671,>A\227\347\275.5s>\272\216\341=\334\342\016\275=_O=B\311\351\274\352&\314=\253\265\271>J\361\257>7D\242>t\274\274\276\361I)\275\275\253\367\275\253\235H>\261\263\314\275\310\327\373=\304\235.\276\333\000\013\276\201\375Q\276\177\225\231>\305&\n>\266\216\300<\375\314\025>K\363\227=\347S\'\275\310c\037\276\262\315.\275\356\351\301\276\265\270M\276\360O8\275o\025m\2744\336\236>:\323\n\276>\026R=}\221s\276M\322R>\035/-=\n\0365>\020\322\3439p\240`>\351g\353\275\372\377\264\274\237:\334=\320\306\035\276\224m\232=\204\325\324=d\334\310=\360\223G;\213\357~\275J\210y\275\343\033\263\275\310\032\220>ES\362\275j\325\020\276b\026\257=\010\265\177\276z\243s>\272HY\275\352\245\017\274\n\324I>\271N2\274qLK\276\216\325{\276\265\033\375=W\334@>\270j\266\273\205\206\311\276\032\204=\275\230\t-\276\267D!>\343\202|=\270\2039>vW\034<\332\345\023\276\332$e\276\334\3310\276\032\204\224=-\031\215>\017\247\007\275\354@*\275\372\364G\276i\371<<J\325\213<p\223@\276r\374D\276\243\006[\276\355F\036=\230?Z\275\370\334\036\276\376\377b>\332\276>>\240\256\r\276\025\'\212\274\273\212\235=\013\250\232>\250/+>\255._\276M\n\343\275\315R$\276\222\364(\276(\300\203\275\363\2030>U\034\000>\304\276)=M\374\266\276\353\362\370\273b\347\323\275r\315\351\275\225tF<\222\222\273\276#\305\266<\241\374\221\276\246\352\251\275\346\014\333<||\024\276\355\346\217=\275\324W>\271i\236>Or?=\346*\236\276\222Bn>\303@w>E\237\003\276W!\255\275\232\324o=\330(\221>\320gF\276\241!#>\"yA\276\271\226\250\276(\302\033<\337]\222\275\346\001o=^\210\004\276*\037\220=\341\367\227\276Xd\206\275\270c\352\275\350Y\301\274r\321L>\201\335#=\357\023\2639=\241\330\274\363\310\202=\217\014\026>\n\245.=J\343w\276\021\270V\275\2405|\275\377T7\275\021\225\221\274\355\271R>\354S\350\275^\357\226=\\\227\254=\204@+\276\236\264\345>\230A6>X+Q>\'K\223=1|\001\276\366\246S<\262)\237\276\362\362\021\276G^\240>\203\227\206>\004\273\225\274\000\007\r\2766\346T>\226\016\334\2757m\354\275_\250(\276}b>\276\346\016+\276\261\306\204\275\350\">>\304e4>Z\200T\273e;L\2760\353\000>\035\270%>Sw.=\325\034\205\275\236.M\276WdL=\234\363\303\2755\237y>u\227S\275i\232\033\276p=,=\213\327o>\376\004\275=\363;\245=h\247\022\276a!\226=q\266\344=\275uk>_GM>\306E\036\273\230.\030<C\365\200>\266\355\222\276\311zl\276\335\211\222>@*\232>AE3\276\306\261\325\275[2\r=\365p >\213\375\311\275\356T\026\273\247X\207=\276\223\034>e\334\246\275\243lo\276\026\266@\276\031\317\264\274\214\347\032\276) \033>\025\371\222=iY\261\2762|H>\030\326u={T\263<e7z>\350\302\236\274\211\177\223<\215\314\366\276\267A\210=\373\303\243\276.\356\210\275p4\223>\361<\331\275\247\320p>\014\233\252>c\000g\276\215\025\340\274\272\307\r>M\273U\275\347\227\303\275\264}\201>P\235\322\274\342\252`>\227\345\270=\346\r\232>@\253\006>\033\365a\275\327\356\256>\026&\321=\224\266\240\276\016\"\207\276A2t\276D\032,;\373\324\201>S\217d\275k\n@>\3228\021\276\357\227)\276\365wV\275\234\371\275=\177O\215=1z\366\275p.\221>=\274\003\275\035\014a\2767\235I\276\271\'=\276\216\321 \276M<\213\274\313\227Y\275i\263\034>#\251P=\001\257\202=\377 \274\275\241\026\370=\202\004\026>, \265\275\027\255?>Po >\246\003I\274G\304J>LlX\276Z\247\t\276\303\200\353\272\026JR\275\201\313_\275\345\367\032>/w.\276\026\321)\275\270\313\306\275kp\020>`\2040>\307\034\202\276S\003\341<Q\355\254\276\007\006l>\221\r#>\223\023\010\275(9\363=\216\2711\276U\035G\274Of\226=jf\277\275\377\3755>/v\207<9\350\307\275)\277S<i.\215\276\330e\301=6\021\"\275\330\3065\276\017\274~\275k\"3>\036\305\225\276\274\013t<#\333\307\276\363\304\363=\206\336\262\276\245\036y=\265\250\357\274\245\025\336\275\353&R=\000+,;\274\351\253\275\330!\323<\001\247j\276\351Q;>\251z\325=\212\222\352\275\3169\036\275\327\3575>\020\330\003<\022\"@=W\306\002\276[mW>\224\352:\276\230\0107\276C\033z\276/\3761\276Y\362\341\273\315\0300\276e\244\245\276,\252\214\276\377\350F\275 n\242>\261\214\026\276\211\020\326\275\224\001\\=\276Q\007\276q@\203>\023\324\3759\203]\253\274i\036\275<\335\210\317\27570\210>\364\326\021>\306\263\231\275\252X\210>\245\314\252\274\226\307\240\275h\245\026\275~\356\267=q\232\252<8k;\275\202\207\223;Hi\225=\242\354E=PV\340\276\376{\230>r\021\035\2760\030\276>\247\315\">\320,\025\276\\\316]\276W\270\237\276\243]X>|\347\232\276!\314:>\2602m\275,_\224\276z\355*>H\217\002\276\231\232n\275Q\035\314\275,\"2=\307#\275\275\254\247\221<*\216e\274\200\352\326\275*\331\302=\272\377\320=\234\226\272\275\233u\356=m\025_>\236\361H<-\223*>b\265\004\274\370\202\002:\274\225\372\275\032\016u\274i\264\325<\320\257\237\276j\255F=\212\007\036\276*L\320=\226\262\230=AH-\276u\243\254=r\321\205>T\"\304=Ss\023\274U\236(>\035#\351>\340\214\312\275\034Z\303\275\207\212)>\221Tp<@eO\276\252\033B>j\223\234=\212\377X\276r%\341=\215\331\237>\007S\024>b\327S\276\356\004\257>!\252v\274\177a\225=\243\342\007\276\370\242\377\274\274AP\276\013\355\251\275\033V&\2760\212\223\276\246\253O\2765\314:\274\030\316\202=\026\332z>\356NP=]>+> \232Z\276\227\r8>\305\r\240\276\312v9>\000(\251=4qE>\360\207\347=\353t<\273{D7>F\274.>/\271d\276\ta0>\300\210\245\274\036I\360=B\243p=g\004X=\256\306v\273\020\303\225\276O\343\t\276\366\304\346>\016\\\220\275e\316]>u\274\262\275>\020H>\341\234_=\375\n\301=\246\023\017>?S\213>\246xJ\276\232\250\227\275\307\370\334\275\026\026\227\276y\237\217=\226:\235\276\035\362\250=+9\006>\220\243J=;\033 =\235\366\335=\252\203\270\276\311\310\"\276\357\256\037\276\301g\032\276\342\327u=\2533\321\276S\021\007\276f\243\363\275\224\264\267\275&\367\034\276\371\274\212\276\332-T\273#\263A=\024\274\214>\323=\233\274]J\013<\315\340s=\367\331m\275\177\355\252\274\316\266\267\275\346\314\320=\300\237e>nf~\276\346ZU>\220\3366\275\212\2201\275\257\311I\276\256\201\245\274\214EP=\253\212\306=JS\237\274\331 (=\212\214\352\275\323\221\271\276\303\324y\275\002\263\230\275\357X\300\275g\365\245\275\255%\201>:1\204>\037m\'\276c\271V=0V\324>\376\246_\276\223\0040>\010I:\274\352\3558>\370\254\207=\2428+\275L\036x\276q\3455\276\032Y\232\275\307:\217\276.\334\353=v\302\357\275c&\202\276\337N\250\275\337\234/>\375w&\276Q\330$;)\227\034>\023\265\'=\216\036\035\276N\213e\276\273\224\217>\305`\010\273\025\020\224>\343\363C\276z\254\224>\334\376\202<.v\013>\320%\032\276\222\265[\274\\\336@>\240P \275x\306\025\276\237.\231=\372\255\221\275\260\234f\276\261\270Z>|\226\317\276\237\021{\276x\023\243>\247K\251=\201\341L\276\267\274\300=EA\334<\301ZC\276\017\226s\276\035\226\026\276\365]\007\276\227M%>O\246)\2765\205==\375\275#\276\0316I>\007\323_>R\3632>P\214\335\275\221\232i\276\232o\210=\356q\214\276\213\342\016\276\202t\273>\222\225\027>C\312H\275\344\215\242\276\014U\270\274\024>\203\276P\342\261\273\311\024\026<G\331\332=\217\014n=\251\362(>\363\010\223\276\257\343}>\234\232&\275\005c[\275*\224\206\275\213gB\274W\177\256\276\355\215\210\275Q\3725>\357\325\336\274\236\033\366=Y*G=\246m|\2741\014\005\277:\030\257\275\206L\210\275|7\272=\030\374\237\276U\261\035\274\276(<>\312\226\322\275=\'c\275M\266/>\257\253\210\274\335\340\003\276\006i\300\275N8\365\275\263\315\225\276E\202,\276\247yV\276\342Z\246=\210\367\373<\327\246/>sb|\275\223\005q=\305f\007\276\300&N\276qd\210\2764w\014>T\355\036\276I\322:\276\214\317\324=\024k\235>\202\232\310\275\244\255t\2763=\007\276\347\336\232>\rNi>7\246\371\275>\020\243>\r\230!\276\212\372Y>\351\023\362\275\241\353\021>N*\373\275y\202\222\275n\253\243\275o6\324\276Bw\354=\327\213\266\273\365\342\325=\267\366\000=\'\0275>\210k\211\275\233n\356\275\241\2413>a\371K\276 \010\r>\264\240*\276$Z\261\274T \222=;b\302= +\242\276|\352\204\276\341EH\274\376\0219\276$\255\215=\340Xl>L\313\324\275&\352*>\361_=\2763\352\201\276S_4\276\010\306\236>\177$b=\304\366\235>(\335\233\276Q\334\273>DF\315<\321\007\202\274N\345\261=\035J\224\2765\376\252>\276yC=\260\302\315\274\265\223E>\317\020\363\274(\0040\276T\340\271\276\333\367\372\275\254C9\276\006\234\212=D\226X\275\032\305\264\275e\235\014\274\205\210\333\275\220\251\352\275K\215}\276\r\246\353>[\270\024\276\230J)\2762\264\032>\270\314=\276qJ\361=\235\277\234\275\237\237:\276V\007\374<\235F\375=\255\322\t=y0\260<KL\214\276\306\220J=&%\033\276\t\'t>4\214\n>\223y\027\276\n\271\252\276\355\\\203\276=\362\034>\345\321\203>\311\212T\276\r\212I><\312\237>\265\257\361=\004i\242\275\227~\r=w\207\210\275Z` =\265\375^\276\02287\276\273d\211\276\277\302\347\275\020h\323\276\014+\324>Q\024\030>8S-\275,\371.\276\001\363\344\273\247\0200>P`K\275\333\374\313\275\226C\266=\017\'!\274\034\341\r\276\"?\006\276\"=\214>\326\371\275=\344\347 \276\232\361#\275AO\215=\1776\271\275\373\217y>\227=F\276\212\272\221\276A\254\240\275\210\252\254>8\206\263\275 \216\265\274\\\227L\276o\305#>@\\N\275\220\221\300\273\254\2552\275\231C\221=\327G\213>\323q\350\275\261\3164>\005o\220=C\255\354\274\336\223\267\275\375\025\357=\006\2634\276f:-\276i,(>\330\201\316\276%Kw<3.\230=j0\337\275V\201M\276\326\207\323\274\316(29\325\234\311=\213LA\276\234V\255\275\226\240\347\275\262\245&?\305y\242=\334\014\321\275\300o(=\177\351Y\273Q\362\322=-\202\205>\334\350\003\2760\214\241\275\244\217\036\276\274\333\032\276D\001;\275A\240\236=w\r\205<\270\206\n=\004C\305;28\013\276\336\035\023>\263n\232\276\360\037\022\276~\234f\276\301\001+=\320e\212\276\307\263\223>\373\307z;\262\327f<\273\234\326\274>\347\276\273\301\311K\276\354\302\206\276h\340\033>\266\232L>\267\037*>\265\363y\275\275\017\373=\205g\227=hx\353=r^\235=\267\217#>qr(>\005e\236\276\000\211t\275\002\\\363\273\261{\205\275\377\326\377\275[g\177<\306\037\221=\213\371\032\276\255\031\210=2V\211>\377>\204>\221\236\223>\301,\021\275}\021\207\276\230\321\336\275G\016\026\276\371\307\026=\r\345#<@\362|\276\023oF\276\372Ji\276\220\342\013\276\303\322\200\275\365\344`;\217\0370>\226\256\315\275\3119\376=\214\200F\276\206\023\301\275\254\242=\276\373zF>=\t\301=#\224\222>DQ+=s\200\250>\024\222\200=pE\235=\227\354\221\276$\312\273<\271h\000\276O\366\376=\".6>d%$\277n\005\246\275O\263\365\274\225\213\003>\313NW=\322\364\"\276\025\277\244\276E$\010>\t\2557\276\215|\336=\362\265\372\275L`\256>\3631y>lV\225>\262\322^>rF\324=\375Gb=h\2306\275C\273\024>7+\022\276\374\226\025\276\301y\376=\257\343q\275\000\020\374=\204\n\221\275\347\275\266>|\013\003>&\374\215>\215Ux\276\307\034Z\276\3262S\275n\217\271\273Z\271i=\262\340,\276\212&\350=\021%\313>\2321\244>\275>\361\276\225\372 >f\351\243\276\004m\202>\312\270\304\274\376\375\230\276\216\245\377\275aO\'\276t(\022>\032\223C=\177p\224<a\230.\276\347\363\212=Uj~\275\004\266>=o\370\300\275\221(I=\031:&\276%\247\252>N\367n>\254M\312\275AU\004\276f\315\212=v>\346<z*g\275Ne\347\2761\232\220\272v\322\262=\362\307\270\274U\350\315>C\250\207=\250\337\300\274Br@>Tx\366<\366J\277>\024c\240\276\211\341\353\274f\311\2279\355\375\217<b\273\373\274\361\0271=K\375E>\n\260$>\325\nn\276\353\245+=\375\233z\275JS\217>\367\225\224\274\0263\357\275\213\210}\275\363\220\006>\'\222->-\230\214\275\321n\016>\335e/\274\323D\037>\331\203\213=\302\275,\275D\301\263\276\311=\207\276\362#\t\276\243\372R>#z\006\276\303qQ\2764y\252\275\310\240\350=Q\242\002\276\020\013\232>n\231i>\361\264\024\276\321\240#>\256\2646\276\354v\340\275\206\302X\276\356\312\240=9\265\020>S\311w>\007\021\027=\r\206\346=\023\236>\275U-\347\275-\220.\276\010\333\355=\324\373\312\276l1\034\276D8\314\275d\247G=\372\277\004<c\277\316\276s\2121>\233\206\241\274\335\244\024\276Qm =\265\014\217\276i\326F\275M\272>\276\257Z\272\276\356\233\250\274q\327\234\275$z\306\275\020\231]\276\266;U\275\247\320h\273/\315\001>5\234\331\275O\3336\275\364<#\276\364/\">1\r\350=\021\234\017>&\254\013=\367X\001>\311\206\267=\247\347\330<\314\372\\<\301-\037>z\263\327\275\000Cd>\205+l\276\321\217\357<\000\343\226>\365\306\342=\301\032\236<\027\006\363\274\271\276\331>\224\214-\276\201\034\230=\324\342\275<\236\"\262\275Y\022\"\275^\232;>\001\242Y>\341yy>eD\022\276_\001Y\276A\333(=\r\017\264\276\246\376Q>\177\226\364\275n\350\244<\376}\255\274\215\3662=/\324\353<\037f\302>\300\310t=3\330\372;\333:\377\275|b\274\275(\010\r\276\330\227\327\275/\t\201;9\362W> \037\241\273\237\237\316\274o\376\024;Xr\320=:|\324\276tW\220=\305\007,=\254%Q=\365\352\361;l\251W=K\221\261\274\316\305\230\2766a\316=\350m\250\276\351\355\236;r\345T>\"\270\356<\010\3454\275\301\304\367\275\'\2258\2762\001F=$\t\305\2756\264*>\017_\263>\327\274\200;\335\243\007\276[\312\323>Fh#\276!\233\253\275*\314\023\275\277\236\177>EF\024\275Fv\375>\354\250\335>*%\324\272\275\232\305=\321\364\014>\2529\227<\270\374\225=`\"\202>\231\304\277<\241.f>h\312\261>\215\230\245\275^\254\367\2754^\225\276\372\321T>\366k\261\276\270d\371\275\232\220B\275\020\327\013\276aV\036\276H\021-\276Cz\033>g>\342\275\364\320\222\276\334\223!<j\212\217>\177o\031>\321\304B\275\2671\247\274\307\221O\275^i\005>x5\201>\347\276\020\276=\231\016>\r}\233\276\334,>\27439!>\224\360,=\216eq=\025\264\227\276\233\030\350\275\017\375\324\275e7\250=\300\243}\276~2c\274/f\375\275\231\265J\275\323\312\364\274\275/\265\276\337`\344;&\305@>\036h\t\276`Q\225>\221\024o\276\016?-\276\210\t\234>\216n\251\275\322\311v=f\215j>\177>d\276\240\327\025>\002z\207\276B\327\030\276_\"8\276\034p\300\276Qn\265\276\005\231Q=\262\365\007\276\321\275\302>\001}\230=\006\3261=\337+5>\363[\206\275\036\265\267\276\347\3340\276\251\364\033\275\231\335\206>\236\020K>\303\220\217\276\022\240\000=\377\256\267\276\346-\031\276\326\316\010\275V\364\362\275C\313\232<5\001\013>[\377\024>pw\244\275Z\264u>%@X\276\204Yd;/\364\246>2|\314=\263\316c>\031\2165>\217\325\215\276+\325;\276\370\356\204\276\374\026\202<\220\313\351\275\364#o\275\317^O\276\300\344\347=\242B$\276\000v)\276\314\030R>\225\252\346=?F\352<\352\311\336\274\250R\005>\237\217\250\275xZi\276\270\320\311\275\304W\344<zp\227\275P\376\226\276r\255\224\272\036\225\014\276\361 N\276q\341\375\276NG\212\275\021\362\214\276\316[\235\276\370\230\340;\252\245\261\274\3213\261\275\201\250\004\275\2031\226<Os7=\262!^>\263,\217>h\332/\276\007\310\256=\352\362W\276\344\276W=\311\327\200>\037{\230\275\371i\017\276\005\036\r\274\346i\203\276\344>+\276qlq<h9\243\275\316;C\276\261tU<\025\367\325=\307\233\211\276\016\355\002>\030\233i>\263\376\256>\374\377`=\244g\275=\274\261\266=\353R\001\275G\031~\276\240\320\306\275a6g\2763!^\275\314\224N\276\233P\252\275\301\312\300\273\352`\201\275E\325l\276,\023`>e%@=\247\263\351>\213\2177\276\241C\233>Qc\002\275\221\271m\275\346\231\217\276\342\247N\276Y[\003\276\232\217\037\275A\233\217\274\0212{<\241\314\231=K\353b>)\270\265\276\217j\204\2769\006O>S\231\203>\004^\252<^x\227\275\246\212\310\275k\367w=;7\323\274\371\354{<2M\201\276z\353b\276\315-\370>\260^\214\275\325\016\025\276%\216\272\274~\246>\276\252}<\276\370\370u>l\365I=m\274+\276m\355U\276\270\352\217\274-_\236\276\222\230\206=\357\345G=ny\207>\017j\347=\316\310\030\275\377\177\200<\336\360\006>\345\335d=\220O\225>\250\210\336<\206\352];\352\224w=\303;\370\275#9\031\275p5\255\275\010yL>\334X\215\275\256\356e\276\027\307\216=\256\030\372\275V\211\006\276\005\203\212>\307O\026=\210\352+\275R0F=\025\177;\276\270\365\243=\331\030\363=6\030\255;\275\3759=\030\241\260\276r\344\222\276\215\375\247>;\264\034\276J\014 \2768S{=\346\275}>\036F(; \235\311=\241\nr>\274\036f=E\321<\276!\276\262\276\213\352\"\276V\270>=\001\035\342<c\233\350>\014\325c\274\311\035N=\367$4\274!\351\366\276:\265\243\276\347p\302\275\032\237%\275\360\375\313\2753.\250=A{w>\034\355\037>\343\265\007\273{\203x\276\347\272\300\274\\2\022\275\202\360\342=\0310\236=j\266I;X\266\222\275\026\250\370\2745\377|\275\261\217%\275v\2749=A\210\242\276@\302\000>\200\201H=\224\177\255=\301\007I\276\217(\257\276\036X\206>\331\356[\276@W\303>-\226\217\276\216\034\354\275q\216\356\275IZ\246>`S\234\276\377,M\276\306A\242\273\005x\007>\227\200\247\275\212\232X\276c\007`<od\337;\022\'\245>\024\347\377=E%\330=G]:\276\217\226H>\235\347\035\276\346S\263\276\031\034\221>_*&=\327\327q>\364\017q>\217R\274\276\240\331D\276\257\367\217>\030\021\025:Q\360(\275M0r>,\004\335=\3079\216\276E<u<\325,\r=L[\277\275<N\327=O\237\217\275\271\366\013\2762z\331\274b\371\270\274\232\270\262=v\357\226\275\211\367\347<\365\236D=\322r\031>\220>!>\371\252\203=\025\332\234\276o\0052\276[\017 =tI \275\235>\302=\020)\017\276\263\320\215>\322\026o<\031)\013\276\373\177N\276\277f\033>sY\346\275\004\335\300>\365\230\027>\331\231\027\273\260X \2763\360\354=fV\006>\375\" >\2679s>\375\371w\276S\177\007\276\330C\225>+\022\243>\270\370s;\006~\340=\255\001\361\275\021y\325\274\202\344\231=\016n\227\276\t9\332\275\220){\275\'\322\200>\216CE\276\0371\232\276\242\037\321=\323M\325\275\370_I>g\212\004\276P2%>YF,>\330T\000\276\2460\301=#\223\232\276\004\026\025<\361\032\023\276\"\306\273=\351\237>>\020{6\276\030\026.\276(\342p\274c\232\203=\004\315\276=\313,\262=\326\014\344\275\324\273|>\365\360\004?\325\221\360=4\252%\276\337\267\013>\006=\222\274\334`\341\274\026\277:\275Qg\204\275\205\341\035>\207\023b\276\226\245\010\275N\306\000>V\n\207>jz_=\234hl\276\'\0250\274I|\275=\273o\241=\206\342)\276\226\231\347<\024\332\326\276\2623\251\275\345\372\311\275#\300\013\276\236\004\322=?-q\275\230\317\205=\303Vj\274\344W\227\276\ru\300=\022 \252=i\031r\275\023\246\345\275\010\250x\275\202\256!=\217\336\017\274#\263Q\27613\'\276\313\201\227>^9:\273\002\301\007\275\370S\r\276>\026\020\276\014\351\373<^-\010>1\345\027\275\254=\014>^\2574\276\261\257\026=\214\331\352=!$\007=\250\221!\276Wz=>jg\340\275%\032H\276\335\352\277>WF#\276\3727\260<z7$>Fv\215\276\022a\243>\025X\000\275\374\257\241\275\373\371x>\300\020U\274\352\317\241\276\213\341S>\251\243\003\276\007(q<F\240\263=`\255\016>\210\375E:\327t\320=\353\354\000>f\360\032\276\335\262\213=\335\013\023?\230G\363\275\350\2509=\366\372\341=\205MC>\350\266K\276\022\220\211>\205\t+>\035c\027\276\261\365\257>\265\337\360\275\333\023.\276o\321B\275\265\255\226>\3661o\2753\370\026\275PA1>\'1\372\275\215\223\255\276\322\342\320\272<\251\237\274hL\211=\204\023I>\252\006h\274\2232]\276Z\340Q>^\002\362=\221\303\031\276\350JC=\3130\\\276D\360\n>\t&U\275\t>\022\275\253lf\275\230\223x>\260!\001\274jp\242>\021\005\n>2\231*\276\364\254\337\275\242\374\270\276\372\"\343=\341\211\006\2763_\264\2731\200G=u \307=\346\354\253\274\254K\337=.\255\355\274\033\317\325=0\020\265=\026x\262\275\266!\014=\262X\316=\r\273\257\273\010\275\205=ze\335\275\250a\n\276xo\340<\007\200\204\275\363\325\214\2752:2>\202\251\271\276\203\013\247\275\371\372\201\275\257it\276\233\362p\276\305\224F\276\324\377\334>s\350\022=\312\306\343\275i\256+=\204\3334=\315\215\037\275qC>>\023KJ\275\0366S\276\014\024\320\274\260$ >\231#t>^\271\223\275\342+P=\0348\334;\203\253\202=7\033:>\221\361\001\277\307\235\324=\267\023\242>\370\0248\275\266\315e;xt\254=\307\366\005\276\344\332\303<\177\227\257\276`Z\n\276\340\243\323=\003\024%\275\200\272 =\250\306\270=\214\366\270\276\346\367/\276\010\350\247\275\352v#\275\260w\207=z\233\243\275\370\307x\276\254\016E>\016\225\362<\221\201\240<,cT\276\255\267\247\275\275\004\341=\271\326\353=y>\206\2753\257\023=\231\354|\276o(N\276\325\326\341\274&\265\221>\264i\213\276\020\\\006\275\336\000L\275\2320\373\273\333\230t<s\372\316="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\177FB=\343\267\323\273\337\246\276>*,\371=*8|\275\341\260Z\276\327\215\342\275\233\227\013\276\252\220.\276:\377\'\276\214\264\265\275\347\236L;\005\233\363=\212\253\"\276\351\t\312\274\264u\272\276\377\205\236\275\200\2116=(}\244\276\006>g\275\254\355\360=~\230\370\272\216\202V\275\310\366\243>@\017\231\276\320\312(\276\206\254\210\274\177*3\275\264g\274\276\311UJ>\336nV<\020H\325<"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\216\337\003;\016\351\250:\247\363\317:j\000m9f\233G\273W\267\225\270d\346\360\272|+\364\271#sW:\371\000\034;\017\275\252:\026m\004\273\373X\033\271\032O[\273\230\204\265:\224\017H\272\332\221\"\2710]\035\273{}N\272\016\210\353\272w>N\273\371\3166:zz\t\271M\244\210\272\r-\274:\200\n\005\273\337\342\251\271\265B\256:u\266\020\273\261\177\002;\035nq\273{9\233\272"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "j\217\204:\332\0226\273e\360\206:\226\216\350:N\267\273\272\272\224\025;\207.\322\271y:\233\272e{\001\273\325\246\017;X\352.;\351\321\372:R\375\204;}\322\3139,\023\205\272Xt\031:\251\\\2569%\250\215\272\017\245\354:]O\231:\304\247\227:\323Y#;\035l\0309\222\373\n\272\243\201\213\273\200\311\311\272$\027\256\272\374p\311\272XU&\270\373>\035\272\302I\231\272PsO:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.01
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_c4bca7af142c48cf8d391277fa557e84/part"
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin"
      op: "StringJoin"
      input: "save_2/Const"
      input: "save_2/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_2/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename"
      op: "ShardedFilename"
      input: "save_2/StringJoin"
      input: "save_2/ShardedFilename/shard"
      input: "save_2/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/ShardedFilename"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/ShardedFilename"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_2/ShardedFilename"
      input: "^save_2/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_2/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Identity"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/MergeV2Checkpoints"
      input: "^save_2/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_shard"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_2/Const:0"
    save_tensor_name: "save_2/Identity:0"
    restore_op_name: "save_2/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
