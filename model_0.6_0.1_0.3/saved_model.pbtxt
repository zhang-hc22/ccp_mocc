saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\n\266\312\273+7W\275Z\325\343>\221\217(\276&|2\275\316\312\223\276\202\222@<\213ZN>\206\301N>\242iB>\371\030k>\306\265t>\220\021\263>\334\242\353\275\272\353\034\276\025&\246\2769l#\276\035\\[\276\000\225\337;\274\\b\274U\336/\276\300kI\276>\377\352=\000\010\326=\237\207\306=\313!\214:\002\265,>C\252r>\364=\346\275\022D\216>\020&\003>0\2049\276vV\177>~\320\306=\311\317\370\275\374nv\276\273\336\314=\210\022\357=\212z\245\275\202\331\300\275W\360E>-\037\315\275\303\350n\275ra:=w\375\r<T\014|\275\345\305#>\306G\272\275L.E\276\'\257\362\274\232\346>\275\350?\024\275 \014\246>\000O\330\275\3151\'\276\251\274U\275\344\036\213;j2G>m\315\023=\323\235\201=\275\347,>\356V\320>\307\030\016>^d\221>\376\317\250:\360\315\253>l^\376\275\017\256\002\275\024T\023>\3254\030\276\237\231\006>\033( \275\236\031\021>\315V\\=(M\202>\221\250\200>B\242\206>|\353\266=Bnw\275\014\031i\273\005\312\267=\250\360P\276\\\226?=\2378\313<\020=\032>\n\314\205\275H\264\036=\244r\251<\004G\305>%U\207=\204\2773\275\377pI>_\312\376\274\251\366\212\275\013\363(\276\357sv\276;\017\223\275>27\274b4\265\275ZS)>q\245\235\276d(\213\276\003\245\246=\344u\370<l\365<>f\214\233\276\300 D=\320+\244>\363\363\177\276&5\263>\336\224f=7(\371=t\'\202>\031A9>O\320\000\275\324q%;?\247{<\255sw>R\\\353\275\254\245U\276\223Q\r=Q\211!\276\017L\216\276\360\211\215\276m\204\224\275\230N\353\2743\212r\276\357<\246\276\034W\334=\277Rc>\211\204\340\274\335\274<=+\355\236\276d\250\250\276\rN(=\310\n\200\276\303\323R\275\250\027\226\276\257\232w<8L\257=\n\215\236\276\"\031\031=\344\255\324\275\322\201l\275\321\343\360=\3622\273\2755\334\371\274\017\034\244\275t\263\224\274\363e\000>\201\022D\276r\270\242\276\246\226\233\274\340\350F\275\2035>\275\277Y\233\275\2739|\2764\376\205>Dx\227\2750QX>\331H\260>\000\301\243\2768\262H>\005\216;\276\336\342+\274|\006\027\276\265\243q=\023\310\240\276[\256\020\275\003/\214\274\263\252\317\275L\313_\275\030\271\263\275\256\352\213\276\301\n\342>b\371\365\275\326\217s>\027\345\005>\372\237\177>@-,\2762\354c>\006 \026<\361\224\313\275\352A%\276g1\206\275\370\242\036\276\320\345\214=\317\024e;r\"!>\236\364\224\275\321J\307=d\351N\276R\037%\276$\001\216=\000\273\210>\217#==\032\035Y\276z\365\234\275\336X\343\275/\337\216\276\367{\035>\224$\t\276\302!\353\273\361i\225\276-I\'\276\360i6<X(\226\275L?%>\273A\321\275\352lM>u\223\244>\013\312\242=\022)\202\2762\337\267\275\023Er\275p\005\023>\307z\311=`@J=t$\235>\264\313)\2752\372\263=8\027\355=\216\246\235\275U\002A=\201m&>\310BE>\022\356\035\276fC[<\32336\276\001Bp\273\233\371(>0\335\177\276\305D\213\276$\021\223=\355\000q=1\270p=J\022\307\276\353\'\001?\022\307\301\275\375^\220=\200ag>g\026\204\276\027\232\206=_n\001>\267e\200\273J\257\025\276.\007\010\274\230\317Q\276\026c\361\275\327\330c>\037[\302=\266@\264>@4B\276\n\254\236=\215Y\024\276F\005\033<3\\Z=\356[Y;1P)>\004\313\222\274\227\333V\275\306\217y\276\002\321\220\274\031;\335\275~\307\372\275\265\nw=\344\2323>\036\303\341=\314\242\247\275\\\027Q>,\310M>\234 \234>\316Q\303>8\265Z>\227L3=\263\305\321=%\360\201>\346n/\276\203\310\223\274\224\020)>\311\306\022\276M#c>\323\340e=\202\260\264\273K\231\302\275\255\257L<p\337\325>P\350U\276\014\303\261=\267{\010\274\326\363\365\276\004\243\202\275&\322\014>\373\016\366\275oS\n\276\223p\007\276\006O\231\276\021v\322\276\264\331->y*\026\276|\260\006>\'\375\021\276\177\250U\275\324V~\274\240<F\275v\032=>\361\370\006\276\310\346V\276\271#\"\274\365\260\006\276\373\357\312=\361$8>\361\236\027>\245\230\271\275\320\021\003<v\021<>\315\215\336=6\375\177\275\243\366\261\276.\305\266\275\330<\025=I\236(=\353\255\320=e\375t\275\027\344>\276\244\007\007\275\020\352D=\346\036\201>b:]\2766\225j=\2404\000>7\330\345=\366\204\264\276\214\005\246>(\372S\2762\217\264=S\216\272\275l \230\274\365\3500\276!n\311\275\\\033\304\275x\024t;\224t\212\276\242\200l=\377/\215\275z\220\356\276\021?\222>L_\030\274\t\331\'>\331\273.\276\230\201\276\275h\242\304=kK\250\275u\226%>\031\323\252;\244\004\033\276P\375=>\366\201h\273l; \275\365o\007\276R,0>\223\014\r\276\204\365\014<\330<U\275\354\234\315\276\301\271\177>\343\364\316=\274\037G\276y\3362\275l\277\273>\010f\213\2761#l\275\312\247\'\276ov\006\273\033g\304=W\306\243>$\022\316=\321\336\214><\230v\276g\214>\276\2755\246;R\367\037\276\201\340\021>B}\203=7\030\n>Tl\235>\006\001\'>\3723.>\356\310\n\276\035\203\336=5\247\235<\016\225\257>\375\375\320=l?\302\274v\0251\274\320j\251=\360\233[>\230\025\205>\312}\003>\306O\251>\361\273\362<\022\r\231>\361\022.\275\023\326\224>\344H\217\276Z\252\232\275\025\177\270\275\320\003P\275\352\357\330=\201@\234=r\303\276\275\201\306\206\275\352\030\273\275\005=\'=w\021\335><\026(=\330\226\n\276n\321\234\274\235\266S>\\)D\276\241\"+>\024LT:\254\344\222=\3158\276;pu5>\367!\215>\335\362\332<t\202\031\276-\374\325\275\204|\024=\342\274o\275\214\345\237\275\227\225\320=/Q[\276\221\022\037\276\247\364\245\276\312uU\276e\360>>\316\227\376=\273D\234\276\0335\264\275\354{\275\275?\221%>\332C\214\276\221B9;\360=\242>\271S\266=\356\222Y\276\233\3208\276b\364\246\275\376\354J\276\236\364\211=\241)n\276\245Ou\275\314\217\310\273\225B\270>[\2758\276$nf>v\221\026\276{~\301\275\352\254P\275\330?\370<Brq>\n\020\235=7g&>\273\352\237=\221(~\275\233\245g\275;\330\352=P\317\377\276\033(\264=3\320\362=\0316\260\276r7\211=\237\2041\274\322n\220=\235\373H=\2304\274<\274\235\224\276\215\224\367\275\200s\345<\034\277a\276\205\347e>#\204n>\247H\037\276\002 \302\275,CB\276`\020q\276\316~\021>\217_#>\370\366\014\275\327\364\232\275\n\375\301\276\314\233c;\316v#>\326!\235>\353~W\276\366\243\313\275\210\010\246=[_K\276c2\237=\231\304\204>\363>\263\2768\233\267=\252\313 =J\202\257<\314\371\210=\251B\030>\303\006\223<\350\004G>\221\3261\276\267\254)=\364\r\255\276\017\360\212=\003\322f<\251\032i\276,\212\005>&hH=\024\026\303<\215tc>\372\312\007>\341\026T>\263\353\351\274!\220\302\276\250\252\244>\332\2439\276\216\362\371\276\2625N>\027\3671>&p\233\275C\330\027\276[\r\217>\211}\337=\204mh\276W\321]\276\216q]\276\275e\233=\340=\274\275H\210\017>\343\233q>a\241\006>7\177q<\242\006R\275\213\342|>e-\264;\366h\216\275\2014A\274\236\216[\275\340\225u\275\225x8\276\324Y2\276m\337\\<\014:\225\276\335\016L=vF\023\275\214\221\312=[\250\023\275\266\302\356\275\227\254K>\014\013k=l\375G>\341\335\275=\247c\344=<\t,\276X\313\270\275\313\226\006\276\031\321\313>\250l\333=\371\2171>\217\257\205\276\362g0>!\323\010=\201k\211\275\362M\002\275\216\231\242=\306\347\023>0l\220\276\334\030\325>\246\030\233\274{\232v<\213U:\274\257j\227=\272k\263=\014\250t\275\350\306\021>c`P\275\351\215\036\276\253<\337\273\212\230n\276\031\r\246=\025\270\275=\0009%>\230\274\004\277\364^\217\276!J\003=\007]=\276\204\\(>\271\275t\275\222LO<;aC\275\260an=\213/b<u\014\035<\032\330\302=d\346\035\275>$\201=\215\345b>\317\307\007>3<\211\276\003\333\303;\262\'>=?\001;\276\004n\210>f\r@\276M3&=t\251\302>\320H\271\274\222\035z\275\250!\010\276\027b\260=\255d\276=,\372.\275\252\375^=\"\243\"<G\240\320<Vt%\276\375)\224\274Y\030\322\276cR\200>@\027>=\3141\203\276\3051_>\350r\014>I\234x=\371\010\375\275G\r\241>\306*\263\276\245\r\250<\202\370V\276\212k\255=\010$~\275\224\3642>NO:=\014}R>\305\355\274>\240\250\263\276\331\361E\276\242\3667\275u@\276\275G\t\320=C\332\376\275\276\201)=\375\306+\276\337?\250>\221N\240;\234\226\360\275-\177:>\030H.\276$\'\177\275=@\341\275B\256w\274\224\014C\276\030\313\311=Ub\005\276^*\353=jZ\232>\326\020\375\272c\345\204\275\251~\301>\364~\253\275\251\323\216\276\241\236\210\276\034\313r\276!\303Y>\242\311C<\347 \026\276T\3336=\310G\247\275Y\024\227\2768\006\200=\202(\351\275\r\365\207=\206\367)\276o\033x\276[I-\276\016\361\206\276\257F\302\275\202:\245\276 \357`>\370\211\213\276\237\276\324<\222\276\332=\315`\010>\322\201\031<\027\367\027> \222m\276q\341\'>\363\300N>\272\314\356=\030v\330\274\344.\017=\234\372\246\275\237A8>\365`\217\273\016\231o=\326\346_\276\267\233\346\276\353m\275\276\312\345\255\275)\327\233\274\372-\250=\370\233\304\275R\351\244<\337\375@<\365<\343\275\264#o\271$f0\276\360F\236>\361\377\304\274X \037\276\265\2712\276\207I(>J~\023>\370\253[>\246\352\n\276\257I\231\275\336mX>6\271\236\276\362\304`=\260SL>\331\377\256<\006\371\036>\247R\t\275<\377\225=\245\302U>E\372\366\2756d\020=\301<Z>7\256\204>[\343\324<\024\245\227\2760<>>\231\031&\275\325\353\275>l\312\010\275\2479:\275\321|\210=\307\374H\276\356/#\275J\226\013>\375\331\304>>\206\226\275\266N\016>qP\366= \221m=\3413P<\035)\367\274\253+\026\276i1J>\206=]>\031\014\016>d\235E>_\254\375<\210vC\275f\260K>Dn\231>\033\353\202\276\001J\242\275\010\314\310=QSq<\316\277K>\000\237\231\274\335\251R\276\374\352\317\275-\212\323<w\032u\275@%\210;1\204\003?\346\002=\275\326{E\276\0353\226\276Uj\303\276,h\000\275\"D\325<\317f\'=\350n\246\275W\023U\276\220f\031\274\022^\314<\250\317\236=C\326\024>\201z6\275MI\007\2769\245\207>e\016\014>\262\346E<A\r\370\275_\253\367>\007ab\274\370\257\215=\312\321M\276\343F\201\276.j5>I\277\262\275\311\221\254\275\204\321H=\223*Q\275\367\2421>\312\224%\276L\227\017\274\235\267\247>\353\036\254=Q`\375\275\220\2460\275K\234\236\276\274\262\245\276\017\031\324\275zi\016>xR(=u\326\352=K\374\304\275\350_\276=\006\020\312=\322\214\274\275\033\244\273;\245\345\322=\301H\247\276\325J\202\276..g\276\344\014\022>\201\372\276\275\320\333+\276\341\214\227\274\272*\370\273O\264\303=Q\217\t\276\266f1\276\210\244\243=\\)\253=\373\265\244\276}\364\207>Z\321\\>\213\247C\275\354\247D\274\n$0>\366\002\253>,a\214\275\276^\343\274\367Ku\274A\213\r>w\271b>eB\200\276ly\342=rt\020<\236\030\312=\001z8\274\003ws\276v\237\"\276![\363\275\252\254\322;D\323w>\333\237J\274\254\307\'\276<4\006>:\026\2459\310\246\303\276MB\250=\002g\211>H\035\345=\272!\312:\254\320\223\276Bq\013>\032\241\234\275(\017\277\276\244\236\234=>h\323=\362$\t>\007\366\'>\036\"\247\274]\262==\264\002p\275\302\314\030\276BB_\276\302\210\222\276\232\346\">\317\006\034=\230\212\215>\353\350\323\275\212\033\213\276K\272f>\254\371\300=\303\025S<\034\013\004>M\353\245=4\364\315>\337\024\211\276Nx\034>_xI>\300\371\027\276X\013$\276fC\222\275i\326z>\001I\337=\304q\252>\262\026r=\2342\326=\007\322\303>\377\3073=\230\242)\276\233/\234\276%$\030\276\335#\215\275 o{><\023\023<\367\246\002>\212\307A\276K\272\220\275\350\035e>m/\202=\221&\271>:\310W\276\346\021\332= \364\034>\242\231T>V\254\301=\215oq\276\203\313K>h\021\256<0\'\372\275Sh\270;\256K\351=\231KE\276\240\020\253\273\245\n\241=|\2477=\021\222\202=\030\333\030=\025 \306\275\301,c\276R\032\202\275\360g\013\276[\244\035<(N\333<\306D<==\326\031\275(U\217\276`\365\274>\233M\254<\243\231\217>\262\2370\276i\227\360=\373\204\217\274\267\227\305=J\361\001>\234\267\201>%Y\007=\272=J=h\317|\276\376\035\222\275\372H\346\276\357[\323\274\037{h<\243\306\250=\250\220\211\274E\0372>\254\037\275<\347\356\362>s\316\356\274\230\t\313>\314\277\271\275\247\241U=\276\024\014>\230\226I\275\206\266)>\252\372\024>\234;\035=\0342\215\275U\254\233\275Ir\323\276\373\322\366=2\210\205\275\364=J>\313P\372=\352\332\231>\312?N\276\004<o\275:_v\275\324{\026\276]\261\027\274\371\352\300\276y\366\252\274\231\363|>\226\021\021>{!*;l\030\266=4D\352\275\031&M\276\227\315\265>\230\271\277\276\2776\343\275\375\245}\276\213\234\211<\301B\254>\306S\263=\322\363\005\276@\334)\276\261\266\376=\330t$=Z\374A>\006D}\275\201\375\305<]\372\227=\222 %\274\366\223\323=\201\203\222\275\262\374K\276I\232\213>\371V4\275\350*=\276\271k)>\"\263\353\274x\000\016>1\021\177\275Vi\337=\340\021\005\276\212\313\217\274\202\377\373\275\222\002\252\276m\374\315\273\375^\242\274\220S\304>t\3445=G\n\350=\257\027J\276+\333S=#`\007>5\277\213\276)\000\230\276\024\303P\275\225\211\254\274]\347s=2\004\026\275\214\177N\275\372\202D\275\223_\014>B\354x\276{nL=\237\"\255\276\337\337\270\275\006Wo=i\315\357\275\031\026\276\275\266?\257>\273\254\001\275N\240h>7\253\222\276t\273=\274\241\221\220>k\211\363<K\'\316\273\221\207H=\202P =*\360w=\274\225~\276\246\0061\276\001\252\230>A\001\227=U\224\352=\031\357\202=\034s\266>\026\331Q\276\310\034\213\276\025\347u\276\245\231\345=gB\370\275\341\262%\2763#,>\256?G>\330c-;\247O\004\2767\265\002\276\301I\233\276\274\302|\275[\240I>\360\025\010>t\357\027\275\316D\211>\271<\315\2757sh\275\341\255+<\247\367\250>\366&}>g\345,=>\256\033>\360\223\261\276\271\302 \276p\315S>WUt>\257Zp\274\305FQ>\270\371\006\273\327\345/\275\013\341\247=Nl\024>\204\206\213>\247\032\214\276\377r\324<\263Rq\276\207\022\275=\262@\375\274\375\250\260<\375\213 \276\030\t\376=Re\324\2763\256\300\276\345Z\n<\317\315*>\320M\323<\213\270\023=?) \275\013\n\316\274\275\307L>_\'5>e&:\276\314\366\257\276\016\n;>\246\255\013>\267\354\005<U\2600>\366\037\355=DC\313>\237bO\276\260S\213:\366\312\256=\311\337\366<(\264\200=\232Q \275\353\016\n>\022e\243>\365DG\276ur\333\275\226\231*\276M\2355=\t\210b>j\236\010=eO\272;D,\252=\351\273p>g?\264=\352\010c=\243k\241\275\217\270%\276\260\0019\275X\007l\276\262\357\034>3C3>\205\033\335\274\367\206\251<m\217\024>}i}\276\037\262a\276x\036\036>\332~\332\274\026\313\234>\377\371)\275w]\215>\352\017\321=\325\346\244\275\262\214(\276\000\322\333=\343\323\004>\240v\203=\333\005!=\374[\263\276@E\t\276\001r\252=:v!>\344\335\366;\203\342\204>\341G\262=;Q\214\274\n\252\302\275\234\326!<K\270\253=b\245\324\275OJ\337<\307\213Z>\341\214J\276\200\177%\276\302R\r>M\013B>\220N\001\276\362G\235\275\304t\224=f\025\206\276\375\003\241>\206\332\271=\352ig\2769\204\270=\000TL>\361\004\345\276\315\315/=S\316\r>x\202\020>`V\233=\377fz<\224?\335>\300\325\342\2752L\003>\310D\202\276\265I\003\276Z\300\217=\026J\247\276\342\214\253<\374Q\316=\353\244\214\2765\317)=\201F0=\354\220*\276M\246;=\343ec\276\345\257\312\276\010\r\251=>\202R>\352#\203=|_C>G\330\002\276\022\367\365\274*\375m<\361)\037>\221t\350;b\236\210\276\347\2458\275&\235*\276B\334\213>\327\234\244\275RfX>\222\034F>\346\341.>$\267\366>\253\256\250\275\251\030\262\275\363\362\217=\377\344\031\276\236L\220\275\236\\\304={\273\024\275\241\200/=\350\236\233=\250\253&>\261n2\276\367\206\230\274m\013p\276P\263\005\275\227q->\334N\245=\232\261H\276\250\362\370>\223\222*\276\351\027\351\275\247\376#>f\251\020=\220\306a\276\022%@>xX\202>i\311D>\262 \312<\214N\354\276\270n\324\275`\322\225\275 \022E>\352\344\254\274\254\224\246=\367(\273\275j\311\035\276h,\332\275\315\240\270=\247\202P\274y\262>>\227j?=XY\034>Q\307\276\276p\326\031\273\016k\220>Y\275!\276\267\254#>\317\367\207=\2330\022\275V\027\000>\223+\322<\351\321\202\275^\365#\276R\031d=\247\270\250>@\021\240\276\250\034p\276\206\021\252>1\013H\276#\335\034\276\3473`\275\002C7>8<\260>\0369\242=\013\264\025\274\016&\r>\253mt>\217r\236=\213\343\360\275D\214\037\274\000\000o\275\355\345\216>\246\204\003\274$8\322\275\t\210H=\226\374\035\274{\206(\276\334\314\036<e\325\265\276#\227\016>\030w\013\274\200\261\315\275#]\016\275\001\257\034>2\374\242\275\243\274\001\276nsq>\211\312z>}\005\212=\271\316\202\276\023\356\250\275\036\020\237=\226S\201\274\273\0308>a\305\365>EPK=\340,\024=\354\224\300\275\373\345I<\354\235\025>8<\256<J\372;\276\305\374\004\274@\351\022\272\313\352\251>!]\222=\273\365+\275`}\214\275\331\024\020\275|\r\303\275)\371J>\\L\177\275\335\275\307=\352\207\022\275|\374U=pS\275\276\341V\262>{\371\t\276_}t\275\237W1=\31372\276\270kD\276\335G\r\276e\036^\2763+\353<\316\010\334\275j\373\003>4kB\276\355|\036\275\363\256\205=~!\256\276q\0325>\274\2067>\373Ac\275\326o\240\273\354}\245\275\264\n \276\351*\233<\240\223\211\275\360\221\221\276\207\014\355\274\343\200Z\2769\223\300\276\322\220\206=Y\023\253\274\366\272\371\276C\350\021\276\017\037\243=eA)\275\013\2064\275\324:X\275n\267F\276x(\364\274\316\206.\275I\002\336\276\315*\320\275\371\227\242=\237\007\352\275\213\277u=\356\235\350\275\310\223#>\013I\005>\\\233>\276\373[r>\372\346}\275\021\300\204>s\214\247>\014Pa=\274\330\224\276\337\3330\276\356\034\352=\270\275\014>\301n\256\275H\000\271\274\214\227\204:\014\356\230=6\340\260\274=\022\340<&\260\242>\243q2>\257\221\244=\376\n\031>LE\334=0x\203>\356\244\246;Jh\206\275\223\030\205=^\232\000\276\364\337\006=s\016\243\276\332\2603>-\314y>|\337\277\276\356\264Q\275\024\334\354\274u\321\257>\256\262\006\277p\216\335=\236\327n<\226\241\350=\331&\353:\351\345H\276E<\035\276n_\247\276q\220\237>\347\253\200\276\313\260y\275\324\267\033>l\337[=\310\255\030:\244\032G>)\210y\275\026\000H>\2316y:1\332R\275^nj>\213\310\231\275\264\326\030\276j\303\025>\332\370\311=\3441\250\275T\212\255<\273\355\242\275\030\346p\276\352\307,<\241\276n>\235\326\302=\013&\257>h\376/\275\344A\335;\247\231\237\276\341\233m=\307\356\361\274\227d;\276\007\253\253\2764(\205>\260Q\300\275@7\025=6\031\356=Q\331\013\276~\232\214=\010\350\327\275\207d\377;X\326\002\275\233\320\000?6\177w\276\214\353\027\276\\\350\n\276\013\220\273\274\375\022\230>M\251&>\276H\032>>\'4>\333Y\200>o\351u\276\375\263\004>W\246=>\321X\364\274\307\360l\275\227~\224<\336f{\276\177\2778\276\352Q7\276\370O\202=o\342_>\r\236d\276\210L\265\275\211o\221=\023?\026>C\356\352=\2051m\276\322G\036>\341\217\312>Z\320\362\274;C\254=l\001\361<)O4>\226\250\342\275\331$7=5\367p>\213,I\276\017\252\314>\374Q\333\275\374\2225=\341\3455=\037\341\200=\206\t4\276\200m3\276\217\204\017\276-d\372\275.[\034\275\313\311\'\276\275T\341<\312c\362=\241\031\353=\037z\030>k@\021>G\030->\004\341\031>\356Q!\2762g\010>/\003\307\275\232u\325=\001\241\013\277o\307Q\276\027\"J\275\245\374\033\276\207\345\214=\016\264\r>a\323\010>n8H\2754O`\276:\211i=\272\2253\276\010\264Y\276g\374\214\275\212h\t>ix\010\276Do\022=\251\372\237;\275\342\202=:\370n\276\205i\222>\237kb>\233\307l\274y\225\363=\217\006\262\276\222\014\362=\354\032\276\274\244\276j\275\313\342l>\264u\304=\347\235\260>\037\241\030>\217}\324\275%XQ\276\261\323X\276\010\3576\276\365\\\311=7M\n>Jf\206>\215\257\210<+\227\r\276\240c{\275\372\346\322;5fN\275\004\224\237>\264r\263>\247@s\276m\317Y=t\007\223\275~\257\211\275\246\201\314=\372\017\000\276\005\317\320=\206\371\353\275_\363\331\275\364E\326\274\210m\277>BV\346=\260\005\254\275n|\260=\"\360)>(\034r=+\271\010\276\371\333\360=\2426\324\275\006\035\201\275&G\'>5\277,>f\357\374\274\375\235\254=\'>\204=\273\250\236\275G=C>\026\3245>)\351\212\276\367\304\020\276zs\273=\371S<\2760\227\267<\232\r\306>\024\242\210>t\273\322\275]\311\351\275\241m&\276\\\216\272=\250\0329\276\335\325\336:\214\021\264\276>\221\">\357m\317\275~\273\260\275\345\005\354\276h_\376\274\376\365)<\374\3064>3\331\r>\\p\016\275\303(2=Z\361\240\276\020\025,>\215\017\374=\354mG=\304X\210>\263\326\223\276;\036\252=\345\361\223\275\277\205\213=j\365\223=$<\251<\203\233\306:\206\3259>8\270\004=_\376\237\276/^\333>T\3353>\010@\305\275z\021\250\275mt\220>\356:\223>\253\337\361\273mfD>l,(\275\347\311\266=\036\311S>r\202\"\276\r\244X\276\355G\335>\325\370\332=\273\tS\275(\344J>A1:<\332\373;>\316\322\203>\235Z\266\2759\273/>\373CR\276[\271\177\276\322\217\244<-xU>\227[\270\275\266\367\207\276\343\333\221\276\330\330M\272Jq\226\275\325sT\276\327\200G>tC&\276\200i\231=\345\'c\273\276\224d>\3749\244;\0319\325\275\3145\203=\260&p=\376V\'>\2430\215\275\212\303\027=IVf\276\260\305\203>@n\240>\316\343h>\0213p=\361u\021\275 \032Q=K\204\222\276\r\025\262\276\333N}\276\344dp\273\267\022^>\002\274z=\3246\210>\253\361O>)\366\003>\023f\035>w\225:\274\201\327F\276y0\201=\\\254M>\247\206>\276\333\3712\276\276\266\225<C\342\255=\227\342b><>$>\275F\216=\335\003\242=\230\310$\2743\250\205<\214\323m\275\277\250\030\276Z\351.\276\362u\010>\267C\356=\204\241\217\275\254yn=\334C\250=\2503\017<HJ\216>8\366/>\343\177\335\274\372(U>\223\363\217\276\336@H\275\3501^=\330J\204>B\014\356<1d\250\276\344\352B>~\0304\2753\010<>\252\327R\276\211\221\365=\340=\240\275\315\254}=)\232[\275\014=b>\17763>\205\213\223<\221g\321>\2445\033\275\006T\016\276\372\216\241\276^\224\264\275\207@$\274**\r\274\035I\320\275;{\316\276|\005\232=\263\005\200>\373\214R\276\273\265\032;}\304\212>\261?\263\275\354\376\364\275\036x\335\275\030U\233=\031\212s\276n*T>\346\211y=-Z\214\276h\221N>7\007\227\2758U\302=\221\252\377\274\010j5>\210\360\207\276-\246\236\274\336XH\275%\271\241>\n\326\272\276\3663H\275>\005\340\275\224Cc>%%o\276eg\255\275\313\t\242\274>u\236=\000\213\340\275}\257\304\275\320\025(\276$\357\210>\014\004t>\001\327Q=M\t\311<C\023\230>\332\217`\276\236f\020=h\230\205\274\236y\366:B\210\024\276\226\235\200>q\364d\276y-\366\273\372`h>JR\300=\020,5>\245\355\311<\253\006\207\276\032K$>|-\317\276\262\"\355=\220\313\014\276\2526}>\320\026\277\274-4Q>\r^\235\275\"\333\262<\374Eg<\265M\036;N\373\002\275\r\346\235=\262t-\276x\376\266=\224\200\212=\227G\363\274\353\253O\276\211\004\225\275\224\261\257\275A\013\304\275\370\371\323\276;\306?\276w\'.=\205s\220\275\341\274\257\275w\006\256;\300\003\260\275\021\304H\275\242#\246\276\210a\260\275p\256v\276\t\016\270>f\034\270>\322\204\301\276\3049\320=\336\333\242<\177\013\316\2747T\262>fo\307\275d{\332=\253\203\226\275-F\256=\370\273\307\275-\313\232\274a\310W\276\324\253\372=C\271/\276m}\231=i?\216>\331c@\276<\253I\276\314.|\276e+#>\363\222;=lHF=oa\312=\230Y\201>E0\347<\020\244\323\275\330}\260\275\364;\271\275\337\263\032<9\211$\2767\200\t\277\313.G\276\270 \303\275-\3773\276\001L\207=\230\332\004>\332J\017>\243\037\032\276\265\211\215\276\345Q\237=-\017\336>\226\310\'\276\001v3>\225\235U\276W:\255\275\344U\246\276N\351\257<\354\353\344\275\200\225\214>\024+\023>\305\207\001\276\374\342\026\276uM\000>\215\222J\276\245\214q=\344\325\372\274GK\300=\215\315\310\275>oS=Y*[=\300\r\027=\274\336\017>\000\245\002>\014\010G\2760G\213>i\365\004\276\336\265~\276\336\365\030\276\005\000_\276;@\r=\313\364R\276\342\014\263>a\2451\276Q\227D>\211b\314\275\3573b=\035\234\200>\375\256\321={5C\274\002b\017\276\236-\013>\277F\330\274\356\016\311=:\206K>\016f\220\276\016\351\267>\267\332P\275\265\016\346\275(\257#>L\231\347\275\252\333?\276z\032v=\340(\264\275\200\336\313\275v%\204=\325\252\300\276V\332\250\276\2043\202=\265,\202\274r\273\360=\230\375\177\275\362\005G>\262\'\202>\337.\033>\240\216B>\3148\010>\247$7\276\267\356l\276\376M\271\274X\256\\\276\205J\364\275\230\360}\276\035\347\212\275\257\301\223\276\246\014\342\275F\267\375\275\320\363\245\275#0\003=\217Vl\276<,\220\275\335l\302\275\201\317\\\2762\345\313=q\023\335\275\242\367\203\274\024E:>\245\036\243\276.\315\236\276\263\206?>\333W\274\275\274\336\261=@\315\312>#\307\014>\243o\307=U\344H\2743\245\304\274\376\344i\276 \244\230=\214^\320\275\373\207\243\276\003x\006\276V%\342\275\271\025(\276\256\2477\275}\023\014=6\216\224\276\324b\212=\277.\224>\203\215>\275\344\202f\276\305lu>\310\010\214\274h\3360\274\r\004\224>\365)\263\275z\002\312<Cv\374\276\252\023\t>sK\3259>\320\001>|\374\027\275\024\341\274=\320\216\226\275\310\226\366\275\217\240\030\273\355\320\021>S\020\r>\207\312\017\276\341{\203>\316\3446>\201[\366=\365t\206=2\240\240<\214T\327\275\266p\302>}\341R=\000\030X\276\\\177\220\276w\361\033>\226\241\303=j\3710\276\317\334P\2765\367\004\276\177\255\260>\337\006\301=\351\234F=\242\315)=3N\343\275*\345\303=\277q\226=Z}\005>\356\005\335=\343\034\254=\254\252\257\276\321\361\331=\332:\245\275Y\311\005>\034\217L\276\036C\253=\024\\\237\273\2128\243;\261\2169\276F+\344=v=\216>\265\337J\276\272\366}=N7\206=],j\276\212X\242=\261\255\035>&\362\035>\257\362\231>\305\206\306\276V.F>\262\021J=\265\274\205=\337#\031\275&\313.>\251\353\247\275\351\207\006\275b#\020>\267\233\024>\034}\317\275\032\323#=\366\007\t>\256\274\236=\303\203\'\275\252\031u>pL)\276Y\236A>\233U\236\2762\340\205<\227\'\270<\301\224\373\274d8\256=wz\205\275\221\2059\275L\343\337\275 1\035?\002e\001\274\350\226\315<\225S\216\273\306\337c>X\212l\276\016\376\030\276\261\371O\276\365\356\023>\177\336\002\277dt\014\276\200\360\005=v\315\274=tnC=HS.>\257\210a=\307\033\314\275\335\276y>Au\r\275\3427\n>\271\3653>"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: ",\034\206\275\325\237\177<\330\023\237\274*\332\325=\370\234\020\276\301\316 >2\000\253\276-\203\333\275\316\177\007\276\262\214\016>\266g\264\274\240\031\245\275z\351T>\354w\240>I\251\333\275\226\227->l\363$>\221\367\347\276\277\021[\275\275\004n\276\273\230:>3^\031=\305\205w\276.E\313=\020\236\034>\300\213\035>l\210\230\276\256\004\213\276\332!\n=\205\360t\276\037rS>|\202_\276\377q\226=e\200\200\275\351\242\034\275\350\0216>\276\t\274\275\352r@\276\004\205\206\276z\255\275\275\277If\2751=\003\276d\206-=o\345\270\276\010J\260\274\270\021>>#uQ=\265\004\200\276\224}\245>&\207\331\274\371I\311\275\234\365[;3\037\"<\033\303\203<\337%Y\276I\001!\276b\2446>\337\023\005>\215\345\273=\275.\210\275\304\025\202>\"\006g\275\227\220\242\276\325\345\330\275\024\341 \276jc\033>y\243\034=h}K>L\244\243\276%U?\276\016X_=\372\034\365<\035\217*>\003\027\241\275\333b\010=\335\233\022\276\321\376:\275+\003\020>R\243\300\276?O\361\276K\262V\276\201$\006\276W}\203>v-i>\323[\025>N/\246<8(\002>3\256\201\275D\016\362=p\257\311=Q\256S\276\300\370\254\274\343\261\034\274\317\r\201<k\237\263<\245\207+>\031C\010\276\236\277\267\274<\346\016>\317!\255\272y\250\r\2768\310\302\276\020\357\212=Cm1<U\013l=\314\374(=\234\253d>\317\3337>\241^\227\274\372\311\205\276x N\276\324L\026\276Y$\\\276\232u\224\274\312 4\275G\343\027=\256\276\226=S\'\301>\274\266\\>\371\367\262\274u=\224=\007h\226\275)\265\306>DV \275\2510\270\275pHc>\030\303\263\276K\017\345\274w\261\001\276,\351\014\276H(\261\275\241S\013\276f\322$>\2660\210\2766\210\253>\2177\233\275\206\306\264\275t\2158>\246#\033\275\327F\254>*Y\204\276\324\210\227>Q\251\247;\222\033\005>\352\221\023\275.\302\311=\233K8>\236l\275\2754o\277=O%\223>\356\032\023=\"w#\275\n\332\221\275\255\263\314=i\227\375\275\372J\362\275\225Z\204\276\037\020u<~\2308>\276\331\350<oI\366;\030v)?\230m\">\030\333\037\276\t\007\003\276YM{\276\251AT\276\300*\351<X\303]>\210d]\275Y\022\235=dy\033\276\257f\335\274rm\273\275\005A\316<\020A\254;\033\"W\276\020?%=\006\303\025=\336p\026;\005!Y=\312\005->\0376\374\275lZ,>\010\355\237>C\023\212=5\027\222\276\273\206\030\276K\253\270=@]\365\275G_D>$M\035\276\314\343\324<\034\035\360<H\300\317\275*\321\222\274\022<{;\200\221H\2767J\310>\277;\334=\355\010A\276\356\204\016\276\347\231\370\274\373:\323\274\343-\177>\323\337\306\276\321U)\276;\016\227=\200i\214\275\027j\247\276i\216\206=f\n\366=\244\222\331>\367%\306\275\344+\'\276\200\367\227\275\013\022N>@\342{>\177\335\235>\346\3304;X\350\275;}m\223\2764k\213>r\r:\275\243\351\207\276\347g\035>uY\n=8\3667>rd\336=\031\205\201>[\310h\275\204zv>\030\033\343\274\274\244\370\274\256\351\275=\331\326\030\276y\035\245>\023k9\275?L\276\274;\333\376=\273\204\210\276\\:P\276_;\340;\237v\022\276\244\254\364\275\177\256\205\276\271E\345<\346\2401\276\030\355\310\275\3311\375=\277`\037\274Wv\"\275,\357\222\275\334M\356=\303\202\213<k\206\201\276k\202\003<4[\337\275Dll=\036\222\235;\247\230\235\276n\364:<\006\220\001<\334\241\306\275\312\326A\276\321\310\333\275\277j\357:eo\005>/B\215\276\020\332\016\276\364\356\007\275`\223\261<\346\035\343\275a\035\r\276\246\023&>(\2413\275\277\2430\275+\014\234=z\225\236=\373\225\305>\365W\361=\327\016\035>t\016\304>\347\0367\276\027\375\236\276\213\022\267\275\347\317V\276@\354\333=\006\243y>\017U\267=\365\204_\276[\214\013>\263.8>Z\346\001\276\2125\231=$\031<\275f.^=\302}\300\275\376\245\255\274bV\211\2762_\234\2768\372\310\275\265X\340<\014\262.\276\204Rl>\234\211\240>\313\216\261=\271\265T=>%7>Xc,\276v\240k>q\227\0379CB\357\275\326\255^=\025\221=\276>*9>d\327\014\277\330\205\265=n\2324\276\025&\360\275\220\341\356\275\234\027p\276Z\324S;\335\210 >\2131\221\275\023^Z>\036\243\205>\251\276o\276sx\304=L\201V<\372\244\276<\014\274\332\275>%S=\276b_<2\252m>.\301D\276^\376\227\275\010\334M\276\217\334&\275\374\022x\274\027\240P\276.\256\355\275\254\254|\275\275T\257>\234\017~\275l\250\232\275j\207\251=\016U<=\304\014\215=\310\335R\275\250\223.>~Du>\307\261\347\276(\204_>b\026\344\275sN\036=Am\\\276\207;\221=/\342\204>S,8\276\371P2\276I\247\276\276|\247\206\276DT\r\275\306f\362\275Y\016\010\276\254\251\276\273\254f\014\276\356\025)\276\274l\203>\320\336>\276\225*q>^y\340\276c\356`=\353\035\371\275\373\250(\273\322\030\210;\237gM>\212\367J>\221\303e=\t\350\234=\213\004\220\276\336{\360=#R9\274\235\306\032\276\303\226\232\275pg\235=%c\024\276\217\001\350=\363\307\215\276\305,\204\275\037%\377<\373\341\'>\316\271\035>\027# >\205\'\324=K\254\271;@\330\200<ea\301\275\204d\310\274\3744\314>=\354\023>\271\251\256>+\322\235;@\250#\276\007w\030\276\311\370g>\317\026\355=\250\025\237=\363.\006>\336\342\241\275\213\013\350=s3-\275B\'\300=f\243\026\275\253i\271\276\333w\337=\366\277H\276\310\217\376\275\005\213(>\233\027\345=\306\001\206=\002D\315\276\267\263e\275\tw#\276D=\364=\202K\320\275\231\350\327\275!\253\217\274O\365\236\275\247xX\276\315C\026\276\036\375\341\2765\227\276>g0I\276\201\342#>\262|G\276R%=\276\304\177\033\276\221\355\355=\216\003\270\276QE\024=\336\346\366=:Q\325\275\313<\227=\313\217\276=d\247S\275TM\213\276\247\360\202\276\206*\351=\204OX\276\255\343\234;\322\032\342<\333\353\226\274#<\033=\r\246\177=]\273\237=\244\003x>\237\026)<\347RX>\342\326\226=\326\250\017\276\266\312k=\327\274U>\340\017d\274\r\377\020\276\3228\017\275:\223#\276V\306\344<3\020\254\275n0\357\275ui\351\276\250\322\354\274\340\024\025>\240Q\003\276\277\3341\275Ej\276=S5:>\016\265\207<!\372\003\276A\343\025\275\021\232P>\014\354\372\275\321=\\\275\353\341h;a\340)\276\241\004\205>\240\330\026>\207T)=a\035 \276\236\364\004>\227bZ\274\244=\327\276#6\272\275\010\363\330\274\314e\253\276\027\276\021=\022<\305\275*\365M\275q\274\014>8\356a\276\013\004\234\276Po\220\275\310\354\340=\266\250\035\276\351S9\2769\"\020>\362\245\301>B{R\275\204\017\000?S\246#>\t\227\247>@*\237=H\016\246\275<U\301\275;\357s=m\331\232\276Ao-<(\312\010\276e\267\322<\235\302\267\276\237\316\327=D\253\207\276\3651\223\275\353\204+\276X\374\313\274\351\345\237>(\376\251>\235\341\213<\265\3767\276\222%\344\275\342\372\333=!\363\370=D0Y;~\234\200>E\354\311\276\370K\266=\\m\037\275W[\013\276\220\234*>jO\277>\346\n#</]\206=bp\221=\246p\257=\315tN\276\340g\371\273\247\311\300\275Y\334o>\033\243<\276\244\014\264\275\331M4\275\301\274\247\275\267~\">C\334\340<\0027e\276\263\265X\275X\203\264\276Xz\330\275\002\226{=@;\257\276\371 };o\267\\\276\'\360\n>;\204\377\2744\207\371=\'\207\376=\340\255\225<I\tq=\3713c>\336!\252\274\275\027%=\263\324\216\276\020\310\327\276\227\250\252=w\304\260=\200:|;\336\315\025>\204\376\213>?v\231\275\'\302r\276\3044\310\276\225\213\313\2757\200\222=l,n\276\\\236\000\276\027\025d\276\205\215\224\275x\006\235\276@\327\215=E\003\022\276BJ\255=\221*\202>_\010c\275\346\227S\276\220\225u\276\027\264\365\275\007y\233\276f\r\000>\223\320\336\274\335\323\232\276\275\342N=N\350\355<{X\027\276\264y\273=F\254\233\276HK\367\274\024N\241<\003c\201\274)\261\006>u\220\276=q\027\226<&\363\027\276\222\222\305=\316\375\370>\351\305?>\323zY\275\312l\320=J1:\276\342\342\325\275*ev=\025*\330>l^\227\276\237EE=\245\020\021\276\336\231&=\364\271\225=p\320!>\256\331\347\275\217\351\367\274\374\177\326\274Q\245\231>\261\351&>\374\027\205\275\302tJ=\232\215D\276PQ\204\273\002\004\335=)\344\363\275\250\200T=\345$c\275\036\261\225\275\207Dn\276s\377\226=x\216\321\275\345R\032\276\016<\312>|f4\276\'\336\370\275\255\372e\276\032\353\000>\347v\016\276\256\373\225\276 /k\275(\\\013>C\005O\275I\274\212\275\'\025\237=Im\215\275\030$\265\276\371\250\205=i\366\177\276\362\363!\275*o\005>\017Th>\230\'\224>Gjf\276\360\"K\273S\177)\273\373\253\247>\222S\014\275\252\357\371=;L:>\267\377`\276\256\020P>\034\177E\276_\355o>\310\'\316=\214t\346<\024\032\261\276\265r\352=R\272\021>\037~\207\275F\3763\275\305\240\013=A\312\257>\rB\267>\367\004\267=c\363\323\275Bh\342\275+\211\247\2762\351\302=\262G:\273\317\271a=\247\350\253\275\242;\277\275\033\013\004>\366\214\315=\225\205\253=n)7>\025q\326=H\310\222>0\002)\275\017]\262\275\223\306\233\276\366\013W=2\213\203>\352\220\n\274\177\274S\276\021\311X>S\251\375<\220\030\236>\325\'G=z\347\034\2763(\347\275M0\'>\365\010\336\275TX\236>\352^\265>\270\004U\276/4\275\275\342\217\026\275\271\000\014\275\367\352\243>\260o\211\275P\333e=\262\202I\274\3463\270<\320v\262<\021hT\276<\342\001\276\340`a=F9f=K]\364\274\233*\206\274x?\352\275\232\213\026\276\024\031\020>\343\014\256>8\363\247=\027!\250>\246\221\247=6\354T\275\030-T\276\016\205\033>\030\'\341<]k\211\276\255a\201\276\242\322\017<\022p\275\275\246\315\202\2761c.>\326\262\373=N\220\214\275\301\314@\276Wg\215\276\342\010\341\275\265\t\210\276\257{\203\276\r\320!\276\350\037\027=\215+\256\275\304\006\021\276/\222\373\275\372!\347\275\004y\312>\310Y\217\275\024F:=M\322\002>D>\004>@\363\242\276\272\246\022\275y\220];\313\215\203>\213\372;\276 9\027\276\213g&>\324e\201=\311\203\245=\272X\271=8U\201\276%M\331\273%@\213\275(T.>\323\305\267\275q*\364=\306\212\022>B\341Z>\223\306I\275\262\371#>&\272G>OA\302<\222\233g\276z\006t>&\250\205;\344rQ\276\367\374\014\276\300\212N\275j5\'\275\345\261Z>\362\346\t\276\225\3546\276\321=\007\275\226\277\344>|\203\310\275[ J\276\232\010+\275\257\353\021\276\243=\361=l\252\004>\361V\024\276l\377_\276r\372\231>8\210\355=(\321\372\275\025\3046>Y\'\225\275\037V\323\276\307!\n>\334\333\324>\0103\340\276\267~\006=\221L\314<z\021+\276f\360\n\275\357\014\251\275u\017\005\276\233\222\023>\206\216\216<\214I\372=V\250\232=\251h\244<\006y>>\005(~=XV\346\275Y\2222<\034\304\335<~(\204\276\221\265\205\274\251k<\276\260S\240\276\204\022\026\276u\206m>:\231\027\275\263\013\023\274\357\n\267\275\344_\271>\350\260\315\275\334\234?>\351\362\222\276\002\331\232\272D\266\232>,\312\203>\003@\210=*\337\210\276\345\016\333\275r\307,\276\333\013U\276\200z0<K\376+\276\225\342\306=.bP><\367\365<\251\313\\>\267\244\265=\273\276\003>\330`G\276\021j/\275N\374\036\275\232v\217\275)\261t\276\021\225p\275\016\225\004\276\034\332\340\274\211\314u\276MB>=\347\235\r>\344TC>\332\232\243\276\203\366\017\275\347\375\004>\316P\211>\340T\010=TMb=-\374\364=\305\324\333>\253a\000\276\022+o\274\226l\224\276\224\024\223\276\272\227\246\274\256\356u=G\031w<\\~\222>\342\0108>_\230^\275\233\346\336\275\264\003\244>h\223\235\274\222\010\246\276P\223\315\276\014\344\'>u\000*\275\234\273\235\275Y\205\212\275\\\020A=\036\373/>K\014T\275n\270~\2760\306\265\275J(\022\276\235\332\377\274\311/\200=\262y\233\273\007\242\224\275\214\0103\276\252b\212\275\265/h>\257\375v>J\2707\276\001s\014>\245$\264\274\367\300\204=\332 4\273T\"\355\274\300\2216\2760g\023\275\0341-\276A\r\314\276\00371>\025\340\225\276\010=\024\276\301\212T\276\022<o=\346\264\032\276\220)\250\275y\243\307\273\232\017^>ee\036\276\264\207=\272\362\375\360\275c\346k=i\322\311>\317\201\032>\204\357\271=\303}\242\275\252g/\276L(Y\276gD\253=\255,\355=\3112:\276\360\020\243\275\024\317X\276\221\325v\276\372\225\266>\262\201\010\276>\243)\276\246\312\203\275\334\367\225>\34312\276\225z\237=\273!\244=\304J\334\275\256\324\352\276HJ\003=\222\222\\\275\314\325\252>\177\345\007=m#7>\316=\257\275h\022\247\275\221\373\371=F\220\021\276\035.v=\240,\324=\313\302\230\276\250\224\375=\030I\217=\233\314\225<\017d\016\276\234\312?>\302/\006<\021WM>v\nQ\276,\352\317>\326/\366\2759}M\274\002li\276b%\327>;\341\345\275\231\n\010\276\306OR>\216\030h>\206\234\337\275%m}>F8\214>\342\215\305\275>\024\210=&\014\332\275\244B\370=\023\217\320\275\033\203\333\276\3450\202\275\220\345M\276\251\\\215\275\336Ll\275et0>\371\271\327\272\225l,>\222\332\330=\254\350V>\205\307\001>\267\352\373\275`\344+\275\357\261\023>\336o\361\274V\t\310\275\035\370m\276i\270\002=\364\017\027\276\357\020\000><\3520\276^\034\321\275\365\3024>\355T\242\276f\230\224=\233-\276\274\327\227\203\276\236\003\226>WW\204>\202x\004>\274\312R\276)\247\\\276\236\201\300<\220?\022\276\254\274;\274q\351\343\274\231A\300>s\324R\275\337S2\275\254\362\325=\326xj\276Mm\205\275&<r=r\236U\273)\265!=P+K\275v\207\t>\255\251\356=\333\005\264=\374\005\273<;\276d\275\305\350$\276<B\365>\222W\222\275e\262\370\274QD\362\275\362-\247\275\257\226P\273/\232\004>\313\301\237\275\257x\211>\241\265h>\307\305\256>%x\200\274\355sE>\203\210\026\276\262\021\\\276\337\273\213<\265]\014\275\036\272Z\275\230\273\257\275j\2159\276\"\313\227\276\375\236\233<zX\370\274\347|\243>\210|w>\250\010,=\267G\343=\tI\325\276/@N>u\223Y:\334Y\030\275\213\302\240\275\0308\261\275\266*\036\276\267\267\211>\226cz<c\272[>\341\255\r\276\206i\221=\324\023\367=\342\313\317\274\217LR\276,7#\276\337\r\031<\261\254\223>\314\177h\276\022\261\002\275\266\311\210\276\261W\365=\372z\014>\371\312`\276\303k\246>\000\311\334=\\v*>\\\024\206>\274\246\036>\320\2114\276cED\276\235\216\374<\r*\366<\310U&>s\3738>\257\032\036\275\304\033\235>\257\363<\275\356\370\323\275\305\352\004\276\356z\350<\233\347)>\365\372:=&H6\276\024\361y\276\300\3026>iw\367\275\267\241\t\276\227\356\021\275\250\241\300<\211{\202\276j\240\216>\272\004\200\275{f6\2758Q<>\035\240\236\275o\250\025\276\272\201\246\275\250\276\316>\010\206\342\273Ya\243=o\214:\276\241\354\337\275\250-\217\276\266N\235>\014\256\250>:\202\321=f\213I>\002\332\236\276S\234\305=\234\212\325\275K\222\371\274\233p~=\032\025\206=\346\302=>\256\267\002>\354\373v\275\244\025\202\275\027\252\212\275N\241\303=\003\201H>\212-\002>\253\361>\276\237\303\342=~\354\234>Ge\003\275\221\006\266\275\330\2032\275\237\210\211\275Y\017S\276B\001\342=\205P=\275\340\365\035\276\361\026q\276bw\354\273\210a\201\2751}&>\007\030s>\311\360\201>\250Rf\276\300\2129=\222t\213>\021\"i\276\334\321\357=G#\227=U\272I>\251`[\276S\nu\273=\200\206>\376\033\355\275@\347y\276\010\327]>\221\356\341<M\031\266\275_\344\010\276\337qD>\352\026\024\276l\331\302=O\347\337=\251\355\005?\003\203\304=\n\303\270\275\373ZL\276\203\352\233>\006e\320\275F\363\203>Me\210\276c\360\274\274\032\237\273=R\3252>\n\022W\275\224t\315\276\306]\372\275\367G\354<R\217\n=O\014m>E\031\211\275n=\234\275\357\r\025\275\315?\222\276\n<\206=B&3>\216`:\276x\272\210\276\240\271\374\275\271_\376=\2214\312\276\205z\207>\257\014\202\276\374f\010\276R\265\022\276\036io\276\036j]\276ZY\317<\267\202\204>$\325Z=\372\266\212>\021#z\2765\257i;\273\341^\275Z\317\003\276a\253\252\276\'\373\260\273\270\323\352\274\003F\002\276\254Z\013\2761\202\233>\222\245\333=At\202=\256\341T\275\264^\223\274\322RH=\005\311#=\345\373(>\237\231\203\275\200u=\276\207\267\210\276\267\374l=\002\376\302>\234 \366=m\204\233<\206NI=\314X\036<\2701_>\327\354\207>\363?\005=pc{\276o\014\277<\366}z\275~R\276\273\364\335\360\275\260\350\314>F\332\305\275Rw\237>y^\347=x\340Y=Ebl=\352f;>;\333\323;@d_=\000W\223>\365\n\243\276\003\300J>\200w\336=\265\347\227>\016\367\246;\205\340\225\274H\343\207\2759\020E>\2077\275>\014\253\002>\033\232\270=\301@\007\276\252\237\021>\255G\035=\220\310Y>\336\032#\275\367\227M\276\005\321+\275\035^\241<\031\314J\276\0025\037\276\251\306\216\275\265\301\031\2753\262\310>\245\204\000\276\241\222\222\274\245\344T\275\021\263;>\267\217q\276J+7=>\356\220>\027\373,\276\"(\360\274\252\024\202\275\325\320v=V\243\001>\256\004M=r\313\374=>5\214\276\322\005\257\275\'\013\246\274 3\347<\240e\263\274\200\202$\276f7\277;\224V\356<\220\037\236=M\332c\276Yw\273\276\r\357\362=\273\027\024\275\215O\235>$\330\204=\210\016\203\275\224Z\235>qc\236\275)\366\266\276\321\266x<\270\3007\275#\016\007\276\303\325W>DM\023\276(\251\270\276\354\375\221>\253\036\372\276\205\232\251=\010<0=Q\334\022\276\224\246\207\275r\224\267=]\211\312=\225\242\032>Y\365\233\276\277\243\226==\r/>\305u\277\2752\2666\276x\037K\273\254\214\037>\333\203)>\323\305\275=E&S>6x_=\251*\242\275A@Y\275\256])\275\310=\323\274\236\357I>\224\202\264\276t2\214\276\227\377\212\276\213 g\276E\205\255=H\022L\276\333\305\036\274>\271\317\275K\201^=\363\264\242\274y9\201\276F\314\204\276t\310\237\275\376\241\017\275b\236\177>D\301R\276\336\241\001>v\r=\274*u\205\276\303\217\312=\233\201\021\275x0&\276d\255I=\2621\270=\241\021u\276[\352\326=\235=n=\007\277\007>\020\375<\276\316\004J\276\263\345[\276\2035\035=\331\000\231>\366c\323>#\372\356=\323\002\037\275\037\341\200\274\013P\016=\247;B>\353\3521\276\240\357\272\2750\260k\276\007\007\n:\327uX>\376\213\334\272\305\243\'>S\246\205>\025\352\253\276\236\214\332<\372\355\356\275\006\224$\276\2150k>g-\242<x\037.\276\027\247\220=\017\362\241>#\016[<R\030W>\002\347Q>\267\027<>\221}s>\037\214x>\341\307\213>VK\261\276\264\243\263\275X\307\313\275\343!\356\275\3415~>B0\017>\217e\320\276\326\344w>\0040\344\275\007\272\230\275\037\335\315\275\030\305\213\2750\363\213=S\357}\276\243PV>\035\326\001\275ohH\276\026\357\300\275UB\017>\374\343\313\274\207\375\031\275\346\231\227<R\002\216>\243\377(>\355`\245=;\031\213\275\231J\352\275\267\273\374\275\202\004\242\275\223\346W\276{\240\234\276\304\370\'>;\363\322=4z/\276\246F\224=\336\371\016\273r7\331\275\322\024\240\274\250\3642\276G\274^\276\250p\032>\301\252\306\275\202\256\371=\325\211\315=0\036\377\275Hs\223\276\343\\\201\275\353\037\273\276U\363`\276\272M\364\275%>R\275\'\323\342=\252\002*>\212VA<\274cb\276\030R\017\275\220\215\351=\220bf;\364\274\300\276\242\210\236>\334J\301\276T\311\261=\331\006\211\275\302;\251\275\225\332\031=\207\363\233=\020\210\315\274@^\236;\233?\356\274\006\352\037>\267\350\330<\223\024\n>\330\373f\276\277\267u=mr\t?0\267\236>Oa\212=ZKZ\275\375c\231\276\326\337b=:O\031\276\372&\202>\302\346X=P\251N=]\222\036\275\366p\263\275\350\035\351>\353\2600\276\275@\016>\317\027\254=\264{\006>\004p\300\274\340TU\276N9\010\276\204\355\233\275\010\035\203>\032\204\r\275\301>Z\274L\216\320<\253\344\313=\355\027\311\275\224u\316<\22282=#\231\305=\212L!>eJa=v/\353<\362\214\237;<QL>\340\253\000\276A\356_\276<p\003\276\017_A\2756\'\205>\213\026\212>Y;K>F\220\306\275M\027,\275\370\234\206\276\325\345f\276v\373\003>\260\220\001\276 \232\215\275\274\020\270\275Z\031\034>\027\021\010>\350\224\266=\256x\006>\262\342\213>3\320\212\276l\213\366\2766\006q>\226qr\275\255\375\354\274Y\204\">\365\333$=\357\262\n<\327\224k=Q\217a\274\306\033\020=x\262 >i\374\017=\034\317\250>\376&\303>\350\337\016>D2p\275\200\0306\276$\317)>t\373o>\2705K=<J\245=\236K\000>\2376\036=:\327(>\321\254\217\276\230A\322=\306\310\"\276\205\355\202\2750\310\347\275\226j\222\276Ti\232=y\205t\275p\234s\276\302\246@>\220\203\312\276\364\206\261\275\272YU\275\3034\202=7y\203>\023\033\276<|\010\224>\336~\020\275[\202\307\275\031m\241>\031\236E>\221\370U=\030]\255\274:Q\013\273\231H\031>\201\010\215\275\203\013\225\272\027\202\364\274\001b\266\274\032+\014\276\366]\375=D\326E\276\037<m=/\233\244=?\234\244>Z\201\016>\017\306;<\340V\006>\261KJ>\253y\221=,|\"\276\021\303\003>{\272\373<~@\026\2751~E\275\224\336k\276\325\214\320\275\322\312\t\274^WU<~\236\271\276\341\367\026>\302jl\276\211\230\363\273\355\254\343\275\260\2266>\344;0>V\202\246=H\236L=s\203l\276\232\r\254>\244B\365\274\222\001\001>!\203\211\275\274;\365<\276\306\n?\016\336\266<\377\355\341\276O\353\270<$,5;i\275\311>\271\314\204\276\256\326O>\333x(\276\357O\233=\010\274\247=\333\266\211\275\2012\363\274\243\207\016>\302C\305=\234\347\333=\373kl=\257S_\275Ek\354\275~im\272\201 \002=T\375M\276\351\217i=\224\035\233\275}}7\276o.\220=B\007k=m\0206=S\202*>\203|E>p\270\224\275\360\321\336=~a#><1(\275\356 ;=\244Pl\276\267@\347<!\226\247==\036\333<l\351\273=c\300\315<2\017)\276\335\364\205\275\0072\007>\327o\357>D \303>F\254\016>)K\004\276\246W$\275\024\300O\274v&n\276\205\244\240\276b\013\212=\313\314\307=\t\325\331=\316gu>\014<<\275U\202\203>e\020U\276p\246i=\363\364c\275U@\032=\305\177?\276Z\331\245=\232\016_<~\347\000\277\376\023\327\2759<\234\276\371\367\266\276\306\250\202\276\3776\210\2765\000\210\276N;\267\275gN\210\275\327].<\314\\~\276\013C\200\276\274\324\303=d\374\253=\346\203n<\014\010\273>kg\365\274<\235\\\276\365a\345\2743\262g\276\266\177H>\212d\017<k\240\013\275rQn\275\342\256\022=\3279\332\275\374\275\206=\231N%\276b%\350\275\353@\257\275p\017\200>uQq\275Y\025\013\276\030\303\252> \032\270=\206\274\337\276kz|>V\330\016\276\004!\357=I\370\317\275\320\263z>P\306g>\321K^>d\320\310\274\203\013\244>q\017.=^9\233>,\\\206\276\352c >\271\332\t=-\352?=p\214\217\276\252\265\223=\231\\\005=\030j\360\274)\2609\276\237\365\036\276\345\2175\272\315\235\271\275B\'\203=\270[\347=\032A3\276\2431V\276$I\t\276\255\214\323=\2408\002>Z_\212\2766.(>zCP>7\302\257\275\261p/\276\020\022+>)\030\262>\354\254s>rm3\276\363?>\274}\342\032=\006\353\355\275\2016\021>\202\021\320=\233U\343>XtT\275\320\2127>\t\005\204=!E\272\275eL\242\274J\262\217>,_y>d\275\024\275\237\302\023\276}f\210=9\2208\275\330\323k=\236+\000\276\350\025\210\275\303\374>=\027*?>\304\2663\276\267t\022>$\254\252>\377P\021>\265\252\026>L[2\276.5\314>\332[\225\276\307\251\341>z\231\035=\3649\325=y\325\341\274\335\220v>\262U\032>\021F:>\275^\"\276\213A\353\275\027\245.=\007PP\275\227\241\236>\335K\247=\264\307\340=\237df>k\340\010\276\210sv>\203\236^>%r\240;\036\310\367=]\036I\275Z\2447>\355\201G\276\177\263\327<\302\270\002>\257\365E\276\033+\010<\351\247o=1\210\304\275\270V\313<#\013\266=q\213\224>\356\334\237>\274\0351=*\376s=\316\322n=\342\321\206\275\213\233\202=\212-&\276\025\320-\276\2626Z\276+\304\003>Y2\336<\224c\025\274[ZS>\253\222j\276\223\300%>\334\356\346=\357\361==\237\246\324>\340\036\260\275YR\253\2746\342\202\275\351\256\216\276\206Q\374<,\230\303\275!/\031\276j\223\330\275\227\315r\274d\206\345\276\004S\365\275F|\033>\351\021\364\275\254\004|\274P9q=$:u=\000RE\276\272l\215>!`\304\275\304\322{=r&\350\274\375\237\017\276\024l\t>\367Y\036>\350[r=3\260\322=v\304\311\275\316\341\357=\343\245M=\035\246\211>2\303\017>\345\250?\275\227\207\031\276\347\\\337=\237\3078>\342\255P>b\372\037>\315\2368>&z\021>\320\235\220\2762&\322\275;\326{<Cy\324\275$\360`>G\336\\\276\352\345\230>\240\205\316=\204\332V\276\"\226\257\275\241\374\017\277\240rz>\305\r\255=\264\220\322\275\352\'\250=\2064<\273><n\275\261M?\276M[\t\276\027\321s\275\343z\343\275\037\2444<KJ$\276\322Nm\276\263\021\330=\345\016\340=P\301\345\275\007\346]\276\010\032\342\2758r\275>\375\320\316>\177A\210<c,\253\276\367%C>\224\027\245\275|\240g<;v8>\313\376\256\275*>\370=Z\376I\276\247B`>\264#s=|yF\276\364\302\222\276\326Z\231\275t\030\345\275\002\362\356\275y s>\354\254\245=\033\263+\273\277ZK>\304Y\357=\213\203\306\276\r\351\333<\300@;\276\307\263d=Dv]>\261\022\r>G\224g\276\013\274\241=\357\350\232\274\271\214\320<i\362\356<\301\240E>\2577\237\276W\373\204\275[)\\>@\243Q>4\236\250\276\3237G=\260\177@\276\361M\332=\252\013\213\276<\266\032>\313\350\276=\022M\003=\221_\324=\031\252\370=%l\001>\257\323)>X\014\211>Zm\361=b\030\202=\037\271\302=\233\252C\276\265A\010\276\214\030W\276A\005\020\276\277U\033>,ng\276\372\271\017>Nh]=9\371)>.\037\245\275\233v\021=\264\250m>>Z9\276\017\341\202\276>\034\016>\361\232\211;\035~\242=\277C\206\275`\323\001\276\302Y7=\304\350\224\276\337\005*\276\020G\236=\360]\304=H+\360\275 \214\241>\200\275\237=J4!=yqE\274\226\367}\275\031\235\352=\330D\216>\201p\355\274e\334r>\365\302\310=\373\363\253\275\231\036K\275pP\021\276\014Fz\276\361j2;\367\336\317=\372\n&\276\215w\201>\030\362\333=\363\213\264=\272p\337\276l\rq\274\233.a\276\030\375\222\275P\030\325=i-\316\274qF\256\276\241L\001\276\341\014\033?\302\023\275\275\320#\017>\036\201\226\276\000\017\233\276I\017\207\274#\361\302\274?\367\035<\246\177\221\275,ey=\035\314[>K\351\212\276$\300\203\276\352\361\236>\030\373\001\276r\"\373\275\277\222C\276\205\013\321\274\244\266\037\276\022/\263\276\322\223\025\275\346\365Q=\234/\372=\350Z)>#\001M\275\222\024\305<9\327#>\021\362\253\275\260\267m>\377$\230>y\325\231>\r\362+>\360\205\227\276\230J\226\276\344`2\2742x\314=\212\323\212\275@\242\253>\320\337\204\276\346\373\027\275\003\2363>\202\030b\276h\"\026>\215\330\251>F\"\021=`\324\342=\305\223\302\274:\343d>\016=\n\275\350\3277\276\360\363\037\276\272V;>!\340\r\276W\300m;*\270\374=~\352\231;\364b\212\276\027\225\212\273Do\">\274\020\n\276\357\017\007\276\352A\203\275\234y!>=C\311\2755\347\332\274\213\021\304="
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "f9{\276m\\\216\275\250\226\210\276U\257}=\305\224\244\275\364F\000>\240\034*=\266\t\213\273e7\211=\023\315\371=\037<J>\253\326$\276\326\233/>CT]\276\227\341\362>\220Sn\276\0343\264<\244+\267\276\367\305\307;\226E\350>\234\003\241=\366\017k=\231V9>Y\013\030\276\321\257\343=\027\265\323\274\272\367\251\274\203t\354=\357\230\206\276\252\3742> \300\305=f\323\t;\261\031\210<\034\273V\275f\336\017\275\311%\250=\327\240\333=\237\344D\2767\355 \276\016e\200\276p\202\"=\266\261\246=A\332\263:T\032\357=\377\325\033\274\006\304\305>\276\217\375<\220Z\r<MtJ\276)\'\270=~\233B=q\241\300>.\226D\275?r\341=\367c\260=\334\252\364>>\374\347=\205\370\270\275\237\242\361\275=K\315\274\246\320\017\276\242\375\230=\200\330\232\273o2c>\021V\225=\255\022\025\27560\340=D\3643\276\272;\003>O\031\016\276\272\025\013\276JBS>K\327\000\2762\026\r>\253=\n=0q\215\275\317\360.>\331\320\232=z\021\037>6I\036=l\202R<\335\235c=\026\006\005>d@\010<d;\366<\033\330J>\247n\021=\024\342\365=\336r\361=\273\006\350\275\014\206\326=>\320\242\27627\332>\324\222\353\275\372h\301<I\211\356\2756\304F<\305c\226=\035\2520>\206%\025\274\305\340\026>L\246U>\306\030p\2751h,\275\3106\222>\210\037\311\276=\213\256>D\026\363\275\\\2616>\355\245\250\275\327\274F\276\233\237\266=\034\273!>\321\032\321\275+\335\242\275\373\370\203\276\017\336\270=\374\020\272>A\362H=!\033w\276\343k\362\275!\302\212<\360\215\224<\356{T\276-\311\030>\217<*>-\021\323\275n\306u\276\360\352\247<\354\226\315>\236\242\253\275\322\267\333\276F\317\305\275^W\202<\312q\251>\006\251,\275(eA\276\010\003\206;\016>\024\276L\260\203=\237\024\001=\302\323\">W\375\031>S\327)>\242\334\235=\337\362\303\271k\007\231<r\2067>:\323\317=\001\375\021\2763C\034>\2254c\275\216\252n\276\333s\214\275v\030J>\n\270\244\276\256)\010\275\303\007I>\373\r\n\275\301:\217>\240@\361\276I\337\222\276\205mv>n\211\220\274\324\225-\274\021]z\276\313\007\027>\020\024\033\275\303%\233=\303\026\215\275\n\332\201\276\306\321\247\275\032\310\333=\241\261\t\276K\317s\276\273\031\303>\253M\277<\375\313&\273\211\336\310<\346\260\023>\\5\332=k\325%>\215\303\013\276\344\223E\276\341\030p\274CH\320=\002\362\025=\211\274>\276\331\200\"\276>E\214\276221>\312\332\200>\212\006\223>\254L\362\275\206\n0=N\341\254>\337\371W\276s\247\014\276\363\336\002\276\364\255>>\355\241N\276\365\303b>\271Z\007\276\327\007n\275=?\217>\233{]\275%\241\214\275AD\327\272]\"\202=\247\224\006>\233K0>\2670\247\274\371)\002\276rnU=B\'B\276\004\301\230=:3/\276m\024?>\310\300\214=\344zk=\"\377<>@\210\036\276\024\252Q>\213Vf\275s\002<>e\311\247\276/V\364\275\025\021E>\354\315L>\276<\215\2769\276%>\343\247\241>DB\363\275\363]\301\274\232\257\330=\021~1\276#1.\274W\340\227\275\360\324\200:x\371\2259\340^\204>\262l\256=\215\3659>\370@\303\275\265D5>q\'\026>\202\023.=\263!\254\275:\277M\276\276 \\\276P\355\233=\\\3011>L\2016\276\330\342\362=\256\030\223=\375G\330=\t\t\027\275\240\276\365=\234\302f>\272G\255\274+\315\r\275x\256\025\275\215\245\037\275\353PD\275\035\222\302\276\276g\216\276\2721\210=\376\3158\275Gf^\275l\312\250>\311m\037>B\344\330=R\367m\275\214R\303<Ym\344\275\321\360\030\275\241M\203\274\006\024N\276\355\014Y=\036\275\334=i\350`>P\330\255>\210\377\215;\005\250\033>\275{\276\275-\\\220>N]\030?\315\350\263=\300\353\360\275/_W\276OIF\275\010\340\314;\242h\251=K\320I\275\264%]\276\204c*>\330\365\022\276@\373Z\276\2374\224\276dO\271\274(\244\327\275\333-\336=d,\201\276\2302\255\276\022\344\242\276\203!9>\2279\234\274^\027\313\275\244\343\016\276\007\201A\276\317\271\270>\334\347\036\276\214\323\220\275?\177\343\275\\,y\276U\2374\276\271\250d\276\327\214\332=\376\272C<\237\355K\276\000*\220=\304HN>\260\263\204>\3518;\276^\324O\274\"\2514\275\217$[=\362\010Y>\004r\203>\030*\356\274\246\210\206\276\r\244\377\275\001\232\202>(\264\003\273\235\356\330>\324\274l\276M\351\003\276m\354?\276E\314\002\274\312\301\"\276xe\206\276\271\313\213>42\264<\331\274\010>\315\0026<\222\'\274<gh2\276\263\024$>\010rd<f\332\340\275&#\'>\021l\303=\255\334v\275\262\331\026<\002\263\035>\211_\037\276\320\266O\276\216\205\221\276`\264\003\276^~\325=M\357O\275R|h\276\221\231\026>\316\270<\276\357\313\034\276\016Rb>\221\344\340\273@s\202\276\333\222\342\275\316g\225\276\310\255e>\207W\231\275\240\312\320\274^\201\202>sP\345<\243\336\354=\333E\001\277\213\352\n\276Z\010\341\275\241Q\225=\266\333_>Y1m>\014/\">\212o\037;\251\352\306=w\366\013>{6\254=\010$q\275\323\025 \275`r\313\275\005b\017\2769m\250=Q\321\216\276+\035k\276\270yB\275%\330\222\275\217aw\276\246<\234\2761&h\276\\\243\036\276[\367\273=\220\202\313\275)\257\025\2763\016z>3\220V\276\024\001Y>\362\344+=\212\352@>r\340\026>|W\354>\336g\237\275\240\030I>\350\013\357=\374\031m\275\037UJ=\271\365?>\334\177\213\275\364\"\342<\365>\364=\376\032\240\275?\007t\275\254\240\313\275\265\305\243=K|K\276\303J\214=\2122}>\311L\310\276\nfo\276\r$\226\275\014\201\305<\201\270\255=\022H\273\276\010_\200>\266\210\326=\035\3019=\033W\352\275\3617\222>W\330\007\276\217cv=\252\370\202>r\2132<\364|\'\275g\3400\276\342{<\276\215\202G>\003;\245<^\215\023\276u \016\276W\331/>^T\010>\003M\033>\345\227>\276\234\265]>|\027\210>\273\205\371\274\205\322G;8\347[\276oQ\245>\247\343!>\242\377\364\276\024\236\002\276\275\363R\276\036\002\353=\354\274\006>I\330\037\276\302\255\260>\236/\030\276\264\252\220=\351\330\014>NU\363\2748\375\347\275\204\330*>\274\302\307\276\246.\221\275\'\300\010>\3661\332;\215\243\351\276\364@~=F\003\002\276\305J\024\275\367\n(>\323\240\320<\363\017J<-\355\226>\362\035,\276\203y=\276\357\374\022\276\214\360\206=\355\200\006>\330\300s\275\341)1\276_\247H=1\341\346=\327-\010=G,\007\276j\035 >\331\226\205\275\313^A\276G\027\307\2763}\026>[\261\002=h\213<\276\271\341\t=\2179\364<\2633\251\274\334g\205\276\362[+\275\025\311\345=y5\354=\256\267\'>\3123\242;GW\320=QG\257\275\350F\233=\336o\250=\342\257\215=\020\233\304\273(c.>P!\360\273\375(,>T\360\360=\277\201\177<\255\020\263=\315\304X>\350z\306\273)L\324=\257\325J\275\374\353b>\303\210j\276\026 E>\260-p>\020\033\246\274\036\221\033>m\036\207\275\266_\370\275I\366\265>-|\350\275\377\0352\2766O\303\2761\200\004>\317\334\336\275\320z\201\276\000\3375>\225\302\252\275\344\250\n\276v\007\326\276q,\013\276\363N\004>\204\261>\276\362\226\332=\237V\243\276M\302\200\276}\'2\276%\273\245=\300(\232=\324\353Q=_\266S\275T\362\374\275p\377x>\305Z\036\276*\257\250=\317>\364\274 \206`\276u%\303\276\352=\344\275\004\026&=\366\205i\276\033\346v>\312\003\321=~\264\025\276\3106+>=\271\204=Wk0= @\226\275(\241\302=\3161\270\274>\275\261\273%/\215=\275r\234>0n\354\275/\2326<zxf=\252\034\315\275~b\256\275\232\343e>\324\021e>\213\273\376=\006+H\276\347\235\037\274P\320\216\276\2143\312\275\322\365\225=\303\277X\276\353\036\317\275Sg\257\27596\031>\340\256\022\277\363\247%\276t\360\353<\206\263!\276\341\026v=\2062@\276\352\300Y\275\021\006\020\276\300\300!=[\330\367>\273\227\265=\257\337\214\275\177\010\246\276\317\002\220=F\210\346\275/.B\276\371\026\356\275x\317\222\275\231\024\255\275V+\237=\326j\231=\021>0\271\334\312*\275\006\021\260\274\354\350B\276\376\272b<\360\235\206\275\272\257\277=X{V=\240\361\033>gv;>\247\224\t\2762^\243\276T\350\262<k$Q>\337B3\276\262V\362>\365uK\276\221]@\274\366\250\224<\256\336\217\275\311\031\204\276\003\316\\\276\022q\316=\261\341\226\274\025\304O\275G\250\021\276\206y\024\275\207w\017>\263\226Y\275$\275\237>\023\273\365=\334\207D\274\303\001\206=\035\013\267\274\366\341\371>\227\343)>\331\210o\276\243\000a\276\231E\352\273S\n\315\275\030a\276=\007,\024\275\006\032}\275iLd;\351\037@\275@i\306=\302\311[>\032fO>/ \303\275{r;>\000\371\260<\255l\345=\222\227\314>\213)\277=\362\375\305\275B\t\333\275@\247\326\275\021k\343=\360\273\312\274l\305:=\005\366\256>Q&\205>M\002\265>\241\206f\275^b\032>-\373P=\223e\023?\003N\327\275\344\342\257\275zv(=]\241\263\276\300S\302\274\374\342\250=\242I~\2762\316\260\275\235\273\317\275\323\350i>A\311N\276\021hN\276\214&X\275\205\014\356\273\255J!\276\262?\371\275\235\026\276=F\376 >r\246\001\276QX\215>\234\202\230\276\346}a\276\244,\226=:\003\357\275\275\215\206\275v\254\330\275j.\225=\267Z\377\275\301\230W\276\313\350\r\276\245X\260\276|\242$\274\254\231m>\327\204\036\275\236\314w>|\277\263<c\030$\276\211\177\255=\375\351\023\275\021\366\321\275k_*=S`\317\274\030\350\206\276\231&\237<\213:@=\235+\245=d\263&\276\027^\231=ZG\331\275_\327\026>\247\022\027\276\017I\030\276\370\363\312>\334Y\'\276\270\013\214\276\261\202\252<\'\202\"<\271\010\340=\t\366B>\001\0038:\0355 >\317\'n\276\342\036\266=\"ry\276\256*k\276\r\334O>\033\033q>SF\371=/\374\350\275\216\361s=\251\275\027\276\032\207\005\2761\223C\275\331T\025\276}/}>L\222\032\275\322\3204>\252;\202>|\312\222\275z\251\260\275(\325\003\276D\360\"\276Z\260h\275\240|\201>\354\221\026\275\244\261\226=|\005\331\276\024]\204\274\014\220y=\017)`>z\200\364\275\346\201[>\311$m=\301\306*\276\030\233\004\276\314\312!=0\201\202=\231\230X\276\001v\t\276KB\002\276\006\226m>\324\205}\275\257\342\013<\332\276K>\267l\026\276\271\r\207>\001VC=\344\230\346>$\360\203\276\205\312\255>0\313d>\256\270\367\275*J*\276\255\276\352\275\307hc\276\226j\212<\307\361/>\031#Z\276\245\000\223>\031\322\372=Vu\326\276\3448F=]\222I>_\023z\275w\005\314>0\003\224=\365u\033>\206f\254=-\265\226;A\305\000>\352J\260=\314\222\032>\320++=\242\323\004>\010\361\025\275\255%\337;\341\033\204\275\311b\026=\321\377\234>RW\221\275\225!\205\275Y\216\260>\351\014\346\275\224i{\276\300\265\302\274\356g\205\276-Bl\273\273d\030\275T$[=\3749\333=\035\372\321<a\014\214\275\344\r\023\275caO\276\024={=,\201)\276\340>\362;\364\016\372\275\\\202\317\275\376\256\241>\237E\347\272.\031\204\276\240\260\232=O|\327>\364^k\275]\303p\275\357\003\263=1/\221\275^J\247\2766$6\275\274[p>2V:>\223\024\364\276\213&U\276\031\005P\276;)G>I\261#\276\2231\034\276\241\321\006\276\251\331I\276\251LQ>\356\270>=\t\345#>B{\037\2732\250N\276:\331\274>\306Sn\276\277\377y=M7\236\275Y\344\235\275p}\257=\371t\021={\017\n=\214\346\006\276+\226\303>\331\016\r\276\235\2718>\262k\274>\034\263\221\274&\340y<\261\326@\276eM\t\276G\023\347\273O\370t;\202\366`=m(\224\276\304\354\316\274\004n\210>\310\3050>\230\270\352\275d\034\354<&%\000>i\2259\276\376B\247\273\'We\276\357\214\021<2\250\376=\356\351B>\356oV\276k\305h\275\017\343:\275\314j\017>\336\t\212=\301-\360\275\325{*>\264\324\214>\200sB\275\315\236\240>i6\203\276\r1\036\276\311\227\201\275K\t\005\276\201\264W>\324e\013>\310\3414\276_Z(\275\222M\327<\332\277\326=\030\253,\276\360\253\340=\262\260\353=\347{\215=\022\225\027\276hI\333\275\327a=\276\271\302>>0k\225<IT\223:\340\241C\276\2765\237\276B\273\027>\232c0=\347\261v\276\222q\224>.,\014\275\263[\361=P\\W>b~\247=\377I?>2\261\274\275\323\362<=ck\234\275\244\376\035\276!\340\031\276\0166.\276)\242\267\276u\312\277=7zj\275\207\346\276\274\316H\236>\251O\037>\320\341\251\275\321F\246=\007\000\265\275\203\254v\276\005N\210\274\335M\345\274oy\311\276\202\304\355=\265\226\252=]\346\030\274\374\316\375=T\265\322:\201\205p\276\020\307K\276,\212\220\276(Q\223\275U\370\236=\303Y\241=6\257\201=\325\221\222\275O\261\311\275\364\016\000>C;\255<6R@\276\213|\010\276E+\256<^\362#>\257\234^>p\236\206>\202_\036=.\223\207\276D\023m=\253\356Q\276\027\t\257\276\337u\250=\n08\276H\311l>[\211\336=>\274\005>\374\2315<\354\030G\276H\215)>\010&\355\274\177\033S\276l;h\276f@\214>U\010e>\236\274\273=^\203\234>\200\031\314>\264\335:>\333(\313=\275\243\n\276\365B\274>\216rg<N\313\005>d\212e\2753.\203>\023\253\342<\267jE>U\037\240<\335m\240\273u\330)>\262^\002\276\231K\340=\240\314>\276\n\237h=\322\263\274;\222\016x=H\013\354\273e~N\276d\271\205=\346V\272=\220\033#>e6\314<h \253\275\202\3101\276\254H\217\276\035\363\270>\342\366\010>\23068\275\245\345\201\274$\'\233\274\220\220<\276\334\361Q>-T\023>\263\320\367\275a_\360=\215\302a\275\004\262\254\276c4\277;\345\323\201>\020\352\312\274\250J\327\2755\232\312>\242\345`\276\256\213}>\347\270\254<\223\322C>\202U\223\276\223\204\206\274\nT\362>\024\230\264\275\215\353\r>\332H\020\276r\346\211\275\370\362:\276H\335\000\276\303\335\227\276q;\242\275\210\361\025\276\3402?={[\211>\261\3451=\275\321\000\276\240\310\020\276\200\024B\276j\245\277\276\271ed\276j\213\200=\263U\306>\'\037\226\274\261\007\340\275\236\030o\276\363\373\223<\252\010\221=\377\302\302\275?\010\226>^v\244\275\261\241Z\275\017\'\245\276\201\224\215\276w\"\241\275\267\276\352\272;\370\314=\343i\302<PB\t\276d \232\276\330\002/>0 \270\275 \335D\275n\255 \276\374\213&\275\263\035C>Sdh=K\241f\275\244I\332=\262d\202\275\243n\241>R\n\023>\350\234\022\275F4\313\275\004h4\276C\257\262\275\265m5\275U\"\313\276\216SB>\330\277\322=\227\205\336=\220!\223>1\375\233\276\343#\023\276\330n/>\354g\010>\274\316\251\276\323\002\220\276B\375\222\274\256\313\002\276=\022\254\276\356?\326;\330\304\244=\206h~>\033a\220\276\271o\335=W\272-\275\366\346\245\274g\257\372=\357bX\276\276\361^\275\366/\310=\350\014.>\226\250{\275\343\372\205<\305\367\002\276\370\237\255\2763\320\027\276\224Y\333=\345\237\242\273:eF>\223zY\276W\305\211<\030\240\305=\332g\313>\"\023\026>\235\355%\276N>\246=\240A\364= ?\000>\025\234\027>B\327\324=4q\002\276L\264a=-\333^\275\337\305\274\276\237F\204>\377\345X\2751EZ\274~$\313\275\376\020\216=\366\025\307>\356\241\004=j\3030\274>)U>Eg\004\275\252\367\274;\013G?\277\312d\303\275\201e%>9\334\253=j$\237>\"\021\352\275\231w\005=a\235\371\275]Q%\273>\337+>\343\243\004\275\362\342d\276[\346\323\275\200\016H\276\311\025E=\347\202]\275\004`\354\274\327V\330=\302\036\031\275\367H\022>\330\004\327>g\001l\276\"P!>m/\306=rC\314\275\327\325\261\276\366k\302>\350#+>\024\342\347\275_H\017\275\246\n\240\275M!\201\275\022\2422\276_K:>\3442\260\276~\030*>eCS\276l\346\027=j\257U=\201\003\231\276\250\343\302<d\246\3579\026\"\246\275{\301\326\2754r\037>\253,\270=\306\255\345\273\261\030r\276\200\227\270=Z\024\325\276\267\010:>\306 z\275\252\204\237>\326\224X>\237Lp\275PYZ\275X@\230>S\365\354=\t\r\334=\361\227N\275\242$\027\276\250\317\356\275+pZ>\301\320J>\005\347\201\275\243\332\244>/x\323\274\347\370\\\276p\357\265<\033\240\332=D\356\n>\373\302\227<}\n\204\276=\n\205>1\217\034\276\n;\205\275\342\247\201>jx\345\276\312M\336=j\037\n\276\217\305\270\276\336\316\213\2766\237\007\277eR7>2\243b=\007L\215\275\03513\275\236\340\224=\037\361\377\275i\362\244\275\312-\331\275:P\317=\217\253\236\276\025\003\234\275W\017\037>MQ\256\276\0100\377:+\237<<\211\376\266=\342\247e\276\226+#\275\263\234A\276N\322\375\275\031]&\276\213(^\276.V^>~?\317=\304g\177=@\317\305\275VR8\276@f\214>\221q\214\276\312S5=~\222\313\275\203\332\357=-\\\032;M\354\007>\r\n\207\275!\270\n=\330\201z=\360\364Z=\352\330#\276\007A2>\030\241\274\2755Fr\276\026\336\366=7\324t=\027\253\350=\372$\354\2755\265>\275\242\033\354=\004\235g\276\333\271\036\276\326\201\307<\"^K>\t\221\027>\313Tb\276?(U>\206\321h>\3170\230=\"\344\016\276\211\221\264>\323\205\027>\365\037\326>@[\206\275O\252\374<\316\336?\276\205\230\031\276\303$\370<\334\312\020\275\340\277\303\276*\222\000\276\317\376j>\215\027\262=\232\240\270\275\207\314o\273\t0=\275\366@\230\275\233\035@\275\343\\\322=\316\207\267=\353\246G\276*B\315=e\336?>\204\350K\275\207\353\244\276\310\256u>\242\374U\276$s/\276S\376Z<\337\257\264\276\355\375\356\275\030\305\275\275E\236\334=\036\224\335=4d\372=\332\256\321<\347\000\250>d\010\016\2750\365\261\275\317\037$>\031Or=\203V\014\276bo\236>\351{,\276H\352\315<\243\315\304\274\235|\222=Z\325\232=\264Th=b\327I=\345<\n=1^\206>\027\006\201\275\227\324\362\275\36429>9\001\000>\204\004\366\275\360C\016>\214\323\226\274\006Gv>cN\377=\250fZ\276\213\216\t<\243\004\315\275\222\362\314\276\214\241p\2752\024\030\274\021\220\360\275\211p\267>\033\033\265\275\343\337\036\274\240\rU>4\035f>\243I\022>\315\004;\2769\234\262>e\205Y>rl&>\336\320\222>\353\236\277=\330\003\204\275Y\211\215<\212,\005\276:\206T\275\035h:\274\026Od\276\035M\210\276\266\223r\276\026T\377=\264i\"\276\\\314k=\301\366\340\274\235\006%\276?+\021\276\366\177\026\275\261\257\263\273\271(\020\276\342\302\034>eq\202>\300\220\234\274\275\325\210>\322(\245>\267\307}>\264\270\017>\001\274h=\311\221\214<s\226\314=n|\212\276\030\370y\275\272\356\221\276q)\\\276\201}`\275F\013\277=L\033\010\275\2029\247\275\026vG=\016\2413\276^\327\211\275\375\244\034\276\221\372\302<\270\200\210>D/K>\021\314\271\275\227\034\224\276f\007\266\276\226\374?>\'\241\255\275\033\t\370=\335O\316\275\275\355\001\2764\016\317<\231\322\346\274\271\210(>t\031\214>\376\267O\276\r2\"\276\316\207\356\276g\240#>I\236\201=\352\256\024>\320\304\017>\265f\340\274\005S\210\276*\036U>K\251\375\275|\234\267\275Q\3374\274\352\236\202=\275\364.\275\364c\376=\002\006\223\274/\001\024\276O\027\352\275\2463\000>pX\374<\357\266\212\275C\031@<v7\272\275\271>^\272\231\363\234=\206\017/\276m\244\324\275.\340\355\275:\001\357=Cj&\276\362\321P\276Pp\372=\266>\313<2?\357=@\177)\276<\252\300=\312+\227>b\350K\274\216\211\211>\364\340\346\275k\337\303<q\n\r=\310\244\260\276\263tl=\022\216k>f\243\001=\253\320N>\220\307 \276\232\246e=u\344N>=\251\014\275\345X\235\275Q!\266:19\270\275\262\177\202>\301\236\036<\010\301\263\276\261b\224>\347\034\227\275\026m->\202}\215\276\277\376\245>:^\243\2767\333}\273e&\364\274\277U\266\273\357\251\320\274\022\264E>\370\257\374=\230q\354=*\034\254\275\216\037 \275IR\206=%&h>Z\376\034\276]\352$>\344;\023\276\210\247t>B6\302\274U[\306>\342P\344=\021\001\204=\340\035Q=\223\216\262\274\365\317\216\276\0002\240=P8\242=\310\353\217>\256\346\273\275Uh\014>\234Vt\276(\363M>\221h\253=\364\333\222\273:[\240<qx\000?\346\246+\276(?\013>>\202\236\274iX\257\275[\024\033\276\327\343\206\275v\226\256>R\013\214>4N\230\276\264,\357\275>VJ\276\264\025\207\275\214\365\260>z\376s=\006\312\210\275\367\307\337\273J\251\034\274j\354\262=\027\361d>\374(\020>?\340\356;\200w&>\017\273\024\276%6G\275f\316\017\276\335\262\260\274\264\2253\276\252{\247\274%\311\210\275\000<N=\316A\333>\344=\251<\255\335\252\276\221\221T\274\352\264\022\276\303J4\274\215\271u=\313i_>\302\333A\276\314\370\245>\025\353\023>b8<>v\316\233>S(\325\274J\025a\274\021@\277>\236\267\010\276\335\324E\276\201\027\332\275\200\275e\276{\236a\276\245\370/\276j\252\325\275\266\327\037\276\353\322\243>m\260\032\276\023a\016=K18>\020R\206=#\nG;\243Y@\276uf\214=\253&\270\275\300\0334>AN\260\273\256I\261\274\304(~=\204\216e\276a\\\330\275U<\312=\207y\360=\277\273\224\276\243\262q=\220\306\032>\230\026\240\276\206\"3>S\213\274>1M\364<\013\251I>\221\316\255\275z\335\304=\211\024\217\276\037\274\013\275\363\267\260=4\033\224>R+\210>\365\255k>y\017\202\2744\n\220>b:\230=\312\213\344\273\023n\235\276\261@S=os-<$xT\275\352\013\227>\256\304\346<&W<>\324g\202\275R\226\241\274\200]\320\276\005\330\347:\346Y*\276\t\007z>\344\366\207>O\3425>\206\013\345=)\207\007>\020\347\345\274s\333\270>\006(:\275\256\200v=\275/\321\275\021\270[\276[\236\226\275\207\2111\275\231\032\271=\234\377\014>*\335\205<)&s;\007\256\374\275P\313\221\276\345r2>\340~\362\275\301\013\030=w\2407\2764\223\204=v\346s\276\234N\325\274T%Q>m&\225=\330$\336=\034\247b\275\375x\275=<\367\026\276\253\206\272=\301\201!>2\013\"\275f\351\277\276\225\357\306=\n\372\006\2758}\220\275\211\016>\275b\016h>\374a\370\276\260~j\276\207\216\270\275\201-\230>Sm\206\276\210*\220\275m\2245\276f\363\263=\222\362d\276\321\223\017=\034P\004\276gz\255\274\215\226,\276\036\0249\275\214\003\262\276|\367x\276\2233\355\275\034Z\253>\025xm>@\346\002>\320\014\321\272\226\200\224\2750\003C\276\2611-\2768\202\r\274M\314\013>\351\237\035\275\033\322\207=\256* \276\226\366\313=J.\311>7;\231\272\002k\273<\254\036\222>\356O&>\010tX\274\2703\323\275\354\026\365\275\235H\n\275\255\343\365=\251\305\257=\322x\337\275E\376\202\276$w\202>\026\'\020;\325\306\270;\370g\313\2750\222\005\276\351\241X\276\253V\034>\030\207\257>\342\203\341=Db\r>\253\220\030\276\305\324\021\276F*\231\275]\033`\276v\250-\276\353\315`>;\372\275=\366\347\274\275\016\226,<D\235\225\275\036q\237\276\022\235\274\276d\300\025\274\324\004\205\275BDI\274\261Lv;\\\017@>4Nh\276\215\214p\276\320F\212\275\246kI>?\001I\276\022`I>\243\304\303>\237\002\224>_l&\276\354Ff>\217\276u=\205%\234\276a\275\315\274\266`\024\2761+-\276\034\003\370=6\274\016\276! E\276\235\273\345\274s:.\276\324\273O\274\351\2479>\373_q\276\322\022\225>0\016\243>\331M^\273\332\r\327<e\330\336\275\351\213a\276\362\220|>\033\366\245\275H\010=<\035\313J=\030\222\023<%R=\274\311\016\010\276\013\365\354\275~\2037>V\345\372=o\247+>c\324\265;M\345\003\276\003\002\316>\353\234>\276)\373\234\275ts\254\275?\334\226>\344\355+\276\267\022\027\276A<\260>\016-!\276o5D\276}\360\000\274$\323\220>Y2\002\276(p\372=\240\nW=/\317~>\025\326\224<^\014\330=\337\311\222=\312?\004\276\251\343\224=\321!\224>PW\267>\321\373\343\275\322r\223\276\347/\200\276\001N$=\303\210,>5\256\202>\301T\205>5\244\267\275\305\000g<\240\t\003=@\306\007<\231\266Q\275\"\037\004>\214kB\276\316#\320=P\252#>\242y\220=\231Q\213\276\344\366\016<\037\300z>\244\260\344<JY\207=\223F4\276^\226c=\014\031j\275l\333\357\275u\316X\2756\346\"\276\206T(\276#\216\303<\004\270\r>\267\367Z\276]\337D>\212\301\331=O\213\307>`\034\034\276\207\253%\275\\\321\264\276\3445V=\314\320\374\275\257\032\244;\331\252\305\275\013\2477\276z\263.\276\356\302\227=\246|G>b2\026\276\350\365\245>;-\214\275\354\240\030\276\0009|\276\3660C\276R\367\362>{$q\275\306\225m\275\247\300+\276m\031\321\275\233\266J>\244\217\"\2765\344\264\2767\263\270=\013\371<\276=\361\254\276/\013\223=\3374<\276\224\324\222>S\242\242\274^E^\276D\221\267<-\202\323=t\3015>\002\313\r>v6\223=\320e\206>\276\2318>\303\222\346\276\\\317\351=:BF>\345A\341\2753\320+=b\237R\276P\211o=b\025\t=\030\377\332\275\256\257\022\277\013\273\035\276\307v);\237\360%>KZ/\275\342\031\266=\254\364_<\232\362\3579Y\235\271\275\372d\030\2767\303%\275|v\2349U\252\355\276\267\303\300=\037f1=\250\373\274=\301\205u\274\235\376\035>\032\347\026>\331\255\016\276\237\217\251=\021\352\230<\274\261\001\275\241r\271\275Y\376\303\276\3511\013=\361fm\275x\257\343=\242YD\276\235J{>\225\341\004>\216\376s>w\3723\276\315\265\224>|.\374\274\306\334\240=?M]\276\262\206\272\275\031\322\232=\361\234X=\215\2311\273\317y\366\276\252\247\312\275\260\356N\275`p\364=g\264\243\276\"\034e\2756\030|\276\370\025\205\2766\347\371>\2626\234=\026\025\026\2767r\374<u8&\276\217\377c>\315N\001>\314\354\374=@A\202>\272\277\020<8Vh\276\232P\213<C\356Y<L\245J=\034\t\205\275\301\\\030\275\374\267\026>\205\003\202\274\314\232\326<\305\025\335\275\231|\247>\373\365\241=|\332)=\310j\n\275*\'\261>\255\234==@\200\234\275\033\331\324</\346\376\275wT\213=\206x\255\275B\355\317<\323\rE;|w*\276\006\221R\276S\221\022\276\211iZ\275\255\330\003\275q\2370\276\021a\014\276\035\215?=\307\243\210\275\331Ck>\002\366O\276\217\031\000=\270\322e>\273#\273>\2301\210>rO\372=\033=^>\261\301C\276\361\305\225>%\'\006\276\262\255@\274q4Y>\276c\335\275?FW\276\367ZY\276\271\240x=\371\261\326;3\014)<\031\230\265\273\240\377h>\2355\013\276\266\t\370=\036\344{\276\231\376X\276\\\222\207>\277\013\233\275\256\2300\276\343u\330\275fl\334>_\031\255<\245\372r>\235\324L\276O|\276=\313RG\276\014\347?\275\032u+=\000\255|\276Il\260=\376.\221<Vj\001>\250\030\234>\234\371\256= \307\212\275\200X\027=\325\346\016\275\310\364;\276ya\002\276uy\360\275\0256e\276\275-\322>{\201;\274"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\267\342\002=\201\"\232=\226\017\010\274\202\270\214\276\026S\341=\311\'\246>\336K\373\275\2151\206>\262\220p>,\277\236\275\271!\222;y\244\303<\314`#\276\357\200x\275\307\256\016=\2369V>\336\220?\276\036\025\225<|5\210\275\3435n=\204D\277\276p\336\">Mw\027=F\023\346\275\274\320\210\276K\363\004>\314\336\344\274\302g\274<|\270#=\237t\342\275c\212!=\r\255\013\276\357mP\276}\215M<\262\305!=\n\004A=\r\274\346=A&\267\275R\223\211\276\301\233\344<\265@R\276\007X\363=\220\207\022\275\244\222r=U\342\004\276\351\2444=\217\353 >\361r\231\276kB\361\2757\2117\275R3H>2\014q>q\r\222\275_j\213\2751q\t>\260\265\207>\000w\211>J\275\203>\202\376\245=\217\222C>\301\326\003\276\370\365G=\327/W\276\345V\224\275\361\252F\274,\372\214<6\247e>\005\205\201<\245\230;>\316ve\276^\354\205\273\231\212\335\275\373\344\203\274V\302\373=\275\270#>\206\374-\276\246\370\205\276+\202\200\276\360\267\007\276:\254\010>\010\342\367\274Sr\003\276>\244\037\274\334g\000=\023\300\243\2747\0364\276k\315{\276\271\312\357=\252-L\276\037\222\313\275\030\307t>\307\301\267=\206\300\217\275\206I\332\275\260Lw\274\036\010S=\317\202M\275\\\225\017>qS\263=U\247K>\234\335+\276\201\210\363=\212\322\026>3\211\235\275\215e7=\270\236D>\227\333\336\275\244\245\207<\276\263=\275\211\210\207\276l\035>>\2057\247\2753nF\276\351R\207>G\014\236\275\350\325z\276\230e\241<BC\005\276\034#\324=\014\237\\>c:\237\2761U]>\313\327Y=\201\352\340>\235\250\225>\352T\t\275g}5>\246{\016>\010\3401\276\222\3438>i\226#>NN\224\275\366\177\024\275\311\316\242\276\006\314\340>\007\\\305>(lN=\321L\004>\n\306\230\275\3712\233\274@\0233>o\306\t>\360\251\t\275:\036\313\274\213\323\206\274\'\243\027\276\254\034\300=\224\242\262\274+\'\265>d h>/tQ>\302\306\033>\001\225i\275\002\220\251>\304Zb>\3368\317\274\376\241\247>0\253j\275\305\317\312=O\353\335=\342\026\316=\336i\331=\\\322d\276m\332.\276\230\323Q\276\t\013\344\274~\303{\276\037\331\335\275J\316n>S\226\014=h\026\270=\257\241\200\276\361c?>\2142\202\276q\037P\276\260#\\>%\331F\275\245\330C\276\3007}\275\031\030?\276\344\347\203>\260w\300\275 \235r<u\302\324\276\300\211&>\244\370\023>\372J0>\274\rP>\344\223\212=\232\035`>\251\0068\275\r\265N=\311y#\276\346\372\352\274V\370\327>\301\246.\275\376\210$?!\004J\276\254\301h\275\001G\004>[w\253=V\372/\274_\036\322\275\304\266\024\276\316\263\236<J\001\374\275\247\372\236>\240<:\276\231Z\344\275\244\252\370<\261\3666\276\253\217\033\276\2401\236<\323<7\276`\210G=\216HB<o\361\213<?h\376\275\026?\033\276E>\315\274\177s\032\276\202\"\004>G\374K\276Ym\024\276\000y&>i\203\212\274\234\267>>\247\321\241<\366\213\320\275\354W\">m\324\206\275\261\272g\276\324\007\222=,y\277\275\223\206/=\233\263\r\275\262`\023>\"\210\370\276\201\002\253<\353\332\356\275Qu\002>b\306\355\275\356<=>\237\272Y>\237\207\006\276\203z2>\231T\322;e\000\312>\242\224\263=\324\205\357=b:8\276\004\263\301\275yS1\272\261\000\003>gG\372=\374U\316=D\201\031\276\034\306d>\233d\237;\361TR=J^\226>\315!\271<[\020\325=\277\350@>w\357S>\234T\017\276\021\211\013>\030\346\211\275D\220\307>*BH\276\342\327Y={\253\376=;B\254>\005p\233\276\327]\037\275\014\010\267\275\000\3332\276\035\227\204\275\220\277D=\023\2107\276\002\221\031>\375\356\256=E\257\235=,]N\276\0079\230=q\232\250\274\030D\017>j4\212> \3609\276\2002\332<\240\353e>\314y\233\274\003\236\221\275*\232\013>\334\010\242=\252]\202=[\256\357\276\216\315@>\221\375\257\274\301N\213\276oH\230=pv\253=\347\235\260\276\010\371;=\220\027\303\275\343\367D>B\222\240>\240\2250>\324\254\232>\353\034\323==>\010>\320\224\316\276\304\245\031\276\317\031\335\275M\311\255\275\217\"\257<d\331\036>e\3638\276\036\313\301\274F\007\276\272h\017\013=6\322\242\276\236z\177\276\214\010\217\276\366\265\233=i\000\375\275\025\315\n\27699z<\r98>\334\007l>G\021\330\275\363\002\221\276\2301W=\300\010\025>\2039h>\035\006X>\256f\222\275\024\355\234\275\361\203\220>\246\372\034\274@v\021\276\273\223!>\214\274\201>\330T\014;dk\t\276[?\304\276\314\031\254\275\261\360&<n%q>\256RG<w9\005\276\270\025)>\275F\030\276R(^\274\037\311\312\275\245\257\034>\016\375\202>\351\213\242\274f\364\362=\267z\235\275A\347F\274\267\204*\276\334\354\271\275\302\245\363=9\327O>\374m\366\275\256i\003\276\340\261\n\276\233\271B\274I\007\241\274\311]\\>F\215\207\276\201#\001<\262\262~>\277\252m>\220ls\2768\363%>\006\340\n\275d\366^=\332\024\307>\224.\220=70\237\275\216\366\216\276\3673\033=o\314U>j\360\200>>\274\024\276u\3779>\374\332W<.\352\025?%\237\306>H\311\334=\310\3275>\265\243\257>\354\001&>3\023\220\275lq\311=6N\027>+j\030\275)\376\252\276\371\026#>m\205J>P\342#>C\343:>\025\276\345=\231W\324\275\347\256s>\314a\017=\270K\317<$\306\006\275\267\333\032>4K\250=\376\301\000\276@\006D>\224\243\356\275?\337\026\276P\004s<\344\003\206=\263\0076<fM;\273\353Y\032> u\303\276\321\230\220>&\321\340\275:\366\241\274\177\245\265\274LF\006>\243\013\370>\267\354\232=Q\330\266=\223\0311\274\374\014\026\275Ql\207\276\343.\267\275\321{1\275\235\354e>V\301\013\275\346U\007>\312s\306=c\270\302\275\272\177\343\275\230}P\276\370N\017>\237\244v\276\261@\302\274\337\316#>FG\332=\275\262\240>|)\343<\301<W\275-\265F>}\225\340=\203m\247>v\242\254=\230\326\240\2751q\033\276\251.\327\275\226\032\257\275\365\207\201=\211K\343<\363\204\333\275d\2719>8V\205\276\360\313\362<\241\200m\276s(\355=\312[\030>\315[X>O\t\261\276\226\375\352=KJ^<;\216\375\274\240\225\026\276\367\361@>\272\262u\276yF\013>\242\264\325\274\305\212\204<I\202\203>\321\377D>\311 s>\3572\232>q\236W\275TD\344\276\rig=$\2613\276\275A\013\276!:\315\275K\375{>\337x/>\277\345F\276`\257<=qy\013=\314\r\301\275\205ok=a\203p\2767*\022>N\326?\276\023\327R\274\336\265=>\262\366\001\276\364\026\344\275\316\377v\275\036\265\275\275\274*\032=f\213\314>|\266\024=\343[d\276e5\214>/\373\264\275}\356,\276\367R\303\276\t<F>\202\327i\276\037\".=\236.\311=\nl\212>k\234\257:N\267`=\265\034\326\274o/\225>\346\021\347=\235\262_<}\001\226>\361\253\032\276\234\300\361\274\033\366\372\274\331\241_>\233\230\260\273D\355\007=\302N\275>\357\230\373\275\217\002j\274\004\022\353\276\363\226\362<]Y\031\275./E\274\373\202\020>\202\023\330<\036\2348>pP\325\275FTg=\005z\213\276u\326r>\372;\257>,~z\275\204\261\232\275$0\013\276\004\222D=C\246\340\274b\310[\276x\325\032>\217g\305\275\262\024\344==-)<\t_\242=\256c2\275\335\367\221\275.\023y;;\020\240\276.\260b>\256(\316\273\3535\304\276\006\210\253\275\350\2512>\342\275\030\276.\371J\274\237X\260\276\272\276?\276|\n\026\275\354T\277\276\21584>\361I@>Ch1>\214\227\231=\224U\213>\003\235\353<\t.:\273]\373\250\276\347f\031\276\335f\315=#R\313\276\001g\023>\200\331\343=^\320l\276\322\364\256=\276EA=\364\356\264\276\322\'$\276\332\377?\276\267\311\246\273\236vI\276\260}\245<\\V\266>\243@\336\275}\263\322<_d\347\276c\234\232=#\221\213<\321\301\256\274\200\204g\276\253\317\315=\313N3>\201(\025>\321\265\006>`\333\372\275\237\221Q\276\377r\336=\375\350\254>\205\255-\276_\2130\276\n\316\r=\364\376\365=!\360I<\025\372a\274\356\265\r=\356\005\330=\004\357\242=\374\033\016\276`sV=d\235\330=\316,\370>\213|\232\275\261\256\335\2751\014\002>\2121\n=\177\374\246;>\024\355=-p\216\275\366\237\336\272\330\347\235\275\022\324\002>\266+\r=\253N\310\274:R\351\275z$\374=\263\347\230=\t(\230\276\301Nu=<{\177=q(y>\375\225\336\274\2733\241\276\002(\"=$}\027>\367@2\276(\301\266\275\361\223\221=\344\010\336\276\026*:>\333\256\305=\2362\250>\325Ba>\035J\262\276\324(\023=\301\307\267<|\326\217>\210\331\304=\217\265\226>\316\371\256=:\030\033>\320A\231=\225R\276\276\335tn<\022\2576\275\252\"\257\276\246-&>\002j\326=\331\374\370\275\n\371\277\272\305\201\004>[\222(\276\344\240@>_6S>{\327J>\310\250Z\276\215G\330\274\224U\002\276\005\002\014>\014\364/\275\362\313\232\276t2V<y\214(>K\214\177\276H\026 \273\t\217\026>\251J\024\276\307\373\234=l#\337\275V+\275\276\341\212]\275)?x>v\214T\276z\212\375\275%\353\030\275\253J\021\275\032%L>F\266\033\276\260\321C>y\037\">r\021\032=\313\222/>\323\030\256\274\025\357\006\275\211\272Y\276nf\322\276\325\241\315\274d\327`=\020\325\020=\234\330\"\274\213\326\r>0K\033>r\230X>Oi0>\352\346\207>\031^\207\276\211\351\305\275\363\224\223\275\341:[</\304\301\275\356\237\245>\3278\014\275\233V\"\276\372\317\253\275\256\331-\276\225\335\223\275\314\337\260>\007\017&<&x\242>\275Ff\276\024\276B\276\305\325\266\274\026\373#>\035\367\262=c\1771=\224Z\0049\341y\201>\007\262\205\275\000\301\212>\361\300\034>\313\353\352\275:\026\361\275\227\333\243\274\356\326\214>\322\231;=\245\017m\276\360\201\240\276\261\253\027\276\014\232\261=\006\246[\276\220\255K>\026%I\276h\371\254\276`\246:\276`\244K>\"\311\261\273F\253%>\276|k>\341jV\276\370\225j\276\214\222\220>N[.=1\3433\276\375\277\233>\262%j=\\\312\317:\2330T>\r\332->k\246c>\233V >\367d\260>Y_\371=\247|\262\2764\315\244\273ZR\262=\343Pf>\3078\232\274\"5\206>\370\216\276>%\242F\275\352sn<\333\373\035\276s\254\201=\216\354\265=-\301!\275s`\351\275\313\031\253>AB\312\275b\226\235\276\222qI\274\035-\242\275\370\237\212\275\262\003\0269\213\005(\275\2527\035\2765K\n=\2263\321\274\331\\\256\2746\t\326\276\304Cz\276\260k\227\276\345\232B<L5\264\274W\242]\274\037|X\275\224W\007>\320p\301\275\217-\033\276\353X\253\276i\257\317>\000=e\274e\020\360\275Z\\\002;\203\345]\276\341\235w>\216\311\031>\363V\n\275Gpo=h\352\365\275\'\013$>\355\\\327=\243$\013>.\346\247=e\343\">\022\304\024=\022pp>?\024\030\275\212\334\337\276s\334\327=\014l\370\275\\\270\207\276\333\220\243>\367\027\013\276b\263\230\276\204\352\227=S\377\357\275\014\224N\275`p\032\275\304\205\262>\262\205\242\274\"e\326=\306\313\273\274B]\221\275\376f\254\274h\261\202>\365\225\302=\016/\327\275\205\341 >\317\244\271\274\014AF\276\031f\302\275&v\005\275>\223\213=\333nJ;\244j\266\275\303\010Y>\375\270\306\276\242\256->\220\002.\276\266\276\274<\255L\327\275\004\000\203>?\260y>}\001\267\276\203O~\276\000\326I=\364\354\341\275\353\245\306\275\241\255\r>\251\340g>JS\221=\210\267\250\275\244\361\203\276.Y\365\275\361\216\220\274\010Q\275\276%q>=^c\321\2751\"\242>]\311\206\276\223q\221>|\250p\2751\342\364=\017\367\031\276\216V\"\275\321\272D><\376s\276\234\274\345=\321\263*\276XQ\t=\332<\316\274!2v>\242\202~\275\261\323x>\370D\202>`\264\326\274$\370\363=\356\325\001<\005Up=\0239\301>Q\206\030:\036\303\265\274\256\036%\271\3372!>\305\253/=\027%\002>cy\025>\214x@\275\334\261F>n\342\305=C\350v>\237\207m\276Wo\'>\030x\010\275:H\353\273\246\207\006\276\306\260\006\276e\201\'\275\321`=\276\377-\200\276\215\260\005\277\004\021v=5:\232\275\206\270\311\276\031~G\275\203\222\001=\247\2426=5MM\275\227\326\022>b\207\312=5n&\276\336\202->\031b\022=\363\344|\276\327i`\2751u]\276\030\2763\275\327\213\211>\317\'\033=\030&H<\253\235\233>\230\225M>\347\342\342=V`\257>e\323\275\275n\217\200=\341\2140\275\013bG=,R\306\274~\371\263=\267\225\'\276\371\022c=\254z\315<?\"\200>b\327g\276\320\240\303=\250\360\216<\223*\230>\356\363\372\275\nCY\276Oh\376\275\t\325(\276\245\253O\276\302G$>\004H\211\275\207^\360\275\177\230p\275\316\350\340=K\275.>\350K\352\274\216\347x\275\331\230\006<\325\013\266\276\204\347\302\275L\023\267<%\276\351\276O&(\275\251\227s\276\003\314}>\312FE>\374\236\371=\371\355`\275jw*\276\355\027\306\275\232NY\276\333\016@>\250\204\234=\033L\212\275\347yF\275\221\313\210\276!\0042=\324\241\325\275h\313b\276\311I\360=\210\325B>;\303K>/~6\276@\014\223\276\3140\017\275\214&\223\276\214y\366<\\z\211>b\261\033=\210\277M<%E\033\276r\255\272>$9\t>/\013\374\275%A\026>\272q\203=\356\2215=E\t\213\276\234\r\014;\226v\323<~\213\361=V\236\227\276\371\237\030>\031\316\301=\'\262(<+Y\357\274\320d\246\276t\034\214>,\211\237=\277\211\226\273Q\026->\206\357\014\2751\254\004>\254\337\016>L\203\372\274\021\311\324\275[$\246>\235y\220\276\315\260\336;\375\346\235=Z\216\251\276W`\216\275U\302\016\277\013yc\276\377\241T\275\233\360\310=3H\033>\273\027\207\276\234^\271\275\033\010\235=d\276V>|i\017\276\321\200\324\273\037\245\315\275\360}E\276\2577\033\275\225gR>RO>\275\351\024\305\274\307\310\271=\225\345[\275\315\177\032\275xD\355\2745\323\220\275\\D\r\275+\370\252\275\243M\242=\307\324\351\274\305\266\323=Fh$\276\022{\321\275i\254,\276|M\210<\031\r+=&\025\021\276x\273\307;4\255\232\2766v\350\274\246^\270=\372\343\357\275\354\360\306>\301\232\006\277X\270U\276\271\"r>\002\360\000\276l`\232\275\033\026\216\276R\253y>\223\000\247\275\006\226+\276(\210{=\227\353\271>L.\214\2764\326\">G4w=\302\013\320>\207\221\220\276\023\315\263\275rK\270\275\310n\247\276\217\326\213=\320\200\355;\270\337\\=cV\273\276]=\340=h\364=\276;\312/\276mB\023=\024\273\272>\336v\325=J\376Y\276[\362Z>BeM>\222P\016\276Qu\360=\342\017\303\275_\301\243>\344\221;\274\365\033\337\275\2463\216\276\351\2036\275\232\210\021\276\321z}\276\267\013p\275\221\250\276=\226kK\275\016pg\276\346\030\253=\201\020\245=\335\222*>PI\301\275\205\246N=\236\311m\276\317\020\327\276\236\"T>/\205G\275\023\262\305<\330\250S\276\337\266\230=\005\221\014>\251\021\004\275>R\360\273=)\306=\247\203\024>\340\252c>*\267\211>\267m\346\275\010\250@\276\035\344)\275\314w\316\276\245VQ\276\353\245C\274\275b\256\275\017B~=\305\3153>P\3363\276\306*\000>X\035w\274\206\344\030=\253;\205\276\004\312\262;\314]\227=6\371\333\274\345\345I\275\334\250(\276\026\253\341=\033\271#=TO\203>T\277\010>@\254\344=W\240\222=\302BI\276\216%\013>\311\241\"\276\033C\213\276\035\374p>\2745\240=\306\342X<\354WC;8+ =\372e\241=D\305+\276\255\325\016\274\252 \242\275\344\"\206>l\361\221\276LA\200=Z\221\353>\244z\233>\276\005\220\273+\312\251\276U\341?\276\217d\314\275\004\240\261\274\225\223;\275Fs\224\274\251\256a\274\360\322\320\275\376\216?=\327\333}\276\371\032)>\221g7=K\374\204\276v+5>k8\244>3&\307=\235Z\232>\315\364&<\273\332T=\306\031\255>u\2419\275n\371\362=^\022}\276\010\036\210\275\221,K>\375b\r>%\211\331=\241H(>[3m=\233wt>\214\265\350\274\352\314\204=~\270o>\201\206\226\276e\272\032\276\223\342\324<0R\032\276\3033\341=\022\310U>\031d\374\276m\357\305\275\237\342/\276\204\014\335>\242\316\357=\2557\207\275\214\034\313\275Hh\211>\2158\033=\310\241&\274zn\\\276\344\311\356\275\\\304\276\275\357\025D>)^\033>\207\321x>WA\226=\373s\324\275\230\224;=\215\030\246\274)`\261=%\342\256>\317e\261\275x\337\020\276k\327\037\274\322\316\206>-\224\362\274 J\\\276k\032\006>\213k9>\206\220\360\275T\275*>x\205\210\276\022|\314<\241LF>\232\347B=\277(\273\276\3779->\016\243\207\275\370sX\276\026@M\276AW\323\275f\346\034\276\357P\207\276\251\353\220\275\250\0014\275\321\271{>\357\022\253=Vt\304=\027\266\326<p9n=N\\\255\275\\\354\351\273\375\316\035\277I\024\256\276\367|\367<tB\371=zA\322=\355\035\315>x+6>=\374h\275\355\343\271\275\270W?\276\270\251\214<\252\033\322\274\272{\353=\332\340\275\2747Jr=\3479]>\226\"h\276\222\342\003\276M\355/>\344UB=\202\200\223>\320\335Y>E\236\313\273\244\306\327=\334@\265:7\'G>r\375r>\3400\342=T\335z\273\370&\353\275\345\251s\276\277\274R>\357\232\247<s\374\237=M_j>\210\337\036\276\372O\027\274\235\376J>b^\362=\263\356\342\275\244\221\335=\215\247T>\313\013\233\274\226U;\275>6\262\273Y\377r>\246\232z\276\241\242%>\\\035\310\275\206\220t=\357A\026\276`\3405=\322ZA>g5>>\262\204\020\276\220\332g\276\350J\323\274\352/\002\274\276X\276\276\016b\022>\236\221\350=\024\206\202\276?\0135>\222#\326\275\357w=>\301\362\241=ih\330<\334;\310>\203\020\343\274\321\326I=.\304\370;2I\271=\007\2468=\372\345\277=\275\217\027\276\275\233\260\275,\336\250=\220\001\343=\262OM>\2148y>\214\337\034\276e\311Q=\320[\310=O3\032\276l\2206\274\205\336\271\276\030\3419>WQT\276f\334\277\275\212v\352>m\035r\275\332\032\251\275\321\310\356=\330&\210\276!\263\362=\235:!\276g\211:>e\306\310\276\305\372\373=\314T)\276\325\206E=\310\235O>v\246\232\274C<\212\2753\350\211>m\205\004\273\027\007\031\276\026\302\000>\250\352\257<\326\207\014>\354G\205>\235=\002>\217$\244\276A&?\275\252\013\315\2769D\007\275H\315g>\227a\324\275f\200D=5\'\232=>\"K\275\257$e>\245\214\340>Fz\340;\377u\036\275\345\0046>*\273\307=1_\032>\322\343\001\275\210\307 >\213\222\243>\243/\006=E\334\231>\263\242\246<\236%\025>\225\372\232\276\212\020\\>\216(\252\275\017\362g>]\262\017\276\'n\236\276>\265;\276L\305\002>\305w$\274\204;u<J\263H>j\020\375=\3742@\275\303\375\027>\'\350\260>!\226\220=\026\032V\276[\330\344\273\211t\235\274\2756\352\275\244\315\313\275\347\264n>\237\260N>\355\"\264\275\321\360)\274\212(^>\277`C\275\250\335\t=\271\255n\276[\217\003=\223\2302\276\327\252Z\276\315WY<Oym\276y\377l\276\014\255\320<\313\262+>\212^\222=&Zr>H\027Y>\274J/=\036\236h\276\214\352d>~6\000\274\257k\r\276\316\221\354\275\353\013\274=\270M?\276\300\037\r\276\263\236\334<\271\216\212=\t\323\205\276B\233d\275\312\224\203>>q\254>Q\264\202\2733\252\373=\213\272p=/\356\206\275+\332\004>\230p\035>\271\207\365\275R\311(;\270;9\276q\243\">\332\365\313\276h\0302\276\332W\217\276\205\374\215<-\355\204\275\022\223]\276\021(-\276H\2104;\030\365V>;L\362\275\260\360\265\276\034\250M\275\275\001P=\020v\010>^\323\276\275]H2\276\373b\322\276\2515\216\275z\223\026>\335\006\377=Y\201\225\274\210}8<\201e\277><\303\022\274c`\267\274\311\255\004>\240V\017>c\332=\2762$\375\274\245w\230<\225\022\255<\302`\201=\346BX\276c\323U;\230[>>\260\277\362\275\353\3772\275QU\367<_\361\004\276%\306\270>\005P9;\336\204\244\276\337\025\312<\276\373\254\275W>5\276\313B\005>\271:}\276&\347\220=#\001\267\276AV!\275\366\230)>,\270O\276\001\347\002=\256\344\360\275\034k\247\276\375W\237=v)T=\356\2718\275\273\266\312\275\005\241\226=\243\273?\2766\200\337>\221\313\307\276\334[\271>\351\305\204>\354\317i\275\325\313\024=f\201V\276\342\273!<\335\377\234=\247\352D=G\027p\275\366\336p\274\210\325\301\275v\026\326\275\3676\244=\037\2667\276\364\344>\276\020-\234\275U:H>\225\340D=\001\277L\275\202\270\023\276\344\020\227\275\376\013\370=\260\272\037=\2058\353\276H$:\275\223\265R>\207\256\004>\344+\002>\034S\322;vU\017\276A\036\">\3212\032\275M\301\025\276`\320[\273\342\310U=0\335B=\r\010\035>z\235\305=\001\310\264>\242\214z=\036-j<)#\334\275\010\016\376\275\321k\035>\374\034\241>\rZ+\276T\200\205=\221\307\244=?\224\"\276a\024\026\276hQV>l\007x\276\266~\270\275\\\337\256=\231\353\365=\246\342\267\275\037\250\213\273S\014\255\275:\227\001\276\373\2634>\223\274\252=\223\213E\276\364\351N= C6\275?\"c\276y?\330\2753M\'\275U\222\251=\342\262\245=\201\374\024>\000\211\026\276\306D\355=\346[[>w\334W=\240x\270=\020\377\204\276\002%\245\276\322Jh\276MfN=\373\222\216\275:\357/=\242\302r=*\305\034>1\307\334\275]_0>\250\202!\276%\273\276\275]\300\210\276Y\330\337\275:\347\362=\202{\010>o\212\203\276\350\025\210\275\220\376\223\276B\353\211>\021\372\032\276O\330\270\276\t-j\276e\274\222<A\364\033\276S5\266=\177\360?=\345M\350<\343\223\177>\\P\017>\253\353\003=\375\343\216<Cp\200\275\276\252K\276\375\3073=\36266\276\022\001\324=\251\255\252\275\262\231W>\364}\032\276\307\330\016\276\262\331->o\024*\276,\313\365\275|\324\220\276\374\024z>*\264\266\276\262\265\r=>f\221\276\324i\244>S\344\026\276\304\244 >\023y\255\275u\321\322>2;\024<\266\225\037=$\310_>\210\311`>z\201\320\2757W\016\276~\346?>\252\226\352\275U\215k\276\307L\216=\364\t#\276\233K\207\275nS\374\275\250G\001\276\257Sx\276\214a\004\276\030e-\276\001\323\032\276\356\026\232\276*\212\216=\236\233%>\017\227\217\276\316e\240\274/?\276<\347\315\266>\202\274Y=C$\017\276\256\225O\276\260\365B\276\352\302G\276\311\032f\275oX\277=#\350\323=\017\242\271\276\362\313\030\275\205I#>\r>4>40X>9u\243=\331h\006\274\326?\350=\215\217\350\275_!\036\276!\375E>4\250\027>\320\325\200<]\023\354=\227\003\212>\006Y\371=\n~\022\2751qZ\275\340\205+>\330\244I\276\0022D\276\237X\026\276\343\253\214>\177\010o>Z\307%=\367rm<\345L;\276,\275\370\275Ce>\276\331\251\000>C>\235\276GB\256\275\234.\266\274\360\000\212\275\361\277\346\274\355\235\272\276\202\300\202=\350\264\203<:vY=\022\241F\275\303\016\304\275\246\205%\276,\214o\276\274\367\370<\300\311\'\276\3547\232\275\224Q\253=EUE=\00600\276u\0049>\036uz\276>\2723=\216\022A\275\\\347n\276q\325>\276\024\007\302\273\272\221\210=a]\265=\034\224\014\276\361\230d\276\031\2219>T\'\255\275\030\222\227=m\237\'>\355\031\221\275\321\317?<\367\252X\275\017L\212<\261\024\024\276\022\\\014\276.OI>\024q\257=\021zV\275(bO<b\264T=\357z\227>\241\207 >\210I\320\275O\230\232\275\246\3762>\324b\027\275\206<g=6\2113\276\374\227\007\276U\210\215=\212(1=;\346\220\274\355i\310=\243\220\257\276\214\234!\276{\353\330\275\340P\322\274\212Z\210=\252\361w\276QY\375=c\274\013>\303\240W>\256\221h\276\267\243O>\343\264\371\276\311\316\341=\227\032)\276\210iv>\277\273\277\273{\322a>\364\023\235>\024\316\r>\214g4\276RE\006\277\016\367\255\275\241\3051\276w\370\361\275\300tr\276\005\256\243>I\244\272;\335\225M\276L\223\331=SY\231=0\205P>uzR=\331\273\213=.Kk=\233\217\005\276\3639\313\275\304x$=\234\264->\274\027\230\276\327b9\276t\017\343;\003\272\001>P~\330\2750:l\274r\352\017>\336\231:>\\\026\212;\371\004\026<\020\373\035>\315e\312=\252]\210=Z\342\201=P\365>\276\rW\211\275\"=\016\276h\304\020\276\217\305W\276\215J\322\275\203\002q\274\rd/\276\025\267\017\276\240\251\031\274\266\356I>\356\"\226\275\213\375\231\276\373\000\331>o\301\253=H\342\304\275\273\312\001\276\2674\262\276\352\227@\276A\346\277<\252\322\\>!\263\007?\323\277i>\266y\216\275\313\013\035\276\304\357\221=\2628\362=\3166B\275\220>P\276\035\252\270=]m\n>K\266\250\275OA\216=\021\254\313=k3\222><\255\353\275\316\216Z\276T\336\323\275\363C\267\276\316\364\355=~==>\336l\275<\324\006\214\275=v\204\2769\237\024=K\354\313=\t\226\016=\310\235\217>&\014\345<d3\"=\252e\230>\313\333\367\275,\330\365\274\021>k\276\236W\353>B\305+\276}\207\227\276\032m\306=)\331\030\276\035\266\215\276\362\374v=\323\251%\275\317\211\261>\220\313\227>=s\314<\376#\007\276\271\210\342=\243\005)>|+]>=\\\266=\321\245\030=\235\201\035\276>\340$>\253\261`\276>y2\276\007^\326\275a\370\035=`\350\022\276\n\332@>o\202%<\033\362n=&\246X>N\365\341\274\005f\007>\301j\t>N\212&\276\301\301A\275\235T\023>\302\027\352\275\214\177\274>\247\014\240\274\341\237(>\367\240\232=\260\366%>q_\252\275F\2158\2762\314S=5\303\333\276j\247\223>\337]\264=\342k\243>\265\342\377\275\356Cl\276\243\301\224\276},#\275\226\"\360>5\004\214>\017\237\r\275r\031\016>B\350\224\276!WY=\342\345\262=\003\316\317=\266\276\200\276\341x\036\276v2+>\356Y|>\021\0305\275\221\350\223\275\343\377&>E8\270=\236\314D\276\2473Y\276\246\337\273\276\351\002e<%\207\235\275]M7\274\0000\224\276\260t\225=]\260\341<[\215\364\275P\036o>\315\216B> \260\216\275\231\367H<\350\221\236\2736lX\276+\036\r\275-\247\000\276\2342\237=m+\232>\033\314\226=gf\203\276\262\373B>\005x\026>\005\326)\2756\223Y<\'\277]=\364\010\024\275pc\353\275\214\005z\275J\035\261\274\316m`\2760\305\234>d}>\276\037*\306=\026\213\257=\000\320\001=\020\324V\276\261+=\276\350c\200<\367\324\220>\213\355\275<f\030S=\347\022\364\276\377\031\337<!\000\214>\215\307\346\274\362\232:=\313\022\245=\346]b\276S\037\263>3f\036=mt2>\273\272\272>\342x\352=$\032&>\274\325\211\275\226\260h<\023\260z\276\244\333K\275\222\332Y>?\257\2119>j\007=a{!=\314\n\013\277\376\335\201\275\235\240\024=\211r[>@\3005>!d\342\275\305\177]>\002\365e\276\276\205\246=\025;\221>\332\222\237\276d\221\037>[\373\204<\206~\216\275\274p\263\275o\212r\276\202\245\360<T\335\200=\256\275M=\014\215{>\361\313%\276\301n\241>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\221\010\215>VT\022>\320*\361\274\211\305\335\275b\363\024>\253\256C\275\261g0\276\207C\001\275\024+\256\275\014\036\005>^\224\225=\223\235%\276w-.\276\345+&>\024/\034=P\345r\275\313\325\313\276\201o\305<\322\353-=\t\221\246\276\300\321\355=\002(\327=:\023\254>\026\177\265\275\207\034\347\275).==\275R\020>\223\030\245\276\207\215[>\212h\212\276L\244\341<\277Jf>"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\330}\256:q\016\230\272!t\302\272\273\t?\272%\256,;\351\2264;\375k\312\272daD;\002\314\316\272-f\2468rs^:4b\336:ea\303:(Z\004\273\227A\017:\355\321\2259\301\033\3369\230\002>;\245\222\222\273\301J\3648\353\230\351:\337\306\337\272\311d\2529s\365\003\273\322\277q:\231\237\031\273\214\036\004\272\331G/\273Q\026d9\300\255\247\272\021\357_:y\343/:"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\215I\221\272\240\216\3659\313\356\375:v\256\234\272\232\222\014\271\251\363\3309\321N\n:\211\246s\272\246\017\267\272\344\3705\272\245\337\026;\333\201\313\272\273\365\333:\013Op;Wf\237:\343N-;Q\263T84\363U:X\2324\267!\333\327\271\202\026\034:O\376\017\273\367\360=7zu%\273\213\204\232\2732\215\270:I\374\310:@\342\002\273\306\257\261:\021.\232\272L\016K;\017Z\232:"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\364;Q=\2039\021>j9\356>\234\016=>\240c\265=\374\273\220<}\233h<\201\355\032>\222\316+\276\211)\033>\334\004@>\217\026\256=\264\3079\276\024{\002?^\372o>\376\211\223\276\350\342\214>\215E\353\274\217\005U\275(u\211\276\010\263\322\275B\327\210>g|\361<\241_\010\276\372h@\275\331\220\376\275\234\013-=\336)\001>#5\334\275\376\\\203\275\215\305\245\275@Q(>\330\256Q>\2147\247=\347\tp\276/0R=q\361`\276^$\333=\222\354\026>`\252^\276\031\354\217\275\023\023\227\274\313\364\010>\2372\316\275\215\341)>\251B0\276y\332\203=\347d\336=}}\373=\276]\363=9\233\035>k\320\227>\030\334\204>\331\230\031>AZ\201>\305\207\354\274\320\316|\275p\333\211=\263\362\337\275E\013\222\276a{\233>\016oG=\205\372.=d\256\033<\342^\366\275\3603\214=\215\2754\276pN\207\275\360S\215;\014\271\025\276\'\240K>\313\355\035\276I\357\327=W\203\206\276\370\227/>O\334\254\275\352\022\300\274\263\222\315={\324\276<Vb\206>\277\n\327=\027\207\274;r\206p>\220P\206>\224\245{\276\225\2314>qD\345\276(tH\276D\302\323<\241\271\200=\242\374\350>tv\223\275)4\216=RD\000\276w\203\017\276\374\204\264>y\037\241\276\341%\021=\255*?\276\304\376|\275A\'\223\2756@\234\274\rAr\276G\334\006<\002~\326\275\243\006h>\367`\177\275\202\324d\275\030&\325=\r\220\006\276\027r\200>KU\235\275!\344$>\331\325\312\275u\337u=\350m-=||\246\275&\004\271>1\340\257\275\037l\372=Y\256f\276\263\210\232>\200,\222\275\273\025\206=@\343\207\275A\215\274=\322\033w>\361t)\276^\005?>\266K3\276\223\365\272>P\215\013\276VC \276L\342\304\275\230\237\205\274\267\301\006>\243\354\241>\314$\362\274@9\004\275\025\323\210=+\020%\2745\177\306\273\315\235\246><\350 >\322\341\234\276\262\347\036\2768\212\003\276\372\232+>\224%\"\276\314)\261=\3501\033\276\t\255\257=V\301@=p\262o\276\325^\335=\"\302\320\274\330?\003>3\n\306\276\313\233D\2766\'\030\2760\003\376\275B\232m\276!9\201\276\306\3518=.\240\320\275\001\373\312\275\264\021\022\275\263vB=\006\351\332\275G\\\314\275\031QS=}\376\020>\340R\302\275\332\353\205>\370w\215\275\216\325\274=\343\256\236\276\207\360s\276\014\372\274\276*P\273=\024\376I>aA>\275\374\037\310=\317O\246\276\230j\363=&A\216\275<\266\234>\2643\221\275\276\243\213=\2217]>\231\025r>\n\271N=Z6\200\274vm\315<\370E\307>\247mc>b\235\305<2$\\\276\316a\217>\224Yt>\346\221\231\276a\347Z\276\227\224\200\276\211\030\211\276\274=c>(\351\353\275\351\234U\276\226<\243>f\252s\276\226(\216>\251L\003=C\236`\276\214}U\275\262\001\256=\323p_>\251\231\243>\227\351.\274\227l\360\274\356n\247=;}\244>/]\245=pp\n>\254g\307=\323\r\304\274 O\001\276T\363\032>/\007+\276\304y\347\274\265g\251\275c\257\251>\355\227\275\2753:\303\274;?j=Z\355\205>\211\222\302\275\032@*\275\"T\026\276q\270Y\274\227\316&\276\246=\260\276\343\250k\276\371\021\220<\t\250\\=9-\225=\037\021\356=F\367\214=\320\202\327\274 @V\276\360\376\322\275\352\217\356=\317]G\276#\255\376=-\0076<Y\2342=\325\326q=OV\361\271\317\315\372\275\361\'W\276\004\n\366=\271\372\313>\2472\305\275I\007\303\275\225\t\006<\311\312\304\275\252\302\n>1<\336>\215\305\335>\233\247z\275\211\276\254\276\024\356\340\275\242\304\026\276\0269\332==\221\243<_\263\275=:\311!\276\317o6\276\271J\177\276\027W\023\276m\010*\275!\026\016>H\202a=\246o\236=\253D\010<\322\024\302=\244\302\363\2757\"\004>\335u\031\276\030\367\266\275\016\277\300\276`,q\276\370EJ<tf\346\275\240\220\277\275\026E\004\276k\324\\\274\347\201^\276\256\r\351\275\374\037\353\2751\311\264=Q\344\034\276\220_\203\275\204\177\237\276\357\212Y=\330\017\276\275\233K\374\275\337\014\254\274tY\r>\233\025\000>\0321\326\275\321\322S={\017\204\275\031\004\202=f\244O=#\257\225\276\260#0>\365>\305>\013\017\326\275\375P\215>\257\247n\276f\032,\275\032-\373\276o\215\202\275\343\364e\274K\034l=\300\027|=\220\347\256\275\330$,><\232A\274>+\216\276u\334[\276\223pI<\372\372\204>P\265\016\276w\225C\2762g@<\003\003\211;\352b\347=v!E>!\217\024\275/\201\304=r\231\254<\257\353)\274\265h\\\275\327\262\375=\305\006$\276\t\241\016\275\224\007\236=Qz\030\276\201KK\276\252!\231\276v\225\"\275C\023E\275\273\002\200=s\036\006\276\364N\360=phX\276g\361\340\276m\254\211=E)\212>\366\037\277>\\Y\232>9\336m=<\312O\276K\301\026\276Yo\261\274\274\025\260\276\'\t\251\276\325\337\214>\320\230\'=\031\025\361\274n\2647\273\355\202\334\275\346r\377\273\22729\276\202\277\003>\206\367D\275H\026&>\300\3139>\026nG>\200/\r\276\256\001O\2756\373\177>(\031\033<H\254\'\275\215\272 =\306\'/\275\"\272Y\276\270IF=3\213%=\311\306\237\275\227\211\031\274\231$\344\275;m\370\274\365zC\274\304\344\272\274\302Z\241;\017^\023>\215\234\010>/\323\316>\325}g>\246@\314\275\005\023\235>\331\376p\276B\210\177=\307\302\334=\004G\265=G\337\345>\223.0\275\261,c>\244\337\360>\r\301\204\276#\020\235\276\271\032\036\276\307\306\301<@\253S>\200\207\247=\301*\324\275\375\024S\275\206\014\235\276\021\230\226=\342\315\271\275\306\326n\276\226\t\233>\023\233\237=\347\353V\276C%]\275\243\361\246\2765\312#\276\262P\013>\260\246\252=\257(\005>\014\365\201=\206g\266\275\262dM\276B\005\265=\377n\222=,+\372\275J!\217>k1V>5\342O\276\270\272h\275w\203.=\261\203\356\275\331\360\307=\310\001\245<\213\001\260=\230\212=\275\314\365\250=\327\377k=X\244\336=eF\251\275\0273\253\275;9!\276\013J\204\276\356\333t\276\005\224i\276\024\r\217\274\'_\371=\300\337;\276C\336$\275!\327\256<\241\\\365\273\234\327\032\276\267\324:\276\217\264k=<\347\036\276\315f\353\274\230\305\225>\317/\005\276\253\252\240\273Ea\034>\254r\365>7\342\001\275o_t\274\304\361\250\275\035^\243\275\013IA\275\307\203\373\275\237\037\334\276Yt\335\275S<\\>\002Q\237\276\360\347\202<\316(s\276R\320\201=q\227\'>?\372\276\2730AI>\017,\246\276YR\023>\360\007H\275\013\352b=g(\244>}\247\212=\330\306(\275\"\n\223\276#\256\014=\243\201\234>\035TW>5\342\233=\305N9\275\335v\363=\034\031)>\230\350\327=\315\216\320=\t9\336\274\243H\247\276\360L\307<\346\264\204=\331\204\222>+\275c>\201S\232==^\274=?\342a\276\241\351\335\275\216\263\037=F\320 >\006\332\355\274E\"\370=#Z\316\275\300\262(=\246\347\206=\375\230#\275\010\3573>z!\332\272\332u\022>\312\346\006\276\036lQ>\001x\210\276\224*\254\276i\304\344=z\\\274\276\036\372\341>\"w\341\275\373::\276\344\271\227=\335^\226\276\177rJ>\342$B\276\016\356\355\275)~\013>\266\274,\276\273\370@=\362\016\233>@\272}\276\024\335#\2742\203\205>\326l\331\276|\220\260;\302\222\031>@\373\303=\365\302\207=\007\341\305<f\343\027\275\304\263\254=VQ\255=\312\331R=\312\267\314\274\351\214\n>\257\356B=\257X\273=\320@\223=\'\330\355\274?\265~=\373p\261>\343\274<<\212q\255>\244T\016\276\320-\260\276\342\230\r\276Z\211P\275\347\342\005>\033\362==u\320\217=~<\371=;U2>\301\275N>J\307&\276\367\n \276V\257P>\270W\030\274\233]L\276\361\3510>\371\331\177;\226\245k\276\332\226W\276m\036\304>-\0376>\203D\235=)\270\'\274/\312]>\236%$\276\3337\202>0`H\275\230e\340\276\234+\324\274*\t\234\275\333=\006>\353\302\227>\361\207M<^\356\3158kK\'\275A\222+<\365\264q=w8\240\276\304\345\375\275\327\314\034\276\350 \016>DG\343;g\273\276=\203\372\027>C\017\247\276\213[6>\300\221w\275\210\325\333\275CY~;)0\377<>3s>N\352\270\274\334\210\036>\231\210M\276\264\265/>m\340K>\312\021Z\276!\214b>%f\340\275\272\247\037\276\204\241,\276\244\234\341=\346!\220\276\221a\262\276\027\336\r\276\264\347\003<R\233\231\275\305D\007=\020\3618>\364M3>\332|\346\275\343\231}>\024hs\274W\226.>\251\036\217\276u\201)>\272om\275\203j\026>\230^\377>\005\361\214>\023\301\r\275\360\334\203>\372\375s>\343\347\356=\242cU=R\312G>:\316v\276\2059a\276\016\t\223\276K3R\276>\367\363\275\256\026\300\273\2432(>VEF>\342-\213>\003&\037>b\342\033\276\031\034\203>\304\n:\274]\272+\275\340\177\022;\361\274\252\275\237\341W\276\250\277T=\207!\312\274\265\255\005\274\243z=\276\203{\n>\010\330W=\233P\327\274Ei\335=\376\233-\276\236G\214\275\270]\233=\246\037\202> \001\177\276\214\204\033>&\262\030=,/\313\276@J\357\274)\370\250\275y\201\272\2756K\220\276\272\200\247>J\345\353\275\033\257\265\275(\226\313=\203#\351\274\217\227\211\275\363\357\'\275s\345T=\003\274\"\276\"\276\027\276\204\330q>\205\275\317=|\353\213=\334*\261\275\303\t\316=NB@\276\211W!>O\020\032=\344\022\205\276\362\347\217\272u\357N\275\322#\255>m\303\214>\256\223\014\276$n\232=\026\021:>\235\333\273<\357\001B>0\314\234\275\374\267!\275v\036^>\255\363\">0\035\375<&\302r=\356\220(>\262\306N>\374\333\022\276Q\216\222\274FM\351\274\312\200\264<\262q\373\273\372\300;\275\006X\253=\336N=>\342\345\224=\276\325\030>\377Dm>\002\352T<\312=\257>\324I\321\275\000*~=YO\002\276\'\370D\276\354\212\001>\346\266V>V\2654\276\255j\304\276u\227x\274j\'Q\274\364\243\026=;$\177>1#\027=\321&\233\276\371\313\233>\005n\033=\373\350\363>\314\247a\276\221\361\"\276\242u\251;\376\323L\276.\243->\271\345\204>\266\244\030\276\036\002\220>+\2543\276g\0344>h\316\020=\211\300\257;\036\021\373<~\265\262=\372S\221\275i\213s=\243\266n\276\005\377\315\275V\\\254>\035!\273\273\341O\025>1\347|>\036\333g=\257\341\004>\316\224\254=\322\257r\273X\345Y\276\3204\024>\210\033\332\274H\036\016\276\001O@\276\241\025a>v\210z=\372Y`\274\260\260\t=l,\326\276\267m\353\275\252\314\252=he\351=\036\"O>\033qX\276\267A4>\357W\"\275\036\357%>\'\025\275=z\207|>\205\006\211\276xx\352\274\236\365(>,\262y>T\020N\275\201\320\275>\375\'\024\276\364J\322=\375\265\340\275\344\315I\276_E\016>|\271\223=\303o\006\272WQ\r\275\302\256\341\2753aX>\n\341P\274\036B\336\274in\205=9\322\002\276\377A\205\275\217p\037\276\272\3663\275\216H\232\276\360\352N>\023\214\364\276\366\320h\276\014\273\177>\232}\210\276\354\036H>\302\t\330=\342v\036>\344\001\216\275U0\037\276\010\316&\276cu\222=^C\030>\017F\014\276:;T\276\376\225=>\315:\306<`\021\234\271.[\203=vnD\276p\211\334\273\353&\275\273\300i.\276\205\310\034\275W\226\313=\205\3517=Dj\022\276\375\354\005>\315\230\233=9(\272=\"\276P\275#\350\343\273\257a\200\274{_\310>\004\326\014\276\354\024G\275$T =\376\030B>\312}\n>\322\375\022>.\3153>\353ly\275x\277\r>\t\032\016\277\231&f>\214\335D=\007Yo\274\n\230\235\276\266\351\205>\303\205\245=\340_\207\276\003\221\016\276-R\272\275\237qm\276w\343\374=z\n\220\276T\2650>\236\236\245>;\026\204=@\0279=[\341\345=\376.5\274^\240\314\274kp\262>A\300U=\263\030\024\276R\252\275\276(\235\031>\262\n:>\225\037\214>\361\277\242=\320Z\177=0\027\344\274Tf\263\276(\250\237>\240\004\352\274\3744\271>\367n\266=|[\220\275\241ak\276\005j\027=\035\267c=!\014\345\276k\267v\275\356\272\311\276\232}A\276h\300\321\275\372gG=\306\001.\275x\244\006=\224\304;\276\027\"|\276.#\004\276\213\334\016=\241\341D>\252\017\034=\254\031_\276\325\264)\276\204\251\277\275\254\245\022\276\353\335\347;@\224\235\275\366\344U>j\221%>\244p\325\275$\005[\276t\016\036=\303\356\247=G]J>\330\372M\276Ru\345\275X\366\207\2756\014\205\276\311\000\t>\336\017\251<\361q\370=\241\251\">0&\007\276$?\272\275\271@\013\276\236\371\225\276#\244\274>\350\316\n>~\274P>-rW\276\033\323\322=\\o\304<\356G\203=U\033\247;\241\n\251;\327g\276=;S\302=\327l\271\276\035\223\221=j\027\367=\234\345\204>Mf\035<\227\322\223\275|(t\276F\002\016\276\363\237\335<\210\201d\276\217\234\032\276\363\256\020>\371?\346\275\313\255z\276\364k\252\276;^ =\203\037<=\325\002E>\266D\233\276z\375\215\276\316\365\277=\203#K\273\226\246\335= x\263=xv\315>\312\344x\276C^\037>\'\0168\276(\204\241>\007\017\260\275\275\031\314=d\217\263=h\233\240<\225\335\254\275W_O<\230\232M\276/\266\354=\220\3255\276:Y\036>\267u5\274c \232=ko\230\276\270\245C>P\202N>8\337\310\276\350c\017\276\030}\201\275\324\233\230\275\351|\213\274ue\206>\000\3657>\013\267f>\251\263\245\274\230\351\017>\221~ \275\213\333\017\276\302\322p\275\200Z\266<DM`\274\204\231f>\3475\234>\013\231\022>\330Ck>#\323\253\272\241k\233<\203\005>>5m<\275\215,\001<\024/\325>\226,\376=\000\201(>\2720\220=\324\332\210\276OFk\275\306/J<\226FV\276\354\"\177=\240K\014=\247\233\200\275r\265\242\274\245\300\353\276\032\'\026=\026\356f=\204\253\320=\314\372\262\275\233\326\333\275\2646\\\276\303\0202>~\365\343=\010p\"\2769\313\223=t\253\'\276\032\354\010\275:o\325\2764b\247\275\221\311\000\275Tw2>\022A\003>\267|\t><\366\245\276\342\033\036\276u\337\332\275\246\271\201>\350\220\346\275\212\266C\276h#\353=\337h\003\276\251R\300=_\236\374=wt\236=\177\272\231=\347,Y>^\370\021\276d!T>C\222C>\204\322\255\275\253\343d>E^5\276(\320;>\230Q\212\273N\332\224<\326\211\035\276\002\327a\276L\322\002>+\245\237=\240\006\003>\272\023\360\276\267\374\205\275\335\014\264\275v\376\220>\204U\021\275\017\360\366=\312m\\\276\275\266\223>\326[8>Im\217\276uK\262\276n^\223=u(\356\275Q4H>G\377\247<\0328o=\361X6>\325\n/\274Y\251{\276\346\352\234\275\014_\334=|\032r\276\204\325X:\3671\000>\301\262*>\3254\030>\320\2368\276=t\352<6\242\356>\327\232\005\275*\024\037>\2027\267>\373\327\205\275\350\233\242\275EL\265>w\205\"\275v&$\276\226S\024\276o\310\207<%\003\363\274\322\224\344\275&e[>\030\226\343=\335WZ>\226\305\201\276\361\262A\276\\H\224=\237\3420>E^\335<\225\255\220\275\327~4>\331+\251=\341\240W\275\342\253\034\275\022\271S\276V\333\036\275j\324]=\221\310Z=\237\037\224\275M\264w\276\217\327,>\316\341\324>:\377\233=o\264\244=\361l9>Vf\306\275\177Kb\2767(\036>{\342\\>:Cn\276H\310\253=\2567\335=\365\272\263\275Y!K>\215\330\230\274\326\017\026>\242\342\211\276\245k\331\275\212W\215\276\227\366Z\2768S\354=V\246n\274i\274\207=\223q\217\276\265hV>\235\206\312\275\013\310\236=[\221\257=\2523&\276\2750W\276\226O\021=\023\004\267\276H\257H\276\225V\264\275\231h\260>\317>\023\276\300\006\211\275gu\030\276\217\240(>j\347<=\245\000\303\276\345|\037>X\223\232>\301 \200\2753o^>5\350\014\276\033Rn>\0078 >&\3244\276\302\211\323=e\241 \275\000\344s\275\346\301\020>9\246W\274\345\251\212\276b0a\275\024\344\333\275\323h%=\362\260\274\274\002\326\236=U!\037>\240\027\304>y[\242=\005\335\006\275\'\226\274>H\005@\276\267\013\212\274\224Zq>\370\322\364<\375\'{=a\213\006\276f\002O=J\363\037>xz\320=\257\254\241\2753\207)>\323\260\032>K\003\r>\351\037\n\2750\225M\276\335\245Y=t\243\361=\345\r\210=\222F8\275b@\025=f\324\005>p\317~>\023Zy\276\204<\031\276\255n\200>\215\275B=\t\214\233\275\001v\231>M5\022\276%\r\342;\315\224^>H\343\211>?[y\276#\335\031>\177}\221\276\306}\325>\"\0027\275\0077Y>f\2008\275\021\215>>/\336\224>\303\251Q\276\363\031\266\276z\0266<\226\232\304\275\226\033\264\275f\216\254>\033aM\275r\205\357=\335\212\215>\374[\004\276~\213W=A\200>\276\255\320\334\275\332}\367\275\010\332V\274;\317\321=/\0225=\261\350:>x\241\364<\242_\253<\257\235\324\276\002`\260\275\201b}\275k\377\235\274\370\035k>\026\363;<\210\235\305\2756lb>.\026\314<c\013S\276,~_\274i6H\276%\214\\\275!\326\207\276t\237\243\275\336a\210\276B\232\326=\335\302\334\275\374It=\340\\\316=f~\225\276\014\242\014\276A\233J>{<\225>Ne\332\275\205\303\215\276b\353\032>J\340\207=\3747\007>\3051\177\275\276\250\211\2755\220I>\240\010\230\276`\276\202\2747\'\200\275\002\221\322=\242\352\033\276X\275\274\274\323\245)\276V\312%=\332d\034>\263m\004\276Lo\205=\355\210\315\275\014A\275\275\000\362\210\276\245d\351<+\331\320=-z\375\275\036\271\000\275\334k\247\275\373\004c=\242\220\265=\021t\226\276\357\310-\277M^\">5\"-\276\333\252\000>m\252T>0h\035\276\316|V>\216>x=\303\356\237\276R\246\366=8h\036<\"\311U\276\215\260\220\274\033y\027\276\3335J>\241\210\033=6\361\206>\326\234\243=`\312\231\275\244\255\230<J\263T\275L\272\002?5KI\276im\002>c\311\214\276\236\020\376=\371\362\313\275\331\207E>\263Sr\274\275v\245=\213p\266<kT6>\206\270\227>\230\t2\275\336\373\253=\215\334\252=\272\354\303=\326\277\311>*\260q\275\251\003\r\276\271<\272\275\016\322\370\275\265\304f\276eU\177<\n\260\006\275\375[\312<\033\223e<\022\221\360\273\017\333\032>1\271d\276\027V}>-E0\273|w5>\340=s\276\275\267\r>\211V\t\276D\355f>)\236/=F\235\233\275&f\276\276\331\213\n\276 \275\215>\235\t\226\276U-\242>\3015\021\276\001\220\365\275bZ\343=\037\275\007\2760U1=\333\355\013\275&*\323\274+`\210\275d\221B>\301\316\260==m\247>;O\361<\000\356\'=f\3706\276\265\217\211>\267\035\024\276E\370\333\274\362\2223>\310k\272\275\311\352\324\275Fn\305>\325,\003>E-\240\275\204\245\267\273s8R>\000*\021\276a\006K>\177\320\'\276=D\235>Rv->:O\247=\344m\240=\272\353\242=%oT\276q\275\320\274\277!\272\274\003\312\222>\227\266>>\202\377\260=3\310\237\276\0145g>\216\006\262\275\217\2534>E\215+=\010\267\246\276Q\302W\276\344\244\347>%\356\\\2764L#=Vb\346=\234?J\276\010\357\014\274m\203\331=\322\223g\276\177\367\341=\232J\374=C\241\345\276\241\344,<\354!\017=b\237\313\273=\235\2779i*\031\275(\331V\275\241l\233\275c\3627\276;ig>\017\341\252=\030SY\276!\302V\274\357`\307\275\214E\274\275qS\371\275\246\006\363\274\373\340\213>?[%=\037\210\213\275O\264\003>\224\211&>\361\255%\275\210w\320\275\241r\251\275\313\032\000\276\274_=\276.}\222>R\024s\276\335J\375\276\001\325\252\276\235\326^\276a\255\326\275\231\330\241>\370\023\r\276a\352\313<X\371C\275\000\355`=\245\365\003>\0043>\276\341\222\206>x&\265\275d\347\025>\221\251>\276\016\275T\274ek\355=l\032\216>`\375:\276\201\n\026\276\201\305\310\274]&\370=t\376/\275\311\224@\276\352>\021\276\234\021\307\274\224\236K>\000\233R\276\360\227\355\275sD\343<\013b\316\275\300\370\247<\306\221\"\276\367\215\327\276\232\220 \275]hQ\276\343#\345=\325\300\177:M\353R\275\2531\201=\277\374\027=\356\013\020\276<\201J>\034c\371=\222\302|=\223\322\030>\301k\253\275\272\306\250\274\302\332\331>\177x\202\274\177)B>\346>\037>\203Y\337<\310\371\016\276\237\350\377\273\350\251p\276\014\231\375=\205\215\216>\350:\373=\264\302\357\275\201v\277\275\253F^\274\3243\213>\022\2200\276\326\212\276\275\010h\304\275\025\307\304\275c\236\014>>\211\'>\026\023\014>\254I\266\275\257\314/=\275\351X\274\262\311\240=\370\276\220\276\2124l\276\033\310\241\276\326\006\334=\267rF=p\321\311=\354h\252\276\372\242\273\276\372\373\030<\002\032\212\275\0333 >=r\037\276\214\237\246>@p\035\276(\255\243\275\301w\243=\367/9\276\311\347\366=\257\001\033>h\\\007?F\252\255>\016\300l>Ty\374=\320L\002\275\026\013\215>\237\306\240\275I\361w>\241\227\237=\255\t&\276\222\244\250\276>\242\316=\037\365\260\274\354H\311;\tbl\275\257n\034\275\375\365\023=5\374\353\274=\003\222=f\300\375=\307\245\215=\370\354\262=\243\353\000\276d\007\303\275\177s\001>\0347O\276LE\236>\373\000\364\275\025\345\317=\356\014\245=\213\357\202\275=\316)\274\357\372\212>\215\335\346=\210\244\272>\000#\033=\013\r\306=\334#\244>\033\035b\276z\200\017=&\332\262>\272\257\020>\022\370\315>\276=\202=\255\351\300<\221\315o\276\336\251\323\274\305\375Q\276\014P\017\276C*\264<dkF>\311\212t<\335\306Q>-\205\026\275\212\002\303\275\372\250\220\276E>\206\275R@\204>\177%\350=\345\216\246>\256y\301<|\377\t=\263\023\203\276\255\253\016\276\027\351T>\245\311\226\276\022Yx=\213\016\002>*\010\031\276\002qu=\3636\252;\315l\252\275p\327\354=\317\355P>vS\263=\325\360\370<\231O\307\274\241-\204=!%7>\252\030\'>Uu\355\272\206H\222>g\240\373>H\370\325=\372\267\336<\306\340Y=?\220\302=\271\"\264\2752\216\035>\243\256\232<>P\344\274,S\032>\210\255\271=\356\374\203=(B\273=\233I\353\275Q\361l>\267\2537\276\264\000\246=h\215\033\276E1\226=yYn\276\223P\277=\377\212\230\276A\343\204\276\206\2467>+\261@=\317sS>/\206r>\007\220\252\276xe1>\226\320\254\275VB\344\275l\325\">\212#1\275y%\t>!\373\271=ig\231\273\216\365\026\276~J\266\275\010\036\216>,J\031\276\337\211l\276\330l\212\275\330\263\020\276\266\217H\276\343\212\001=LR\355\275\367:0>*\242&>\345\354\243\274\303c>>t\177K>7:\321=\325\0314\276\246\340\255\275\355_\224\275 \3317>\265\207\237\276L\273\226>\317\215\035>\347\017\240=2V+\276)9p\275>\316\035>L\2516>\264%\277\272U\316\026\275\266\322\n\276W/\330=\322#\003=S\200\303\276Y\245U=\374C\272>\354\\L\275\2040Z>\335g\321\275D^\020\2765\315w>\262\223\264>n\214*\276\310\332\021\276\252\264\324<tW\003>\032\034%\276\362>\351\275\251\310\343\276_\025\177\274\221\207\272<g\370\204>\024n\316\275N\257\251\275]\302\220>@(\216\276L>\351\275\003y\240\276\251M\216=\304c\233\275\274H\236=z\0344\276/\364\373\274\216~!\276N\332z>Xo\t>\250\246 \276q\367\005\276\363\313\310\275ZF]=\3463\275\275\203\r\260\274\002\351\220\275\3031.>\271\343?>\333\265\236\274A+U>\300\233b\276\273\220\310;e\247\177\276\334\303\024\276;@\250\275I\026\242\275\224\244\023\276\370K\360\275\222R8\276\225%\344=3\360~\276\001\230\213>\\\277H> f\275\276\3158\3159y)\211\276\245\354\022\276\307g0\275\\^\213\276\323\373T>I\303\024>\307\026<\276\016\236!\275\t\367\210\276\361p/>\022\263D\276\202\270\006=\326\256\031>\342Xm>C\262\001<k\217Z\276[w2>S\370\266=\352Gn\275-p\355\275\016\232\226<\"F\263=N\2209\276\247L4>G\266\327=\304\351\033\276Hf\n\276\257Jk;fN\225\276\033j0\276>K\257=\252\357\352\275(#\211>\213\315\210=\376A\243>y\261$\276a\252\220>\277\374I>\351\202\346::\250\226\274\035@\245>\246\034-=3g\021\275/\037V=$\364^\2768\330\\\276\261\265\025\276\200\213\233\274m\354J\276\3079\351;\203\254\223\274b\363Q>r\215\037>\337FL>X-\320>\\k)\276\273\305\261\275V\210\273>gGF>Fc\216\276O\202K\276\246\377\224\275\036m\030>\317\303g\275\253\241\220\275\363\373\243=\264\327\'\276?z\307\275\2209\246\275\351^l\276\014\216\304\273Q\357\270\275)\375\031\276\237p\257\275\333\013\323\275\224j\021={\363\315\276\245\220\271>\n\326\354=\213\037\261=\307&$\276\347r\003\276/9|\276O\032\205\276\246\347z=\'=?\276*\325\227:\255B\315>\200\3128\274\023\311T>\333{\305\275\341\204|>7\342\237\275|\213\001\276\364VX\276\367\204\r\276\374%i=>\271P=ME\213\276\345\316Y\275)\221!\274 Xe\276\033\004O>j\001\256\275\230\317*=<{\201;\213\374Q\275@\025\000=\221[\276>Fp\006>\223\021\243\275\3178e={\217\270\276\375\265\'\276Dv\014\274\306\331\023>\346C)=\'J\340\275\300I\226:\024\367,\276+\3302>&AN>\236\256:>8\013{\275\257\256 >\267\245F>\016\254t\275\244`\250<\244\372\257>\036Q\257=\205\2634>\200\205b>K\235\223=`\207\r>\357\367\232\275\336\267\347\276o\201\325=\310\304W>\351\310^=^(p\276\3313b\275\261\335\273=g|\032>\206\363\237\276v\213\177=\222\205\231\275\354\006x=Z\330\346\273G\013\n<]m\027=cZ\270>i\264\017=R\223\004\276L\241L>\0277\231\275\235\021W>K\020\002>|\364\244>k!+\276\246\216\346=\334_\231<\346/\217<M\375\226=\\\273s>\307\214=<gV\016?V\0031=\263\232e>2~\254\275@\205\373=\n\024\017<\226FU\276!\3740=\224\307\016\275\273\023D>9\355j\276\274\341Y\276\300\331\223<\311\347->\274\264\367\273YRz\276E\335z\276\207L<>\234F\262\276\314\330\210\276hz!\275\353\304s=\350\223+>\302\322)=\n\323\013>\361S\371\275\257IL<\377\025@<\367\206\354>\031q\025\2761\264l\276\260\034\221=Q\305\276\274\3144\234\276~\3637>\353\273\226\273\361\351\277\273\203\201\243=\331\371\331\275h!v\276\037\214\254<\303\373\347\274\017$\021\276\220\363\032\276z,\211>k\016w>\213g\375\275\352\313\214>x\202[>\334\347q\276\334\003;>\177=\347<\274M\217>\237\004\244\275\373Q\215\276\306\364#\275\242\2732\275dbB\276\200?h\273\234-\031>\300l\360\275\374\275\236\276[Z\316=#-S>\215\030-=\227\202c\275\365\014I\275\235~\233\276\027^\265=\0206S>\240H\375=~b\035\275Ij\t\275\2108\234<+\207\200\274\022\222O\275\0237\303\275\211\307\267\276\266\356\277\276I\342\272\274\316\260\326\276\276q\210>\23111>\376\013+>\340\301\343=\216.A\276!\242\010>\207H=\276\375\\\2659\332\315\317=}\257\005\276\217\207u\274_\r\220=X\250\220\276\315#\213<[X\216\276\377\005\210;\342\342\322<ot\004\275\333Jc\276J\345$\276&-0\276\030\227\377<\344\344d\273\222\314\022\276\275\344\331=\355\036g\276[\257H\275_\030U<\230r\200\275\035\330\204>\037\321\356\276\322\243\222>`\362\326=\247rm;\267\240E\275\345t\010>\233\234\366\275\344\275E\276,\225L\276\032\250\247>\266\234\353\275\272\202\272\273=\300T>\351\036\374\272ww\250\274P\010\225\274\326\020+\2751\372K\276\344\240\315=\231\034\333=\343qj\275\207bI\275g\366W\276E&\005\275\324bc>\367\356\200\276U{s\275Bi\207>\313\222+\276j\224\300\275\343\003\306=\227\312\020\276\016W6\276\364\363b>)r\037>\252o\356<\355\001\036\276\362R@>7)\371<n\354\272=\025*`=\300+N>\330\356!;\366\276\177=/\001\215\276q \320\276\202\371\026=\233M\363=-\372\301\276,\002\034\276c\303a\276?\036j<\245\256\273\275C|N>\3727<=\347\230\207\276\340\256\372\2753\320\270\276%u\307<\004\225\335="
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "7S\010\276*E\210>\272&\243=\374\370q\276\262N\261=\214\316\007\275i\034\332=9\243\325>\023\177\365=\006\025\023=\3755\013\275.3A\276\270\250<>\271\007t\276\203\3646>vU\271\276\005\021B>\307\354\247\276>\224\366\274\272]H\276O\374\331\275\201&\215\275W%\203=h\277/=V\374\\\275\010\\\223\276{\210_>~\277\302=\220Ou>\000\002\177>\026\341\002\275\3217\254\275\366\np<Zs\331=\315\266 \276c}q\276N\337\275=\240\200\004>\312g;>\254\231\200\276\'\212%>ii\275\275\317\006\252\276\310\231\207>\234.\000>=>\325\275Y\335\271\273\330\275\375<b\036{\274\320\230\202\276f\373\302\275j\372\005>\313zN>\271\254\312\275s!\322<\337^c>\241\370P\276\331r\r\276\312\374\253=T\374\037>\244\224\221\276\260y\313<{:h\276ez\017\275\244\n\002;\2739\333=>@\"\276\351f\223\274\235\245\032\275\354\036\004\276\305\275\372\275\304\300)\2760q\006\276\214r<=\273\257_<\221\232\205:\250\277h\274\010v\212\276%\266\251=\312\240\203\276\243E\336\275,B\304\275W\n<\276`\014\345<\\x\227\275W.\"<\271\330\273\276\340\205\002\275\tn\025>\2203\t\276\267\306;=u\177\230>\377\250\253>z\325%\275\341e\025\276\351\326V\275\276\n\200\276H\260d\275[\216J>\323\235\200>i\000\210<\227\270;>\ng\271<\005\244\326>\335Kf=^?r>\270=\254>\326/8>\225%\225=\303\360\324=\004\006>=#;h=\017\024\026\276\314X\213>\'\362\206=g/\337\275\377U\324=\212\331\006=\335\014\352\2740\256\364>\264Y\213>g=m\274\300<\203\276\257\331\202>\303\351R\276\300Yz;\200\315R>\277h!\276\350P\236>J\271\266\2766\375$=\324\017\013\276\022\223\303=[t\026\2766T\266=1C\251\276v\224s\275\252[\204=\332D\006\275\217=\200\273\354$\002=\312t\032>\354\2704<\231$\255>\034)F\275c\244\023=\330e\027>\273\205\223=\234\365\352\276*\265M=\266J\267\275fqS>\2051\233\275\257\037\201\276\376\353\027\275w\366\356=B\t\320\275\357\257\223>\r,\361\275Y4;>\304.\222<\3324\205=\226\230\226\276\334\331\260\276\020\367j\276\313<\244\275\243\036U>;\036\034>@9\300\275U\274k\274\275m(\276\'*\350<mA\311=,wF=B\365\236\275\373X\354>nP\202\276N\320I\275!\267\005<\213\032\203\275@1\026\276h\257;\276\n0G>+-\352=(,\226\272\037\204f\276\371\302\'\276\037\244\271=\003\334\211\275\256\311U\276\237K\317<\301\262&\276\255\370\027=\265\035<=$\257\370\275\2019\236>\3728u=LQ\301\275\344\016\031>xO\244\275\364\350\006\276\020\315\207\275\375\324\223\275S\255\215>\203\335`>\277]>\276u\241\220\275#\307\223<\322\016\002>Q\375F=\233j$\276zK\363=B\333\232\275\345\366\212>\223>\327>&\234\245\276k\224%>[-\t\276g<\253\275\346$\374\275\306\342!\276u\211\001\273\037e\200\2768\257#> qT>\263\365\021>F\233\007>!\242\025>V\310\363\275D\307.\276o\024M>_O=\276q\263\216<\275X\370=Q\367\307=by\203>fM\033\276\210\375\325=K\320\351;\016\327\250>\357\024*>F9,\276\0012B=\246\214\254=\037\320T\273\250A1\276\246h\032>\372}\226>\370\334\344=\367\213\257=:\"\270>\357\241g=J~c\275\023\234\345>R)B>\375\026\214=\313oa>\004\343\271\275r\002=\2768\264r=#\2627>tR?>\314}\221\276W\262\033>\321\002\342\274]!C>.\214\312\274\306\300%\2761\001\324\276M\266\212=>\335\343=\\\254\327\274J\243H>\274\243V\276\"\350\r>uU,>y\274$=9\253\270=\216kf=\225\370\337:\301\3506\2748\371\207\275\017\237.\276\353\315 =;|/\276\rE\r>\216:%>s\202F\275\3261r\276\376\201\204=\021\236r\276\\\254\003>\346Z8<\022\252-\276\232\023!?=\306*;a\2568\274>\247\203>\264\310\214=\215n\213\274\277&\371\275k\234E\276t\026O\276\363\017\221\276B\205\023<^.\030\275+\200\036\274\035>J\276G\247-=\261rR=\226z\261=\217\252J\276\257\270$>\337?\220>\210R\000>cs\257>\352\246q\276\023QS< \206\271=\335\3353>s|V\275)M\t>\014Ng\276 \346F>\211\237\214\276:{\000\275\235\000\314\275N\346\'=\205\025\344\276`(6=\344\001\313\274N\220\341<_\353k>\270A\024\275VE2\276^\005\210\275\2756\000>B\374\251\276;\342C>\t\0139>2}8=\030\340\357\274K\212\224\276`\306t;\233\221\305\276\332\323\021=\033\377\255\276~\033\312\274\264o_\275\304\230x\275qS\253<n\tI\275!\263 \276\264\242H;]&\375\275\240Rw\276\276N5\276\261\232,\276\346\342\337\275\'\342\377\275t\250v=\0062\001\276>2\253\275\245W\352=\351\036W>NAM>\2177}:_\367\214\276\013\370B<\034Vc=R;\370>\334\036\177\275\207\006\201\275O\323\211\275l\255\004>6\223r>C\333\211\276,\340\311\275\226\017\361=\374\322X\2721\343:>X\035\320\275\263\203e>\316\260o>t\220\222\276\267\216\220>\252\010\352\274g%/\276\201r]\276\237\035C>U\026\244>8{\035\274\247\312\001=>\177\356=D\366\214>\211\266\273\275\\\226\200\275|\341\225\275CS\372\275\352\t\206>m\254\363\273\336W\226=k\006\200<\242\354\304>wgM>\177\304\252\276%I\346<\341x\356=\034\254\215>~\026\212\276\335\tb\276\366\313\275=7\236\272=\021I\241=\236\025\236\276\010\324(>\266^\374=\001\337\017=\272\323.\275\250\231i=\000\371*\276\013\322_>\224\374\r>\005\rV\276\240\301\177\275\035\":>\034\tg>0N\305\275)\314\032>\325\275$\276\356Xy\275\264]\371\275\250B]>\2409V<1v_\276g\023l\276\003\006\275\275\016F3>O\034\274>\025\223Z\273\334t\022\276\244y]\276LI\024=\230h\201=(+!>\220\010\267\275\242.3=\272\353\364\275N\326\356\275\265\355\202>z{L\2763\004\274:c{\331=X\230\304=F\275\003>\340\211\245=;\324\371;\234#/>\016\270\005>\306X:\276\036(\371\276\026X\251=\325iC\275Q\321v>\217.`=g\264\033\276b\366\345=\201\242\245\276\\!3\276\306k\246=\367\214\020=\002\t\263\275\000\263w\274\330\t\030=\327\273\304\274\241C\206>\200/_\276P\271\263\276Tc\302=\251u\305\275\002\203\031>c\344\013\276\370\211\246\276a\370\207=\340\275\213>\230\275\354<\202\346\223\275\005\260\321<P\2169\276\305J\243\275zrO\275:\006\267=a\004\375\273`:\227;>U\301>\034\257\261>Xot<\0350\n>\033\335h>\016\330\211\276w\332V>\236N\340=\005`\261\275Dz\007>\204\325\374\272#\002\215\276\252\374e>\r\367\261<k\303&>\251\331a>\213cE=y(5\276\2602\377<\332\277\361<\340\263\224=\205\355\233<O-\327\275\2625\211\275?\021\032\276\261hJ\276A\0356>\236\216\246>k\263U\275\231\254\235=\205-\316\275\370;\323\276\334\031\224>\313\255\326\275+\026\313\276\'9\020\276\270MS>\\!\t\275IB2>\203\221L>\333\265\005\275\230\360\017\275/\310\256=\216\206o\276\212\036*>b\033\371\276\337>1>\243\345\324\275\"\\\233\275\272\204 \275>t/\275\371\3200=\314~\224\275\0040\350\273E\\\207\276.\200\t\276\240l5\276\212e,\276\342\031\001=\311\266\177\276yq\226\275\213\365\027<l\257\364\275\363f4\276,^\247\275\246VI>\277\301\231\276\326\033\206>B\211\262\275>w\256\276U\364\\>\305\336\200=\"\036\r>j\270R\276\014#9\275\217=V\275\225\263%>\332@\234=\341\3507>\033\316D<`>\n>\204\334,>_\021a>]\333E>Ru\025\276i\371@>gX\240\276\014Hm\275\"\371\343\273\313\266\013\275^\225\207=\214\013T=n\272\027\2758\205?\276;GQ<\366\242O\275\252\304\005>\220R$>\332\250\024>\023\231\007?\004xH>1\223\372\275\367<\235=\2053\266=\261\367\221\275%cT>\234\201\233=\317\021\257\275M\036\203\275\250|\320\276\245\220O>j\034\257>\2175\315\275hv\260<\336\317b\276z\363\023\276a\260\242;\235\335]\275\342\302\004?,\301J\276\272\272,>\212\322\215\275\222d\036>J\244d\275\237\250U=\004\342\247<\321&\006>\005\375\241\275\3612\345=\361\225\310=\372\226o>S7(<\240\271W>\306\326 >GF5;\371\215O>\376\246;\276\373\323\374\274v\014\227<$bw\276]g\334\274\234\352\016\276#\377c\276\204T\337<\251\265\212>7;\226\275B\354\257=n\'\300\275=\341\220=f& >\354\306\264\275f\310\006=\276\244z>\243\343D\276s\210\240=PfL=M\261\203=9\207\032>\372\034|>\321\177\006>\023\344\205=?]\022\276\311\034\240<\310\272(>\372\261\203>\004\253\201\276\330\207a>ah\252=:\365\351=W\204\370\274[X\024<\307\037\263<\243\310\331\275jC\022>ro\266\276\365,6>a\316c\276\364\230\230\276\357\265\230<\375\232\373=\'_\366=\032\301\006\276\013-e>\267\237\017=\315\022\234\275\247l\331\275\037R\241=S\227&>\302\\\022\273\344\306\225>\252>\202>\221\366<=\020\316o=\007\326\217\2760\253\242\276{V\204\274\324{\371<N\363\307\276\345\360\006>\323\331$>\262S\254=u\227r=\350[\353>\254\024\245<]\3741>\004\223\265=[\223\257=\245Kk\276\014\277\303\276\031U\243\275n\022\035>\021Y&>\357\350\341=\312\250u>@N\275=8\222A;\221S5=\326\375u=\306\212+\276\322o\214\276Xk\014\276h\225\374=\r\226\r>\003V\257\276\005R\233\276\337R\237\275(\236\206=\213\306\230\274\351{\303=\261\371\201>P\226\320=\216\211L\275\352\264\252=\000\030C=\000\361^\276\225\223\271\27461b\275Y\265\227=\323!\030>\2058\323<\nm\212\274\310]\345<\363^\3748>\325<=Jpd\276\220`\254>\373\010\202>\300`\320=\327\212_=!\221\224>\207I/;\275A)>4\021\302\276\275\347\344=\256\323\220=x\001\243\276_$\024>Q\265\230>Sz\217=D\322\010>@\367\r\276W\201\267\275\345\317\022\276\362\272\257\275\037\335\021\276C\247\240\276\372c;>\0035v\276A\220\020\276\\`\022>\243J\250>I/\001\276\276}0\276\206\320\245>\344\027\t=6\257\226>\277\002\241=\271\244x\275\335X\210\274\'2\215\276WP\233\276\342\241\'\276po\023>{\026\324\276\362\001\220\275\004:\021>\245\361E>\016\311\231>g3\212=V\371D>p\277\320>\241\270\375<\257\2362\276\374\264\370\275~\332T\274Vr\244=\305j\036\276\333~\301>\\Q\270=\333hZ\276\311\327\007\276\340+\264\275k\201\356\275\333\3275\276\t\345\233>\016\237\306\276\261\363\241\275\231M\024\276d-\206=\332\221->\234d\210\276\373\332\271=*}s=\221\263\244\275\210\203 >\353?\022\276\023\375\202<\027\016\246<#4\226=\304\325v\276\264t\306=\205m\035<\373\223\353\275\'\027\026=?z\214\276\260\271\033\276\364\236[\276\262w!=H(\\=\271\342\302=\037\243G\275tQ\224\275\343?a>\206\270>>J\336h=\311\0230>\266\006+=O\0347\275\346\336k\276\375\"\364\275\364\267\020\276\261w\362\275\376\353\246;3\342\353\2757e\200\275\303D\030>\366\304\037\276\354c\237=z\246\205\276\001U\346\275\276\310\223\275\301x\215\275`-1=,\233$=\336.\216>\007\371\177>\332c\233>#\362\305\275\177\262H<\177\3665=\264\006\372\2754\262\311>\261p\334\273\321\244\346=!\325\317=\221\t\311\275<\375\266=d\'\335=\362\221\004\276\300\204\224>c\342\273=%\362n\276\276\366\224\276\036\177\000>I\n\247\276\212_T>\227/\204\276Qx\320=\215\233\200>\247=|=\002\036\336\275\021zv>}\314L\275\315\215J>\032\262\215=\316Y\234\273\210\321\207>\222e\264<?N\321<%\303:\276\273\\{=\377s\n\275\n\245\200>\273\224&\275\235\037\207>\321\377\334>\277I:\275\271\220\315\275\020B,=\266l\230>\252\001\200\276y\344\332\273\250\326\255\275Q\001\327\275\227:\006>\213q\266=\007\253\227=\246\376$>7\367u\276\366Q|=9\032\233<\341\033s\274\022\340f\275\237._>\304{\020\276\270\350<\276\364\372L>\022\252e\274*\r+>\300i&>Y\310\213>\244\0103\276\'\025j\275.\3176=\270\021\267=\244o\004\275%H\356=\325h\034\275\231Q\224<\3606\273>\002T(\276\375\304\203=\363\304\272=\353\377\031\276^\'\362=KW\034>k\221\206>\006\217k>,\004-\275[\263\243\273\345\2666\276\327\253\367<\007\243\332=\234\275\330\273G\253?=\365\344\320\275z\\\271>(Z\200\276v\211\303=M\347Y=\265\220/>\326\322W>C\222~>!\033b>\237\240\020>\333\304\277\276OH\025?V\001L\276\337\013U\276\272\314\374\275\024\272\212\275j\304\310\275\302\314W\276\205\227B\276bE6>\245\264\243<;\t\307\275t\360\310\275e\260x\275\245s~\276\2124\200\275\362\261\305=^\311\315\275\274\342k=1uK>\\\006,>\217b\300\275\316\223\223>\323\273N>i \334=2\313\007>\017\263\016>\243t=\276\334\000?>\252A\177>\251\021\363=\001i\306=ya\306=\311\226}\275Z\376,\276M@C\276\211\261\342<\332\331\331\276\360\255\222>\317\001\215=\205\322\253>\300\306t=;\312\315\275\263\376\231\274\037h\000>\245S\001=\202H@>\021\376\035=\177\332\007?\220\366\244\275\r\205|\276\333\301}\275e\2645\276\372\250\024\276R~#\276\033\367V\276\306\344c>\3406\335=>\027b>^\003\244=\022g\353<\272h\007=\023\371\341\275\321o\n\275\201\262\370<\276\222\253\276\361\265\215<\210,\365\275Z`\254=HY\206<\003*\246>\221\225Q\276U\275\026>\021\314\003>/75>c\025N\276\234R\215\275S\230\341;\244\306@=U\034\362<\364\036%>\373B+\275\350\300\232\276p\345{\276\020\253Z\276\272ZJ\276Mj!\276ck\263\275\360\005\274>\207\367\276\275\002\027\022>\334\256\277\275\034\252\210\276\274\203I\276\353\033\320=\317.\245>\242\240\265=\347H\227\273\237\312\205>\357\036\360\272l\013R\276\265i,>\013K\035\275\32780=I\207\334<0\233-\276P\330\230<\277\016u=v\216\217\275!\265\216>\344TU\276\2456\254>n\252\241=\"U\005=PG?\275\037\365g=\251\275\275=+\206\025\274D\220\332\275.\2600>D\213V=Ld\005=t`\325>\177\242\207<JPO>v,\006>\201\342\204=U\334\250>\336\t\372=DY\335=\016\267/\275\212\033r\276tO\262>?\200\314=\334\034I>\177\240\005\276\203\333]\274\275_b\276\353\325\244>V\224,\275\206\342\267\276\345\336@\276\237\006H>\232UY>\227E\265\274[?\334=\267\006u>\301Cb>\"!\267=0\337+>7E\222\274\331\203\263>\353\034\006\276\266\362\013\276\360\273\002\276Nc\007\276\333\312]\274,\322\200\275\252\363\206=\307\371f>N\305\017>\376s\206\2763cA>v_\330\275:\275\364\275\305\314\366<=\256\313\275\010B\002<\021\336\030>B\246g>\240U|\276\233\256\242>\331\004n=\334\364\244\275{\377W\276\362\300y:\030*\273\275\276\372F<\000\021\276>F\275\t\274\352\305\\>\367\266c>Ka{<\243\3275\276\242\220\367\274\345Nh>\002(;=\367\027\205>B\250|>!\242\361<\302\277\205\275zi\024\276\340k\345;\362m\347<q\221\027\276\265\270\226\276\304\240\223<2\276\264>\302\020\330=\271\021S\275\347\376\332;V\337\003\275`\305\315\276K\273\276\275Q\240r\276\254\200R>\365\025\332<0\304\243\275\364\255^\276\240\013\244\276w\277\233<\320\205\341>D\341\022>iB\024>A\2301\276_\216\320<\360/\305=\013\233\214\276\231\340\306\274\263g\322={\035\343\275\336@\332\274\037\247\351\274\356!j>\2450K>=\353\243>{JT\275r\233\312>\275\361\"<\364i*\276\\\352\365\275\262\014z=\'\2310\276\376\232\322\276\241)\240\275\'\335\302\276w\333}<\335\007\033\276\366R\342=\272\325\220\2756\000\231=\274\271\030=\362\206\207>V\372\017\276H\025E=\276$\270\276\\\303\240\275\310*\205>\025\336\005>\213B6=QN\315\274u\257\006>\315\014\201\275S%\214>\272\025\2476\034\315\235\275LY1\276\022\350\261\275\246\274\000>\321CW\276r4w=$:1\275\033\002\243=W\217\323=\317\251\365\274\375\334\234\275\236\035\r\276\310rC\276g\240\317\274a\203]>%\316\221>\371\026)>93\252\275\246\321A\276\266f\375=\266\344c\276\275UB>\313\326\217\275\326E\303;\255D\245\2760\333\213>z\301j\276\246\255\027\276\2072)\276\241\313\201>\304\260\024=(\315\233>\337m\366\275Q7J=fEZ\2769vH\276\353\036\250>\007M\312\275A \234\276\236 \n=-\3254>\255\022\220=\004\257j=\2606\177\276\236u\374=L\234\314\275j?M\275\372VT<*C\275=\222\033C\276\242\315\004\276o\006\200\276\350\326\355>-\017?\275\267!\240\275Y\231\370=\212\376\233\276{W:\276@\372\017\276\247\332\360=\241Z\220\275\304R\242\274\355\340\001<]g\177=qd]\275\233#\333\274t\342E\273\021\300q>wA\204\275k\323s\275z\237\206\275\312\236\215\274\221j\205=J\274\021\276\207\033\260\276\345\3737\276\260\225\265\275\340x/>\267\203[\275\377\375v\276D\307\324\2758I \276m\217$\274C\217\037>.\026\007=2c,=\216\325c\274gp\323\275`\300\027\276\357\205/\275\207\365\225\276(\021\244\274@$\325\275[$\277<\"\t\213>l#\302;M]\r=$\316\230\275pd\205>\326-7\276\230K\373\275\346\225\\<\237\375\215;\006\333M\276gqq\276+\362-\275\212\311\321<yDw<\022\nK\275D\001\206\2763\330\337=@\306\354\275\"EJ\275+\020F>^j;>Q\345\005\274\317\371\351>\276\347\032>\002d\236>\177\313Y>\254>\327=\364Hn>\n\027\263>x\333)>2\300\320\276w\004\241=\216\2053\276\306f\236>ul,\276J\262\206\276\033\254\220\275N\377v\276\2763\211\275[\276.>\007\374\030=\240MH>\361\275\222=Ml\205\276\377\357O>\312\370\267\275\0327\225=4\024\024=\350\030?\275d\223N=`\342\025<\362S3>\276K\204=\246\017\201=\005\325\006>\233\006\224>\"\354Z>\270\023L>\320\213\335\275\272\350\265>\353\016r=\302\203\233\275\213\272\206>\037\231\030<q\362\255=\363\216\314\275\252\341.=a\220\247\276\313\025\242>\244\035\r>\211\244\232\275\337\022G\275\323u\226>\032Xe\275\201\353\271>t\202?>9\361y>\207\177\326<\313,\221=[\241\370\273\240E7>t\262\034=\331\261P=x\310#\276c\306\245\276`k\322<\256k\220\275\030\257q>\305u\203=\016\340d>\232R\225=\257\253\337\275uk\200\276\334}W>\274\322\255\275\272)\032\275\337\"/>\3038\200\276\210\346\272\276\362\361=\276\357F\031\276>\353h>I\354\020\276\225\036Z>\377\214o\275\370\310,>\024\214\201>_&\232\273\376\037W>\321\330\007>\250\024\003>\240\324W>\376\n0\275\035\2054\276 {6>\210\261I\276\215\350\270>e\233f\274\026^\020>>\221w\275N\206\304\276<L\202\275\304bl=G\316w\275iw\243\275!\007\025\276\'\005*\276\351\226\217=h_7>\030\240f>\374N\204=M%\021\276z\017\001>\267\276\016=\327\234\303=\010\035\371=\331Ae=]A\r\275A\237\243\276~\220X=.\371%>k\320\226\276\200\247\212\276\3216\202\273q\371W=\034\353\341\275\314\nR\275\235\025\201>h\016e>\247x>=\367\251e\275\2774\257\274Oz=>\3542\235;\222\312\177\275\023i\217\276\367\034\244\276\301\276\376=w\010a;1g;>\250w\355>\336j\016\276\261\326.=\251\271\177\275pg\277<\321\002\355=O#R\276\351\222\262=t\016\177\276Hp\245\276\344\016\333=u\022\253>\317&\016\276Nf \275%\030\253\275\364\014\033>U\240\236<\0006\220=\242\337u=\231\210\022>\035\257K\276\014\372\303\275E\0169\276\317\370\326\274\002SP\275\362!\325\275T\246\211=|~\244\2766\206\t\276k\226\271>\246+\234\275\243\3144=\'I\330=\232\371\350\275\222\260\206\275s\275@\276\331\323\t\276\336\363N\2769u\326=i\252\307\275\004F\306=]\371&=\034L\023>\266\025\355=O\033\020>Q\343\257\276\370?\321\276!.#>#\215\306\275\216m4\276\226\242\273>\372\203\242<\347\305C\276\371&\341\274\353\3639\276\037zZ>^r\263\275\246?.\276\021\332\037=\363\000\250>\274\tK\276\226\305\262<\rz\023\276\006d\307\2753!\213\276+\342.:\017|z\276\340%~\276|O\210>\266\'\302\275@=\033=\326gk>\257\224\200>\000c\362\275\331\274\235=F\271\250>\351@@\275?\0076\276\336]`>\343\313s\276T\010\253>#o#>\352\345\207\274\375\3263\2768h\025>\032Y\362>\231u\232>\261\265N\276\317\000\333\275\025\224\013\275\005D\325\275\266\232\216\274S\032\363=\222ka\274\343\353\007\276\010\210\344=\\\246\254=\323pE>OK%\276\274iF\276i\004\014\276\227\017\300=\244\2532\276\000\332\215\275b\216U\276\367z\006>\034\245\250\274\271?.\276]\320\241\276\3240E\275*\365\232\275\307pf\276\355*D\276:\241,;\252\327 >\231v\207\2766*{\276\034\221\226\275\037\034\\\276\357\032\206\275\004\247\330>\256\270\032=\376\254\247>qM\277\272M\273.<\362\'\033=\306\202\200\275k\352\002<km\205\276\301\214\253<\247\261\370=\275\220(\275xPf<h\350\027>\235\200\360\275\343\305N>\237\"\301=Z\314\374=\234>\301\274\"Li>\245\212\335<\303\207\223>\031\252\266=\211\235\021>_\355D\276\\\324Q\275\3206\225>\006\016<\274\366\rB\276[\024_>2\316\347\275\362\177\364=\014/\306=\370dN\276\266\304i>\263\004V<utS\27653\265=o\221\262=]T\026=\330\341\360=\342\303l\276qh9\275B\343\017\276\342\347/\275\255\3018\276/!\016\276\275P\300>e8\254\275\003Z\204\276\217\325\255=\244`P>\266\314\236\276\014C^\276\210\242\022>yJ\372\275j\357e>\017\273\377=\370J9\276E\004]\274$8\034=\324_\215>~\251\335;G\263\223\275\245N%>\036K\376\276\371C\252<\373\274J\276Q\342-\275\261\357\224>\323\201\342\275\004Q\245\276\324\310\342\275\227iS\276\271\260j>\360\260\246=\004l\030>\n\213p>&:\233;\316Y\351\274D\353\370=A\362^\275^p\330\274\342\250C\276\260.\251\2750\254I>/\373\272\275-{\200\275%\256\224>\022\321\212\274\217\321#\276\245D\'\275\371\034\344\276@\300\002\276\302{E\276\177B\250>(i\001\275|z\247<`j\226>M\211I=5\031C\274\006\341V=\305\211\321\275\036T\256=x\271\001>\213\024\020>\031\366&\275\311\004\200\276\t\224=>\215<\225\274\261\033\356\275D<;\276\324R\225>$\275Q>\314\321[=$\177<=l\303\r>\256\217\210\276\022l\004\274\327\034\271\276|\266z=\\\257\214=y=$\276\310\326\r\276\377f\232>e\354,\274\375\206\311\276\314H+\275I\037s>!\201\235>{\260>\275\036\306\237=\\\357[>[\313\006==\331m>\033\254\177\276-\231\220=`h\335=\327$\227>\250j,>\317\270D\2756\227\036\276\344\257\036=\254\301\341\275\351l6\275\240N\242\274\275\031Q>\370,\215=\3308!\276\346\367\353\274B\002\313<\324\231\204=\361\231L\276\340>$=\035\023\017\275&\202\314\274\373\371\301=\240V\244=y\013\255\2763\207\026\276[\3421>\332\357d\276\010\343m\275\344\377\260<T\214\257=I\275\002=\360_\027\276\013\233\264=\353P\206=dZ.\276\373\370\313<\321\255\210>\301\214\007\275\223-\254\274\027\006\222>X\0031\2754h7>\205\335j;Tt\205\276W\303\034>\233\027$\276\362\037\357\276\222\2626>^\375\346=\036\327\"\276=\364\014>$X\221\275#R\224=\013\234\350;2M\257=\263\346t\276\205c\232\276\272M2\274\335\224\311>yxQ=\365\006\374=\017C\206\276\3539\365;f\244\222>\013\001\213=8\210\260\276\020:/=\354\336\002\276l\346\023\274\037\2722\276:\000;=\226\341s\276,\326{>\313fp\276p\205\221<\216\243\324=?\031\236\276I\376W>L\177Z>aP\323\275\2274\320=\237\370\036\276[-X\276_eC>\276J\341=w\355\247\275W\317s>\357\026\"\276\250\325\260>\272\311\305\276B3e=\334\026\214>>\265$\275\355\207\301>L\221)>(\030\'\276I-\022>n\300\030\276*\0306\276\244\014\257\274\276#\324\274T\331\237\275\001]\301\275\365\207\017>\374}\226\276h\217\037\276\330^c=sA\244\276a\000\324\275\317\215n\275\375X\202>gf\t\274\\\226\244<{pe=\2462)=H^\035\274S#v\276\033w\004\275\355*]>\364\220\253=e\010G>o\323 \276\240\\\323\275\316\302\243>\350\016V\276\341?\211\275H0\001\275\260\316\225\275v^G=\022\3354=\035\332\223>\236h7\276\206!\232>m4~\276q\222Y=V\336\274\275\326\037\021>\272[>=\361\353\370=G=\302>\t!Z<\236\277\277\275\t\305#\275\r7\270\274:\200\364=.\363\363\275m\237\230=\"\241H\276\370n=>\001\320\023\275z\356O\275\240\234O\275\304\320\342\275b\240A>\335\361\227\276\260<V>\271G\004>\323M\022\276\257R%\276y/\333\275m\206\262>\254\313e>\036\202\231>\263\216\303\276zA\217\275\000p\211>fv\033\275]X~\274l\305>\276\216\204\251>\017e\222>tI>=\026\347\200\276\301\023\n\276\331@\202\275\345\213\312:\0255J>\257\214\353\273\3131U\276\317i*\276p\301\264\2753\\\234\275X\327M>\270{\210>\242\325\223\276pO9\276\021j\221\276\272\307\030=\331?\201\276+2\250=\224\322\377\275\342\027%\273\340\267\034>$\225\204=%\316\350\275\367-\t\272\270\\\023=G\'N\276/\270^\275\3532\016>\026]\207>\205yN>\2253\034>\307\2775\2762\0042>\230\t\335=k5\275\274\013\326\304=\274V\276=G\264R\276\320\035\037\276\273K\237=#\220J\276\232\016\235\276-\254\251\276\254\303\225=\021\344\007>75d\273\001\302\207=;}\270\276\277h\216\275R`\352\274\2330\323\276\367D;>\202\360g>\357\236\373\275m\323\273<\307Y3\2765+\033\276\201\240\253\2758cK\276\212\032z\276\200\025%\275\036\271\334\275\340\232+\276\350*\275\275\235\325G=\226G\247\276\324\215p\275\003\303\316>1\274I\2752\311\\>\335?\220\276#\221T>\025\270\336=\241i\t=`<\252=\252x\206\276\261\311\304\275\332,\000\276\210BB=\"\354\303=rV\370<\313o\300<j_V\2766@\255=\373\244\021>\003u\240\275]\272E;\277\214\217\276U\233\362<\221\372\033>+\330\n\276\223\332=\276\322\215\206\275<k\336\275\354\211J>\371\037]=\'r\255>\275\245M\276\034\206~=\365\347\363\273n\227\030>\003\201\315\274\242V\270>\203\353\234>\275\013\376<<Bc>\006\0168<:pO=\266\005\241\275,#\010>\025\214\014>\310\365\035\275I\033\205\275\nb\272\275\001\227\200\276IKU=\001\360\'\274^Hp>\251b\344\275\\\351$\276N\"\323\275\333#\370;\254\214\210=^\257\331\275u\305\203\276\332t\030>\034\030 \276\274\234|\276\363\202E\274q\356\346\2745\255\230\275\240\364\247\276\023\020|\276\205\347\240=\304\310\r>\342\362\214\276\367\266\230\275\247\204\t\276Z>\254\276\017`-\276\306A?>\361\232U\276\266\270\273\2767p\324\275\035L\240>\356\344\211=\366\257\004>\337w7>\314g\337={T\231<\246\317,>\232;\241\275<`\331>\244\274\260=\307\r\365<\253@\006\273\240\330[=\273\264\221\276N\365\227>\371\250\352\275/\203\021\276\305\370u\275=\364\035\276\344\322\230\276f\006/>\365?\016>\035\034\3759?ze=\034N\003\276\321\374\"\275\253\036\351\2750C?>U\025\217>\333\275\266<\014dO\276U\213\">#\343\263=C\360\022\275Q$\213>\004K3\276\375\335\200\275\242,\340=\005x\023\276\2731\362=/\372\376=6\351\216><\334\320<1\254\324\276\356\0305>\021\026\025\276\267\\+\275\321\267\\=\251\211J\276`\346\375=\370\374\277\275,\001\203=\262p\374=I\320\272\275!\362/\276\036E-;\330\3765\2769)F;\266\204\221<y\212\033=\324F\255=\270\010i= 4\210=q\360\253\273\352r\340\275\315\025|\276\326\272\203\274VV\232>\341\370\352>\\\227~\2765\311\215>q\034\036\276\2041\275\274\360\2655>\003=\245>\026/\270>_?\007\276\177\222u\276\3635\330=pIu\276=\232W=n8\255\275\207GC>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\350\002t>\316\267\271=\353A\300=\225\034 \276H\336\215\274\231\240\222=k\312?=\234\023\017>\347\367\237=\333\243\372\275\016\330\016\276\226\304%>\324[\236>\236v\260\276\374\337\244>\212\311\371=\021\215M\276\364\253;\276`R\226>\027\341\005>\217-z>1\206\030\276\307\210?>e\335:=@\005\017\276~U#>\246UG\276\341\367\010\276\247%9<\332\271\202\276\363\331\226\275\241\377\000\276\226^\305>\350&\220;$\016\024>\010\r\222>\006\345\303\274\325\013\212<\265\022\220>\372\235o\275\235\000(\275\0364~\274\204\241\276=\030fr\275\377\270\200=\245\343\354=\360\202\350=O\300\306\2731\343\254\275\177\223R>A\2401>\333\205z\276\000\305\305\275\315\245\316>\0141\207\276\001\026\343<\370O\224\276\311\3404\275\261\246L\276c\351=>^\313\216\275;\263\215\275n}\270=\217\306\231\276[\244\005>\244Q/=D@\364\275\377\257J\273e\212\241=K\n\204>I\353\254\276\223\365\'\275]\270\003=\306B\335\276\361\274\276=\003\354\205>\034\254k\276a\302\303\275NS*>\316\362~>g\237\206=9\002\304=\316P0>\366\020a<\276\003j\276h\365\303\276\277\277\310\276\306h\274\274\313\337\037>\250<\314=x\252\220\275R[\177>\236\306\304=p\355\374=r\017\242\275\236\362>>w\034\263\276\0076\027\276\033\254\205\276\371R\036>i\217\272\276\341\323\222>\207\377\027>\t\346\221\275T\3208\276\232\220B>\003{k\276\322_%\276~\021\004>\241\022c>\035S\311=\227)Z;C\000\332=\350\322\330=1\261J<\201\204\216;\224\244\027\274\261\262F\276D\017\241;\204!\313\273\027\320\227>\352\256\222\274\\\252\243\276F\353\230>~,\023\276\336DW\275\003\227\024<\007\353J>8\370\t\276T\363\005\276*\326\263\275)\257$\276\320\365\355=uY\224=\352\266\221=Wo\017>\372\025g\2758\260\"> w\204\275XB\027\275\237\331\234=\205\223>=w\273\322=\210\330\261=|\002N>j6\215=\345\362j>Lf\001\275\324\217^\276(\237\240<\t:\220\276\274R\231\275\022\n{\275\336\212\t<x\206&\275\251\250=\276\033i\276>\252\225t\276\003\347\207=\217\200\237\276\363\267\006\276\311\207/>\252N\212>i\270\023\276\206\353\234\275\3107u<\352\266\022>\206A*\275@U\341\275v\365K\276w\256B\274\252\3536\277\366;\221\276\\\211\235\275\211\027\377\275!y\004\276\n\310\004>\237\3248>6\233w=\362\265\002>0\272z>b\035\022\2767\200\334\275\313F\016>\302!\020\276\232\244E\275\352\214\374\275\265\257\241\275j\321(=,\365t\272#\201\253<\033PJ>\305\372\360\276j\221\023\276\357>\204\275\303A\212=\3758\206>~\241{<\362\314\342=\331\022\013\275\340\322\373<\3503\221\275\025\367\304>\"9\032>\325 \245=f)\201>\244\241\025>~\\\032>\221\037\025=~\270\363\275[\217D>%\302\013>Cy\333>\022\031\331=\241\"\214\276d\255G=i^\316=\375\204\032\276\215%V\2763x\224=\252K\226\276N\234\332\275\276\006\n\276\216\215E\2744\370\247\276\031\014\007\276Z+\025>\326\213\006=8P\203=\277\251\007\276\303\243\027\276\362\267\220;\2179\330>\346((>%=\235\275-\263\265=\323\275\032\276y\337F\276/\200\000\276\217\3246>\361i\201\276\317\376\377=\031D\231>p%E>\270\251\225\276\371\342\203>\r\016t=z\277\023\275q\304\303\276X\346\252\275\001\315|;\360\337\213=7\222\217\275\334\'9=\220\005s>\363f\002>\256\237;>?\261B\276\004\006\013>\024q\004>\020F\t>VZ\317\275\264z\234\274\325Y\213=1\260A>=[\313\275\005\316\267\275\365\242r=\211\2279=\323+\316\274\321\312\322=\013\357\230;\315\035\354=SY\333\275\237p\212>j\344\231\276-\241\246=\321\230\360=\340S[\276\027\310\000=z\032\027>\017\255\316=\235\320\333=\005\226=>\355\301\004>\n\223~>\277\037y\276\350i\336=\227\205\255\275\020\321h\275\324\337\t>\006\306\376\275-\217.\276 \306b=RD\240\273a\251C=U\027y\274\273\216J=&\201#>?\016\274\275ke\335\275\371\016\303\275R\3413\2761\206+<~3\231\2769\324~\275?\270s=B\331\310\276,\365\034\276\360\3007>^\370g\276\363\353\234\275A\365\\>-I\277\273fC\301\274\367cc>Te\205>\031$\366\275\317\354\342\2757\020\202>\352}\243\274\244\2723\274\341\303\271\275>\270\000>\223\354 \275\007\t\300\2753=\377<8\306\354<\031\027D\276\321eF\274t\273\030\277\262j$>\311\023{\276\021\256\376\275^\300\361\275\332\2157>b\005B\276\377\265.>\332\301<\275\310\231\021>z\222\036\275m\311Z\276|\251\306\276F\263J\275Wv\265\275\223<\247\275\377=\301\276\360\256M=\276YP\276\332:\357=\030 \350\276u\304\024\276\351\245\016\275\255\253!\276JX\223>\'#\005>\361-\240=\246e\243>jb\020\2767\034n>\031\311\241>\345\264\230=\261\330\225\275\350\235,>[1\203\276\364zL=+\3036\275V\266\357\275\327F\025>\332\001X>\370\305\221\276\000\035I=N9\\=?\014\356\274\0311\306=h\204\254=\246\227\001\275\010\010\364\275\036\035\030=M\267\030>&i\205\276\254\014\033\275\214L\257>\023M\333\275\375>O\2764\206|\274\025\002\251>\331 4\276\0103\240=\225%\253\2756\354\313>\234`\303\275\301\216\317\275\007\353\300\275\302\370\205=p\020=\2756\327\200<\371\230=>F\224\310>~jg\276\262\205\237\274[~\333\275\270\260G=\315\232a\274\202\323x\276\271I\270\275\256\367H>\353\032Q>c\335\002\276~\376G\276\3550\010\276iRu=\022\342a>\267\0323\276\013\360\346\275\371\207\305<+;\245=S\037V=\377\224\352=\017\317\\\276qW\214\275\277\230\005\276$\327\232=\177\272G>?\245\230>s;\342=\346y\032>\371\376\214>,\374\'\276\303\031\353\275\206\004\230>i\032\370=\301\032\275=\363\354^\273\272\250y\276\375\000\221<\254\025\302\275\365\r\001>\350/\206\276\312F%>f\260\311\275<\227&\275Z\276\306\275)\307A>\225\326\241=Iku\2765\006\375\274\001\2208>\t\250G\276\350\t|=`\2446\276Hz_=t\016?>M\017\">\225_\031>^\336.>\245\343\207<\226\224\022>~\264_\274)\010\232>[2\275\276K\ny=\241\034\n\276\344\022.;!\'*>\377\335\242\274\t\257\"\276\307\030\352\275\362c\337;\372}e>R\350\321=u\030\373=\230\016s\276\277fI>;\031=\275\336-i\276@\035\220>\033V\213\276\355\263\020>jq\221>\252\036\026>\340r\306>\014\200v\276\032\272\177\275.\254\216<\346\311\216<.\365\002\276(\261G\276L\364\'=\273\376\321=s\306\030\275\032h\300\275Q\367;\276\034\001H\275\231\346\032>\034\251@\276\323T\345=2P\021>\331\207\216=<\375H\276\030\261s=H`\003\276\300\003\304=V\235\031>\201S-\276\361\001\260\275\334\212U<\362\264\377<\022\300@\276\262\365\024\276\255A`>H\372\246\276g\000\010>\246\220\217\276\003\215\336=_\2101\276v\314\306\275\362\3778\276Yg/\276\2120J\276\021?\217>\345\243\274>\216X[>\357\214\217=\364\'\030\275Dy\351=\206X\222\2763\"\364\2754\352\226\276\276]\251=\311\224\372=YW\r\275R\267\266>\374\373\364\275\314\344\243==\216\007<\201\355\247:y\373\013\2760k\316<\247\\\307<\327^K\276\330\234\233\276\227\260\322\276\265\027T\275\t,\256\274\377P\016\2756\000|\276\232M\334:t\263\343\276\333\004\033>>\233}\275[\264\327\275\340\340\202>\367\375,>\204\2543<>\371Y>\311\274-==\032\300=\315\266s\275\267\247\033=Q\343\">N\235N>W9$=l\362\016\276\177\313H=\367\250\021>\250\220\234<)\271.\275\215\332\013\275r_\t\276e\257!\276\237\247\224=\354\263E>\320o\226\275\340M3\276\247q\000\276\212\362\363\2754h\364=\305M\034>\025\302\260>\036\242s>I\331\263\276\266\203\n\276\244\226\204>\342J];yq\211=hqy=\264\334\343\275e\244\331<k\007\t=\343vh<\253\277\235=\315F|=\352s8>\262W\313>\336TK\276\264\315z\276\314\357\357=m\2153>r\321\263=\212A|>\305\231\303=\331\251\211>\002=a\275;E\225\276~B\215=\003\277\201\276\376\356\037\276i\023e=Yc\036\276=\270\321=\273!=\276\355\353\242\276\214At\275\013\"O=:\320&>\'L\000\274\371\320\252\275\005b\221;@y|\275\234c\026\276\371t^\276Bq\354=\277\242\223\276\257W\301>\372\223\254\274\223\302\316\275 \250\026\275\264+x\276\256\013\005>\316y\302\275\337\345,=\341j\204\275\201(\034>z\270\201\276\301\304\303=\275;\351\276\223\2423\276\355W\036\274\361\343\324=\246y\342\275&\226\240\276\'\325\t\276\n\337\220\276\361d\365=\267\306n\276\203\205\342;K\324\274=\204(O\275\014J\233\2768\366B\276\251\001\337=^\364\201\276\"yI>\2228\316\276\246/m=3\210l\276\231@}\275W\357\014>\362\020I;iF\225<wF\354\275\'\0266=3\307\226>\242x\204\276x\370\200>\005\033>=\313\202]>\227\034L=\212\232m\275\311\341+>\314x\200\275\334*\252\275j\0377>\330\332\004\276\034L\006\276`\026\211>u`o\276h\031\230\276\003ab\276[\354>\276L\324\344\275\244\227\321=\236\177k>L\324\256>\306\214F>\273\024b\276\276*\254\275\305\211\331>\2655\256=\002\340\233\276\244\360W>\260\377\001\276M\203@>\310\257\215\275\026NW\275m\233b\276\010\020n\276O\240\311\275\035bh\275\314\320\220\273\273\033\343=\226\037\205\276\206\310\302\275\255\305\256\275\224Y?\275W\232\336\276\303W\217\275\241N\322\276\317\232\267\276\024\'o<\027\2008>\323\237\303=\3062\010\276\242D9\275p\205Q\276\301s{>\030TB>\374 \004<on\017\275\341\205\377\274\036\234\217>\377\275F\274n\356\305=\253\356\257\276\255\372f>\r\263\245=\265dK>f0\256;\353\325\303=\251\203\270\274k\373\256\275]\236\005==\r`\275\363Q\265\273;\346\004>\217\364\033>\023\rp\276\251\254\314\275>WP\275\'\204\224\276\241\026\233\276\262,-\276\rO\372>\362\242.\276\0323$\275\271\216\226>1\311q>c%f\276\013_g\273`\370\261=@7\244\276wd\233\275h\273\006\276\207.<>JJ>>\247\223\267\274\345Bn\275\217\037]>\243\376\361\275\205\232\211\274\3557;\276\266\376\200\276w<~\276\227h\340\275U0K>\3272\223\275\323\216y\275\347\252R=\242\370%\275ir\005>=\245s>v\004\321=\002\325\001\276\243\352Y\275\266\366\275=\366\n\010>\241\321\273\276f\246\t>\275\276\361\275\204\236\212<\362\214\231<\247\005\240\274\245:\252=\222\331\202\275&\246Q<\336\356\265\276\035|\016\275\212]\036<<u\273=\002\226_\274\235I\266=v\030\\>A\262\222>\333j?\276\347\2550\274\0377\202\276\254\372$=\3615\217=\200R9\276\312B\242=k\276;>\346e\000>\341\'\241=\206\377\263=N]d\2755a(\276\224+\357=4eG=\207\022\333\275\300\352\241=\377>k\274]?:\276$\332:\276\351mT\275(\201)\276\t\356\224\276a\037\203>s\332\020\276\214d\346\274UX\324=2\2045\2751\220\200\276\250\262\203\275\033\245D\274\220\272\007\276V\272\224\276}\223\266\276C\022O>\314\350\033>\340\252\230\272p\2538>!\244&\276\335?\034\276\213\023\024=\376\353\217>d\376\321\274<\340e\275\'\260\275\275\320mT\276\347\365\332\275\023\374\271\275\344N\360\275=\315\035>]Ex\276i\266\207\276\t\267\033\276E\265\207\276\233\335\216>\344\035\304;\275\371,>\355\343\016\276\241#8>\314\001C\274?\332\\=N\313\217\276\215\274K\2761-!\276u\202\367=\301\020\300=\003\200\254\275jQ*\275\013\n\352=Fl\213\273\267\276\247\275\355*\236\276\274\n\013>\246W\035=\346\201\201\276\344[\030\275_Q@\2751\260\202\276k\222\256;Y\245\251<\344\265\231<g\306\240\275\225\316W>/\263\200\276\006\335\211\2762\323\t\276\r\3504>.\207e\275\027[\264\274\342L*\276\003\340=\276\261\032c\276\272\217\260\276\177\307c\276(\034A\275\270V2>\r\372 >\010X\316\2767\327\203=b\313\332\275w\216\272<\234F8\2756V\334=\352\351C\276\3775^>s%\222\272y3!>:R\256>J\305\255\275\264_\223\2756\215\206\275A\255\340\274\017\006\237\275]F=\276g\035)\276.\300\253\274\241T\316\275i\203\356=\267}\240=\257\321\000?\036\322\373\2756\364\320\273\271\253\222\275\331\264D>\232?\314>\2057p=V\254P\275B\254\272>\002\375\002\275`qf\275\027\203\256=\375\017\270<\366X\315\276?\265\324\273\263\\\255<\213\0052<J)\'=b\301e=\306\'\232>\310\215\302\275\022\252o<\202\341\261\274\307d\014\2769Sk\274\372T\023=\367\200\273\273Z_3>\375\223\332\275\201\227Z\275\230\203e=C\235\321<\241.v=\376\362W\273\356<\262<\30220\275\342m\317\274\276\237\360\275\227\224\332=\374\251\240=J\214\022\276\332\022P>?\020a\274~\262$\275\007\352\252\276q\t\021\275\327\330\013?\343R\236=\271}@\276&R\001\276\304\001\274>\347\0142\276\335*\216\275\212\212\211>\025\330f\276\330\337\330\276\305\316\355\275|\234?\275\371\236r>\032\010\023\276V\226\376\274\001\357\324<j\317\247>\\\236p\276Y?\025>\014i\355\275\"\236\213\276\224\236\213>\020$a>zm\236>\026\022.\275\337\020\344<\236\005\007\275g*\240\274\232\337\010\276.\354\240=\252 \226<\310b\320=\321\327[<\306\254\206>\210\022\206;%%\014>?y\035\275\355S\263=vJ-\276\037\3611>Z\206\224\276\244S\360=\357\010\231>\230\335q\276\305w$>\333o\233=8\254\325=%w\312=\213\260\366=\373G\261=M\371~=\326\2730>4\274d\2741\024n<\327yL\276T`\021;t>\203\275d\013?>$\"<>\227\223\270\275\303;\232\276\243\257\252\276$:\213\276\260\234Q>j]\207>\335\001d\275l\026~>)\226!\276\322\035\005\276\n{\022\276&d\320>C\342\272<\224\232\033>6C\035>$\022\177=\322\030h>\001M\210\275j\354\026\275\034\3377=z\264\266\275\223\236\362>$hX> \345\220=\004\216\316>c\234\204\275\262-A>\036\352\323=\260\204\326\275\2623\233\275\375@n\276\377\230\014=\270\370\"\274^<\226\276\311\025\t\276\225\242\007>g9\260=A\333\216\275\201\340!\276\270\271\036>I\037Q\276\352&\210\274\326\032\265>u\320?>\257\244\227\275I\210\002\276|\265B<5\025P=\352y0>\256\315c\274\260\375\230=\326\030\n\276\203\304\210\276\272x}\276,j\247\276\000:\252\275o\2055\276O\242\271<485\276\003\353\240<\275\244\017=\254\333\327\276\376s\025=!\017\244<2\017\247\276\001\207\342=X\247\006\276g}u\276\322\201\013>\203\014\315\275\372\214\022>l\253\322\275\217\177\207\2757tl<xL\214\275\302\347W>{\340V\276\356\362\370\275\006\342V\276\"O\233\276\034(\276\275\006\331\262\275!`7\275/\303\322\275\016\216&\276\213\317\342\274\255\202:<\361\004\203\276R\336\257>\276$\331>\364\347\030=]\317\222>2\025\354\275u\304e>\007\360\371=\361L\243\275\023\3002>\334\375S\276\357F\031<\031G\261\276\234\274\341=\331]\020\276\276\202\033=\001\330\251=\372\277\310>\205\002\245=\3602\377\275\263\333\004\276\371\004\341\272\025\3640>\3322d\276D\226\020>k%\312\273\325\345\221\274\3720\252\275\016\361;>\010\324K\276\034\354{>b\267 =kM\211\273\320\\C=<\271T=go\311\275\243\023\306=\002`}\276v\2059<\377~\266=Fi\222\276\003\344\227\276GK\254\276n\257\263\2755\3054\273\227\235_>\373\355\030\275\315\231\r\276\023\246+\276Y\332\273\275\222\037\265>.5\245:\027\373\246\274\227U\203\276\007C3>\227\362\301=;\220\323\273f\016*\276 \2225\275\216~\204=\237;1\276\324\203\202=\237\321\246=\342\234\\>%\262\020\277\215\022i\276N+\211\276\350\370\n=V\230\201>\251?\243\275\350g\211=\306\3132=\t\031i>\35009\276bxM\276ua\247=\256\377+\276n\370\013\275\201\225O\275\023\017\'\276\326\236\236\275[\223U>\332g\336\273\315\251\022\276\333\246.\276\313\223\356\275\332\034@>6\2709\275\304RN>\022@\247\276Z\247\000\276\001\223s\274j\2558<\027\005W=\332\357t\275\264\320\305=,i\314=l\305\265\275\333\021\375;b\376\321>\345\013[\274xo\237\276e\2507\273\223\245}=K\202\016\276*\267\241>\356xK>\0101G=j(\321\275\332\'\312=\'\255\206\275\3711\241\276\250_\270\274\234Aj>S\224\201\276\363\212b\275%\332\361<\243\207\206>\340\027\315\275\032\3311><N\022\276\006\263\223\275\326\272\263=\310\227\030>\217D$\276\024\261\216=aW\310\275\315\231*\275\333A\223=\234\006\202\274\217\307\324>\320\013\213>\032\226\334>g\037C\275{\315\220\276n\360\210>\034\342\271>F>>\275Y\345\362\275\005B\200\275\006w\301>g\217\000>\307A\"=u\0035\275\262\241\242\275\376F:\276\261y\226>1\342\017>\223\250\351=\242\252\257>\340\265\360<|E\003\274zC\264>\356\257\326=r\330\201\276\312bZ\276\033U\253\2762%\333<\360\006\260<z\322\354\275CHt\276V\250\203<O:\335>\032\316T\276|\217\331\275\010\205\306\275JU\250>a:\321\275MdI=\330\316p=\302\353\325=\332Qs<\207\355\031>\302\372=\276\0059\217\276\013\354b\276G\340\235=\267\304(\276\210\366!=\370\3312=_\025j=R\274\266\275\0252i=}/\035>!U\244\275(\271N\275\3142\003=\240V\223\276l\300\262>\017m\207>:\234\243=\245\311,\276\304\240\024\275?\263\227\2764T\276<\233\017|=\232\001>\276(\014\352\275\362\2769>\022#>>6\264|=\326\311\215>\032\313\252\276\224\357F\276\243+n\276\025\017\004\276\332+z\275po\214\275\354,\326:C\222\332\275@y\272>\200\306\222\275\014\327\206\276S\0339=\342(\340\275\r\275\250>\317\340\032=FA->\200]\230\276\257\347\215=%\370F\275\001m\324=\204Hp>\2115\205=\274\345\254:2O\355\275\322-\027>\006\307\302\2755P\230\276\313\2465\275;f\310\276\220,\216\276\330\230\032>\033\227\210\273aT\312=B\177#\273\331 \023\275\n\222\221=\342\t\374\275H\032\363\275\021i\242=H>\005\275\002\224\356\276B\354\205=9K\257\274n\301\032>\226i\231>\r\210\276\276R\241\006>\303\243\326\275\371\352\341=\t]p>K\n\230\276\346\217\000\276:\226\031>=\035<\275\240\344\335<*s\210\276\256v\253\276.\302\357=xW#=\376N\'\276\372\024\017>\226\366\033\276\024\034\024>\002- >\363\201\341=\347\352\275\276&\013x=\3523N<\316\234\252\2761\375\325<\222\353\340>\257I\360\275h\2544>\373g!\276\324o\233\275\313\225x>\342j\313\275k^\024>\372\r\371\275\037\337\326\274\364\202\301>\225\210\267\274\316(H=\330\276|\276\3555\016\277r\033\035=*\207-=b\023\215>\250~\270;\365\350\341=\265\010\273\274[TH\276\324|X>m8$>\027\257\326>\212{\235<\2218G>\336\355\223=p\324\030=\320W\365=\005\017\272\275\236\223\247<\021\307R\275i\032\331\275i\326\215\274\364v\256>\363W:\276)bj>\333\244,>B\215\027<\233\023V>\326\375\310\276K\030\320;\265\267\264=B#v>E\371\034\276\261P\022=\265\\?<\0001O\276c\366#>s\'\235;l\374\034\275\316x\276\274\017{\010<|\033w\276\363R0\276\214\365\254=\231\003(\276\233\337\330=\303\321R<\352\243a>\003\\\200=a1\220>\373\304}\276x\266\257=\237\023\014\2764\340\274\275.\022\212\275t\202\312\276K\304\027>\017m%\276\313\232\250>4\265\225<n\330<=D\3000=<\234.\275\3615\007\277\267\2103\276\006\376r>\177*\255=S\274+>\035A\254\275\322q\346\274\335!\010>\311\372\335\275\372\027&>\257\272\217>\362\201\212>\231\275\310;\250T!\276#q\002\276/\356E>\264\306\260\275\244f\024\276\311\215\307\275\300F\264>\255\207\034\276\036C\307\275/nL<\036\"\022>S9\225>\312\327\357\274o(\343\275_\305&>\253\031B>\"+1\276eP\336;\r\254\252>\206\253\232\275}eG\275\016\260<\276@\251\335\275?{B>\301\356\311\275\354\0146>\357\034 \275\264\374k>f\343u\276\031\324\225>5F\334\275&`\333;\010\3758\275\035\227\004\2768g\343\275\027\253s\274\203\212s\276\343\247+>\231E\361=\341\315\332\275\313}\206>p\024\377\275\255\311\234=n\353\005\276\3106\234\2757N\247\276\177\024\000\275\277\335n>\347\225p=\026\334u;\014\235\205\276\310H%>T\3677=^\336\225=\201r\214>L\230\200\2768\217\324\275\037r\n>g(\033>o-\025>\324\245-\273GX\'=\230\352\342=\365K\270=K\006\216\276|\222O>\303E\276>G!\264=/\r\373\275L6\264\276-\276\014\276\036\250\220\275\340\253[>\016_G\2759\362#=\253>$>\377\211\037\276Y\023\"\275`\001\265\274d\337\312=\213\365\000\276e\336\202=cI%=\032\030\345\275Ddg\276\326\274\332;\272\345\016>/\000&\276\327\306,>B\206e\273\346\311\263\276,7K\275\303\244c>\227o,>\346\276\261>\313\340h\275\262\360\204\274i\323\007>&\267\307\2759=\243\275\3327^=m\245\035\276\244\260\002\2765(\007>\256\312\263<\321\033\304\275\330\336w>\317GO\275\335z:>\311\211h=,K\t>\351\2124\276\223\263\326<\221v\023\275)\263\206=\363\273\245=y\253\221\276\010\330g=\031\356\274=\226\202\205>5\235\016>\315\200u\276Ip\274\275\364\312\215\275\025\214\255\275\376\372\371=\234\276\233>2\353\200\276um2\276o\275\256\275\0265\013>^i\262\274\216\233\213=nx\201\276.\335\315<a\224\005\276\265=V\275\374!G\2760\256\007\273\027=\213=t6\267\276c4\241=4\322\016>\331\037\205>\\\324@\276\351\2345\276c\204F=\350{\241>ax\302=\034\337\370\275\027@\277\276\235\203\235<\372\262\013\275\036\260\221\275\332\215j\274>\370\010\275\226:\314\275\265\350_\274\221Zf>K\r4>\3278\247\275T\001\013\276S\'w>A\025=>_\222\224>q\222\206\276\300\314\010>\002\344\023\276\032+\244\2749\223Y>\200\r\342\274\260z\235=}\206\206>\021a\014>0%\277\2759\333\201>\001\357\t?R-\313\274\254\010\235=\372\243\247=@J\277\276\265`\010\276^\016\216\275\004\262\351\275\225e\006\276zQd\275&\010\257=a~?\276\013\326m\276}h\205>,\231,\275&\214\'>4\020\254=\322-\233\275\024&\n;\207%)>\352ii=fW\316=\260\223\036\276\364?\313\2749@\003>\366P\224>\233X\225\275\024\3159>\032\220\352\275\371\0146>\343W\'>?\243\275\273.\216J\276\373\302\005>\311\221\304>\247\023\211\2746\242\364\275\314\226\304\275N\320 >\374\207P\275\333\3447;Z\247\364<\372\330A>\313\237\205\276\026vF>T\316\360>c\357G\276<\325\205\276\331,\026\276\321\270\351\275\366\2126>pM\247>\342\312\343;\227:\335=P\000Z>o!\211\276p5s\276\253j\021\275_P\013>=\273\"\276\341\364X\276v\003\225\275i\034\235\2763\254K>7\013b>\325\221/\275\332\300\235;\275\364W\276\024!\300\274\371\355]>\260!\t>V\320O>r\237\222=\310\000V>L\362\232=\334\262\365\274\336DJ=\222\374m>\322\247\211>\346Q\240=E\346\246\276\274\277:>\n\322\274;l\356!\275=,\362>\335\302\016>c\017\241\275\313D\304\276\353\356T>c\367\227;\337\245V\275\020Br\275\326\341P=\037~6\276\265|+\275\336\207\247\276W?\214=a\225\030>*\305\372=\250\306\240>\\E(\275\'\343\252=qr,<\236\345\r>\363s\022\274\357\002\241=(Jy\275\335D\234\276\\\344\326\275\222\370Z=\246e\263\276\203\341\244>\313\243\315;7\332\n\276\371\304*=\010)>\276\373/\032=\365G:\276`\353\265=u\267\343\276\240\264\204\275\221\235\205=\265\003\031>\220\td>\315\310\242>oT\273>\242\240p>\211\263\251\276\263\030\023=\'\263E\274\271C\177>bF\336\275\234s/\275\257\312\252\275a\353\030\272\334jl>\241\224/\275S\370E<3(\217=\241\257\252\275\371\370\241=\363\363U\276OY.>K\225\244\276\330N)\275\020\031\023>\\\341\214=\260\032g\276+\344\274=A\315N\276\342j\373\274\021`\010>\026\334]>\275`\321=z\246\266=\177\336\3069^u\247\275\237\276\000\276\310&\310=\010$\270\274%\213A\275\205T:\275\233\371\345=\326@\260=\010I\036=\274\343\235\2757B\030\275t!\377\275-\323?=\215<\224\2766#\301\274u\264\'\2762\322\364=T\262N>&d\251\275BC*>\036\353\002\277wK\304\275W\256\027\2760cN\274\361\002\337=\000\242(=\233\237\262\273?\311\321\276D\251w\276\232\205\240\276U\210\357=PQ\025;\3756\020\274\354\304\312\276\244\310M>\233\370\331\275\227\246\323=\217\321\006\276&\275\301\275\325:R\275\362\356J>\201>\001;E\025\325=\r^\227\275\262d\007=\227\372\262\276X\334\005\275\2026\036=\214I\244\275\025\'t>\375I\313\275\234Y/\276\030I/=i\270\264\275\273\333\215\276\330U\013?c/\037>\330^\326=\325\016\224=\252\245j\275Di\033>}\272\230\275B\220\241\275\325\364\026>\213\270\272>\373r)\275r\345\375\274\207\0223>\232\316Z=\365v\324>\205\1772\276\344\211\337<\036\252\004\275f\032A=\201L\026>@\270\213=\273u\246\275\355\214\022>k\256\303\276\231FS\276\254\2010=h\363\327\275Hf\211>\n\013\310\274\370D@>sQ\205\276L1\216\275)\273v>9\225\304\273y\315\271\275D\020\310\276\177@7\276\305\355\241\275GvK>\352\036Q>\365\236\007\275f\370\244\275\205\0142\276Vym\2769\206\037>\312=\322\273)\334\017>xL*\275\251\n)\276W\352\366>|I\316\276\340XB\276k\307\261>\315q\016>$\322S\275A\244\\\275\356\227\014>S\\H\276\007_\t>\273$\351\273n\302\t\271\022\251\231</\240l\276-\212h=\3729\t<\316\245i=9\r\301\275\023t\202\276\277\322\034>\310\322h>\205\262\361=2\243\246\276\331\263->\261\367/\276\346 \034\276\322\022\177\275\014\243\302\274\224X\016>8\325\271=\003\370\256=f<9>\342T\375\275U\370\">\273,g\276\200\344i\275\223Z1=\240\223\357=Fh\023\276\364BR>\025=\225\274\346\241+>\261:\206\275\240\250\254=*\263\217\274 \004L>\257\240X\276\237\353\374\274\371#\261\275\236J\205=7\244\232\276\'\017\365<\3543b>nM\364\275\013h\350\275\036\025+>\006\333N\276\257\243Q<Uv\213\276$\371\314=\240gr>Se >\357\317p>\025\n\210\276N\025\n>:`\210=v\236L\276Z\243\342<;jD=\007\345I\276\257jw\275\333\321x\276\303,\300=\363\226G;\374\216\035\2766\347\374=l\373c\275\350i\215=\023d\264=\262N\236=(\336x\274\254\032#<\213+\262=\315*\316=\220\246\002>\342j\271=\0030D\276\001\256\375\275\326\305\262=I~\235\276!+\344=\327B\036\276EM\022\276\371I\001>\222\232\r>Uu\272\275XQ\345;\256\242X>\007\276\226\276,\242\033\276,\t\210\276YVc=V\2313\276\204\334\254=\355\234\321\275J\207L>\3171\000<-_\317\276K\014\'>\363\342\215=\n\275/=?&\207=\216K\261>h\205\260\275\004G@=\324\\z=\375\303\024>V\317\006>\000\2101<\242\017>\276O\366^\276\256i\036>\341\006\007\276hx->+\032\017>\275\t\354=\345^[>\002\253\357;\222\375\031>\037\346\300=+\245\027>`\350\276>\203\321H\275\234\ti>X1\336=\217\235\312\275\211\211\200\275\247\2641=\271\316}\275\n\254u>\334\350\034>\236\030|>\246)8>\204\241\224<7\177h>\227\332X<"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\257\225T>\270\275\253>\013\\f=\006\013\367\275\255\257 \276 %C>\311\354\254=\341S4>\244\211K>\321.R>!\002\215>\344\201\005\276\007\035\323<`\304T>\000z\245=\235**>\266W\205>\030q\312=\004M\363=\354/\021\276~\255\225>\0315\375\274\033\\\202\275\315\273\000>\t$\271=\376\276\250\275\353\361\272>\215U\021\275e\t~=P\014^\276\336\000\243=\252\022V>.\374\324=\306\276[=b\301\213=\366\022\300\276\2258\370<\354\024\207\275<~\201=\307\365\244\274k\363\320=@tO>9\325(\276\373r&\2752\241\302\276*\000\202=n\330G\276\014*\024\276\303r\\>\205\377O\275\274\230`=C\036\323\2759\212N\276\225V2=(q\372<z\031\224>\227\275R=*P\241\275\021ZB\275\202JU<\360\265\312=\366 \010=\014\361\027\276\227\231\376<\325\033\203>Nj5>\335\321\004?\202z\036=n\326j>-a<\2748lU\276\310\316J>\314\212>\275/l2>HP\231=/\030\r>\241c\001>PP1\276\\\362\267\2755\277\377<\327?A=\'\362/\276\375\317\374=\263k\327\273\013e_>R\372s>2r=\276\215\251;>\323\314\301=\321_\205>\034\261\010>?\243\273>W2`\275~\274\257\276}\207\365=(/g\276\375x\307\275\372\353\204=\340\337\025>d\177e>\035]\222=\221\331Y\276\355\377\255>\020\331B>u\263\354\275\374\025s\2750\377;\276\352\323N\273{\010\255=\014w#>\253\270\302=\0210\'=\363\305%=\240\352C>m\241\"\275\352\242\216\2760\313\254=\210\237\235=\035w\340:\341\302\311\275^\227>\276\376\350\317\275\263V`\276A\036v\275\310\316\007\276\361\264\204\276\266\237~>\263\217\007>=K\031=\017y!\275\016\311x\276\265\323&\275KV\251=]\231\250\275F\3103\276\207\352\233>\3678\010\276s\366\227\276\302+\306\275\303\024\003>>q\003\274\037[?>\201\346=\276\005\215O\276\301\271W<X\233\r\275\230Q\227>\262\363o\274\354\323z\275=\0007\276\204pM>+\300\033\276\233\337\301\276\334\025P\276\232\013\027>=%5>I\353\376>\304\234B\273\014\335\377<L\201\331\275\376C\250\276\256e\003\275\233\255\260\273\237\245\005\276\345\245\244\276\373\205\250;\377)\276\275#\351{\275\222\361\004\276\310\222L\276\231\2629=\212b\230>\":f>\325XX>\241\256\366=aZJ\274f\213\336\275pk4>\361+{;\206g\201\275\322\002\366=K\033M;\032\263L\276jA5>\332\303\030>\334\256\265>\276\307\237\275\353V\346\274\376S\216>\t\306!\273\213`\271\275h\003X>T?S\276\217!\252\275\214$\347=\275\245(>\255\253\373\275i?\231<\267\207\325\275\210\244Y>\2402\005\276\235\323\031>\365X\311>\243_/7$\374\335=\234C\350\275\257Of\276o\220\206\276J\0130\276u>\024=\320\004\312=n\211M>\241G\201\273\003\341\210\276\230\013x>\217J\257=\277p[>`\306~\275q\006s>=\022\261\275\"#\006\276\370Rq\276\317k\241=\017\365\006>\242\251\247\274\323<\004\277m\224[>D\334q\276S\224\376;\013\365C=`~g\274\224\334\035\276\34015\276!b\016>T\371J\276\274\335\001=\213\213\221;\361\303\234\275\374\\\254\275\255~\362>L\360\305\273\351Os\276iKx\275\231\025m\274G=\272=\301F\367\275\336\203\031\275\013\262\036>\351\373\t>0\352$>T\205\034>{)S\276\320\027\310>\022\331\222=o\266\215\275\036\265F\276o\024\204<eh\037<\253\034\313=\225\335D\275u\356p\2753E\324=\372\247\233\275\307\265`>\030\340m\276\001z\036\276p\212-\275\030\221\243\276\370\215\037>\220k(\276\364\251\251</\356\323\276\267R\234=\375\006\306\275\rx\030\276\227D\020\276\225KQ\276T\222C\276<\273\036>\252t\237=\023KJ>i\336\355=\225\364\230\274\376\246G>\376I\177>Y\240\313;\262O]\275q\333\037\276\275\364\003\275N&u=\302\303\245\275ID\261\274U\356\352>\3709\177\276\203\207\026>\331\362\\\276\351\246\233=g\316F<\242\007A>\222\246\000\276\321\215\300=h\347\263>\201\327\206=R\034[\274M\352_\276\303\377\221=pA\233>\343\361\347\275\373)\322\275q+\030\276\021\344\200>\367\257_=\2479\t\275\221\254Q>r%\262\275\3331T=\024\001\232\27514\341\274}\000#=a\3363\276\322|\333\274\236\277\377\275\323I$>\203\317z=\363T\325\2753\352\020\276\203_\206\276v\264{=\325\364\n\276\324\2355>\374\026\006>\312Ep=\0215\301=y\221\013>\236\340%\276%k\307\2756\306\332>\3647\010>\246\231\213>I\313%>\302Ft=\024L\234=\204\214K\276\340S\306\276\312\3019\275\035\371\035>\310\035\230>\213\271\304=a4\346\275\270\231\372\275U=\373\275\035\356i\276\355\217\266\2748\3671\275R\222\031\276\317\220\031>\241\205\247\274\366\037\243\276\360\rx=&\344\313=#Z\304=}Z\375>\224\214\365\275\237F\"\275\205A\257\274=1\221\275X8\225>\262\000C=\303\017\310>\023\237\343=\222D\337=^\326\301\274Q\225\206\274?\272\202\276p\355z\275\021\0018=\330\330k\276/0\216\275NC\351\275\247\250\026\276v=\204\273\203\007\006=\210\025\353\271\334\202\205\276xd\303<#]\204\276\341`\332\275\366\016J>\232\357\242=\'\033&=\035d\332=N\330\035>\212;\203\275\030\216O\273\346T\010=Bs\353\276?\301\007\275\037\0218\276\353\371\006\276J |\276G\254\\;\026\332v\276\316S\221\276\377\002X<Y\375\270>U\301#\276\351\366\037>\302\272\223\275Y\013z=){T=\303\313\253\276\314\302d=\223P<\276\365\323\000\274\264\376v>\305\377\007>\273\327\235=\3634\n>\217\220\252=\315!\014>\317J\200>\274\024\255=\375T\302>3\326x\276\207\343j\2765\225\356\274|?\232\275G\344\337\275\272\302\235>\236,\002>\346D\212\274\235>W\276\000|\372=\354S\246\276f\314\\\275[\022\217>\270\302\221\274\271\032\005\276\357\2579>S\313\366=\351\366\361\275\3214\033>\007t\331>\363\275\245\276\326&\027>\025\3423\276\227\256\'\276)\033V>&\205h>v\"\243\273\027\364\256\274\222\251\267>avU>\246I\310\272x\367\022\276\377A\352<V:\263=6n \276\254uk\276\271L\354=\003\377#>b\253\261=\3072\252<\305\373\232>\237\375J=\201\231\200\275\323YF=\211\275\217\27564\276=\256\027\271\273\304\326\250\276\340*\261\275\212&\003\274\250,\362={\206\342\274\304\212\200\2746\325Q>\024\241\212>\332\036\214\276\363\350\253>\205\311\226=\241\010\000\275\320zw\274\370YW<R\252$\276\005i\030=x;]\274\333\225\034>u\226\344=I\n\r>\202\244u>>Lo\276\265\260\250\276J\310\270\271\304%\226>\035\001,=\n}\324\276\342;\353\275\222\306\007:%\217\224=\025}z>Xq\227\276\372g\226\276\246\376J\275\n%]\276_\025\201\275\357\336\231=\3244n=\215\0031>/\207\242\276\236\022\312\276\340Ic\276yE\353=2\354\'\276Q\355\307\275U6j\276\306\215\265\275\336?i\275\345\236E\276xgm>,i\202\274J\370\354=[n=\276wVa\276G\346,\276\371\242\021>T\000\263=\346l\r\276U\231\016\276\211\213\022\276,\276+\275\020\025\031=\\z\n\276\361\236Z>\315\353\232\275\212#$\276\022K\253=\231F\311=j\030p=\254\233m\275L\251\220;\260\037\365\274a\330\225\275\273i\222;\021Q\241\276\236\252\327\274\000\332E\276\371\337\320\275\r\303|<\351w\347\275f\3337=\262S\245\273)\243\254\276\374\357\243\275\307Z\247\276\'\357\234\276\327q:\276\024\305\225>Yo\247\275G4Z>Y\260>\275\254\304\271\275\021\331\016>\331\365e>\373\362\231>\032\3413\275y\177\022<V=\\\276\346Gr>\205\273\275\274m+=>\321\374\207\275\201\245-\276\322\272\251\274\222\"\010=\322\331Y\275\202\010\036\276-`q=3\034\232\275\257\2300\276?\207\312>\003\340\322\275E\253\242\276\326f\254\275nQ\313\275k\336=>\"\225\264=\254\370\005>d8I=\351\272\334=g\002r<\214\314\237<\000\237Z=\203\376s=%\375a=GG\241>+}8\275\030\340\323\275\270\233\226=2\305\371>+\256\326=o7\r=\333\314~\276C\036\213>\355\037\207\275\306\377\024<a\"\373\2756\003\210<\320|^\275\360\304\212>\205\272\331>\200~u< \3133\276\362\260C\276\236\332\026\276:S\231\276:\262]\276xQ\237\275\005I\035\275\035FR\276\332\341>\276)\325r\276*.\367\275\027\021\\=\203\036\376=\2253\325\275cm\316<X\250S\274\004!=\275\256\'\251\274\303\335\204=\204\207\212=r\302,\276\273\263?\2762#\004\276\311Z*\276BN\t=\245,\016\273\202\273\210\276%\"\005>\271\365\200\275=\222j\274\014/\025>\376Z\312\275J3\212>MR\263\274d\250\255=Y \366\273v9Y>\374\277\244\275\032\020\212>\026s\320\275E\235*\275\343\"t>\0176\303\276\010\007h;+\201\334=\243\321\235<\357]\350\275\3554x>wc\033\276s\030A<\n\300\304\276\361a=\276\222\343\260\274OA\364\274\340\033\273\275z\351\250\2740k\227\276\351`\214>>\206u\276Se\204=6I\001=\344\224\t>\343\222\225\275y\013\202\275v\276\260\276\253\376\256=\"^\022\276\311\200\307=k\305\022\276\373\032\232>\304Bb>\205\356\211\275\371\220\033>c\032\316\275\227*!>\310]\344=N\374\246=\'*\354\275\002\244p>\230\214\227>\304\372\263;\276\351o\276\213\247f>\366l\377\275P=Z=\264%\276>\r\216\351\276\360c\201\275J}\235\2758n<>\366\032\233\274\320\036\237>5\255\223>\002 \261=f90>f\331I\276y\023a\275\275i\326>\360\027\210=\346)\233\276_\257\232\276\203Q\375=\020\212\301\275\224BH\275\201D^\275\322\347\225\274\360W\020>\177\347\206<\031^*\276\253%m<\037s\324=[qG\276\275\261\265=\372\306\017>~\316t>\343\331\220<\231V\"\276\177zi<A\236n\275\307Vm<\304\347^\276\206\2214>\327\242\343=\245OV\276\346o|<G\214\333>S<\207=\343f\251\275\227\264\313=\256\361g>m\324:\276!\363\355=\245\271o><\"\346\275\351!\010\275P\365\212\275\317\316\351\274-B\226\274}\342`>1\000$>,w(=\336\350\254\275\007\245\">[\270t>cR\001\276\203I\233\275\033\261\340=O4\231\276\214\212\221\275\262i\245\275~\255\341<\340\2078<5B\261\275\035\342@>\370x%>\254b\306=[~\207=\353\305:=\207\n\020>%\026\262\2754\220\247\275\\\010h\276\313\351\265>\245Uz>\20499\276\177\022v\275%@\206\276\266\340\267=\035\002\200\276\364\212V\276vVW>#@1>bB5\276\364\260K>\377J[>\3670\240>:%\003\2763\371t\276\204\036\215\273:\377\001\275\371\0015;\3100P\275s}A>\014\330y>N\217\341\275)\221\207>?4\355\275;F\215=,t$\276\036\227\311=&8#>\351\363\235<\031\336;\276\204\357\221\276\243\242\316=Z\226B;\'\002\256\274\235\t_=\321\211\373<\371f\275>\303\017\224\276\r<\374\273\331n\n=\357\007#\275\257MQ>G\333\252\276s\374\'\275\335\261\316;&\366v\276Np\347:\340\222t\274x\317\220\275Y\311\341>\345E\023\276&k\023\275\355\371\247\276iG\241<\254\024H=\321\376V>\032\023\344<\177o\313\275\326\277\025\272\361\265\216\275\\\307\262;\326l\256\275A\242L\276\027\300\207\276\375\360m=pA\025=p\205P=W\377G<\341\2212=E\233\224\276\345.\307\275SF\204>9\251\307\275\226\033\220\275r{N>\211\257\030\275\323\211[>\014\341\217>\314\206\273>)\204\372=s\256\333>Y\262\203\276\372[\227\275=eK>\335.\243\276E\375\"\276C\315<<n@X>\267\365\004\275\177\n\362\275c\347\r>\275\2710\276\265\025\306=\317\336\021>M\223\241\275\231\3513>\302\360(>\244\377\240\274\226JF\276D\204X>-~1\276\253\310\374\275<h\310\276P=\003>\205\332/\276B\000\327=_\270`>\021=\261\275\013\233\333\275\032h\314\275\350\372\031>!h\250\276\360\301\336=i8\014>\354:q>\305\232E\275\377\035\207\275&$\n>\331\204>=\344\313Y\275p=\256=|\246\023\276X\227\213\276\332p,<\212x=\276\361\0164\276\204b_\2760\351a\276P^\021=\222\252\006\276tUY\276\222\267\006>\2664~=\017F\204=\373\353_\276\271u4\274\244\"i\275\2633\206=nG\245\276\007\304\205>m\010O=G\020\211>>\201\273>\227U\005>\021\323\361\275\205\242\224\276\347\272\231\275M\370\221\275\202\365\204>\262i\207\275\206q\211>\215\n\260\275\363n\223\273\"\367Z\274k\200\211\275F\032V\273j\0300\27608i\275\003\2665\275F,X\276\005?g>\200\013\024\275\275\034\205\275Zo\001>k\024L\276\021\214e>\251\322\030>\307j\334<!\227\230=\n\221\004>\032\271\016>s\3073\276\351\212E\276\257\010\214\275\246\026\321\276D\233\300\275h\215\341>\200\264\356\275\216\r\002>\367\202->\t+i\276\366x\033\276\356\264\372>\243\366\236>\263r*\276e\267\366<+\370\000\276\017\200\227\275f\225\260\275\245p\252=\203\177\'\276\204\371\r\276\354\202\355\275\204\025_=\316\217\033\276\323-?<\347O\335\276Z\274\201<\202\007c\275:/\014\275*\365\206=\357|@>YX\252>{l\003\276\357\201\325<;R\240\275\233\260\261>\027\222\324=X\246\275=\306\310\202=\t\250P\276\333\352l>U\332\017>\373\356K=_\265h\275\262U\362=\262\275\025>\337\307I\276 \331\324\272\210$\236>a \274=\256\212 \275\257\036V\276[\367\354\275##F\275\'P\274=\211z\363\275\254\020\201\275t\014c\276\346\032\243>\222WR\276b\227g\276\270\362\263=\222\224\264\276\"\243\241>\035\301\204>i7*>\313\333\031\276&R\232\275p\355\255\274\321@[\276\230R\227\274i\321F=\355\331c\275V&;\276\252\027\330<n\257\202\275\211\3653>g\257\255\275\304\303\215>\357\304\314\275\370\262\'>\352\334\263>L\372\010>\376\307A\276\217,1\276y&\363\275z\362\335\275\206z\232>\302\233u=\341\033`>\030\010\267\275\306\275f>\233\215\255=v\020\343\275\342g>\276\3201Q\276v\301\034\276\305Du\276L\2142\275^\034\357\2750\224\000>zgi\276v\342\263\2752A\031>h\002\253>\003\247\363=S&k\275J\225\271>\254\356\270>\023\363\364=^\365\260\275\254\344@\276\361\255\305\275 \263\363>~BW\275\321\221;>\373\311|\276B=\335\275\276\033h=\025]\034\2766rT\275T\"S\276?\356\374\275\243h\221=\341I\266=\034\223\364=\345\277\240>!\252\335\275\2632d>\373v\351\275b\005\n\277\007\026\227\272\nq\357\275\334\0359>\026\316Z=\2168\177=\'\363\307=\351I\223>\316\372h\276\331\036\005\276\276\263\247\273\310\254)\276P\370\034>Zn\201=\235(+>\001\036\251>\267\274&\276\245\231\231\276b+7\276^p\317=}\336\\\276\020\343\n>-=\374\274@\306\340\276\035\223l=r.x>\221:\032\276\323n\307\274\305HN\276b7 \275\326\264:>,\303D\276\302\357\300=\303m\373\274\245\262\010\276\322#\223>F\214\010\274\270/\313\276d\236,\275\306\200\241<\2648>>\321m8>1\024C\276\304\005\240>\352Q\253>\316h!\276(\271\277=A\n\010>\r\360\212\276\330\365\214>\347\323\353\274D\013\202>7\350><\204\271\322\276A\260\377=\345\300\367\274\244\376\"\276\354\374\210>-?@=\307\240R\275f\'\214\276m\264\006<\214B >\026l7>\350\020\177\2767h\233>_4\217<\316\266\334=\005\347d=QJ\242>\303\244\317<\360l\210\276]\026\375\275\001\271y\275\236\215\204<\306Y\000=\370\204\265=d\335\274\275Y\'\244\276\341ZY>\210\271y>e\315G>\370\224\227=\215I\217\276*\220G\2767c\032\275b\004\327\274\315\214\022=\001\330E\276\347\243\210\276?&\267=\254\344\236\276:\016\315\275p\013\030\276 \\\224>;\372$>\030\364/=,\340\033\276\325~\237\276f*\323=\362\234/>%\306f\276x\315\237=\342\224\361\274\233\267J\275#\220\323<\303\2624;\246\032\306\275\242\023\243>]\266\235\276 \307\251\276\231\346\006<\252\264\246=\247\000\221\276\363\241\372\274\021\325\210>\026%\003>Z\306\360\274=\261\t>\314\342\032>\024\362]=\325\321\214\276\031\374\036\273\265\367\244>\300\313\362\275\334\377\217\275\201\2013=\235Y\177\276C\302\250\275_|1\275\314Mv>`o\270\275\222\205->\204\257\343\274\373\305\267\275\246\277x=\003\323]\275\315(\340\275j\261\013=\331l\261;)g\226=F\323X\276\034\315\337<B\'w\276\275\200\221>\263\004\265>\203\037\227\275`\2422>>d\207=$p\021\276n6\351=~\212\342\275\262\013\252=\336g\250\276\0027Q=yE\270=\353\242\220>\302\2177\276L,f\275\330S\213<\335A\200>t\266\276\275)\257.\276\223\027\177\275\276\360>\276\355\317\347\275\016k)>\2055\362\275\256\207)\274\031\371\035>-.\251=\333\220_>\245\367\204\275\006?\214>\261q\252\276o\255f\275\237,\216\276*\246X=Hqq\276\202\256\237\276\006\031^>\031A5\275\376\320\242=\214\002C=\313\214\267=\252)\230\275y\376\022\276F\2636>s\246\370\275\177\317\027\275kOH\276\0164\017>\367\373\201\2756\'\224\276X\210\013\276\270\252\331\275\215o\336\275:b/\276\206[%>\036\3371>Y\362\257>\362$7\276\300\335\306>\331:U=@3\203\275Bx#>\251\346\246<[\301\214>\214\225\302=\212Y<>\315\371u\276\031\300\372<\372,\325\276\245\004\206\274)\243v=\374\343o>\225M\234\276\213sr\276>\024\202\276\371\276\211>R\204\262\275K\345`>;\023\310\276#e\277=\376\035\023\276O\306:\275\372\240\017>$\335\270<n\370U\276\243\314\r\276V\n(>\323>\253=\300\"7\276k\255\321<\253\305\303\274\230SK>\016&\217>-@\335\276\317w\220\275\235\363\276\274\365{\312=\366\224\351:|\326\206\275\200R\257=9\336\257=\275\272\227>\025\307\030>BR\027>\3734\337\275\223\363)>l,\352\275V\322\377<\363\360\362\274\022\"?>\002\021;\276\361\250C>R\301(\276\356\337r=\361\353i>\310\375j\274\273\254\020<\231\313\006\276~<\233\275aK\017\276\314\313\002>3h\202\276=\353{\276\221\227\324>\314\235\000\276\262\026j\276\351\2748>\232!\314=\223\326L=\225x\202=\271e-=\005^9>\037g\007\276DFH\276\207\372^>\031\375\207>\230\367\035=\306\207\300\274\244\372\245>?\213\371;\244\256\">I;<\275\037R\251=\251\272\340=\312\211\017\276w\320\255\276\243\276\240\275\237\t\364=\226Ti<Q\354\200\276{\215\266<\343TM\275\014\\#\276S\013/\274\342\324\002\276\025U\331;\023\265\213\276e\240M\276\014\236\000\276\031\3504>A\312\022\276\211\201?>\326[O>\214`l\276\360\215\022=w\242$>\230S\216>\261\234o\274\211\254D\276\263\312\n>\271\274\313\276\212\233)=\366\221\222=4\313\262=nH\023\275\375\031_\275\360\333=>nA+\274\347\2331<=\324O\275\224\353\274\276$\313\200>\267\177n\275WU\265=\000\274\001\276\322\342\361=\252?#\276\0027\220\2750_\r\275\333V\302=\004\347\342\276c\037\014\276\243n\201\274\212$~\275.\356\234=\205\027s\273\332\034^\276f\020\221>\232h0\275\223e\207<k\2061\276\2610y\276U)\243\276\200:\307\275n\007\327\274\302-\206\275\244\317\352>\336^5\276\035n\"\276\233\262\260=\360\267\215\276\335\314\362=\003I\352\275qU\316>\353\313>>K\315\230\273W\325\337;>\305\306\274\311\370s>&T\324>\212\255\340=\342\366\020>:\362\325\275\330\266i>\376\373\240>\222\0313\276\342\267\275\275\374Y\020\276\320\001M\276\357\325\220\276\257.\306>k\232\222;\006\303\231\276Xq\375=\026\016\001>\r3L>xi\024\273;A\345<V\356A=\363\014O>\002?\254>\265\204\021>\242\236v=\366i~= Y\211>\323q!>\327\022\311\275\234\211\333\275\002\264\273>\337\254;>n\335.>\032\317\007\276\233\3238\270\366\210N\275\243n\276\275\364\235\031>J\222I\276\215\225e>\233*7=(\230\361=[\200\302=\333H\244;6\305\260\276\276\216x>Ht\301=\304\237\022>\274\002\212\276\366\244r\276%\242o>\372\023c=\016\241\343=\014v\027>-\361\207>O\'f=D\311\026>!\327\235=\211\026\312>\311\243\203\276\016\254\n=\177]\300=\003SY\2737\224\021>\240\246\010>\343>?\274\340\270\370=4l\260\275\272\210\332=\335\2669=\305\337\216\276)B\333\274+\'+>\355\377r\276\007,\265\274\356!`>\355\355\216>~@\322\275p\024\023=\275\247\240=\200p\246=\200\360h\275\311&(\276\t?j\276\373\370 \276\302\367e>\000\2267\276\316\032(>\352Z\312\276\337k\326<\250\036\375=\221\252\204\276u\201>\276ul\264>\331\274\n>\001\372\031>\222o\250>\024\216\225\275\211wW>\226\021\004>\313L\201\276\263\204\206=\252\037?\276M\261t\276M>\245\275\001\361\021\276\317@%\275q~S\276@\220\247\275\316\272\021=\302G\213>\t|\324=\332\203\002=\000 &>\340\013=>\032\023Y\276\022w\346\275\020\303\247=[Hu>t\336\005\275\340\002\311<c[l>\375\216\305=\345\257\326\274`;\021\276\234G\204>z\023\250\2766\301\030\276z\034>\276#\235,>\000t\301>.\231\306=\017\230^\276e\335\n\276\371\034Z\276~\000\237\275\221\227\207:&M~=rM\267\276\005\021\344\275\213&\213=\277\365^>a\366\376=d\032B>\336\002%\276\340\243\226\276]7\215<%;M>O\246\211\276\316O\010=\256\335,\275\211\356b\275\312|\205\276\362R9<\207\331B\276\014\223\217\275^.\201\275\361\234\021\276\305$\232\275\304\205K>/\336\323\275\337\245\231\276\320v\210>\376\232=\276k\226\311<\204t\037<\214\351\262\274\317kP\275 \037\320\276\233\035\234\2764\201\377=K\237\r=\320\320\006\277\266Y\024\276\343\n\247\275>|\022\275\241\0326>\223\262F\2769\010H<R\246\203>\326\3410\276\017\005\231>\306\223\345<s9\202\276f\032)\276\342\361\317\275U\254P=\010\343\243>\351\263\264\274?\300\\\275\203\341\033\276m:\n\276I\303\267=~J\000>;\330H\276y\nv\276_@\262;Bw\305=\177\246H\276\216hi=\034\311\034>z\207\033\276\353w\214\276\255\177\224\275\242\317\230=\007E\251\275\367J\224\275r\260\330=\227R\246>G\260!>\177\213\236>/\246\314=F\013F\276$\341e=Q\t\004\276\027E)=\261\022Z>\r{\272;\354_\033\276\005\252\024>\033;\220=V\344\212>\007\334k>O\260g\276\364`\230=$\036\235\274Vv\202>\362\324\253\276\366\221\202>\003\347b\276im\330\275\265\362\255\276\033_\027>*\224\346\276\362\rh=\304\357\223\276X\371\211>7\312S=\244\341\240\274\347sG\276\022\364\t<t\230&\276-6\023>\000\007s>\314\267,>\200\342\'\276?\210\327=XXL\276\366\216\215\275\257\004\n\276\210\317\277=\276#\364\274\352r\037>MO\007\274uq\\\275QCV\274\350\005\010>\033\024\200>\r\365\221=6\371\207\275T\007D\275\314\363\306\2750\363D=\372\345\272;.\221\203\276\315\3230\276\331\320\"> \257\030\276-W\020>6\344\224\275G\322\240\275G\302!>\201\177\021\276\354S\242<J\365\342=\213R\234\276\321oe>\252\305\233=\266\270\367\275\323k6\275B\300\255=\302\266]=\231_\016\276\273^^\276SNO\276\002[\346\276\277\331l\274\210\230J\276\235\344E>\227\\$\276\3075\032=D\321\202=\374\200\211\276\320\355\225\275e-\002=<\306\326=\0020\341\275u~\002\276\271;\250\276\225>\201>\202\"\203>\367HX\276\214Iq>nm\214=\230$\302>\034t\253;}F\t>)\376P>\365\215\203=\006\272\265\275\034k\356\275w\t\207>J\224\214=I\236\331\276*\211\223>\033\267x\276\245Z1>\002\206\013\276\352\206+\274\313&->f~P\276\007\\\351<@\361\210>\254wg>\205\2035\276\371B\006\276\334\252P\276\240\226\233\276r\017\021>\007H\277\274\301\372\250=N\207\177\276\023\364\357=\374\243x\275\314xO\276\272Q\006<2G(\276>\334\340=!\026\t=\227E\314\275\246f(\276h\316Y<8-\321=\331#s\276\021\2314>\017\203\362\274fbH>\341\3143>O\254\244>\317Y\007>\207\"\240\276\217G\210\275x\020L\276B\315^\276W\241S>\273\272\271\275\240\227P\275\033\020\216>~\367<\276\345\256h=\034pt>x\032E\276\345\354\257>\335\034\352\273\204\310\010\275\325\364\344=\206\0079>\205Y\003\276\010\270\034>BoB\276\364\243\257<\247X\024>?I\232>\025\204\203>\030\013\n>M\243\226=\366\200\022>\267\363h>\276\035|\276\014\376{\2753\032}=\024s\202<\262\254N=\323\274\'>e\221\252\275p\002\341\273\253\237Y\276D\347\257\275wnG\275\332b_\276\210\222\025>*t\225\276w\3741>4\271\007>\203m\026=\321*4=`m\224\274\324\237\005;\324w\210>\211?\032>!\352f>u\037\307\275!\034+\276\226U\252\276\343_|\276\321u\301>\317\222\032\276\005cf>\305E \276\253\024v=Z\225\203\276\024\365\344\273\245\032|>L\030\020>\366o\000\276\0360\237\274=\246\034>>\317<>\006-\202\275 \364\033\276\000\366\246=\304\272\230\276\373x\332<\310\'\177>|\260\232<Q\337\026\275\027=7\276s;2\276\340\211\205\273\035\032\'=nN?\276\256\236\266>\342\264\035>\021\253\204=\3200\322\275\341\032\225=\305\316\211>2\352t\276j\n\207=\341Jg\276\027\3341\276\302\202\262=\243\253\242\274\tiX\276$@\346\275,\263k>\261\350\210\276\350\206D\276\240h^>po\271>\330r\205=\025\261\331\275\204\216G\275~\267q>\022\024\301\275M9\021\273\264\2216>(\021c>\374\027<\276t\354\001=\376\264}\275\317\363P\275syv;:!\212=$>\002\276[Y\230>\245\274\'>\021~+<\021\330\003=f\010#>\023\007\022>\277+1=\255\216\232\276\233\201\371\274\350\350F\275H\'\003\275z\367\325\275\264<z\276\265\352+\275o\262\032\276\310\253\247>A\036\030\276\251\021\323\276qUq\275\t>\267=\027\365\324=\007\355\213=\234\234\372<A*\177\276\177\377\255\270c\206\234>\277}9=\346\346\005\274\323\267\274=;Cz\276\362\223\020>\373A*>\036\334\261\276\317c\267\275I\224\207=\204\214\312\275\251\355F\276\355f\260>\307A\341\275\207\223\207\274\200\340\363\275+>S>\341Y+<\251\376\003>\246h8=\226E\252;\346\345\027>\302\242\325\275\270c\027=\0215v>*`Q=\026B\244=\330\022?\276\370\234\203>\344t\016<2\363=\274\006<g=\362\352\226\276F;\n=\300%j<\017\331\324=\207\252I\275\331\326\013=\0072\027\275#b;\276\276>\t>\247\244\250>\201\316\231\274\210Lp>\327m\374=\222\274\311\2756g\332\275\370\321\036\276\306R\360\274\200KB\275]\345\247\276\370.\342=\312i9>\252\256n\276\n\2013>a\353\252\275\255\301\244\275\002\303\332\275\377\0274\276U\237\025\275\211\302p=n\r\201=\340\"\306\275\222\371\n\276|\333\035\276jN\366=\335\027\256\274]\325\375=T\274\331>\2618B\276\364oD\275\301\020\016>]=\275\276@\326\265=u$\277<\327\331\030\276N\n\007=\342$\214=jO\031\276\013!\322=}\256@>FVu\276\223\016\006>\373|&\276\347\256\224\276\347\007\027\276qG\034\276\000]W\276\352G\032=\254{&\276\210\361\225=\236N\026\275=\352H<\ru\023>8\236\203>^\'\311=\264\204\035>\335;\014>\3653+<O\326G\276\374\013\222\274N\213\246<\256\273k\276\341^q>\263\223\223\275OD\220>\n8\331=}\315\223>\344 \230\274R\355q\274\033\305\n>ou,>\340\204p>I\305\207\275\033w\332=O\022\177>\277\374\033>1\376\255>\017\003\341=Z\370\316\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "h*\341=\352h\n>\276\360@\275\r\025/>w,a\276\022\313\304\274\341\273\006\276/U\306=\311\310F\276\2402\265>-\242\311<|\343\027>\245\3312\276\013?\r\276\2304\036\2762W\033>\254\306E>\344\365b\274:\362\367\275_\354\257\275\315(\316<t.\013\276:\023\351\275\373J\013>\362C\330>\220\030*>G\365l=\345p\253;G\376\226=(\267\261\276\211\034\344\275\256n\263\276"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\366v\021;\241\026\335\272;\235J\272+=U\2730\005\000\271\251\237\003;\236r\3357\261,z\272\314\302P\272\025^%;\\\365\036\271\262dl\273\274\277Z7\276Ll9B\n\262\272\377\301w\2711~\255:\\\345U;\206D\302:\207H\025\273\373k7\271\253\332\265\271\250\204\003;\342\241P\272\177)$;G\016z:,ST:\270}\220\272\300\271\253\272<S\200\273\227\313\211:0\366\305:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\324\331\2718Q\327q\270{\304\212\271$\352K:\261\333\3668\307HJ:H\223\'9\020\231\010;\224\226\201\272\277\033\001\273\003U\254\272\230\365\025:/\277\2177\334|\203\272\223\312=\273}\035$\270bX\272;$LR:!\252\203\273\330\207\213:\276\376\025;\244\372<:\017+r9\324\376&;\246- :\374\304@\273K(z8,j\004\273u\212e9\324\217\330\271\241\252\2549\204S\272\272"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.01
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_903713b1225e451ead79006eaa437f9c/part"
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin"
      op: "StringJoin"
      input: "save_2/Const"
      input: "save_2/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_2/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename"
      op: "ShardedFilename"
      input: "save_2/StringJoin"
      input: "save_2/ShardedFilename/shard"
      input: "save_2/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/ShardedFilename"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/ShardedFilename"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_2/ShardedFilename"
      input: "^save_2/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_2/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Identity"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/MergeV2Checkpoints"
      input: "^save_2/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_shard"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_2/Const:0"
    save_tensor_name: "save_2/Identity:0"
    restore_op_name: "save_2/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
