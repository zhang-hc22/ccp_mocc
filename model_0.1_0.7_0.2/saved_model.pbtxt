saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\252\260\010\275\217\332\215=\312\233\272=\340*\327;~\303\232=1\235r>\243\243\217>\276\330j\274\3468\313:\222\213\313\273\220\365\361\2756e\021>Y\003\313=\371\315Q\276=\326q\276\352\264\201\276\026#c=\007;\303<\333\\\220>\032\032#>\205cL>\346\334\232>\333-\214\275\373\366\306=\340\364\035?` 7;\nZ-\275\271fK\276x$`>\341\306m>~\330n>\3642\317\275T{\264\275\254\357\262\275`\256\267>\225%\023>a\301\244\274\246\313\360\275h\001k\2749\033\341=#\227T\276\363>\304;d\032R\276\262\203D\276\376\033\233\275^:\206\276o\"\372;YR\261=\272#\355\275\"\203\243=\177\027\355=Y\263\263\276\271\237\312=}\200$\276#\311\013=\336\244g\276\2460\242\275s\2566\276\314\216-\276\216\372\332=\343\266\307=\003\311>>\032\333A\275\215\0048>\347zK>\2409\332=D\250I>\254Y\204\275\260\001:\276\2373\010\2760\311\231=*\232G><^\374=\375\230:>\275R\257\276\024\373\220\273\343\0352\275\240\323w=\312\345\220\276x\2137>\264\361\233\276Z\253S>\344V\337=iS\017>\343\201r\275\366hp>,j\243>\234=\343\275\000\315\331\276\222N\267<U\331\000>\370\220\014=\354\026 >\027\342v9\0303e=u\031 \276\314A@\276\004\016\001\276{\325\261\276\035\207\305\275o(\315>!\310\033\276\347[\245\275\363\346\330\275(N\267<\225\032\034=\215\243\322\276\232\210\370\275\207z\006\275\247\036\027\276\210\252\354\274\235\351\005\275b\200\327=\020<)=4s3\276?\035\311\274r?\034>\3320b>\331\032\371=\271u\033\276G\2345=\357\201\245\276q\345$>wz:>2\305\303=\300\214\244=X\350\274\275yf\023=\031\254\030\276v\376%=\337\350\035\274uu\333\274L\034\365\275\322\217i\274\253\030k>e\025S>\321\004\025\275\341\014\205<\026X\300>\355\343\200>\373\016)>\223^?<\r\266\r>\302\022\254\275\342%\370=\247\245-\275[\252\220\275\225m\302>_\231\032=\341W\022\274\215\335\245>\374\257\262=\265\003a\276\321\235\204\276\200\270\343\274\217\274L>gi\236>\252c\355\275` \223=~\212\355;\241a\372=2U\256=\002X\234=\023L\357<\364\301\361=\302\340\307\275kD\236\276i\324\377\274\375\004\"\276C7\316=\240\223&>\231#%>\353>\310\275\371h\235\272o\324\246\276\214k\235>\201)R\2757.x>\233\316\036\275Z\365\253\276\002j\037>u\307\324\274\303\355\307\276d\236j>\376!\364\275\366\377\034\275\"o\337=8\300\033=\370\322\024>\327}\203\276+F\315=q<\216\276\317\206B>\364\265q\275\233\343h\275\270MX\275D#h>\025\037\010>|\213\225\276\310~\251>|\266\201\274JH@<`b\231=u\371\252>\261\330,>w\207}>\221DG==\257a>\227I\">\376\\N\275\275\3328>\337\323\n\276UD\211\274HTl=/P\030\274H\311\315\274s\2425\276\312\213N>\005Ts=O\240\263>\304\032\251\276\t\320\250>\344\030\313\275\256\214\221=\227\371\215\276@\276\301\274f\250\372>\032\352+=ms\316=\037J\307\275\244]i\275kB.\276u\314\220>\227\236N\276\316kw\274\r\333\312\275\254\313p>\024Df\273k\0031\276\321\353;=\214\357\325\276\222RL=\001\267\262=X\260\257\270\310\240\335=\367\273\t\276\200\356\010\275A)\006\276\365\367\200;\355}\014\276\366\007e>\370\0305<\260\235\022=\331x\261=\024\027\n>\254=\220<k\005\214=\260\216\215\276g?\013\276#\334\356<\004z\305>\014P\024\276\362\351\311=k\331%\276\377\006\306=\263Xk\275@\025\320=\314\027\014\276\366\246K\275,\345\237\275\243\245\224>\331p\224>K\2350\274\375Y\321\275l\037\250>a\362\303=UOf>\250\006\204=\227\320\r\276J\234\235;v\250\352\274T\223\372\275\215\375A>\237\223\023\276\036\0312\274K\222\316=`\276.\2744\354g>\355\332\024\276C\355\216<\256\t;\275i\377F\275\337\330O\276\311\257\244\276\027/\026\275\250\224\213\276\226uH=\013_\242\276\346\263B\276]Z\3648\266\0222\276\341\307)>\206\031\225=\312\323\311=Kq|>\220\221}>y\252\316\275\rHD<\374\271H\276\273ls>`0\333=pz \273\302\007g\276\303\353\203\276\210\262\221\276M\206\201\275\307\307\277>\013\356\372\275bC\024=\340=\224\276\347\216F>!i\261>5\2225\276\027\374\005?\220\241x=G)n\276\271U\022\276\216\211\016>\242_0>\254\005\255\276l{,>L\270\203=\035\300\201>\344\304!>\025\001\014>\376\177\241\276\335\306\236\275m\301d>\236\226\017\276s0\333=\245\307\224>\035\244a\276X\363\334<-\021\216\275&\210\362</\213,=\037\303H\276\2322\262=4^\210\274\217\357\215=Q\350\316\275`\263Q\275\252\354\344=r\n\312=<\207\314\275\273\030\263<\0317F\276\216\217X\274\t\r\177>P\220\222=qO\322<?]\200<\237Z>\276d\350 \275\022\353A\276\237hb\276\030&\221>&\333\314\275G\020p\276[G\"\276\237\212\035\276nw\217=\370?F;\200\212}>\"\3156\276o\357\273\275\030\270\207\276\341\023\215\276\021>4=\304\355U>\357C$=\372LW\275\277;\254=\242\317\253<{#\201\275\300\177\\\276\203e\220>\316\200\261;6\204\374=\342\004\202\275\024!\226\275DK\241=H`2\276K\317S>\243\267L\276\311\367H\276\201\262C>%\022\313\275\247x\306=ls\210\276\207\017\230>\277\267Z=\203\235\t>?\247\277=\300ZQ\276\261\214\232\276\310\353\022=+\237\231<\230d\035\276\313\223\027\275\r\232\r\276\027|\266\276\\89>4}H\276\020H+\276EnX\275\264\323\351\275\303\030\361\274\212\266&>b\024\231\276-\003O>Z4\214=\255\252p>[\311`<G\371\001\275j\3445\276\372\005\006\276\343\013\244<\244O\234\276z \342\275.r\357\275\325+\002\274\357b\236\276\021@\323\275\274\276\310\275\034\177\370<\373Dn=\376P\001\276,0\203>As\214\276!i\245\276 \327\254=\332m\000>;\010\233\276Y8\323\275EZ6\276\277FI>@\256w\276\3561\201>\334Bu>S\010\350=\260\007\223\275\335}S>\3462\344<\343\004\231>\235\315\016?\367&\333<\306\276\201=DO\344=Fgh=Q\027y\276\223\370\302\276\223\340\271\274B\263\314\272\363s\316\273\373b\025=\tV\354\275d}-\275[3T=\365\\\020=\221\263\331\276m\347E\276}\346v\275\361(\301=\341\272\314\275-@p=i\n%=\257\210u\276 \336^>^t\004>\203\271\236=r\006\267>\271\030\270=O\277\362=)\035\202=L\210\230\276\365\361l\275\246\202/>\335\253\\<\374\023 >ZC#\275>\211$\275\202=/>~\300Z=\214\347\237\275\335e\255\275\327\376{=u\'/=\254#\330\275\373\353\212>0\3567\274\347\273\267=K\241\'>\\?c\276g\314\016\276\330\205\256>\366\2159\275U\242/>\2536\232\275*|\203<\237\344M>\200\376}\276q\317\207\273\372\357S\2769\023\204>\252\000\202>\033l\212\275\025\233\205\276\035\325\351\275\257[\221\275G\332\211>\335Fg\276j\350\377\275\205P\227>\0074\207\2757\236\212\275s9t=]\207m>\323\266\220=\237\007\"\276Z\204X\274$\347\032>\020\343\320\274\360\254@>{g\032=$Cz\276a4\326\275\375@t\276\242=\340\276\346m\3749m\332\270\274\276\024\037;\263\034v\274\376Q\343=\253\346\267=\344\225\224>\365\014]>\3070\217\276=\312\273<\347\224>\275$\026H\276\274\022\331\275\250\316e\276\325\010-=q\t+\276\005+\202\275\252ba\276\035\322\264\275h\305\253=X\271G=$]\326\274Hc\000\275,\223w>\\\224r>\316\207w\276\223\212\215\276\035\345\002\276\236\033T\276\326M\323>\016\212\265<\037j\361\275n\222\314<\\TL\276\224\241\332\274G\320\200\276\270\373\014\275\350\325\303=\026\365&>cx7=\031\024p<Vk\311\275\217k\303\274l\270\260>\r\206N=\362\331\331\276\307\027\306\2753G\230\276\343\215\221>\026\317Y=f\214\343\27591/>1\363+>\320\271\021>G\200\320\274uq\332\275\005V/=\356LZ\276x\255\277\274\014\3001=;h\377=\0208\025=5\236\271\276\327\315\306=\374\2626>\342\036,\275xC\243=\260\362,\276\340\215\241<y\0363\275\3460\260>\n\326\262\273\202$6>v<\242=-\177c\275\216\366\204=)\270\240=\245\024!>\336\254\257\276\361\344\332=\243\243 \276\017\273\314\276U\020\200\275\323G\354=\237\265\215\276\270e\010>\010E:\276\032\346#\276\250\251\210=\322\033\313\275\240MV\276\032\027\206=\327\231\234>\314\222\366\275v\355]=\322\336\r>w\324\326:\213\247\232>(\332\211>uN\212\2750J`>\252|\241<8\243\354\2744\226w>ou\031=\2370\031>\312~#>\2703*\276\013L\206>`\376c\274\255j3>\347H8\276\232\364\253\275@\3355\275GR >\240\227\027\275Y7\346\275\324\204%\276_\237.\276V`+\276 \251\235\275\262\342\231=\331a:\276L^\271\274\"\204\315=\332[\332\274\224\340v\276\206mH\275\3547u<+*\013<\206=\234\276+\302.=\242\235f\276B\306\376>\216\251k>l\036\021>\177\343\267\2768\336\"\276\3445I\276xh\204\274\231\230\214\276B\325\000>\032\237\366\275\373G\010=\224uM>:\361a>\217\337\022>Y\363\376\275\315M\374=s3\353\274o\'\001\275:W\313=\2477e\276\376T\320\275\007\335n<gIE>[Ae=\314\270&\276%\030\213\276\364\001H\276K]\'>\025<4>\336H\274=\214r\022\276\313\235\372>Z\003\026\276Y\310\024\275\375\376\n>4yL>\210I[=aI3>\356\234\363=]w`>8\254\344<(Xq>\273\307\005\276<\361\352\275\241x\017>\330\244\212\275\251Q}\276)\256\267=\216_}\276\030[\n=\223\223\250\275\361\317\340<@\234\217>\201\332m\274\255\356b>\355\355\n>\361u\255\274\261\331o>\230\2020\276,\036\313\274Ne\251\275\017zu>wIE>6f\211>\240\232\360<\211,\261=KJ\221<\323\330\201\276\310]\202\275\222\021\236>\3539\251\2766\n%\276d\254\235\275\275\204\325\276\246\373\243>\321\353\033\274*\310\021\276z\241/\276[\3255>)[\340\275<\330.=\035i\374=d\017\363<\264\022\251>\007\332\260>\006\261T>\272\2167\276\300\313\350=D,\377\275?XL>\314k;\276\327\260:\276\2002\223\274=\311\314=-?\002>\277\037\036=\344a\331\275\023\2342>\357f\225=\261\004\306<\340\016e>\0135;>%\321i\2751\207\037>\365c\343\274\177+\000>\252\021\251=\344{\200\275\257O\271\276x\255\332\275z\177\202>\334\\\236\275.b$\276\353\253\343\273\204\376s>\246\004s\275b\202\304=B\200I>\271O\274\275\340ch\276\017\026\202\276\334\255\017\275N\204\260\276Q\335\036\275W\211\363\275\010\2108\275\036\246\375\275\305\006)>\214@b\276\220L\376;3\322\274<;9@\276\266\260\246\275]\321\251>\222\321\341=\317?\354=\223\374K>\277\203\232>\366[\010<\317\037\023\276\370d\216\276@d\t>,7\037\275\t\306\215\276\204\000<>*:\271\275\301\304\224\2719>\355\276-\333\201>7\347O\276\303\266\322\275}\t\234>\306\032\000=\257\274\241\276\266o\007\276\213\221\364\274m\031\312\275\007\373~=26\333=+\177\244<G#_\274p\372q>sh\023>/\233\033\276\\9\010\276\035\235\314> d@\276n\220\265\275\275\004w>|a\302\2756\372\203>d{\004\276\254\306Y>\303d\017\276Q\333c>\355\353\005>\203\263\312\275\016\r\022\276q\351\264\276\000\325\250=\000\3501\276\223@\243\275\233i\"\275V\323\261\275z^\207>\305;<\276\376\374<\276\020\037\221:Sx\201\276A\241\r=\215\206)>\315Y\277\276\010\016\305\276\344\361\272=\256\214\214\275\213\251\277\275\373\234\336>\250\226\233=9\021\273<\253\0243\276\202_\356\275Y\375\331<\330\337\272\275\303\t\024<%\025\376=01\307=\315W\271=\357\210`\276\341\316\'>\365\305$>6\\p=e=\344=\303\244\n\275\014\236\241\275(4\016\276U\277!\276<\305\217\276i\031\343\275\221\217\210\275K\037>\276\214\214\200>\335(\213\275\244\221U=\265`\344\273\004\311N\276\275\300\260<\277\014%;\014\207\203\276\\\362<\276-+&=\320\222\236\276t\235\177\275\222\320|=\001A\262\276\256\371\276\275H\275\242\275\260\350(\271s\356\306=d\003\325\276jI\236\2757\203\266\273V\354>>\300p\223\274Yd\263\275\200s<>[\241K>\021z\327<\032\1777>\013[\325=\340\225\304\276\210E\t>B\256\212>\361\276K\275\2410\206=\t:\271\275\272\353Q=\30596\276H\256\247>\241\201d;\314\010\371\276\335<h\276\002LD=\017\324&\275As\275>\334T\212>\255\360\242=,\255{=\257\014\022\276\275a\325\275Xd\363\2747K \276\'$\316<c\315\205=\213\237d>\210\215\327<\227\376\310\274\316<\213\275\353~\232=\301*_>\225\345\310\275\306\327e\276\'\315\334=\261\227J=\376%\363=\262\326\223\274\250\316\311\274\305e\233=\235\343\236\276\344\376K\275\023\320x\276\'\3770\275\r\020\010>\232/a=\263\"\353\275]\340\227=hw%\276\322\350=>I\212\010>\302f\252\276\230\370C\274\233\020\213>\320d\013>Ug\330=\367\247,=\212\330|<\234\2740>\026\330\234\276U\340\375\275\304\323\010=\257\253e\276\231\234\263\2761\336\\>\035\001\265=\266\305i=vD\257\276\256\032\030>(\274\261=\212\306\315=\374-R\276G\231\215>\016\304V<x\334\010\276\222\353w\275\375\215\331\273\273\232\312>\304`J\275xu\333\275\253vj>f\362\003\276\017tB=fO\277\274\307j\222\2767/[\274\365\363\325>J\327\211\276\207\363*>\240\345_>,si\275\023\033\013>\365K\014\276]\324\242=\3429\237=\341\021\245\275\364\267F\275_\345\001\275\225P/\275\310\036\303\274|\275\226>\310D\317=\353\024k>r\233\211>@\\}<\025c\234\274\320ys\276\232s9>\020w\r>Q\\\275=\034sB=T%+=Y\331\010=i\230\210\276\027%s\276>h\210\275\346\037\233<\345\345\342=3\232]=\031\001\210\274\031\332\037\276\036\326\353\2755]\372<j\337+\274\201\251\246>R\202/>\0052j\275\365\227 >F\007J\2757\376O\276H\332\240=\021K\235>\225\260\003=\"\332\267<\203\245\242\276-\240\025\275\251\034\014=VB4\276\371m5<\237\034\240<\376\034\304=-<\014<\250\206\025>\372\307\033\276@\226\264\275\325+\317=#|\034>\0206-\274\234\321\022\277\022\314c>\311\263\302>\2405\240>\252\036N\276\266\272\251\275];\246=;\214l=\374U\210\276\374\217\221\276\032\250\027=\257\035k\276\210m\207\276k>\243\275\356L\263>\225\277\035\276\201\006\252\275;\253\232;\023\304!\275E\211\304\274>\314B>\021\262\307\276\241\270p>)\234\211>\314\">>\004\r\177\275\312T\353;\241\326\223=\376rM\276\022\222H=\252\r\371\274\200\361\336=\2318\201\274\366cH\275\002_(=i\340\230=\342:\252\276s;|>\255\3221>\305V\004> \364\276\275a5\031<T5\371\275j\372Z=\342\226\r\276j\377\243\275_\345d>P\036\220=>\370$>\256\311\005\276o\004T\274\037A\364=\232\262\335<\005\003\271\276\362\240\036>\376\316\000>n\231\263\275z\0161>\266\031\204\276-\231i\276D\004\315=\342]\303\275u\036\326\275\351\3724<8\233\001>\322\032\"\275\035\226w>\375\253\207>}\263\240>\204\037\000=\021\177Z>L\344\304\276\013\032\336=\nU\305\275!EB\274\302\021\254>|xl>z\261P>\262\237\314\275\376\204@\275\231\373\267=\251\275\033\276\222\366P\275\025\206\034>\301p\273>\262yK=\233\312b\275p\232\265\275E\024L\275Yw0\276ZH\201\276\0004\022>\366\323\201>;\211A>\336\365\205>\202|\302\275\312\345!\276\020?\034\275\233\316\251=\321\240\317\275!\266\234=/\247a\275\351\274\326=\364#\317\274zh\304>K\321+>\213\364\333\275\341\333\260\274\373\331\207\276\372\t\316=\234\203r>#\022.\276G\215\212\273W\232g\275\030\006\335=\265g\241\274\016Y\255\276H\304}\276=5)>\270+\375=\n\033\313\274#\201M\275\005\3644\275n%\221>\200\211I>Q\360\377\274\305\n\003=\251|\314>6\023\225\276\022P`=\3234@=x\201\202\275`\023C>;\365\001\276[j\235\275*o\203>\311(\230\274\030`\250\276H\277\314=m\006K>\212\327\311>\245\004\371=\365\n\221\275\224\021#<\316\212\213\276%B\226>\2138\356\275sl\032\276,\322\271\275\310~\322>\352<]<Q\227:\276yI\001\277\t\307(=\371F\356:\020\036\301\276\305\3620\275l#&\274\020B\217=\372\315\363\274\347;\300\275\326\271\323\275\016pP=s*\273\274\014\030J\276\272n\307\274v\302\366\275\0332\377<\365m4>*Qk>\'H\275\275t\300$>Q+N=^3\000\276U\206\351\275\351UL\275i\247.>j69\275p\0213\2747\273b\275\222\220\206>\313\014\010\274\267T\222=\262\236<>\244\003\030>\370x\225<\370\211\235=\213\204\346=\350\223\363=\001?\364\2768pL>0\006\001\276a\263\376<\221#\226\276\034F\250=\321\373,\275\246\317\317=\205\323\016\275\341\300\266<\351\265l\276\177\261Y>L\344Q>\245\026\027=\320b\031=\270\020\244\275\033\262\034>\360U[>9\026X\276!5\002\276\177\205\275>-Y0\274\305!\347<\264\232\311>\023[\243>\302\321\251\275\305J\202>\210\023+>\253\247\267=\026N\345=]\'\337<\361)\253\276*\n\313\276\177u\253\275\301\323S\275\346\023{>\254\'\032>\272\305b=\365\277E\275\374\316Z\276uBd<Z=\227=\300q\364\275H\337\245=\366\251W>+\370\264>\\\034O\275z\360\001\2763\215$\276G,\021>\322\021[\275\207\004\254=\004\332$\276/^\023\276@\031\n>&9%\276\234\201\377=m\301\036\275\263R\253<\004\317\325\275fs\201=\342\301b>\234\235\344>\246 \332\275\322\335\242<\205s\313;\233\275-\276(\333+>A\"\001>4\277\305\275\245\213\244\274\273\211\246>\371\271\223>\361\205N>\241\037@>\304\375\005>\377\275\231\274\331}\337\274\0221V=\357\035\213>\010t\227=\214\024\271=\205\333\303<r\346F\275:<\'>s\246d>\246z\254>,}\177\276\031\306\372\275n\363\001>\2539\002\276\360v\370\274s\301]\276C\324\223>\207\r\260=\001\233<\276\217T\335=l\300\301<\006\311\n\276I\272\276\275\271\035\323=k\020\r=\250\270\330\274Kr\033=\375\252\036>\177\211\230=\345O\220=\235\037\353>p\013\225=\310\221\366=@\362\247\276\374|n\276\"Q_\274\356x\370>\242\003m>\307\362\205=\202\374\241\276\333\366\026\276\376\017Y\276L`U>z9\246>\014}}>\213nT\276\376h\360\2757z \276\225n\312\272\274\241\t\276\315\214\366\275\201\266\356\275\305\027\307:\016\203\372\275\255uW\275\340\240\207\275\0179\354;\200\261\246\276\231\035\022=i9\005=\0235\236\275\320\352\016\276\351Z\206=\032La=\002]\253\276\342Q\314\275\355\230\377\275=\200\210\276a\353\037\276:kb>\"\330\023\276\243\364?\273x\354\360:\374\n0\276\350/\244=\345\236\346=n\301\016>r\007\224\276\223\027\240>\301\277z\276K\242\307=\325\206L\276\006\366\026>E\254\204>\235\206F\276\'7\022\275\301%\274\275M\201\230\275:\321\016\276\030\235\337\275\214\020F\276\230\327\337=\253\033\256=\302)\315=\367\227\224>\260n\250\276\222Gs>\361LJ\276\300\016\021>\316\007\206\276\037\357\002\276;N\350\274q\200i\274\251\252\313=&\271\324=n\023\023\274\333]\021\276\273\214\025>*@K\276\360\303*\274\344\014S\275\235\202\013=\024w\317;\033&\336\2752|\033><\220\t=`\275\331\276\242[\304\275\0313\304=\344\344Q>b\305\177>\242\236\247\275\230\277\362\275m\361\026\276\221\3208\275\230\0066\276`]\n\276\220\020 \275\203\274Z\275\271\367\322<\017\334\346=D\027K>1\353)>d\034\340\276_M\223\276a\265\366=\347:\231>\035C\'>)\271\364\275\253\346\005\276T\037\037\276\375s\213=\273\256\222\275\244\327\221>\024{\264>\210\215\243=\203vT\276g\261\306>\265\024\350\275|.\312=\321M\t>b\365\031=^\366\037>x\211\213\276S\374\206>\300\203@\276J\302b\276\200\321\\>u\"\207>\317\"<={{\300\276D\254*\275,\n>\275\013\3156\274\210\256\232=\327\374L\276\220\261\001=\352p\217>\23681\275*\000\267=\264\340H\276\244\235\243\273\331h%>\003\267\022\276e\327\223=\207&\211\275\351L\366\275\027\010->\033\036\023>\235\225\343>\'-\022\275h\"\020\276\306\333\036>\273\341F\276j6\247\274.\375\027=Y\230a=\364g\340<\245\232\365\275\261\375@\276\362\344\262\275\256\3419=#\275\035\274p\017\317\275L\007\014\274\221\231k>bh\247>AY\203>c\331\230\275\234tI=e\226\027>\204\212}>\217\324\014>-(\020\275\rK\232=g_n\275~3\213\275\207\014\354=\320\216\231\273<\016\224>\274\364<>\345\037L\276\007\206\014\277Mt\202\276\316\177t\276\253\205Y\276\"\252L>3B\013>m\304\222=\001\016\266\276\215\374\031> \302\037>\376I\257=..\017\276\345\024\346\271F\373\n>\361{\253>j\274N>7\231\025>\304\370s\276\223\022\t\276\241\032\202\275gr\215\275\312Y\247\275[\r\273=R\264\030>\325g\203=R\260\243=z\030\014\274@0\037>h\243E>\223=\300\275\023\230\014>\264M\301=\326\314\'<\274\257h\275\n\226\n>\030\245\203>O\314N=\272\332A=\254\005\371=*\367b\275\257\240\322=\\\340\017\275\205\211N>\036G\222<\252\253\221\276\024^\232< \013\277\275\376~r>\004\020i\276\265\311\333=l\230T\275\366o\213>\2030\323\276;CL>oh\335\274\257\201*>{+\376=\347 (;\252#\341\2756\306\302>6\356s=e\373<=\261\375\332=\2179\211\276W=\236\275\226[\245\274\020\315\202\275\276E\336>\323\235)>`\2356>\201\355\222>\245\256\355=\301?y\275\004\035\006>\325\221,>\030\272\366;\t\323Q>\365\205/>\335\231\033\276\276\272\323=K:!=[\273\253<\321\371\003>\301\320\214>9!\266=:\344\214\275g\224\245\275\306g\315\274\240\327\245\275\264\034%\276\247h\303\276l\327\267\275aX\375\275~?\304\275\244p\326>6^\245\276\204\330%>\303\343\207>\325P\242>\356>!>1\3434>\360\232\246=ey\025\2762\312\311=\343\366,\276\007F;\275\254\253n=\026B\014\276\216\372\311=\000\245\014=\020\263\377\275\261\035c<\007\212+\276P\336\344\274\256\2618\276z\216\223\276\207\273\217>\271q\021=^^m=S\3277\276]\243\325=\227e\306\274j\2458\275\335\213\225>h\312S\275\235\021\001\274\317\362\255\275\231z+>\"\006I=\270\251(\276\327\344\014=9\241v>I\026\224>\223Y\277\275\024\327\215\276\305\2621=\220\362\216>\247\230\001>\033\372}\275~ \314=|m\223=w\213U\276\313\276C\276?\024\226\2750Z\270\276\361\217~\275\032\'\273=[\375\230>\352W\263\275\371)\253\274\374\377\274=\271\370\017\276\330c\234\274~;\207=d\253\227>u\331\335<~#\210=\251\252v\276(U\204\276\231\275\261=\017G\275=\242\352\345<\325\027\031\274{v\240> \237\312\276\311\371\230\276\332\037\223\276\257\353\207>\254\247;\276\213\362U:`r\224>]\031>\276[\235c\275\335[/<\275y5>H\247\221\272\333\274\356\274\325\014\316\275:\301\234\276\000IJ=!\000`\276\250\340\243=\360?\023>\210\374\350\274:\264\314=\260\305\236\276Q\314\024\275k\2367\276}\371y>\212F\254>\230\013\255\274\344\005\n>\020\377\n\276\333`\263=k=\332=\014\215P>\013q$\272aC\232>\003\265W\276\311Tv\276\325\266\233\276OH\214>\201#\023\277\302(#\2755NE<\273CG>;\225i\276\022#-\276\0239\217=N\334\247\275\251\313\352\274\207\374|>n\343\027=\306\032\023\276<\021\t\276.$\316=\225G\r>SVP<!9\210\276\3136\326\275\336\275;>\002.M=\2464\261\275\002\263\204\276\004c\031\276\345\013\223\275\227m\345\276\013/\347=+\332\214<\262\341O\276\263\006\345=h\363\337<\013\307\317<9Vd\275V\200N=\301^\224\275\344\r\005>CnC>J!\226\275\027IE=c\271=>\233=\014>\035-\376\273m\236\371=\307\221\217=a\370\034\275\305yG:\006\374|>Fp\037>\2545\372= \203A>=D\255=G \221=x`\203>HF\301=\214\366\313>\263\026x>\021i\032>\263\267L>\254(?\275\257\3000>\245N\237\274\355\323\270\275\243\307\363=\034\213\207>^\343\036<\343\233\200=\373\336\n\276\'Z\333\274\337\253\322>\304U\016>|\006\244>\267\330+\276\266(\214\2754:\247=D\034\350\274K\336\330\275\201;r\276\364\221\210>$\024\210;\343\016\306\275\007\345,\276Fo\354=Q\220k\276pF\366=z\257\000>\326\323.\276J\321\342=\304L\346=\300,\265\2753\214\200=\205\356\005\275\3310\320>H!\363\274\265\"\214\275\343\215\235<t{\302>\"\354T>\317j\332=\'$x=\016\364\356\275^\003\273>\207=\313\275\324w\r\274\336\375\203=N\365\361=\330\372\210\276\260\376\225\275\334\317#>\315\025$\276\232\244\363\274pU\233<\t\264\276=zr\036\276\276Y\255<U\3008>7\321\220>\240\2379\2766\361}>U\204&=\350[\373\275\305\363N\275E8\r=\264\272\202=7I\001>\365\264\230>\312\222\345<w=P\276M\345\327=\313?}\276:\244\345=A9\347\2749\343\210>\316\310G\276M\243r>\177\036\020=0\344\005>Q\213L>\371\244\265\275\214R\255=\344\031\204\276\237\231\216=6\262i\273\221|\215\276x\2143\275\013\177n\276Q\364\337<4\3167<\353\023F\275\205\254x=\005\200\273\275GY.\276\256\360\214\276\337w\242<|^\230;d\000\376\276\257\212\'\276\326a\215\276\344\212\272<\352\325\320\275&\314\036>Y2\257>2\200\261\275\210\022T\276\331d\323=\36333>e\242\325=\026\345\213>\036\261<>\026\363;=\'\275\031>\216D\231\276\323Tp\276\0024\231=\025\001i>\335\023\200>\361\030\021>4\353\223>\356b0\276\351 \341\275\1775\241=\0306\367=\305\357M<w\226q\2755\021X\276D\246\230>\247\367\331\275l\235\360>\310;\304=\272\235\203\2767\306\n>\2205\331\275\316\334\230=\246k\271<[\345\366=<\203\223\276\341\223\227\275\031\025@\276\n\n\037>w\314\364\275\275\257)>9Aw\276A\037!\276\007\"\n\276\202\270\n=\177 \254\276\340\001\000=^\206\035\275\366\255\\\276\240\224\230>\\\210\336\273\033xP\276\000\275\202<\320HY\276\t\224\227\276]\305;:h\264G>\333\207F=\277\204e\274\201\377\"\276_\007\252\275\332iy=\336\'\251<\262\366:>Zs)\276\014\2276\276*\t!\276\2620/\275\333\006\257=\330@\242>>\260:>\345G:=\037\276,>\356\037Y\276p\373\232>\007\242\260<#R\237\275y\3639\276\244S\001\276<!\241\275O\210J>\017m\236>{bO>\261\252L>=\304\"\276\026Z\037\2763\352T=\337\030Q>`~\203\275\353\205\204\275\214\314\240\276{\372\333\275\326X=>\361\352<=\013\201\324\275t\275\005;y-1\277\225\330\367<\250\366Y>\020J\004\276\300\222\323=D\202\243=\337%\306<\240\344\377\274x\310\370\274\230\022\207>\354\276\315<\214B\016<\030\202_>\202ro\275\371\326\356\275-\242\">\344K\\\276\361\266!\275\322\3041>\311\341\233\275\320\276\205\275\210\230%\276E\326\316=\344\367\345\275\230z\024>\374%\260\273\005I\246\276\275\232\034\275t\267!\275\0327\250<\221\257\326<x\321\215=\360\316\217\273\342\014u>n\322\200>\202(\016>fRm\2760NS>\313\022\200>\267\337l\276\330\377\323=\215\177->\016NB>\374s\331<Xp\335<\202n\232>\344H\207\275\n\010\236>7/U\276\263\357\224<<iw\276\275\227K\274\212z\364\2753\300\022>\225c\250\275\312\230\302\274PG\233\276\347L-\276I\206\222=\271`\375=\017^R\276}1\244=\273U\327\275\231]\263=\245\002\277=\032\273\342\275(\t\034\276\020j\231\275\234\275n\276-\306\237=\214\013\311;I&*\276\2616)>Y4 \276\361\n\361\274\237\263\374\275Y\351*>``\273>\361K\271\276t\215\205=\225\376\341\275\275X4\276\264\273O=\323\276\266\276 Q6\2761(\240\2763\014\303=E\252s>\337 <>\017\257\323\275\264j6\276l2f\276\334c\237=t.\246\2763\213\255\275a\013\266\275\006\315\222>\026\214\242=\265\357\025>\342\026\324=\313\272\255\275\\:\014\275\331+)>\344\213\347\275\365#H\276\377\364S\276\220\020\210\276\331lt\276\350\311)\275\371\'\261=\322\213N>"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\231c\260\2752L!>\242\210!<\375-B>\334\316\216\274\236qN>\n\"\212\273G|\203\276\177\352m>\257\351G\274{\216&>,\241\r>\271f\031;\023=\213=\304\007\267\274\006D\003<\007\274\000<\234\217,=\223\023\366<\347\315\332>\346\224b\276\266\202\000>\365w\255\275\321\016L=`\305\265<\220\206\375\2740\034M>\275\034\037\276:\3145={ww\276\r\327\374=`\205\346=\340O\225=-\3342\276\257\3458\276g\254\025>\023 g\276c\336\205=H\367\357=\274\200\262\276\3440\\\276\231>J\276\001``\275a\271]\276a\345\034=U\245j\276Qu\016\276\222G\262\276\335\211\302\275\301 \260\276\242d\206>Vd\212>\247\026\354\275\034@6<\355\330^\276\247\260;>\237+\001>\203\221\276\276\230\361\036>\031]U>\014\022_\276\331\352]\276\362R{\274\335\371\000>|\024\016\276\275\002\231\276\n\010\007\276F\270A\276n&?\276\244\363\375<\355\335\306<\310\202+\275\037I\023;8\0073\275A5\270\276aP\\>\366\244)\276}E\226\275W\350\302>\024\346J>c\215\322\274FA\221>\346v\327\275\274t\273=\202\3602\272A\331\251\275\020L\301<\3738\356\275\236\177\003\275\3600\010>y\274\034\276g\314A>\373H\026>\214{\350=T\314K>\224zD>zz\027=}\211\207=\244\' =\013`}=Z\316\000\276(\323\223>7\201-\275f\374\230=\033\337\013\274M\363\300\274\274\020k\275zfw>\213\245\252>(6\324=%\323\370<T\240Q>\335\233\233\275-]\334\276\211\270J=\377y\213\275)G\352\276\031\335\267\276\2623\034\275\244\300\221\275\341\354\226\275/v$\275\010+\231\275i/\'>*\037S>\271\000\262\275\021\244~>a\010s>Z\020\233\2725t\355\275\225I\000\273\250\337j\276?\236\271=~\007\206\276\341\3241>R\327C\276\201E\225>\004\310,>.B\322\276\306\r\017\276\324\002%\276\302\032A\275$3$=\221\246\255\276gLd=\014\213\221=\025\325\365\276\372S\254=\221\237\254=e]\266<\306\333A<\307\277e<\371U\025\276\250\020\034\276h\225\034\276\371|.\272\004\004K<o\316B\276(5\'>\327\205\203\275\014`\231>\236r\036>B~\032\276\036\234{>\244f\261<\377\255\254\275\321\260/\276f\001\225\276\013q\n\276p\343J>\302\326\370=P\347\332=\1771{\274\376\267\335\275\307\2406\275\367\223M\275d\313,>A\370w>\365b\331\274\264dL\276\222\330\022=m\241_>\267)a\276\032\'\245\275U\034F\276D\346]\276\204cv\276a@\207;?\355\252\275\213\020n\276\264k`<z.\243\276|g\213\276\204\016\307\275\362\030\221=w\004%=>\177\237\275#3\365=\320\2750\273ip\221>\216Zu\275\000\3529>K/y\276n\037H\276\242\264\026\2739\336\302>\252\237%\276\310u\226>\032\266\014=\305\364\235>m4\356=\350\237\251\275y\330\005?)Y\036\276\312{\303=\371x2<\336^\367\275\033#\271\275\237iW>\245\202\203\271\324EH\275\320\307\000\276Pb\025>\322p\004<\'\335\324=_\350\240\276Q\n\215<lf\342=\257\220r>_\320\035\275w\306\343\275\014\317\316\274\3138!=<\006m>\250?\006>\354oS\276\371\312C\276\007\260\210\274\272\210\014<P%\177>\252\225$\276,,\207\276\035\230U>\013\242\252;ZR\202;\267\tM=g\375\351\274\263~,\276\347e\332>\3075\014=TO/=IQ\301=B\201\010\276\031,9\276\370\303\363\275R\235h\2769\266\332\275V\223\274\275\303\231\361\275\203z\227>\2259=>\021\004\220<\365\365\240=Mm\202>/\363W>a\265\006>f{;\276\013\225)\275\'\342P>\001:z\276\347\257\032=\030\220\245=\376\'\314\276\tl\375=d\370g>\333\266\r\275\002\277\340\275R\360\223=\022\325\216=\253\\\224\275u\257\263\274\023\202\001\276\017\026f\276qR\022=2\341\240\276u@\215\276~7\301=\341\254\t==7D\275l\312\202\275\n\035\254\276\322>\\=\357~\034\276cq\266=.\226\324=\373\272\026>\351\205\250\274\352\2237>\362T\362\275\234\204\272\276\316\n5\275\266_\027>m]e>\314,\230=\213{3>\266\006\255\274y\262\256\275\360\225\016\276\037\365A\276\270\"@>\257\270\213>\3223\022?t\371\026\276\177\234}=\2179k\276LA\250=+X\r\274M\000U9e\334\265\273\356Y\230;\260\3200>y\367\034=7\236\232>]\217g\276\270\205\255<\021p\252\276\257)\030\276\2248\031>\326*\225\275\301zk\275\230\370\036>\350f\224\275OP\301=S\356b\276\301\026X>\257\320\332\275a\335M\276\207\252\332<U\034\254>\3017E\276\030\246\016>\031|\374=\222\236\020>?Td>W\016d\276oU\t>LK\"\275\233\362\261=b\032\361=67P>n\340\233>\274\347\222>K:\234\276{\220\034\276ml\213:\201\321I>\347\370b\276S3\326\274\213V\256=]\031e\276z5\200=\225\270\003\275Q\032#<\322\201F>Gh\034\274\265\270A>O\225l\275\"\252\016\276\274\354{>\271\342\007\276\337[\277<hX\200\276\336@\302\275\315\2241=\027\375\207=\276g\375\275yN\323=7\313F\276\242kV=\235F\373\275\236\372\000\277\237S\336\275\223\240`\276\202\243\313\274D\301\300=\332C\361=\324\036\245\276\r\014\001=\272\211%;\025\312\221\275 \346\271\275\353\242\226\275s\215\354=\225\316\237\276\365&\366=\261M\301\276hf\030>9\236\342=Y\003\254=\225\020n\276C\2718=i\322\007>\341\322\245;\353B\246\275\263\366\370=\031\342\201\276]\020I\276\311A\244>--J\276\006\016l\274=\331\225\2757\341\021>\033\227\n\275\203\354\'>\262\214%>D\355\030>$\343,>K\251\240\276F2\n>H<\213=\250\315[>\223u\211\276\367\213\023\276\317\336C>X\250\276\275\305\n\307\276\377\252\221>\322\327h\2758a\204=\224;C>\204\317\005>\332\365?\276%\224G=\370\317\'\276\000g\373=\325\253J=\333\221\301<??\001\276\210R\210\276\034\204\320>\000\216>\276\375\3408>\233\221\"\276\211\004\331<\244RX>\350\3522\275\271\032\351\273 \021\243\274,\243\222\274\334\017u\276\260\022\035\276\025c\031\275\371\003\004>X\rM\276\001B\204\276\262e,>\001L\226>S\3105\275\376\364\357\275\214\375\242\274\332\351\325\275M\273d>aW\235=%\315\017>z?\277\275(\277\207\276\37435>\241\034\n=\300\3729=\366\211\316\275g\275\001>+\362\302>\373\023\272>\262\222u=\004\216E=\213\224O>\n\377\217\276\315Nh\276a\313\257\275\013\352\273\274i\351\260>\024m\013;\251]/\276\200S\202\276Q\222\227\276F\222\261\276\207\240\272\275\215\376\272=\242\377v\274\022#\351<q&\325\2751\231\026>\220\307u=\202n\206>t\307+\276i\221\303\276\337PF\276\213\376\024=\373S\324=d\200\203\273\0214\373\274\204X\217\275\263]V>\242\276\246\276\022\255\\<g\014)\276(6-=\'\317B\275\226K\002>\335\226|\274l\315\017\275\367\033;=e\0008>\305\324\005\276\350\205\300>Br\252=\021\367\001>\362:\242>\246I\337=Q.\306>\266r\020>\330\270\035\276\347\331\033>\261\232\004>r\306\206\276g\373\r=U\200\272\276D\244\036;o\005\311\274\373\227\006>\010\200l=>+\256\275\302\010@=\322\220\366=\264i\024>\246o\030\276i\367\306\275\3420R\276\343kR=\235\020\213\2760\2633>\366\211\021>\265M\245>\000r\207\276\332\373\202>\2704+>Oh\003\273\004R>>\000\263\021\274\221\223k\276\215\266\234=\217\221\332<\272\230s\274\327*J\2756)\n>\3748\270>06~\275\016;\277=\221\356\262=\347\334o\276|F\252<\262\332\n\2760Z\263=,n\035=:\005\034\276\007GP=\361\3103>\215S\236\273\007\326\312\2768m)>\237[\237=CXf>\260\3066>\256\334\207\275\331\235\316\275\240\324\325=\364\3422>\337\327s\273\315\237\255=\372:\021>x\311\036>\261%9>\216\352E>\2028\"\276Z5*\273\274\236\206\275/\310\314=\366\026\221<\2053\242=e\247\000>\312\345\216>x\224g>\301\'P\276\354\316\346=\262\360\254>Y\376\331\274\030z\326\275\350\253\210>j.2=\270\037\n>%\034\235\276g\203^\276\010u\200\276j\344\206=\310i/>1f@\276\211\341J\276\002{\242=\334\343`>\264lR\276\035\306\356<_o`=K^I\276MK\002\276\357W\225\276bY\'>\246z\342=\352\336\332=\340\317\253\275c\016\244=f2\343>\300\232\364\276\270V\210\273St\003>\3212\301=\0300\340=\314\250\354=\227\346\347\273\201\3744>\332k\016\276\227,\321\275\313\217e\276\352$\375\275\033\204\027>z\366\317=\203\006\204=\225\372F<\267+\005>\333\307\213\275\261\276\250\276`\301\266\274\024v\352\275\244\3576=f\330\355\275\227\337\261\276^\272\332\275??\206=}\352\242\274wc\220>u\231\273=\216\242W\2730\242\373\275~\255\217<zNB>{\257:=\227\2111>\271\024P=\325D\247\275d\336\274>7\202\372\275\0013\'>\224\217\301;\177\230\222\276[R\313\275Y[\215\272ua\362=\363\227\316<:I\370=u\013\246=S3\031\276\202\237\367>I\016j\276\036i\271\276c\247Q>\013\237/\276\335s\277=\n\322\020\276\014h\234\274X\002\235\276g\224t\275)\306L\275\331\247\010\276c\266]\276\223<\024>P\227\201\276\335++\276{\036\210\276\034zV=\273\0261<\215\022\332=\246\313A=\315\341\206>\322t\201>\332\307&\275\323\314\036\274\331Ix>$\3351\276\022\300\342=\222\267.=3(\313\275s\0339=\324B\035>\262\250\320>\013\236i\275\344N\335\276D\240F\276\2412 \2750g\247>\\d\350\275\342\376\261\275U\225\207=\220\274\275\275\t\316\223>z\2358\276I\337S>\033\250\317=\r\202\354\275+\263\201\275\000,\332<\341\320\262\274r\371\243\275/\237\242=|f\357=\350\3020>\316G\370=\251#v>gk\261\276\340T\336\275irb>wIK\276\2423\330=S\024\231>j.\263>2\334\026=\301\256s=\n(\200\272@py\276b\261\237;1r\033>\361T\303\276\241\220V>kr\344\275\010\245\270<\311\275`>\357m\212\276)\023w>\367us>\201; >r\233\004>\363\006\227<G\256n>{\007n\275\024\357\247=(/\366\275\275\013\022\276\002\016\230\275\310\306\226=^\035\205>\344)\003\274\214o\020\276d\221O\275^\001\036\276\t\277\367\275?\274%\276p\371\020\276\231y}\275\206\325\367\275\311\356w\275\232\227\034\275\210JB>\246\351f\276\311U\277=\312\245\275\273Na\212=pk\312>T\377\322=\3212\320\274\222W\246\276\203\020\225\275\307\263\303\274yO<\274\016\250B>\346R\314<q\205\255\275T\377\324\276\265\200\327\275A\276_\276(\222%\276uR\200>`o\317\274%1B\276\327\300\222>\2457N>\034\004\242\275\343V6\275\217D\220\276\"\247\306>\253-`\276\231\335\360;\216W\314<\236\217\272\274\211\363\037\276h\314\203>\357$\207=\302{#\275 K\251=\023)\020\275\371!\321\276\277&\303\273_\222[>R\272\240\276\373\226\016\275Iq\235\275\210\303g>B\215\224\275B\343\255<\365\237F>)\341\271\274\213`\367\275^y\022\276\272P->\030\242\352\275\035\021\345=y\004C\275;\245\271<\324\204k\275\'\2749=\201\341&>/\314\376=X,b>PDZ=!\243\240>P\373\325\276?\356g>\334\237C>\240\234\020=\204\202\333=\341\374-\276\345\330\025>\001\313v>rU\345\276\361\363(\275\342\276\305\273\177\332-\276\270O\303\276\034\347\260=\231\203#<\363Hc=BR\374=\317u\327=\336\357\036>\0107\203\275\254\022\005\276\244\227\346\2754\245S>\267b\367=*v\236\275\035TZ\273\366\2029\276\275\005\244<\014\345\253;\301IK\276>\354^=\231\363i>QF\'\2761\020\212=0\257?\275q}7\2766\200P><\342\321\274\320D\336=\3555Q\276T\330\r\275m]\242>\273\010!\275dB\243\274MF\271=\251\230\005\276\307\255\255\275\244\204\327\276\244\222\037\276)i\221=\252\364\300\275s\332*>\320\257\203\276\271r\320\275\377$\233\276\016\3603>\347\357\206\276\262\217\303\274\275V\347<\000\300\221\276\342\2454>%m\023>h8\215=\031\263\233\275\212\334\266\275\352\023\010\276\261\031\270\275\204Vx\272x\266@\276n\373\243=\265\266\244\276c\243\212=\026#\223;?\317:\276\214u\335\275^\240\n\276wH\177\275\375\375\344\275o\374\252\275yk\246\276\261\344\010\274 \353\023\276\225\262\264>\310O\247\276N\320D=L$\246\276\351A\301\275eJ8\276\256;Y>\322\'\037\276.\2368\275\367J\225\275\2366\246\275\027\325\346=yf\n\276\326e\211\275\242\037P=34X\276ck/=\376\3713>\231Dv\276\373\254\251>\t\320L>\271\"\016\276\366F\343\276\224\266\217;ns\n\275\014\253>\275\335kw;\375<\261\276\241\234\351=gX\035=\\\304\257\276\007\020\201\2718\333G\275m\354\220\276V\354\364;\301\210)\274\243\220\r\276@\264-\276 \r\246\276+\021\344\274I\265\303=\364p=>\323\010f\275\243G\037>f\310d\275\272s>\276\276t\225>\2136\274\276AF\244<\223f\026>\202\366\024>Oa\345\2750\313\257=~3\005\276?p&\276P\303%>F>\021\276{\024\241\275+.\001\276\231\341:\276\270\247\234\276\033\240\214\275\3328\204\275\214\306\227;\213\202:=\341\327\215\276r\275\020>[s\227=\266\002\321=\025.\253=\335\360\236<\001\007`\276\356\330\350<\016\231R>\016L0=\373\315(>\025\314\310\275\340\210\036=\232\361\004\274\014\201\307\27426\204\276\356\014\005\277\256\241\263\275\305#\005>@\331k\276\236\032o\276b\331\275=\352\322\222\2742\2513>r\355X\274\260Tg\276\014!g\276\2106/>#O\016<\020\310\021>\251\247>\276\225\314\300\275_\"^>h\267j>q\360\343\276D\330\021\276a{\037>0)\3219FB}\276\375\332\372<\003/\003>\307M&=\370\310\342\275K\367\273\275Y\217\205>\214\343v<\256\311\016\276\310\357\370\276?\267\263=\310t\315\273\225\263\232\2767\3354=g\031\034=\372N\254\275\0000,=b7\311\275\245\372\037>\361g\006\276j\342\246>;\250\t\276\000@\314=\371\347\272\276\035\205d\276\202GO>\223\237\364;\027\3232\276\245S\375=\221\301\210=\327\212\230\275\367\177\205\276\030!\206=B\274\036>\034JZ\274\333Y\246\274\304\327\362=\023w\254<\364\033\236\275\310W\206=\252c\035>\373\235:>\301\3324>\331\354\204>\330\220\371=\346\315K>\n\211\276\275\320\344\270>\325\272\262\275\245\021\322>\252\177\203\276\315O\331=\001\2039\274\345x1\275\027\210\005\276\257\206\177\2752\264U\275}Q\211\274w\261s=\221}\301=\\\360M\274H]r=C\000.\276\300!\250\276\032<\242\275\273Y\301\275\326\014\300=\010\356\274\276\270\303w=\236\033\242>b\334\313\274\"}V>\314\230T>\030\270\021\276\334R\366=0.\320\274\225.t=\202m\021>y\276\342<7\356\340<\177~\277=\202\227\202\275\324\362\n=\333\222\344\275\217\205\200\275\242\223?\276\237a|\274\335\334\255>\003\010\033=\252\337\261=U\312p\276o\005\275=\005v4=S\354\022>\024=\006;\360w\346\275\013\227\221\275\345B\241>_\324\214>y{V\276s\367\271\275\215kA\276Z\254\213>\261\251\367<\351\031E>\t)\001?\305\204{\276`+Q\276\003\372\331\275\234\330m\276\214`<\276\323O\215\275DR\244\2755!r\276\243\363\221=\337D\314=\236yf=\356\3201=\227j\261=F\021\r>}\350p\276\260\003\010>o\271\361\275_\221]\276o\t\007?]\\\2528\000\377\320=<\271\337\275\002n\210\275eG\035=\204\266\021>} \327\275h\316&>\204\032\252>\232=\231\275\200)\215\274d\344\277>\325\351\216\274\2374)>Z\307v>\270H\'=\265\257K\276>\342\001<\204\334K>R\027\025=q\373j\273\345Z>\276\275\\\323\276\230\304\337\275\270\373\">\017\270\205>\376\356\274>}\216\017>\363\030\274<W\347\265\275\346\272&\276\033o(=\021\022\213=bE\266\276\253\320\311\275\002v\024\276t\210H\275\260@l>z\332?>\014\236\375\275\202\230\010>\261\375\344\272n\322\220>\343XC\276\013\255o<\314\225Q=\255\t\324\2755\031\251>uiS=be\216\275\3052\321<\337\021\005\276)s\376\274\276\375\200\275\\z\n\276\202`\251>m\245R=\224o\262\275\000~\200\273W*\035<\346\027\021\274\267\270\351\275[\245\001?\263\346;\276\350\003\355=\354\016\033\276n\334\304<FU\003=\336Dp\276 TH\276;\263\000\276L\321\003>R\326<=!U&>\221n+>Fb5\275\363\'\010>\221\3768>\325\255\311\275\276\347\260=\310G~\274\363\321\276=\252B \275\354\341\326=\343\027\312\275\305\330\327=\020\344\202=\032+\235\2753\036\014=\313\377\000\275\030[\231=\037B\201\274\201\342\213\275\036\237\343=U\207\230>\030\312\271=\327\355\024>\374\203U>\221\342\210\276tgp=D\263\220>N\237:>\030I\220>\332\027\223\274\203\251\204>j\0312>^Y\007<\364\345\227>5\346T\275Q\275\264=\016\352^\272# .\276\236\020F>9~\232>\337\242W\276\\?\353\275\362\373S\276v;\n\2777d\354=9~\021>e\024\033>n\375m=\300.\220\276\027r\247>\330\311S\276\236v9\276g\306\032>\300\2026\276\007a$\276!\003c\275\234\272\035\2766\336\266\276\253\271g>\235a\237=\214\003\016>n4\005>\017\245\334\273\300\020\327<bQ\270\274Ne\266\276\2569]\276\366:\232>n,9\276\352Tl>\310k\312=\303\017\001\2760\002\333\275\261Ac>\355\007\304=\337\362\347\276\314\377u\274\326%\215\275<\344\247=y\345D>kD\314=\0360K\276cn\216\276 v\223\276K\354\026\276\263p\362=\231\035\013>\371\205\r=\026v2>\214\002\035\276<Y\032=~\206\335<d\300]=\304z\017\276\310T}\275!\216\377=\273j\020\276#\246\n><\230\355<\361?\261>fM\373=Y\242\232<\'\260c\275\366\220\030>\"2P=\314\237#\274\3638\215\275u\t\254>\264\276\236=\367\240\206>!/\207\276\232\036\236\275\\\326g\276\236\254\310;a\0219\275\260\366\206=i\301\213\275\206\010\235\275\333\322\257\275\364ZS>\225\357\177\275,\307p\274\032I]=\311\367\035>\204\371\303\276\0273\270=(\273\313\276\314\376\201\275\232\303:<\357\225w>,\275\357<U\014y\274\007G\313=\004\3155\272\215.5\276u&q<\022V\177=}\347)=&t\372\275E/\331=\014\344\327:rm\212=2*\032>,\022\">\350Qj<\252\243n>\2212|\276\344\230\020\275\001P\310=j\224\246>\347\010\217\276\323\031\225>L.\252\275\352\200{>\033\2557>\362\215o>\350\315V=\311\252\t>N\236K\276Z\330\270\276\\5\237\275\322\254\t>\033\315`=p}&\276\251\034\336\2758\315(>\354\232\r\275\001>\351\275\237\242\333\275\377R\007=\310\335\306<m\306=\276\357\243\225\276\305#\331\275Y_^\276\033{c\276\3561{\275\217\033\033\276\364\013\010\276<>\264\275A2\214\276\031\321s\276\220\314\035>\245\341r=\336\003\204\276gW\235>\020\343\001\276?\301k>\372\006\320\275_\n\'>\3709\270\276\214\276\261\276iz\376<\222\333\346\275y\ng=\372d\345\273\232\347\311=i\014\307\275\323\037\274>\322\235\262>\345R\301\274\017\374\251=\310V\030>0[\027\275[\334u<\024\247\331\274\304\306\334\275\237\354;\276*\313\206>\236U0>\002\nQ>2\223\217\275\216\215\207;\331A\223>z\242\267\276\001u\306>=J\225<uQ\007\276\343\363\200=JaS\276\323mU\275K\273L=K2\027\276K\354$\275k\247\225=\242\264\251=G\265\t\276\317\325\334=I\244\201\276\023\t\253>\232~\256\275\367\024>>m\263\273\275\344\303\223\275\215\006/>\267\276;\275;\240>>E;\362=\003\034?\276\333\223\252\272`>\220\276\252o\002>\317\264\030\276\r\313\351\273\017\r\302\275^\264V=\206\372\203\276\023\311\016\276YT\227>0\036\020>\272\277\326\276\235\034\203\274x+\337\275\303\356^\275 \332\203>:?\177>\245\223\202<\006/\202\275\347\204;\275e\246\261\276\324\360\024\2763iV>\321\313\034>\242\t\217>\330\305\327\275_\246\346=\200\036\"\276\311\244T\276_m\257:\311\336\220\276\311N\205>r~T>B>Y\276-\360\254\275~=v=P\246\022>L\224q\276\335\245\213\274\334\241w\276\271\363\r\276\'(\234\275F7\212<[Y\250>\"\225\221\276\t\270\251\276\252\331\310\275\301}Y>=O\255=\3219\227=\227\2051>B\206\341>\234g6\276\022\033/\275A\234\034\276\240\033-\276\0006\225\274\202\273c\276\225\031W\274\277\3722=*M]\275m\277\241\275\320\203\034\276\024\334\256>\207\310S\276\350V\331=\242\036\307=\250\016x=*;\224=\3230\001>\231\250Q\276\032\263\355\2756\351\004\276\303h\\=\210\264a<ZUd\276\347\261\022\275\341\360\305\275\002v\225=\202\201\223\276\224\020\014>,\t\006\275\2570J\275C\343S=\037\376h\275`\2474>\217\311\340=:\267/=\302\360+\276<\227e=\376+\010\276\300\235\343\2748\021\332\276\354\027\006\276Wl\333:\206\373\300\2750\330E\276\245\3344\276\326\350\002\276\332\264q\275\006\241\020>\035\227\202\276f+\336>\266\357E\276\nE\030=\253\213A\276\252I\005\276\032\343\307\275#\212\205>\236{\221\276\261\242\033>\361\207\220>\371\004\361;\034 ~\275\022\272K=\263\022\264=$\217\275\275\240\220\216<\231A\330\275\302\020\234>\313\263\323<\2053d>\023\352;>\240T\260\275\225\241\271=\334\345\217\276\321s\263\275\242e[\275\365\251\237=\210s\263\276U\255\033\276\033F->t\336\322\276\211I\032\274\333\t\370\274@9\254\275\273\376\315\274\224\370\250>\256\004E=F\253\\>d\314\002>i~K>\r\344G>\334\312]>B\025\270<\364\222\230>\220\213\022\276\034V\205\274\264-\016\275\200-\360>\323\025\362=\245\222\310\275Gup>V\277\206\275\t\300\234=\311o\366=v\224\201\276\354\271\216\275\360u\202>ru\364\275\313I\006=?\0005\275\177\036N\275\250}\214\275\207Sl>\017]\254\276g$Q\276\234\rM\276\r\354S>\334/\">=H@>{\200!>\313m\n>u\316\342=\302\244\326=07\264=I\256\231>dE\031\276r`\323=E\345\301<9<\207>\223\304\212=\365\010\303>\264\3529\276{\032\341=\370q\377\275$\271\026>\377\3569\276\214\236\201;B;\021\275a\007\351\275<\337\337=\2429\310=\3606\352=\317\227\232\276j\034Z\276$\251\346=\030\214)>^\231>>a5\037>\313\277\334\275z{\020\276`[\014\276\271\226\\<\365\023\005\276\213Wk>\274]d\276\315\002\236:S\240\206\2768\346\323\275^\027\211>\202\347\025>\205(-\276}y%\276\010\343o<z\177N=E\026l=\016\330\346=\312\005A>-\365\263>\272\\\241\276\336\2606\276\013\301\033\276\336\317\022\276\016\345\0239\254\344o\276nk\340<*\000\261\276\372\037+\275\233Y\246\275>\277w\276\224^\354\274&l\333=l \207<\362Y%\275\000\265b\273\\\026\362=\237r\241=J\365\016\275\255LR\276\331\024\021\276:\241s\275\225X ==\037\215\276\2014\003>\007\201\230\275\017\326\225\276\224\326\221\276\346\275\320<\016M\225\275m\343\225<\253r%>\225\375 \276=%8>\027V\274\275\204\016\305>5\326l=\337\310\017\276\216\346F\2768!r\275\205\020!\275(\032%\276\317\032v\276J\275\243>/\003\376\275\347\016`\274\342?\346;\323\357 >\343W+\275\265\373\267\276\357\225 >\030\343\331>`\363\205=\013\257\227=\212\330G>\330\267(\275)\361i>~b\302=\216\016\'>\261\013L\276\244\321\020\276\275\337\337\276~;\000\276,\253v\276Gwl>\327\371\007\277\351#\n\276\314\340\016\274._Q\275\341\341X\276\201AO\276\205{\371=gd->m\034\002>\376\005\213\275\274\363\377\275j\366_>\357t4<\240\305\'\276Z\264\364\275@8\355\275;\177O\275LNU\275\326\340Z=\321\267\210\276\271n\205\276\374\021z>w4\256\275\240\016\336=\271\211}<\363\272\350<6\242\335\276\023\200\340=XW\223\2752\356N\276\031.\232=\025\257\213\274\301\302\000=`\307\r>\013\237\262\274k\310%>/\317\333\275\266>\002\275\203\350\353>\365\223Z\276\334\035\300:\275`\222=\325\371\203<\377k\312=\211\256\227=\211B\266\275\252V\371\2758\027h\276\304\010 \275\026I\226\275\333\224\006\276\023\333g\275\303\243\023>}\266<\275\253\007\363=\336\311\201\275\271|\223<~\274+>\232\240C\276\2629\235<\014\214\006\276\233\226,>\354\336/>\032+2\274\016\345\250\276\364\2516\276\355\'\265=op\346=\313\252|\276\270L\330\273\344_z=\t\022\224\274\355;d>\263\206\372\274\2037B\276\302\212\214\274\033k\263;\335\235\354>\345\370\330\276\215\003\245\275\247\350!<\250g\013\2764\005M\275\371\374\262=v=z>-A\231=\335G\001\276\245\032<\276\270\312h>m\250H\276\210~[>\322iM\275\326\343\375\275\233\344\010\276\272A,<\220\344\231=\007\0338=\001\250L=\374\021\020\276\'\366\255=\256\324\374\274>_h\276\226\226\227\276\rh\031>\235\177p>\236\270\245>\215\366K\276\351\316\271<(\352\030>\246{\262\275\177\005\203\276K{\350>)\333\223\275\221]u>cg\341=<\226\361\275\3338S\276\211\216\367<F\325\275\275\004\353q<\034A\315\275\261\315y=N7\320\276+\320\237\275\316>g\275y)\270>\234B\027\275=\0200=\370\025\217\276\322\006)>\001\"\000>7\"\357\2761\231\250=;\2568\276|\226?>\rv;\274\372\356\033>\212\004\320>Ys\005=+\026\240<\352\332\225<x\322\264\275\025+\342\274E\275+\276\357\253\326=\373K\240\275\220\270\"\276:D\301>&\265x<\365u\373=\266r\026>\037\036S>(\247\230\274D\365<\276G&\022;\330&\356=\336\023\226\275\274\263\334=k\233\006\276\3138\244\274Z\363\033\276~\254\216\275\257\355&>OH\373\275\317\032g>z\010\306\274\2652\r\276H\222\317= \247\215<\264\333\215\276V\331Z>\271\343\205=\004\232\335=%\031\313>\003L\304\274\337\223\007>\222\211\034=\204\231\274\276\200\225A>I08=\203Y\223=qs\370\275\2359\347=X\237\255\276\350k\351\275}tm=B1$>xBq\275\3664I=\231|\276\274\035\034\341=\247\364\202>\006\235\206\276u\3223>2\335\260;\320\326\020\274\215\330\021>YI]\276#\354\017>\211+\t>V>\006;K\236\037>\323\256\377\273j\223l>ft->\224\350\257\276\362\202\273\274DV\202>\305G\255\276?\036\256=q?\265=cL\t\276\224F\214>\017\302\256\2750\242\025=\341\310D>\272\2202>\340\247\236;\355\267S>\"\001|\276\324\013?\276\271\245\230\272x\322\205\275\255=\030\276;J\026>o\312W>\276\010\237=<\355\311>\225\321f>2\213\035\276\232\334\202\276\217\371X>Y\367\211\275n\3466\276\345\311\323\274\253\361a>rF\221<\177\273g=\005\267\304=*\324\234\276!X\004\276\214\227\232>\234\200P\2766(\371\275\004\026\r>\002\235\025\275\322\224\272=D\301\014\276B\323\257<y\263\251=\311\022<\276e\031v\275Z\256\200>\372\230\235=\261\230\017\277\326\324\207>QqT<\324\346(\276M\037\204\276j\244w=\330\235\213=\374d&=#\020f\275\200a\324=\357\020\363\275\263\177\214\275\341\027\007>\277\327\231>u!\362=\212\\\017\275n,\005\276~\201\335\275y\227=>\3551x>4\333\013>\245\026+>\0276\364\275|\336\204\276\031i2>\014pi=o\373\315=\262\304%=\027\352\032\276\224jQ>|\'7\275\261\301\233>T\266\377=\312\005\000=q\321\022>\000E\371\275\333\037\210\274x\304\270\276rL\027\2763\315\370<A\273\021\275*R\360=>%^>\0143 >\201\233\210=\013\223{>U9D>\324\314I>\342\274\273=\216\023\032<\207\207y\276\330\n\355>\353\207\364=4\330\330=\331\364\030>I&\214\276\200\365\223\276\275\344\204>\220g\274\274\362\245\335\276l`\311\274\320}R>\277!\013\276\220\014S=\306s(>z@\377=!\372\303\274u\372r\276\222J\232=\023k\256=3\241n>\rw&=z\370\203\275\3276\n>\032\336\370\275\264\007\315;\253Y,\276\343\254\026\276\320 \213\276\027~!\275\322\026Z\275\005?\006\276K\204\302\275\017JM>\331d\022=\344\251(\275_\351o=\023A\356\275\343WX\276\347\315\244<\316\341\263>\2229|\276\270\270\203\276\"&\215\276\200n\276\276l \037>\377\211\255\276\245b\016\276\n\361\356=\017@V\275\365Z{\276\277Oh\275n\274\030\275N4\'\276\230.\t=\3253m\276\362\306\325=:\"\252<s\300\025>1\270\313\275I\021\033=\265~\235>v\222\212>\017\217\230<>\375\216<\006\033\214\274\305\232?\275\026?=>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "N\313q;\260\344\372\275\2577\237\276\343i\037\275\255\0178\275/{\261<~\371^\276\027\347%>\010\262m\276\304\347N>\"\006\004\276\236\021\257=\323\256=>\215\001\352\274\224\277\300\276\360e@=\312\007\324\2758+\353\275E\316X\275\206\315\222\276\201p&\276<\255\266\275M\344B>\233\206\263=\2550\334\275\2056\303<I\310\226\276\375.)<\204\316k>\321g\330\276\316\014\365=Z\220Z=\243\320p\276\257\354{\275e\203\206=\3069\266<z\352\016\275\223\317\352\275Q\326\251\275\251\206\343;\034}\233\276Bk\224\276P\007\272>\364\334\037\275\341\324\366<\332\036L>*\355\337\272,\341\242\276\307\000\273\275\240!\265\276\234\216\310\274\211\023\220\275\266-\202>\363k\016\276|\335\261=\215o\001>\330\341\241=\343\3740>\007V6>\357z\206\276F\031\027>\017\345\227>G+\277\275r\345&=\272\332\233;\203\312\311\274+\215\250\275w\375N\275\253\276B=q\301\273>\033\336~=U\010\201\276\203\211\202\276(:\215=\226\343d\276n\032T=w3\217\276\005\316\277\275\2618\017=\243(\250\275\353\277\266\274\375\373|=$\001}\275\267\255,\276\342\315\206>\030e\345<\314\201\301\276gk\223\276\344\006!\276\2145^=\225R\037>\351\346\210\276\343oJ>\230\374H\276\254\037\374\274\315\324\t>\352\231\260><L \276\337<\276\2754\3368>Q_\033<d\327-=\350Q\273\276\000\264\\\274\027j|\276$\213V<\270\366\247\273\033\010=\276\277Z\206\276:\330Q\276\223\365\236\275\331O{\276F]\203=MJ\025=\361\253\276\276\360\336\274=Z\204,=|\254a>h\2733>\377\337\214>\370\226\232>\265\241\037>\247\247\264\275h%\024>R\351\374\274\342\020z=\034\242^\275b5M\276\016/\251=\006\233\330>%\217\205>|AF>\2469\032>\320\341\207=\025\240\3718L\377\023>\006\363U\276\226\370\234\276\026=\373\275\314\034\'\2740J\331\272\210\021\323=\204:\035\2765\233C>\334\245\346=\026\275\311\275\335\236I>+\311A\276ez\344\275\350\037\315=\373\327s\275:?\225<Pf\312=\203p5>\270\r\275\275\033/\327>\3214\215>2\264\337\273\222\216\243>\367<\242>\205\275\306<\342U\276>\022\340\216\275hU\341=\370\371\306\274\022\362\214=\224kq\276\247\007\334\275KT\363:\344\267@>1\364\370\275X\224\272<v\225\036>&\337\000\276)F\202\274\3159\004=s\031\000\277B\022<\275\032\327X<\371\206@>$\305\032=]X1\276\025\026\237\275\322\244Q>\336&V;\213\316\237\2752\362\020\275\020\316\306\276\207\330x\274L!\006\274\262\305\257=\373\273\272\275\364P\216>`q6\276a\342\340\275\005\0312>\355\352\306\275LP;\276\367\334@=X<W\275\230\2658=va\303\276\233\032\347=\347,\323=\343\377\333=]\270&>\367\237d\276\327\260\372\275\255<\240=\177\010\250<Db\232\276lp\255\275b$\037\276\333\271\226\275\231e_\276\235\2150\2760]s\276\271\276q=\263\260\007\276\257e\200\275\327\272r\276w\217\256\274\003\242\325\275E\304\005>\033F\014=\374\025\215\276\363\244~=\330?\335>y\n\326=\'\232\225>\346\206\252=\033\261\247>a\201\t\276\275\336>>\006\3320>\317\377f\275-\037\236>(\377\341=F\306\375;\200\353\315=8\2631=hOy;\226\372\t\276CM}>\0343\242>\223\344\032\276\273V\023\276}D\366\275n\306\021>\001\026\035>\272\3179>\027W\216\276\2638\272=\036\245p=\301\341A>\263A\270=\002(\227=\016\255\010\2761\001=\276?\204\365=\224\275\031>rFF\275!\312\211>5Q\332>\256\330\t\275\255\350|\276\240\375\216\276\312U\341=\017\314\200>\277a\023\275H\262\240\274\325\003L\276\361)\304=;\022\366=\024\234\304=\214\201Y\276%\376\006>\365\3143>7&\034\276d~\315=\365b\030\274\240\366\241=N\261h>\365\035\024\275\346\301u\276\002\203Y\276\373+f\276\204\225M\276\364_o<\177\023\231\275\\\3251\276\254Dx>\243\200\331=\276\234W\276i\215q\276\307\036\247\274,{\003?Y\320\334=nWR>\261\224\016>\234\362\'>\320c\210>\340\313r>=n\014\276\271k~=*@\350\275\221\352\335\270#\024\002\276\036\207~\276l\220f\276\306\000+\275%:\363\275\255\301\035\276\2104\226>\021\340\223=\306A\216\275\371\267\327=\302\316\336\274\272\325U\275\022_\227<4k\004\276\025I\313=\301\345\003\276\2600j\276\013H\245\275(\351\004\277v{\025=\240\334F>\267\232\240\275\376\371\206\2765\260\372\275yl\326\275=\327%\275\253\013\036\276\353\220\n\276<\343)>I\013^\274\252\301\337=\3152\251=\013\035\276>\370Y\'\275\237\334\021\276\377b2\276\016\252\375=C\222\246= \377K\276\231\3752>\337\'X\275\034\217\303>\366,\332<>\026/\276\270@\325=P\024\326={ \025\275O\000\334\276\327\337\032=\213\221l\274b\365\010>]->;\t\210!\275A=9>\300K\242\276\216\255\315\274_[Q\276\212\213q=)\300\331\276\330\022\351\276\225\\^\2745\247\031>\277\177\225\276\205\206\007\276]5\n=\026\252\362\274\305\316E\276\016\346\354=t~b\275`\241\272=^G\213=\352#\036\276\351\'6=\312\340 \274\264\337`>qm\031>\332\200\232\274-q\260=\352\270y\276\3116\017\275c\266\025=\016\265\271\275\333my\275C\244\321\274[\242\013\276)\205\223\276V[\026\276(7 \276\250\006Q>\321\247\207<L\032^\274\301\262T>\t7&=\344\273f\274+/>\276v1\226\276M\363/>\230\017\264=$8\300\275E\332\326=M\312\310=\003\352\254\276\214\216\331=\253\236\000\275\027\371\243\276\232\027[=\233\244\254=C\266w>)7\300<\213S\313\274\2044\337>\240\320m\276V\330\231>I\034&\276?$\265=y\2613=\001\314\177\276P\360\214>zt\243\275>I7=\036\'$\276\374\010\"\275\027\364\035\276\034C\252=f?^>\332j\311\273\221\234\300=\034E\271\275\375\313\211\276[\320\200<C\376\r=\324\335\263=\372\312,>\007;\252>(\326\366=H@J>5\233\314\275\265\246}>H\301\231\275\260\264F\275O\355R\2763\375\343=z\212\346\275\230\205@\276\037\206\005\276i\006\007\275\304\033\n\274,^\371=p&N\276\355\247R\275h\356\222\276\322\024=>\262~\361\275n\010\016\274/7\t>\331\354\330<\313\255$>\301\034\013\276\036%\315>\301\322\177=\372\264\224\275\370U+\274bL8\276h\327\007>\355Z\203\274\235\212c>X\365\336=G\221\240\275\357\350\214\276t\346\335\274!\337(\276\240\250#=r\370\203>\203\263\036\275\337mR=\324C\277>\033\027\270\275yL\221\275s\250\364\275C\322\200\275IU0\275\265\227Z=r\'\210\275x\001\000=g\304\207\276,s\t\275\215\246\326\2741\275\002\276\263\376\033>\006\367\321=}\030\227>B6\031\275\253p\346>ie(\276E\010\013>n5\022>\210\354\357=\002\363u\276\277\336\211>\204\033?>a\346\350<\220\303f\276\344\222p\276\325\000\204\276\204\035.>|\254u>\216\276\216=\2509\023;\310\335V>\317\375\346\274\'\313\210\276]\014\025>\274\246\326\274\337\023\004=\036\025\272=\203=]\276o\005\002\275\227\341\342\275\255A\002\276B0B\276UJ\'\275p\226h\276\202\227\356=\007s\014\276\324\274\037>\201\222\251\274Q\n\365\275l8\317\276y;\320=\337(2\276\313C\026=\377\202\203\275\177\325D>1\355j\275\263\'|>J\206\375\274P\217g=\251\344\010=<\005.\2761;\n>\035it>\371<\353\275\205\244\t\276=7>>N\332\026\276\251\001\025\276\342p\001>\366\\\363=\327F\002\276\014x\343=\030$\252\276l\222I\2768rV<i`4\276{\322\001\276\022\203\033\276\231\247B\276\035\374b\276\202j\366=\212\367\217>tJ@\276XR\372\275\316\202\023\276\324\373\227>L\205\225\275\340d\260\275\344\302\264\276\305\334\010\276\177c\217\273\377D\235>\221\247D>\377L\233\275\335\341\274\276q\035\266>\017\233\032=5\345\274<6~!>\205\371\003>_\275B>B\371\326>\252\021K>\302\255\320=q\312\243\276mf\210>\347\027\010>\201Ut=0\n\233\274}M\207\274M\355B\275P\233%\2744\034?\274\237\331\370\275$\355\263=3\344\223\275\364@z\275tLw=\277l`\275\020}\t\276x\037\365\275on\322>\237\3401\276N\257\227\275\325z\303>\020PB\275\257\234\207=Q2N=\331\245\336\275\256\3365\273\364\245\250<\345\025\204\276\241\177\364\273ng\345=\367\005\213>\225\004\225<\277\376\241=\305\234E=\236\357\234\276\251\360\006?\345\273\207\274\276\202\266\276\227\264\213>\376\235\317<\020\255F>M\342C>\326\354*=\037}O9\247\241\200\276a\235\322=\243\023\354\2740\310{>\247\321+\276\347\241>=.\017h=\264]\240\273a\205\267=u\010\352=\230l\006\276pj\331>\304\204\200>\360\020\307\275\353\376\300\2755\203\207:\ts.\276:\303\025>\307\013\206\276\261Z\210>\234~a\275\010\254\234\276R\336\304=\267\340\034>\017\353\204>\016.\312=\003l\027\275`\ri>-\3022\275\203N\r>\003\037O=%\032\006\276\304^%>\344h\332\275oEs\276cFs=\210\313\315\274\2575\212<p\347\216\274\007!\265\276\360\373q>*\336\316\273\246`n>[\n\205=c\201)\275\315\234\252\273\243y\033>\020\371K>5\313\021=\014\275g=\345\365;\276I)4\276\256\013\255\275F\227\223\2753\246\204\276\271#l\2762\340[=\235\306\244\275f\226\224>\346\376\010\275\225\2614=\231\342+>\314:`\276H\316\000\276\035\275\006\276\373k\241\275-N\317\275\202I\250\276.\320\247\274Z\247~>\376\336\331=\3500\204\276m\230L\275\227|\212\274\315\035\216> d&=\367\302I\275\005\320\210\274b\245a\276\266\002\251\275\355\010\261\274:\243w>\023\224\215\276\364\'\326=\303rt\276\346-\257=\254\373\036=\313\367\246\275\356x\014\276}\270\204>l{\201\274\255\370\331>\253KT\276\221m\306;\224\024\234>Brr<J\376\341\274\2639C\276\362\334\210>\352\254\244\275$^i<\364\271\326\276\204\200h\2760\224\226;x\326\331\275\216\322\266\275$V\273\274/9\244>\241\230L>J\350\\\276\213\333M\276\367\243\221>|?\245\274\271\361X\276\004\022d\276=<\221;]\200\001\276\254\325S<r\314m\275?H\264>\377\023n<\031\302\251<\274\333\002>a\202\252=\027U\325\275K\351\365\274<>{\276I>.\275HU\313\273\n\343\252<\022\200\002>\017\204\201=99\211\276m\323\243\275\310X\210=!V\300=Va3>\371+\212>\256\020\223\276\273\307\217<\0029\267\275{-\317<\370Z\370<\242Y\254\274\233n\317<\3052\265\276r\004\335=6\3649>\250\214\177<8\205\362=\227\037\004\276`\360F\276\337\320\032\276\257\316\332\276\225ar\274\002\374\007>)n\217\276\372\234\321>\356\342\266\275\333C\345=\036C\350=\200~\276=D\025\343=:\202Y=\030/\252=f\3437\276\240vX\274\'\206\021\2743\321\331=\251\260\375>[\224\353</\202\305\276,=K\274\rtq<\346BH\2764\035\211=RHl\274\004e\202\276b?\206\275y\207\335;]=\026\276YL=>kWb\274\351\006\245=\225\305\026\275\235\211u\276{\352\237\275]\205\245=\202|\026>\210>\333\276\203\311(\275\331Nn>&P\036>\272\261\240\276XL\260\275r\"\301=\237\026\027\276\302\007\000>\221`N\276GD>>\256J\243=\336\353g\276\'5\236>,%\207=4\203\201>\214\371\016>\215{\364=\362\237\032\274U\024\302\275\325\222\210\276H\032K\2761\353\250\275\030\223\216>\247\014\212=L\243S<\335\256W\275\037\261\205\276\221! =\030\326j>\027\205\005\274\234\367\223>J\364\355=\024=\224=\314\315\022\276(\nr\275_\253\212>\020/C>/\377;>\353\275\246\275\261\2104\276\351\261l\276\321R\204\275l\214\267>\017\005\236\2768\367\265=`!\333\276\364\215V<\350\304\034\276\345\240h\274Z<\200\273%\324}=\366\026\303\275s\203\220>_\'/\276\321\t(>)/\021\275\330\243{=\273\361\201=p+\034\276\235\321<>e\377\364=\003\261Q>V\303\376\275\\\026\006>\341\3167\276T\356\251\275\300\353\226>&<N\27611\002=u\207\263\2763k\370<wP\354=\315\007\307\275\213\324\262\275\334U\032>\026\'y\275\365\376\021>mG\017\276\275=\221\275bt:\274@e\255\275\227Mz\276(zA\275J,\362\274@\226==\205\030\232>\'\002\310=\243p\204\275\007\273Y\274\351\322\313\275\276\225\204>z\210\217=\370D(=\340\022.=Xk\235<\226u\323\275\026k\023\276\021\357\221<\215=\006>`\274s>\217a\030>\266\331\355\276]eg\276>R\216==8y\276o\021O>\313#W\275\025\261u=\035\276\331\275\311\256\232\276d\322\363<H\na=J\361\260=\265=|>\357\\>\275\004\332\234=\200~\363=\266!\033=\267sO\275\017\274\234\276\350E`>m\343\314=\243xc\276\006\2444\276Y\2033>\027\266b>\315\201\001=l\264\312<&\t\273>\207L\001>\252\252\032<`\266F>\200\262\024\276c3\026\276\366r\211\276X\374K>\203o\201>\254S\250<\'\200\245>`\214Q>\3418.\275\320\215\224>\271\2733\275\332\202\t<wL \273\303\315\335\275C:\327\276\240z\273=\367]5=\213\273/>|a5<A\326\r\276\307\177\306\276\000\210\235\276\267zT\276#\3165\275\312}\234\275\370\260\341\274{\027\312\275\342\301\335\275Y\021\016\276\314\005:>\213&w\276\220\334r\275-$\240<\230\237\210;W\322h\275\254\022\006<\212,\367=0\326\204\2750k\245\275()\270=\376\177\005;\025\220_\276\230Ru=a\004c\276\312\365\305=\006Z\246=U\271\271<\327\370\372<\327\3158\274\211ci>\210\027B\276 \013p\273\326*\336\276\237v\245=\356v2>U\250\261;\325UI<f\275{\276\323\345\272>\235$\262<\237N0\275\300\026.>i?\245>\007\307\265\276\372\240x\276\314h\304=~\255\">b\333\274\274oxD\276R\341\'>\310\350\031>\321D#>\r\261\r=R\\D>\355f\332=\031L\341\273,r\232\276\247r\325\275~\374\033\276N\233\205\276\217F?>\347\345\214>=\t\000\276)\335\027>z\350\320=\377=M>\224\205,\276\376e\003>\3018k>N\240\'\276Q\023\322\275\t\027\210>\330\254\\\276\256\033+\27489\221=\t\312%>I\204\362\274\300\021\214\276\362 6=U02\274\306\255\205\276\206\253\037\2765\364\r>b%\003\276\344\346\260\275!\241c>r\3345\274\270|#\276}&%\276\302\307Z\276\221\370\246>`\231\223\274n\256 =\037\337\220\276\252\007\212\275\031_\230\276\031x\345\274\244\220W>\360\312A<\202\rM\276\024\0338\274>\232\235\275\256 \222\276\3128T\274d3\312<\223\032\217\276\322R\316=k\271\365:G\003\347=#(\242<\235\240\246=X;\007\276\203\327\242<\3656\006=\337l\247>\301\251\013>\261\305\213>\261,\025>\261\264\311\275\234\022\250>3j\267\275i\215)\276\253h\"\275\363\206\204>\345\343\353=\230\373\345\276\366\277Q\276\245A\356\275\331E\305= \347\303=r\367\220\275z\327\306=o\013F\276\263|v<\227\226\013\276\260\237-=C(\373\275gS\321\275\211n\324>\377\277\217\274r\364X\276\274\206\334\275\177im\274\311$\227\275\003\217\377<\2232\203\276\013\250\020\276D\2529=\352\371x>\251\345\235\275~\340\010\275\377\023!=\372\265\016\276\033\247\014:pm\244\275\344\271F\2766\361\340=.5i>\311\275d\2765\371&\275\303Sv\275\363\311u=E\177\261>\356\310\375=\004B\224=\230\356\346=*\372\204\276\340\301(\273\3727\231\275\264\237l\276\014H\022\276\327\255\233>\302f\253=vq\267>\372^\243>\013\264\343>\200A\235\276\266;g<\321\002\252\274`G\221;\006\2020\276\214\245\003\274T\212l\275!\r\032>t7k\276#\237\242=\221\354-\276\374\370\026\272\356\224\236\276\022y\n\2750\250\002=\307\377\276=\355\037J\275\251L\010\276\226\"\241\276%$\346=\326S\377\275I\027\222\276\214\327A>`\267)\275#\001\260>\301r\376\276\321\267\224\275\244Y\257\275\023\367\030;O\016\326<\3521j=/\337\263>\361L|\276\002q\214>\217\022\276\275\032%N=\245\033\323\275\222\313\322\275t\351\343=]%Z>\377\"~\276\342p\025>\323\306\023>\273\013w>xW\270\275\013\263\216\275\212*\216<\344OD\276\345y\003=\026\0258\276\374\375\203<\301\004!=;\252\221>\214\"\341\275W\216.>\222@$>S}\016\277\363\347\323=\332:\270\275\n\237\341<\277IG\275}\233\221>\374\004\306>\315\213\025\276t@\000=\025\\\034\276\233\3144\276.\257]\276\334\235\036\276\202e5>N\323\230\275E\344^\276\023\260\214\275\273\003`\276\030\231\034\275\246(\213\275\2042\013>\026\246\337\274\237\256\246\276H\006c>\274x\356;B\212H\275\207\364`\276\236^\216>X\354\251=\242\201\213=\336\210\275>\220\362\031>\345)\310\275\272\261\226\275 ]%<4\211\227\275\210\321\303\275\200\3559=\3042\335\275\216\206-\276\0322S=\371Nu\276.@\206>\020\300#\276\253f\030>D+\247\275\220\320j>\017TC<8\214\250\274\306\307\226=\305py>\352\313 \276\2137\007\276\217{z>\324\\\275<GK\035>B\013_\275\217?z>\243\336R\276\277\274>=2\207I\275\220\303\236\276ET\234\275\321\020\023\276\264hg>\177L\032>\327\374\230\276\314\276\205=\222\222\201\276!p\010\276b\242\030>@\313:\276g\324\005?\225\360\241>\310\220l=\343\266v\276\204.\367=l\214\273\274\352e-\276\252\237\006>\245\217\272=n\355Y\275z\363\367=\314:#\276E\177\267\276@m\273=\030\343\253=|*\364=I#\200>\243\314@>\350r\211\274\254\2317\275\304\351\306\275\206R\037\274\244g\006>\226\377h>\352z\274<F\255\255=\022\017\300=\270g\020>\020\257\361\275x\355\240\275\014\237\277>\202\370\376=\274\234\302=\335\177\364<y\314\314\275\027\304\266\275^\\\335=\217\303r>\205\337\026<\335\327\276\276\316-\235\276k\222\032>\314\325\354\275\341\017Q\275\000v\203>\364\256\363\275\360\311\034\275j\340\276\275\246!\037\275K\n\270\276\330\242\223>:\365\206\275N\034,>3\0246=\356\'\001>F\235\201\274\260\347\253>1\371Z>p\0379=\264\372\210>\323\210\324=\006\264\021\274d\t\270\275\017\256\211>\322m)>?\300\026=Y12<\345P\370=\350w0>\233\023`=\364\207\337\275\004\212\034>>EG>\311.8>6\371\025\275\361\362\006>s\025\373\275\243$A\276\034IX\275<\210\205>\010\230@\276\374\003\265\274\313\332\032\276\252\271o>[\335\237>\340\210)>%B+>\270\232\001>)\003\326=\324\327N\276\265\'\300>\326I\210\275\002\316\203\275\272\332\221>\263\255\204\276\2477W>\004\233\">\341H\331\275\207Q\001>\274(\220\276\245z\032\276\324h\'\275*\313\321>\377CR>\305\253\333\275\244\004h\276^\310\263=B\312\324=d\221_\276s\027z>\rV\343\275\335\375k>\347)~\276\316\256\250\276\344\036Z=s\320{\276f\033\037>;\327z\276\227\331J=LQ&\276s\2352\275\316-\007\276\324\246\321>B7\013>ho\312>\240g\260<\322\337\214\2739\246\311=I$\247>\037}\224\276x$\205\276g)\004>\260s\255>\207\202;>\\GU>\277\363\224=\256fO>\"\216/=`\035j\276z\315_\2764\233\260=\316I\200\276H\2379\276\321\004\271>B\373\330>lO~\276\233.\004=\327\267\267\276gR\257\275\177I.\275\354\257n\275k\272u>\202\330\337\274QB\266\274\276\336\'\276\031\302\245\276o)\237<\266\376\006\276d\345\221<\376j\335\274\213\202|>L\261w<\256\325\202>\315S\342\275i\356\356\275\204\365\227\275\332\231\306>\246!\211=\'\004\322=K5)\276\277\213Z\276\2130\r>\013&c>\353\347;>\3150\365<\200F\207=\371\321H>\326F\305<y\030\321>\207\262=\275\251\360\003>l\036\023\274\216\234W>\275\3726<\236\310U>2\237U\276\357\275\367;#\211\250\276\216\275\304\275Z\374M=\237\022\203>\377\007\254\276;\305\033\275l]&\276\031\305\035\275zy\002\276\001,Z>\254\364\374=:\340\366=\217\007\263<\242 \356\275\'2\352=\256\313\344\275\211\254\252>\2007\315>\302\324\227\276\310y\225>\355\177\251\274\316w\211\274\373]\313\274\304\026\024>~\2250\276\250\327\223\274\240X_\2769\304\023>\322\265\276=\027\370\226=\232Z\013>\366\276\032\276\305I\345=A\206E>/6#=fx`=\202\342d8\312\366o\2765\327\234>\013K\260<\223\330|>\363G\351=\353\010i=\322g\223=\005\261\352\276\"J\344\273\017\360\246\276\211\201\366\275\264\260\354=OZ\341\275D\210\022\276\222\234\220\275\307\237\002>#\037S>\364\362[<\241!w\275\273qF=\311\360L\276\000$\250\276oA\267=\241\215A\276plO=\036\207\322\275\244&\t\276\225\021\251>rQh\276t\252\027\276VU\207>\230\300\034:\r@\036\275\320\367B\274\333_\314=S\024\027>\332\372:\276eY2\275r<\301>_\376>\276%a\247>\032s\327>\236lw\276\325\245\262\276ML\345=\356[\244\276\235f\233\2756\304<\276\023\274W\276\226Q\206\275\222\276\221<r\237\006>\363\351\000\276\005\205r<V|\215\275\004\375\032>2\372\321\274\203\032\n\276h\322\262=Y\217\211>h\350}\2765\274*\274\377\315\025>i\305\344\275Q\023+\275\301\007\r>=\377\031>\237\020\360<E\351O=&rc;\031W\200\274dh\245>9\347\342=\036\214\231:m\201\346=\212i\t>\275\234\205\275I\224\206\275\277\021\267\276\264\3369>\303\221h\276J\366\233=\335\365/>Z\236\272\275Q\362\022=\350\322\302\275\266;R\276o\000a>\343\227\304<Se\037>\366\341\253\276n\377\271\275\341\227\013\276\217\014\'\275$\3023\276\270\316>=:J4\276<\0008\276\252\364\245\2756\366\035>nq:>\361\216\314>$\037<\276\266\327\001\275\313uT>\027\2528\275\343pv>\020\014#\276\340\236_<\265s`=\017(\276\275\026A\021\276&\336\233\2755=U\2757\344>=\017:\344=\010\221\341\274\325\350\355\276\317I\025\275\367\274~\275E`\245=\036M\210>\337Y\263>K\003\354<\345\315\007\276\177t\375<\017\204\230=\017\037G\275\204\243\241\274\304\341\227>\300\236\355=V\022\000\276\013\034\326=#.8>\265\204h\276\252\025\360\275\361\376\233=\306)\362\275BoG>\341\275\006\276\211Z\344\275MJ\266\275>\310\001=8\026\361\274\211\364Z\276fF\007\276i?4>\241\330~>\245\206\340\275/\352\327>\255\211\252>\342s\210=\3723r\276\325i\221=y\013{\276\"\030 \276%``<\267\217\\\276\3340M>u\251L>\017\003\200>R\241\'\276\317\037\000=\022\225a\275\037\n\212\274\205\337\266=\357)\243\275&\327\233\275\270\231\0019)\313z=\235~R\276\271?\261\274\200\020\231\276\006\363\003=\327]\377=s\350\311=\010p2\276\263\274\350=\330\213\036>\306\026+\276\273i&=\263G\222;\262\215\200\274b3\212=-\341\025>\355\223s\276\341\240\373\275\016F\340\275g\"\017\276s\210\246\276\323o/>\343\002\344=<\344;<\007Pf>x_F\275?6\253>\240\377>>\232\314\304=\260{\340\273\025\320\035\275\253\217\254\276t\226\230=\'\026\177>\366\310\331\275\235\353\032\275\303\262\277=\377Y\203>\016t\020=\335&6\276\300x\204>\213\307E>\223\232$\274Z\220\010\276WX\037>|V8\276\346gN>\346)\217>\2369/\276-\322\242\275\341\273?\276\272\323\373=\376\370\215=\324N\213<^\377\n<\362\324L>\335\020\222>\346xB\275\360\276F\276\322 v;\204\231\246>\000\022\227\275\247\021I>\016\271\205\273\266P\t\276\375Q\364\273\275\027Q\276\266\263\210=\271!J\276t)\031>\256\025\005>\n(\255<\037\232\264\273\274\351\217\2746k\332=\030\365\356>\347\322k\276}\271\252\276Z)]\276\321\273\274=\327(L>\205o\264=\374=\244\276=\336@\276\026\021\355<Sw\204\275\223\333\320\275\'>i\276\317\234\342=8p\242\275uwq\275\357\247\221\276\177x\205<\352G\020>\312[E\273W\370\200\2755p+\274D\364\030\276\202\375\005\274[\277\261\276\200\211\205\276\263M]>O\025\231>\303\221\217\276\014\305\006\273\206\264\253\274)\335:\275\310\001\266\275\315\010\222=\3531\244\276\352\307\212\275\327\373\033<\325\260\225>.\033Y=\300\3734>\377`\266=\363\2611\276\003%\006\276\267R\226<\341\337\206\275\257\031\326<\234\330d=\370\347a=\227\307\362\274b\270N\276,*O=\234\303\273\276\3332\t?\002\334Q\276\256$,\2755F+>\235\\\235\276U\241g\275\335\324O=cP\025>]\3669>5\271\n:\030&0>\322/Y\275\006\311[\273n\362\002\276\357\277\273\276\277\226\024>P\271\201\276\216 W\275<\206\333\273\314<;\275\'\262\204>5\266\373=cD\242\275\r{<>/\374V\276\375\271\\>\210\344\021>\227\346a=\207\306\023\276\021c\311=\307i\344\275y\263\252\275%<\'>\302 \024>\354\257\203>[\200\233=\013\336\">\000&\032>}\261\221\275.\365\333=P/\272=\021|\247\276\351\357\022\275\304<\354\2758\361\301\275\360\356`>\r\253\303\274\334\216\020>\232\036\035>Kf\035\276W7a>\323E\027>\304\255\026>>\270\307<\361\224I>t\306\236\276\364\037$=\207d\344= CX\275\221\354/=\371\234\251<\363\222\203\276\311% >\225~\374=\216L\253\275.\227\207\276:p\354=2\030\021\276B<D\274\377\004\306\275k\007\207>@C\321\275\002\315R\276\261yN\276T\346:>} \335>\372e\013\275\026!q\2760\032>\276t\014\322>c#\\>,\256\351;\024[K\275\317\354\203<\327PY\276\033\245\236=\020\372;\276eR\224=\256\272\346;\357\364\336\276\321>,\276\231O\301<\237\010\230\276\345\344\222;\300\356i\274\214r\361=\255\006\032\273e\352L\276%}Y>\001\000+\275A\355\007\275\340\315h\276\262\233\355\274C\371\301\275\236\305\252=\032th>\233,y\275\262/\205\273\244AH=N\263G;\300\212\233=NXu\273\354\353\375=\205\325\213>y\225@>\261\001_>TR\326<\316\270\212\276\274\234u>\232\232w>\372\036)\274\212N\205\275\230\037\252=\203\356\016>\362\341\231=\320\362\214=\221\372\336=\030\003\305\276\220F\005\275\327g\271\273Y_\306=\212\342\347=\205$V\276\326\266h=@\374\246>$\006;\276\301a{>\232\000\357\275rV\227\276B\214g\275\013t\230>A\334\026=\"^\246=\301W>\276\017\306\'\276U\021\027=\264N<\276\025g\233\275\260\364\024\276\014\004\356\274\001^e\276\264`\225\275)\214N\276 B\212\274\216\325>>\274\302B\276\004\\\331<\270h\252\275\310\224D\276*0!\276\311\301\013>\033uz\274\370`\317=^\316\r\274\026\305a\276>\354k\276\224 \354\274=\320\321=d\204\253\2755I\351<\210H\207>Q2h\2768\326I\276RY\271=\253\353\177<\255*2\2762\021V\275x\250\222\276\342\177\344\274\222\0031>\213\346{\276\362kI>\313\207\002\276\231\236,\276LvO\275\331\355b>\377\213\010\276Y\217G>\370|\010>\366YM\2769\t\336>\342\265]=\351\330x>)\361\003\275\240f\003>\374-b>\317\005\007>\233\030\022\276\0341u\276\371\254.\276\035\016\217\276\006\027\225=\367\363\260\275n%P>\302\017\023>Y\311i\274\337\316X\276z\255Q\276\357ru>qV\024\276\035\370E\276\335;\013=\023\013<>\314\026\370\275/\262\205=\211\266\343\275F\346\352<\246|+\276\252\324\202=\353\274\233=\342\375\006\276Z\355\232>\311(\364=a!\303>h\314\317=\245\311A=*\232e>\032_\244\275k\323+\276\203\356\273\274\373\325\266>\350\205\272\276m\277y=\236\267\026\276n\364\376\274\312*\247\276\330\272\367\275\033\250\327=\324Z->xm\"\273\236\010\346=\243\025\214\275\257f;<\004\307\315\275\221\243\016\276\215X\023;\207\252\017=\022\252\274=&\034\315\276"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\314\337\220=uq\003\276\027\343\352=\025M\027=\032A\023\276pYY\276L\266;\276Bk\371\274}\270N>y\366\006\276\326\010\242=\334\205\237>\251?\227\275\024\224\312\275\244\006C\276\013\345:=\310\367\266\276\201\340\330<\236RP\276\2443\226\275\247\305\036\275#k#>Ns\034>\303\324s>\031\333\213>\353\3621\276\311\204\246=\213P\326>\010Pj>\367\230\304>\005\271k>o\251\215>D\312\366\275P\342\344\274\264j\217>\020Kw>\347\0217=\025\305\251\276<$\006>X\265\222=b\272\207\274\010+t\276O\226\366\275\236\314\002\276.\032\n>\317\177\013=|\013\206=\226(N\276.Z\214\276<\377\243>\315\203\353\275O\245\233\276\371\217\257>\244\354\340\275\376\201\014\275\265\213S\276[\315R>1\224\365\275\372\222\334=\235LI\275\020\201\020>D\033\360\275\026\016K\276\343k\n\276$\311\006>\303\202\007\273\031_^\275\035\306\240\275\265\211\273>\034P\216;h\305\n?\0374,\276\017r\016<\336\231[\276\337\257\352<\265\325\201\274\242\231\240<\265Z\032>=\315\023>\252\350\214\276\020\006q\276\302+\231>w\237\232\275\264\016\207=Xh\242\2747R\205\274\261\353F>\246oB\276\"\362\206\276\337\341\361<b\367b==\314z=Y\255\213=\253\205\n>z~\360=\016/\236<B\301J>X\n\316\276rD\003\274\366_g\276b\347\006\274\264\2669>\232,K;\213\032\254\2720\230\021>\225\342\260\275Z\336\201\275\345\347\206\276(\323\260\275\003\331\207=\311<\263\274\251\313*\274\261H\005>h\3548>\255@/\276\322\010\177:Tj\244>\003\242\\>\262T;>\377\016\350=]a\333\275\201\006\343=vb\350\275\222\275\306;\271\267\243>\246\007\244>\337\345\302\275\250)\205\275k\266\223>y4\314\275\')\262<\335b\016\276\347k\316=\026i\214\276\274B~=M6\357\273Npc\276Y\250\255\275s=\341\274\275d\016>\224\001\004\276\024\217\310>.{\327\275\025\027\220=\017\372y>7H\263\276|\006\363\275#\007\227>\2234\247>\0351\355=Nr\251\275\321t\004\276Lc6\276f(\037\276rt\320=\246Cu\275\252\320\004>\327\362\t\275\257)\366\275%\030w\276\310$\222\273\272\307\005>\342m\207>\026#\227>\273\325d>\033\203\336\275\233\177\237\274\222@\243\274\3030\270\275q\232\242\275\346\207\347\275\367\331\274\2762&\252\275\037\303\032\2768\353\220;\252\0012>\340\031\033\275\322\211\032\276\252\275\273>\221\334\023\276\316\016\r>\021&\216<jA\207>\007\366\t>\305\325\323\276\372\325\177=\231WL<\301\302D>\006\n\225\276\0362\225\275\353\256\251\275\312\354\324=ucp\275\235f%\276\260{\204=\243E\236=\030\320\324\2757\300\035\277a\375\351<Y8\360\275\263\034\027=\236-\016\276G\300\020\274\3501\3549}5\361=\275\177\375\275\235\347\"\275\303\342\271\275\310I;>\221\215\242\275X\022P>k\2654\275\0200R\276*@8=7\320<=\206\346H>\301\241\361=,s-\275M\354\267=\360\332\203\275\020<\241\275W\333k\274&\233\264=\324o\265\275EJ;\276\224>\004>\220\374\035\275E\274e\276\032\0108>\323\342\357=#\371\025> 0?\276b\312\276;\245\004O\276:\257\231=\'}N\275\250\332\233\275_\333S=\361\365\221>H\354\354:3E\014>P\346\024>/6\003>\243\007\366\273\303\177\026\276\235\355\022\276\215E\204\275\013/\021\276\337\037\037>\333\347\256\276\367\222\t>\272\3677>\331\213\026>\t\231\335<\002p\320=\204\177\346\275;\315\306\274\3152\t>\201\347*>(\003\335\275f\031\312\274\307\t_>\r+\316=\324\272\255\274\366l5>7\313\256\276\377\032\250>\223%\335\273\262(c\276\252\016(>Uq\335=\361\246\271\275\231y\270\276\217\001\t\276\036\035\014>\274C\203<\366\026{\275\333cj<\222vK\276\nj\016>\253\262\207\276\017\227j>\010\316#\276\373E\001=9\017\320=pi\320=\351\271\357\275\373\014I\276\230q\010>\202\312\010\276J\256\036\276\014\027\212=\257\370\210=\264\231\237\276w\272\244=\212\271\276>\350\351(\276\001\273\245>\3056P=\363r\264\275`\224\221=\177\315p\276g\243f>\214\360\247\276\001\232\232\274H\371\340\275[\335\027\276\370\245Z\276.\206d>n(\222\276\350c\207\276\350\314\317>?r\276\275\242J\255\275\235a\215=\304\236\'\275@K\254>\245\226*\275\321\267A\274dS\330<\346y\362\275\312\033\225\276\377\232\204\276%\031\372<r\252Y\275\"\327C\275\345\nI>bY\206>\224P@>\241\310\036\275\345\334\212\276\332\373\247\274\033\231/\276\344\373\204\275x\303\013\275\256\236\247>\310\271\022\275+\271\370=q\002\203<\2237\227\276\212\2669=\330\344.\276#G\247=\331\267!\276r\366\031\275mN\026\274wq\221=\243\020\274<\323\010\362=\200{B\275\273\267\371=i\362W=wY,><\022\034\276$\277-\276\323+7>\316\307\274>\361\202\204\275B\201\256<\261n?\275\240\217<=\273\003\024\276\320\233]\275\230\203\211>\256\357 \276\330\0059\275\205\034\026\276\003\257\252>\303\234\202\273@\035\241<\260<\231\2761\250?\274L\360\331\275B\232\000>\324\305b>\0273\313\275\337<y\275\315\244\273\275{\325J\275\242\302\265\276\313n\220\275\234\374\324\275gtT\275\322\344\251\274\013\036\233>\021\204M=\277\002G>\230<\344\276\321Ru=G\007\020\276\034\177q=\220\374\352\275\204>\024>\272\222\032\276\276\225L>\253\303\211=\251\3476>\036n\321\274w\373W=v\261\275=N\366\301\275\316\035Z\276Ms\265\274\207\336<\276s~2\276\263P\035\276\032\227\210\276\272\374\374<\353\346k\275\027l+\276Y;\367=y\217\254\276\253\344\220=\021\026\344<\244J%\275\365H\001>\2050-\276S\373\233\276\res=\261\346\020\276\021YU>\t J\276\333\343h\275[2\374=\206+\023>\315$\347=\317\361d>o\010\311\275\"\220\241\276\261\355\204=\304\363\200\276%Nn>\000\325\367=\370\000\374<\360 \000\276\276\220\224<Y\330\032\275)\317\211=\003\363\212\275\0377\200\274\357:\371\275\371:\007\276\212\235\260\274% \251=\004\006\332\275\016` \276e\\\223>\314\345E\276A\010\356\275\0176\223\275\005\335}9\227\326\236>\221h\367<\001j\225=a\226\232\275\027\377\374\274-\337D\276&\004\233\276(\035\022\276\246\250\204>\227!\216\276Hp\334<sj\215=\247\303;\276%\222?\2769\253\273\275\345\302\331\275\007\252\367\275gQ\211<\320\323\233\276\273ad>9,J=Yh1>&\213\277\275\336\342\202\276\212\321\323\276\t\3753\276\237\324\355\274O>\372<\232;\362<)\332\220=\t\357\243=M\245\305\275\3715Z>\200j\003=\021\367\023>\355W\205>\332\014|=y\300\237=\236\241\256\276\023\301O\276\220\210\241\276N4\006\276\3762\230=}\275_<\245\313\260=B\2579\275=\272\232\276\353\214\354<\212d+\275\2727\032>\336\364:>\340\326\260\276Q\024\333=\262\222\335>h\223\206\275\341\312{\276\202R\373=\247\314{\275\001\276\312\275\303\351F><D\345=\345\376\261\276a\267l\274\214\356t\276\236\305\262>\211\\A\275\225QI=,\320S>\261,\200\276v\341~>,PY>d\225\022\276\272)\227>\005_M\276s(\316\275\210\030u>\263v\023\276\222\320\217>gH+\2732\257\230=\374e\341<7h\236=~\374\211\275`\256e\276\307\031*>\215a\216\276\322\200\226\274\246(\332<\002 \306=\211\313>\276/\205\311=\341@\335\275\273HO\276M_0\276\353\306\245>h\373\264\275\004\036Q\274A\375\215=\200{\221=\016\341o>\360*O=\021q\274>\266\001\232<\2440\362=~>\241=W\273\227:\026_\265\276\306\220\r\276\035\274\315=\020\313\213\276>\304\256\276V-n>\237d\354>]\367\">pv\315\275Y\221\206=s\343)\276F\345$\275\263\034\200\276\370\212\224\276\240\363\033\276\001\274\310>\340\231 \276\033Q`=z\0149\275\257\002\034\276\002\203\255\276\177\363\'>i\010\247\275a\t\002\276\317\\&=\376\365\376=\"\327\275=\335T\222=\340\304\315\275u!\025\276\275\327\023\276\226Y\025\275\250a\376\274\265\177\210\276Y\336\030\276\301\342W\276(p\250>+\203\363=\277\006\263>\346\264\334\274\215\305\252\276\374=\037=\301\311\245>\357U\266\274\276\355\007>\237\353;\276r\300W>\317\374\326\275\246i\306<\334\007C\2741\3641\275s\023\315=;uS\276\274\237(=\302\256\244>\330 \206\276l2>>\370\263\374=\332N\343\275\312\270\027=\303\236\324\275\252&\037\276#B\237=m%&\273O\3330<\266Ym\276\250\264t\275^O\222\275\3464M\276\245\025K=\206\035\205\276\n\341\324\2760\217A>\216?%<\007\272 >HY\245\276\217\3075:}\370#>\223\203~:\032r\005>`1z=\303{\333\275\253\256\025\275R\265\312\276\351\227{<#\262A\275\344\337\037\276B?\202;e\021\233\275\004\257\227\273\001\275\017\276aR\312=\271\004\326=\013\321_>\321B\223>\323\302\333=\020g6=\257\212v\276\215d`\275\3720;>\240T\372=$ 4>Jt\311;\232d\020>q\r\236\275\214&\312\275\203Y\270\275=\343\034>6\036\013=\271\251\221>` \304<\322\271\305;\235\354~\275\370W\034>\347\024\345;\2603\322<v\030\023>\315\034\220\274\026\325\252\275\237s\216\276\000w\243>\335V\231\274\376\006\267>x\023\325=\313F\303=\244D\333=cZo\2760\221Z\275\311\3767\276VYd\276\206^\n=n\316(\275\000\2132>&\020\242\274>\200\024\276\262]*>J\3538\276L\3647>\246\336\350\274/\035I=Q\354F\276\177\273\251>+\261W\276\313\377\302\274\244z\221>\242n\225\275\226\240\310\275\225v\302\276\232\251\323\275H\301\205\276\371uC\274P\311\236>\237g\261\273\304\264Z<\377\221\226\275\001\305\356\275\260\377\220\275b\213\334>\311Fi\276\271\350\272\275\332\326\"\276\0212K>!w=\2754 4>}IR\274[\312*\276\372\375_\276\270b&;*\2575>\226)u>\'\260V=\022\346\024\276\347\2532\276\374H\274\275\212\272\346<\201\000->e\311\277=\360p\023\275\331q\021?\271+j\274\345\210k\275\335\331,>\323_\276\276\311\201\\>W\243\346\275\303\2064<\354;F>\230\233\233>\303\006\271\275\225\033\r\276!4\237:z\270\001\276*\233\003\2755\303\214>\371\360P\276\'fg>\002\220z>\004#\261\274\300\204Y\275\343n\351\275_\002\016\275\272\0308\2760\311\373=\300\244l\276[\344X\275y\\\"\276V!\314\275\343b\307\276h\337\203\276\301\235\362\275\201\305\210>\272$\037\276\373\214e=[\277o=\t\304\370\272\224N5>o:\221>\213D\330\275\0241\204\276\327\272\312=\026\223\301\275TO\r>\177\234\270\275\006C\210>\317K\344\274\224\265\261\276+\320\034\276 \247{;\225ud\275\356N\205\276\307\025\247\276\030\253\252>[(j>\333\353?;\347 \001>\256K\013=Y\210\221<\320BN\276\177\001\034>0Ov\2756O];\342\355\241\276\315\005E\276\030\353b\274\357\357\232<\350\235\026\275\236\252Y\276+>^\276\265$\341<\2460\000>\033\336\313=\331\207F>\233_\234>C\362\365\275\276\026\223\276\324f\221\276\254\205M\275\347\262\300<e\274\311\276\016\234\373\275\303\274\204<\'1\004>\202\365+\275>N\267\275|\337\206>\035\223\227>\317\230\211\276\26629\275\026\366\346=\005\222\221\275\036\223G\276\344\312H\275R\375C\276T\232$>\035\373\007\276I>s\274\345\247R\275\r(^>\026xe>=\205B\273rj\300\274\'\3635>f\275L>-a\222\275\250\243\265\275\334u\340=s\300\000>0E\035\276=\245/\276\211T\233>h\353\260>\323\322\002=>\216F<|{+>\361\342\316\274\267\353r>3;\'>\0241\302\275\000\377\206>\244r\000>\3328^\276\251\237F\2750\030s\276x\'\376;\300\3174>rKn\276\301\243A\276e\276\332\275~\013\000\276\260\3128\276=`\301=\246\300\223\276\375\211\022<H\017P\276#\022\013\276\033\363\352\272\'\023\226\276\016\361D>\023>\013\276\357\211\374\275\013;\005<!u\303>V\255\272=\361\3309\273\022\366\200>=\367\r\276\313\'\344=3f\001\273*\230>=r\3308\275a\031\031\276\343\372\030>\255\367\t>t<9>\314\272:=\216\3452>\247\002\305\276\034b\376=x\202\300=~\217!>N\221}\274\037\200\010\277\271x\037\276;\247A\274h\335U=\233J><\032\252\032;\330\317\353\275\221`\373\276\301\3104\276\002\206.>\033\226\032>\360F\274=\350\036\347\275\375;\"=o\267\201=p=\217=\'\277\005?\033\341y\2758\\\037=U\314K\276X\275}=\267\271<\275\032(\250=\010\203\316=\214V\207>/\327\021=w\251\245\275\027\201\317=\321\351\227\276\310\r\266=O\335\000\276\300\236\304>e;\344<\321\224\230>\215\301i=\021\370.\275\266\375\361=\320\n_>?\350\312=\311>m;o\327A\276)\204<>\354\367|>\3243\013>=$\017\276\357\310A\276\027A6>ZP\314\274o\307\361\276\245\236O\275\213\327\242\276\230L\267=\302\t\231<\335g\"\276+\352w\276\364\221`>\203\026\020>l\266/=9\016c>u\235\344<l\217\341<\322\317\322=\n\211g<\244\316\360>\031\260\207\275\227\201m\276s\016\361\275\202\264H\276\034\205\200>\264\247\016>@\247\221\276\205i\215\275\247\034P\276\325\245I\272\317:->\037\236\307\275<X\023\2766\212\244=[\321<>8U\026=\254\2051>t\247\216\276`\320\000\276\351\037\007>\212\314w>W\022\237>\343[\232<\315\233\024\276\nH\207\276\211\253\022>x\243\335=\235K\231\276\201\"\301=\356\273\376;>\001.\276\275\\\255>\005E+\275\301gk>\357O\210\275\217\034R\276\007VE\276\211\035X>\311np>\210\320\236\275\354\241\224>1\363\204\276\214f\273\2757\242\373>@F\230=<\266\203>=\365\014=\027\343F>\234\375\214<\334\210R\276h\365>\276\342\377\246\2768\261\235\275\234\003 =\014\241\000\276\200\377j\274y\244\316\2751\374\257= \211\273=r\031\266=\337\363\021\276\326\343_\276\234\254\351=\273\215\204=K\2166=\030\2121=J1O=\3371\036>\312.\204\276\335\241\232<\332\356&>\363\221\007>\213\243\363\274\316\2704\275\305\362\225\276\365\3440\276-=\036<\227\327\267=\276!m=\'\241\230\275\337`\257>[=>\276b\243\242=8\377)>~1\205=\307yK>\314\245L\2769K\224<M\330\277>3R\356;2~\201>\305/\252\275\002\337\362=\036O\027;\031\225S\276R\035\221<\315\357\037>H\303u\275~\305m>,\233a\276\351\351:\276F\033\031>\274\016\253\275Q\332\321\276\200\267\372=dS\240\273,\321\357=\266\310\204\276W\345\232\275\000\t\203\276M\301\260<e\030\301\274\330x_>\320\373\002>\323\217I\276\343?`>\366\254\205>\307\237D<u\304\262\275\350\307\342=E\027}>\365\362\030\276\362Sz<\361(4>iz\367=\357\305\314\276\')!\275\365\022:=Ph\300\275in%\276OG\255\275\307\212\005\276\204\344\251=\024u\361=xA\021=S\230\206<\341)\265\276\326.\206=\235c\032\276\272\320x>\302v\376=[\243n>V\242\177\276\366\313\251\275\341\337\203\276\330\244&\276CB\203=\350\013\222=9[\345<\177\255\304\275\"f\024\276\022\346\033>\244\340\272=\211\205\206>y\241\342\275\267\256\312\275\323>\266\275\207^\231\276l\020\234=P\262\036\276\245\314\031>U\313\200<y\202\272\276\005\261j\275E\2076=a\016\001>\210\342\326>\220]\216\276\016&\010\275LR\327\274\177\036j>\221\347}\272H$Z\276\002\217\267=\317F\205\273\n\343\\=\000_\353<\302\327t<5\3268=\343b\317=[\330\272\276\200z2\276\035K\251\276TY\303\276\335Z\204=\351?\022\275\342\300\211\276\353\037\214\275M\325\n>\003\304\230>\023\343\241<\330\355\307\275\341\341\211\276R\234i=z\221b>\027Rv\276 \037\360\275\177\315\212<\202N\r>\242_\225\275\305X%\275\224\325\342\276\r\022\276>\014\240^\273\234\006\313\273\305\260W>\310\002\201\276\267\351\201<\325\237\027=\342\377\324=\353\223\005\276\376\037\\>\242Q\274<U\215o\274\024\"\273\275\336\000\315=l\344\247\275\200\227\245\275\234\213K>\240\014G\276\206\333\257\275\r\346\013\276\274\350\226=C\355\251>\327G\356\2750\324\357=\357)\365=\3461\252\276?\333\253=!\266\224=g\000\001>p\266\271\274\357\236\252\274xLU\276\004\307\336\276\246\'\256=.\0249\276\'\240V=e\255\275=0\217\372\273]x\266\275\017\376\265>O\276\335=;[7\275\001\026\257\275W\244\274=\325DM>\322I\217>\177\247\260>\320|Z\275(,\335=5\036\023>\357zx;\343\227\215=\364\366\252<\302\355\336\275J\365\331\275\325{\367\275\0369\261=\236\246\262\274\332\370\032>>\rX>\335\032.\276\300\303H=0S\206>\232(q=\236|\016\275^\353\357\276\377\225\362\275\343\313\256=m\005r\276\025\377,\274S[\016\276\036ol\2750\272\016\276\206\225\220\274fKV\276/sk\276e\271\206\275\210?\000>\315\365K>u\030V>K\002\"\276f }\275\252\312\'\276:X\033\276\016\177C\276\374\273\344\275^\362@\276\345\364O\276\020|\223<>\234\220<_\256\363\276\366\317\010\272s\005\265=xwg\276E^\332\276\212\236\221\276\223\013\225\275q(\246\276\326\270\216\274\371\023\373\275\307&&>\026\326\322\276U\376m\276\026\233)\275~.K\276=\200\212\276\021s\256\275\371\263\002\276n\256\036>\314\263\022\276\237\243\"\275\032z@>\340\206[=\nq\\<AR\245\275\'\211n\276\304\242\262\2757FG\275\367\206\273\275\362[\266=w\303\212>\000F\231=\271\225\312<\035\261->\207/\333\276\325a\235=\212\351\201\275\030Mj\276s\003\222\272\026\222\000\276\r\215\026\276\375\340\006:\324\2236\276\335|\354=\277\331\'\275\256\274q>\231X<\276F\265\205\275\022\re\276\215\013-\276\330\323(\275\320F\234\276\327Z+=\312\3667\274@c\236\276j\343\255>8\366\037\276Y\007H\275\325\342\022>\246\310C>o\014\004>\231\244\342=\t=\355=Q$X>(g!\276\276\004\335\276\254\331\374\275\0052\367\273\353\311\177\276J\224M\276\205%\215\275@P]\276\337\301\212\276\026\263\222>\241=\021>\335\024\366>\016)0\276\205\014\204=\r\030\277\274\246\256\314\275&\341)\276*]\016>\322\r2\276\375w\t\276\341\271\003>v:\304\276\323\344\000>&\2669\276|O%>|\373\324\274e\036\340\275^\252\'<\257P>\274\362\026(\276!z\271\276\242\006x\276\001J\375=\000\331t\276kZv\276P\371\026=\222!\314\274ZD\247\276+\377;\276\017S\356=\013Q0\275p\217\362<\257*\\>\3119\t\274\212\334\002>\221?=\275\2645\'\275\207\265\244>.T\'\276\201\2768\276+8\032\274\2515\273\273\345\307H\274S\003\336\275\036G\n=\273\372\315>\\\244\275\276\023\314[>g\222\227=\310\272o>\342\\\245\276b\353\002\275\277\026\247\275\224q\036\276\277\3126\276\352\377\021=\225\003,>\215z\000\276\377\034\212=\032\357\333=\257\301j\276F\r\223\275B\224\330\276\270\263\241\276\304\206\005<\031\256\210>\206\313h\275\270\245\260=@\257\027=\\Xi<r}\326\275N\036\365=\305M]\274\235nY\272\020\357\222\276Et\005\276?\216\000>`\223Z\276\310\317\004\277\210\217L>\271\024\246>M\376=\274T\304)>Z\346\302=]\225\253;\220\321c=N\305`>K\271:\276\222\204\343\275\337\253\343\275\311\314)>\347i\253\276\346\211z\275\320E5>\264\202l\2760\007\202\276U\237|>.\207D\276\254\237\244\275O\275\310\2751\006\204\275\032h\006\277\204\375\205=\260\247\023=%H$\275\\\340.\276t\2550<\224w\034>\262\022\264=\276\314\236\274,\250\266>\032\206 \275\222;\211\276\006\303x>\341T\345\275q\336\223\276J\312\003\275\024}B>\223L/=\264Hf>\221w;\276b\030\231\276D\231\203\276\305Si>X\217\003\276\022?1\274\326\235:=-\027\237=\037\360\350;\007\203\305=TU\316\275\355C\356\275\315J#>\351\017\327<b\r,\275\340\365\273=\000\033\262\276\022\330]\276~S\326=+\0205=\367mV>AW@>\302\267s>\276\036\006\274I\177\201\275\330E\203\276K\322\220\273E \341=A\030$>\334\376\202\276\230\246u\276\027\353>\276\200\251\250\275\347\222[=t\225\036\276\023\2361>\211#4\276\237\374\375=\375\265\005\276\247 \202\276\\\207\200\276w\252\010>\221v\214>\371x\010;\006\030q=Pt\371<hI\200\276\225fM=\370`p\276\334;\037\276\331#\216\274.-\030=\340Q\240>\377~+\275\352\317_=\214\024\323\274z \263\276\376z\207= \372\036>\216n\212\275\374z\022=\352+m\275\237\271\033>\310\270\325\275a\375\373\275\316\267\206\274>;\241\276\332\277\301\275\267bT>x\270\360\2759\324D\274/\0279>&P=\274E\033\240;\017\374\013\276\253\247\330><\370\250=\231\267\233=\2510l\276H\017Q>\376\000\255\275\354\322\006>\201\374K\275\206uc>u\241\276=\212\375\021>c\224\255=\023mX>\270\237\211=5\027\n\276\300\223\207==\303V\275\302Wq\276-\352\256\275{\025\307>\202E\034\276\207\025f\275x\376\326\2745\354z<\376\037\215<yT\021>\217l\336\276\274E\302<\021\177\016>\324\276 >\210C\310=\212\355\264\275[^\222\2752U\271=\264\221\215\276\371<\227\275i\355!\275\302\243\201\275\250\177\371>\342\236\013\275,d\035\276\231;\200>\216r\341\274,\030\267\275\007\027\006\276r\325$\275\324\264<\275\'\007\215=\344\223j\276b\274\033\276\336\2404=\244>\000\275\327\373\222=\275$\244\276\027\326\302\275\237\351i<\225\r\223<\351\262\344\275\311\347\024>\252\033Y=\230`\315=\207\247\202\276e\3714\275G1\032\276,t{>\317\006F=\362p\005\275\0264\227>x\273\313>\375\250\350\274\372U\276=l~\215>\305\"\001;\312`\312\275\224\257\350\276\027\316\242\275*\262x>\207\212\203>U\270\006>B!\271>\002\2423\275w{\320>G\221\247=X\0018\276\250\324\310>\r\235\r>\3118\204\274eG\324\275\312w4>\2029\332<\003\364\024\275\237qL\275\r\006?\275\314\022\243>AxX>\257H\335=\001\206\177\274Jhw>\213\257n=a\354\311\274\343\245\245\275ryM>\254\376#>\360&\364\2725\025\214>jf\021\275\305\225C<\306\006\215\275\372\3673=\213\224\246<\245Y\314<\377n\254>F\234\325\274\362\372\210=\213\305\244\275\021\350,>\315b)\276\001$\242\275\335\224C<\342\364\206=\235\221\r>\243\320\315\276\007$b\276C/\021\276\260{\227>\204c\251<}HV>\301\005\250=\264AP\276\353\210\320\276\211`\001\275\216\014\261\274\324\230D\276\260qn>\306\023\000>\321hh\276\220\220\222>t%\026>\320\251\"\275\341\315)\276H\023 <\263\320\240\276\014\237\032\276\206\310\252\275Q\262i< \230\314=+\317\213=\252-\231>u\201\217\273\350-\215>\"D(\275\202\3525>\035\315r\275z\014\246>\357y\'>\010( \276HbD>\0216\323=\260\361\307\274\343\313\362\275P:_\275\275\231\372;\341\2301=q\337\246=\355\312\302>\202jU>Y}\364;\"\322\177>U\266\030\276d\357>\276F\215\005\276y\310\232\275\025c&\276\203\274>=\226\362\347\275\233\351#\274\321\241\321\273\005\273\004\276\331\320\221\276\261\306K;\"\024\332\274\235\002;>o\033\361<S\266V\275\244\237\302=\306\204\373=\347\203+\275\242\313$<\220Oj>\351\020h>\376\3632\275l\3712:\356\267\005>\032qS>\245\n\222\276!\314\016?\256\211g\276`wE\276\325I\013\276\307>\264\276!\322\264=g\215\320\274\215\253e>\025\'~\275r\237\232==\247\227\275\\XP>\220K$\276\237\210~\276\300\337\334=%\262N\276\360\002&\276\023\243\313\276X\223\363=ct\360\274G\357\237\273\271V\202\2731V\364\275\255\037`\275\255\251\267\275\322\361\217=\270\274\014\2765=\253\275 \224\220\275a\300s\276\367H\213>\233Gd\276U\226\232\273\361z4>\336\376\222\275\303\177\317>\203\274\202\275Z;\026\276\010\334\261\2767.\226>y\336\234>\223\037(\275\207\376 =D(\330\274\347U\200\276-\202|>#\343\177\276\375a\224<7P\030\2750\353\377=\257\275\274\276/Y\036\276f\215\330>\000\277/=h\371\357;z\351\027\275\364\237\202\276\366\003\251\274<\3529>#\234$>\270\224~=\310\034\257=\277 \201>\320\351d=\354\033\021\275xP\337\275E_\200\276\316\355\272\274\376\300%\276\304\031\223>\201\305\014\276]\227i\276f\325k>I\322%\276\003^p>\204;\267\273\374\256V\276\357\177\000=S\351\026>gb\270=\357\333R\276\025\366c;\177\306\205=\255\335Z>\327\302\273=\006\325\214<\273\261\\>\235|\266=[]\035>\346N\200>\036\025\r\276L<0=\200\255\246=\321\264\017>{D\207\2769:\246\276\362\275\236<\'\335X>m3+\276\0008$<\240\324\360\274\216\261Z>\005\276\235=y~\353=\0367N\276\237\333\365=\234x\314\275Q\243\220>\366\272t>[\305z=m5\237\276\232\304S\2760A-\276\324\036\346=sP\260\275\205\313\004\276\nq$>\205\322\350\274\342\330Q\275\000\274\035\276\036\026\264= \223\203<\217~\020\276\374\004\221\275\373\274\225\276\306\246\344=\330\237\004=%$\202\275\313\"\200=\224\245\215\275w\022*\276\022\024\301<Z\373\r=>\021\005\276j\201h\276\354\3040>\236\322\361\273j\341\t>\347f\220>)\317\357={\024\345\2750\372\202\274GcL\276\0212\024\275\222\366?=[\010\306\275\335\265\'>\206\352\277\275\245\036l<ODA<\344\310K\275[Y\032\276\250\365\221>\360\265\363\275\t\237J>\240\016\220>\273Dv\276\230%\235>Div\276qUF>!0C>\366\352\276>\320a\256=\312\265\254\276\253\222\023\275\224\034\360=\331\000\304\275\352<\352=\237\266S\275\251\017\356\276\346\022[\276\234`\010\276\002\005N=\266\205\346=\034\276\327=v\250\242=\233\034z>2<j>\272w\242=p\025\307=~o\237\275\347\323\244\275\275\331\026\276G\343m>d\246~\276l\257\311\275\340x\366=\275\205\210\275b>\306=6\232\030>\315VZ\276\246?\274\275\034$8>K\301\315=%\341->\000\371{;\375\004\033>\207\036B\276\001n\026=C\346\355=\340\227\244\275\303$}>{\000\021\276~\346j\276\016\'\002>\253/\237<\303e%\275;67>\014\224g\276KH\274>o\320\010\276Wk\210\276z-\037=*%t=;Q\322=.J\303=(\320\252=\021\251\256=:6\241>\304\321m:\013\216\211=6L\242=a\3149\276\341>I\274a\010\036\276\246|\252<?tn\275\327\177\320>\224\322\273\276\341\314\241\276\032\335\202>\307F\017>J\265n>\230\204\r\275yHw\276yt\361\275\253{\270>\260I\262\275\320\2717\275\3677\020>\243\t\005\27543\356\275\235\212\030\273s@\006\276dfU=_\300)=\022`\027\276\202@\360\273\321\024\254\274I4/\274m\255I>\344+\234\276\256\216\370\275\374\372\342=\273\031\"=\273\254m\276wb\031>\346\214/\275?\310\n\276\327Y\237\275\252\203g>u\234)>wa3>o\312\234\276\336[\000\277\370K\214\274!\364\013\275\207\323\211\275\210\372 \276\263\355\220\276\377\325\240<\301\177\316\274\367>3>\244\0031>\341\020<\276*\022\316=\307\306\027>\250s\312=\322{O\276\252\357\312=\360a\215\276\236]\201=1\324\202\274RE\334\275L1\344\275\240T#\2769\3607\276XF\371<\3266\377\275Z\016x>\035\322r;\0231#\274\224ko\276\226\233o\275\033\003\202\275\026\256\367<\036@\330<\233\234\017\276g\363\247>\025O!\275\200\320R\276H\313C>\237\376\274=u\2222=\034P\027>d\261\262=\230\253?>!\244\237\276\313\030\017>\313\325\007\274n`2\276@\234\251\276\332\211[=|\236\332\275U0;>\003\2259\276\262x\344\275\266n\236=\342\304/\274X\273:=\301V\240\275t\023\322\2729\003#\275\\.\204>a\'\035>\237\3457>\262\236@\276\261\302^<]\207\025=\312\363P>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\027\266\032>15\221\276\271\005\215=\315\271\026\276<\257\201\2758\227/=\377~g\276\354\025e=1\215\007=\254\266\235\276\242\233\014\276ly9\274\222\224\010\276\2478\335=\001B\002>drx\276\026\275\377\275\206X\363\275\257\006X\276\026{\013<\354\245\336\274\200\353(\275\255\217\244>*\215\224\276\232\005\021\276\254\016a\275\341\244\272\273R\223\256={\316\262=\021\017~>\367O\323\276\361\307s\276"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "p(\345\271\332\000!\273\337\'\206\272\222\334\0139\245!\302:-\212_\273A\320\320\272\205J\237\272\240\260!:k\017\351\272\313jr:\244\033\022;\310\341\004:\221\037J\272\343\327\201\273\254J\010:\357\361\331:\376\274\275\272e\016e8M\202>;\213s\311:S\363\337\271\346\020\346:\234\255\353\271\327-\375::\266F;\217ib\272UB\001;Y%\0268\276\352\022\273=\211\002\272u\231)\273"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\206\253\360\271\336\237\340:\301\031\001\272\345\035>;\\\\\035:\260\315\004\272\003\370~\273\002|\3409b\271\003\271\261W*:A\026\266\267\263!\274\272\233\013\032:\251X/\271\333A\226\272\336\325\3479!\241\227\2725\034\242:\264\373\2109\007#\t;\373UW\272\261\367\030\273I\230T;\241\363/:_Dq;\333\232\006;\356\200\3469d\210\267:\tY\204\272\260E\013\273\025\027u\273,\\\003\273"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "N\034\315\275\r\205\222\276L\317\013\275\355%\210<\254\352\263=$r.\275\325\032\200>\035\313\263>\333x\332\272Ng\272=v\250\221=F\260#=\252\226Y\275#2\247=\017\211\241\274\260\220\364\2753,\006\275\334\241\327=p\365\252<\237\343\236\276\022\t\340=f\337\233\276KL{\276|\013g>\312)\007>\t\342\264>\356\343\237=\01776\276\320\327\032\275\376\372\216\276\245\214g>\215\021\321\275\233\370\200\276\324\014\030>]\233\350=\301\025\207\275\277\344\220=\252\264\352=\354\030\335=\253\304\327\275\265}\300\275A\355\251=(9f\275\361\315\253>\210F\r\276k\236\355=\315\220S>y^\344\276\033\242\033>\276\332\253>\3768e\276\355\207\024=Og]\275\324^\205=\221\001 \276\352N\016\276\243Z_\276y\010\202>\r\372y\276:\211z>\r\316\365\274\277]\023=\371w\226=r\351\177;jks>\312\211\236=Q\201g>Nc\226\275==\003\276\273\361H>\3775\205>\266\334\256>\240\377\207\276\203*\270\275\036\\\032>p=P\276\214if>\324\323\312<\"Bt\275!/#>_\345~\275\301\205\244\276\372m\331=\254\014\220\276\211F\025>y\351N>X\035\254>E3r\276P\353\260:b\226\335=\340QC\276\315e\007\276uP\237\276Fg\216\275\334k!>\271e\201\273\276\367\215\270&\242\343=Q\311\220<D\233\211>\003\030\354;{\317\233=>0.\2761u\014>\335 @\275&\026\371=+\340)>\316\325\037>\246\366\245\275>\242\035>m\375?\276\336\032\310;G%Q>\023\356\032=\236/\213>\351\003\226\276\214\273|>\2656\315\275\261\032\345\275\214IL\276\233\014\266\275\250\306H\276rY\302=!\214N\276\t>(\276\260^z>2\346\006<=\234\002>k1\235=\'\336T=\2328\034>\364\337\252>\335\331\324\275\316\371\221\276\275\242\214\274\226\002\277\274\031\366\004\276\230*\240\276\374\341\021\2761L1>\024\221\n\276\3329\">\221\335\021>\005\253\255\276Y\255\037>\2657\342=q\n\201\275\024\324#=\360\364\032>)V\220\275}M\"\276am\200>I\352\235>G\235\'>\250\333f\275/6\003>\340\252\203\275\215\016\277\275\207gY<\027T\330=_\337\246\274\353\t|\276R\206*\276_\366\364<M\257\277\275\252\371C>\256\033\304=\213[\221>\316\007\210>l\320\260=_\016\323<\005\2627>\235<\242\276\342#|=\327\361\017\276\3507\023\275\3252\235\275\'\234\250\2761+\261\275\227\\Q\276\242(\'\276\364\303.;\027\316\303\276\'\233U\274\031Kv>\030\304\226\275\243\007\010>\327\216\274\276\243>\002\276\324\013\211\275\256\236i\275\261Nw>\003qe\276\223 \020=\374]\375\274\331\025W>=F\247\275\026\347\222\275\333\306]\274j\212\364\275\333\231\211\276\343\253C>2\255\277>\033\232\317=#\275\001>uUx=w#\233\275\016\036\007\276>\377\"\276\224=\344\275\037\360)>\212\214\203=<\324\370>T\323B=xW\206=j\307\005=\352pO>\n}O>W= =\331\376\006\275\262e \2755\226\034\276L\003\356\276c\210\022>\211t|>\032\314]\276\325\225\340<\337\004N\276\233\3429>\023V=>,\201\246\276d\222\223\276\321\235`>\272\003i>\3036\252\276I\245\277\274\343Y\227\273X\262\273=\030\035\037>@\320;>\2624=\275h\306?>\02313>\354\253L<g!\371=\345\327\344=n\005{>\031\230\227=0H\276\275R\007!>o\014\226=w\3452\275S\321\315\275\005.\313\275\243)\313=\221mH=;,J\276+\322\327\275\024\017k\276\270\277\202>n\335r\276,\323R\276\247\270\371=\2264\235>\230\271\264\276\035s\262\274N?\271\276.\237\005\276>yH>\223\314\243\276Z=\006>\005\331\002>jB\214>L\255b\275\203\025-\275#\357\235=f\2142\276\301h\024>_X\203\276\001\242\213\276\272 \0227x\002\216\275^5\207<\3217\271\276\353\372\\=\225n?=\3437r\276\311\303\356<\321\036\201>E\251\250<\356Su\276\357\346,=\237\0054\276YY\260>\227%u=\235\323^\275\243\304\261=\374V\237\275\374\271\212\275\244o\253=Q% \276\356t&\276H/D=\344j\377\275\013\n\002\276\265\320\307=\211\255\037>\255\3372>*2\235\275#\343f\276\030\251;\275\333\333;>b_\275\275\"\231\'\275\005\244\261\275A\2424=\230)\255=r\227\210>Qa\340\275Q\236Z\276\314\004m>3@*\276\275\025\275\276\2077\023\276`\r\242>>8\021>-)\007\275\274\321\003\276\350\330\204\275\350\035\202>;\343\323=\257\362\374\273\3214\">\020\3220>\337O\214>\231T\207\275\342F\271>JeC\275pAL=\t[\002>2>\232=\256\035t>\340\005\336\275~\275\206\275AWQ\275\353\"\004>\003\242\300\276\177\351\354\275\236Ks>E\274\333=-OL=\365v\332<\256\232\001>\024\032\305\275\351_\247>7\252\006>\324Y5>\317\265y>$\227\035\275\365b\252=\277\332O\276;Xp>\377\037!\275)\n\025=*b\324\275\034/v\276\363\230\n\275\3611\373\275\363AB\276\300\367\316\273^0\232=T1\244\276\340\rT\275v\244\214<\016\001\326\275&\307\357\275\013\222?>.NU\2757\277\037\275\223m\225>;\256\t=\210\203\233\276\311\221\235\276v\213\004>\263\024\024>\223f\242\275\035h\373\273\313c\255>\362\266\013>\326S\270\275YkJ=\202\000\352\275!\021\211>\236\010\300=\347\"\036>,x\363\2755H\"\276$\203\016\277\264\036\326\274\367\272\226\276\202\3617\275\313\371\211\276\207\262\306=\254\325\267=k\203\036\276\177O\034\276\351\"\240=\276C\324\275\232\031+<\023S\250\275\336\231\231\275\377o)\276\342\037\266\276\364\200D=-\007\023\276\332h\265=R\270\375=<>\017>y\004\352=d\336\036\274u\266\225\274e:\204>n\307\256\271\301\223\035\275\261\366O\276\346\357\323=A\334~>\234t\264=\257\300>=\232@y>\215\326e\272\304n\337\275Y\261\244\273\320^j\276B\'\255\2760=\205\276\020+]\276I\370V>\223\340\260>^\246\262\2757P\223\275\223\210s=Y\377s\275\017\232\\\276\334\223#\2736L\213\275(DH\276+\024s\276P\211\264=\032\352\030>\2542;>O:\002\275L|=\276)\216\'\275\036!\226>9~\023\275\231\003\243>|\231\230=q\365\017>\201\235\201>\201\241I=\232\023\003\277\264\224\201>\3056\201=W\265\313<\251\375p\275s\306\300=F\360\357<\265\257\270\275\014\366\311:\244\362\315\276e\200\237\271\246\265\025>\326\033\341\275\t\2556=?{\275:\013Zj>\255Zl\276\342s\240\275\320$0>@3\373\275\336\222\361\275\273\330!\275\333r\306\273\343\363\305>W\017\274\276\030\253F\274Jy\"\276(~\322<\206~\246\274\367\370J\276h\030K>5\323s>)#o<\033\220T\276\350\314\030\2768\233\370\275V\212\034\276\300\226g>gd \276\240\177\220>\266_\226\276\216\236\331\275n\004\033\276\202\007V=\325Z\265\275\356\3423\276\355\353#<5\237%\276\353\255&\274?\212\207\275\272\314\321\273\260\342\246\276\321;\336\275\223\316\203=\232\210\212=PU\247>\277y\035>1\316\013\276\263g\356\275\305\363\030<\212\311K\276\204.\333;L\035\226\274\307\237\235\275\343\321\024\275\300\372\314=\220\240::r&\220>\274\256\\\276\276C\257\275\242\267\016\276\"_c\276\025\323\270\275\356\234U<I\327\r>\307\247>\276\210r\">\242c\030>W\r\341\275\322\346\307\275\206\261!<r>V\2765\206\205\276\327t\342=I\272S\276*\204?>u\302\204\275\355\214\361=yP\033\276\231\275\340=\246\350W=\037\231`>i6.\276\215\034z>{r\223=\222\217\223<\354\324\232>g\221\315\276Y\262\274\275\266\020\250\275\332[^>Cv\334>AD\001\276C`C>\235W\231>\341\255\200\2768\330\201>\370\233\336\275\206\332&>Y\255Q>\272\021i=\004fD\275\376Y\262\275\257\tW\275f\244n\276\325\2422\276\267\005\257>\"(\223\276e!\265\274>\330\366=A\335I=\306\326\226=\322\037\207\275\010\247\'\276\245.\004\2761\375n\275\027E\244\273\206\320\004\276Vm\254\274.\251i\276\221\314o\275\0349\310=\035[\235>\375\260 \275\376U\264\276\315+\377=\035\202\267\276\306\346h>(\334K<\'J\241=E\352e=\0278q\276\037\010\331\275\232i\204=\211\336n\276Fib\2767\3161\275P\236w\276VO\215>w#\220\273}\347\275=12b=\331\034\330<W\223\007\276\260\227\016>;\010>\276\336\234\024=\244h|\276\210\316\024\276wo\257>\326\022+\276\246i\204\276\t\367\037>\034\336\037\276\210\373\203=]\347\346\274\274\033u\276\3354\\\276U\324v\276\200\010\324\275F\323&>\2216\274=G\315\374:\\\253\233\275@L\020\276Gj$\2763\035f=\217r1\276\276-\310\276\345\026\025\276\273\365\263>\323\330c\276\024\362\n<\324T\321\276\372`\201>Rx\014\276\205\236)>\301\023\251<\233\010\014\276,\274\200>\014e\027\276\226^\r\274\233yl>+\322\226\275F\232\377\275N\337\271\275\002\230c\276\rN\337\275\342\304g\276\007Sd\276\222nx=\374Ab\276\334\264\274=^\032\355=\375\315\212\276\010\2237\275#\216z>\263\232X\275\032\010\302=j3L>A^\216\275PnX>\323\214\033\275s\305\035\273\262\241C>\022%\">\311p\312=a\002p\275\006\241\004>s.\272<[\253\030>>\205\225\276v\252D>\007W\224\275\316[\032>s\177\251\275`\026\264\276\311\252-\275\267Su\276}\345\033\274\207R\007<O\211\320\275\273GG=\030\033q>\321O\r>\210\322Z>\365f\277=\267w\016>\373]\235>\265\030\356<\361\236w\275>\252K>\352F\254\276\006\304\016>e\222\245=f\310.\275|\276\203=n\234\240=\245\251\216>\265\003\247=:\003\023\275\221\240\304\276\275\233\355\275\377\371 \276ea\351\275\276\004E\276\244\226\310;\340\323\234>1\017+\276*\262\264\274J\350\177>.n\247>\023\246\237\276\344\253Q\276\t\351f>Jo\260\275\225\346\003\276\211R\022>o\310\004>\\\362\253\275>7\240\276r\255\213=(\025\205>#eE>\021b9>4\253\035=\022\200\376\275\374\375\253<\031Y\313\276CVW\275\022\336O\276\311\364Q<gZ\370\275\214o\246=Q=O=\336\033\250\275i\320\313\276k\031\201=qN\326>P,\203\275\030\215O=\026\037\251\275L\374\351\275\006\222\322\275\2372\355==\007\017\275%\235\007\275\"\250\255<X\240\264\276\r\377\326\274\247\205\342=\207\013J\275\r\232E\274S\2309\275\225\220\233\275\245<V>\307\252\n\276*\004a\275r\3005>\342k\360=\200lc\274a$\261=\004\310:<\241\215\207>/s\261\275Y\031\252\275j,\347=i-\204\276\004As=\355?d>\227?\355\275\235)\377\274[YY\276\022 \241\275,\250\001\275Q\321\260>\235\343\327>\310[y>~\203\346<$\247\245=\005\232\213>\277\273\324\275&s\324\273\276~\001=\223\227\223\276\267,\216<\323\332\017>\321HN>\250\017\363\276k\005`\275\266n\206\274\257\310\334\275^\007\207>JE\341<\373\316\354\275\333\241\255=V\200%>\263\037?>\250\0320\276?\013\240\276\251\362\361:\365\035s=\020}\301=\016\220A\276\t^E\276\310\333p>\211\277Z>\227m\324=\243\310\204=\347\265\226\276\247\353:=3s\240>\226c:\276s\253\231>\020\207V=\275\177\317=\275\257>\275\335\260\216=\r\273\273\274\t|\364\275\272\022\002\275;\007\231\275\240}\235=\303l\212\275}\023\322=\227\334\234\275\214y\304\276.`\212\275\200\367\276=\344\207{>\351\225\376\276\311\004\361\274m\352f=\347*-\275\334fX>\217\213\231=\373A\020\2765%m<\"\274X\276,\320\001>w\216\022=\302x\331<<\357\247>]v\336=_@\274\275\341\232\331=\177-\312=abG=\322:\n\276\353\306\246=\330\005\207\275b\260p\275\205>\334=\267\030\304=\324\241k\274\003\r>>\377\037\005>\353\361|\276d\223J\2761\031\233>\266/2\276j\316\230\276\202\035:>\277Ja\276\326Wr\276&\272\216>v\251o\275aj\366<HI\276\275\345\213\350>W\266l=~N\303=R\215\233\276\213\213\311=\260\255_=\0006\220\275T\366\033>\027^\t=\037gB>\313\023j\276d\307\247\274\240\311\262>\243\0057<\362j\343<\201\020\227<\016\203\037\275 |\306\276\2579\350=J\t0\276\231\002\034\276\302\007\005\275~\322\311\275\214\2132>P\376\227\275\230h%> \034\234\275\221:\246=\221\2549=Z\023\024\274<?\366\274D\365\204>xW\244\276\"0?\275\355\370c\275\334\374\241\275\206J\265<\247\206,;\327\341\247\276\371R\243>\303\314\226\276\230\027\030>uI,\276*\277D>\342\372\260\276>\257\232>\352\214\016>Vz\371=\316 5>:\227\004=\217w\302\275\360o\007\276\331\374z<&\210\271:a\261\004>M\360[>\225\365\357<\031X\267=h\342\223\276X;\257\276R!%>\034\'\300\274\251\3442\275lI\316\275yj\354\275\024\274\004=\246\006\024>\341 \230\276\252\332\213\275&Q\233\275\241\007\004=\254\222&>9G\n\276<w\325=\224k\205\276a\216\310\276\310\271\202\2758\213R\276\257\332[\276\330N\304\275;\361\272;D\245\036\275q\t6\276MYH\276\020\014\301=/1\031>C\006F>q-\330=\310;m\276\021\320\024\275?fN=R\365f\276\310\214\032\2765\370\223\275\317\305\262\273\276\314\202\276]\222\304\276\262\210o;\274-\231\275)\tW>8\024\033\275J\350\210=\033X\370;\376\177\026\276Y{4\276\356\307.\276\t\345\223>>$\247>%\264\030>\030\022\212>=J\206\276\335\231\214=s=\021>\271\236\t=?\325\346=\264\205\247=\354>Q\276\351xN:\317\231\346\275\371\363I\276\003\313\220=Gz\304\275b&\205\275\360\262\200>Z~\277=\375\352K>\034\030b\276<\363f\275K\326%=\343\324k>T(\254\276\240\350\024\276P\344I<;\013\205\276\241s\307\2760\353\233=>\224O>D\305\242>N\037\206\275D\3404\275\274\213\023\276 \372\214<\347\3019\276)\305\210>z\353\256\275\373d9=t\254\202=\344&)\275\342\313h<@\323\023\274-\233\201=\300B\226\275)7~\275\244(B>\240\205\252\276S\026\027\275k \304\275\334\305^>\351\375\363\274\2148\210=f\001\345\275\023so\276\016\350\254\276\361\344\376=]\032\274<t&=\276Q\300\026>\322\235h>\357L\204>3\234\r=\207.6>\225\000}\276\333\267K\275\240\231?>\246fy\276\232\370\374<\313\031\206<\267#\255>s\241\230=\260\341\224\276\224\320\366\275E\231\"\276\235P|\276\350\3174\276\327\355|\276\271\341\222\276Fy\347\275\301]M\275\326\252\210\276\243d\005>5\375\237=\350\002\222\276\212W\222\275\014k\247\276VRv>#\331\323\276\260\342J\273X\007D\276\031\240\230<\035.\277\275\262\320p=08o\276~\026\006=\276\355Q>\227}\320=\221\236\213\275\265\306\357=\014\222\326=\364B\t\276u\325\n>\200\245A>\246\370\311\275\261|D\276\341de\276\276x\302\275x\203\321=;\305J\276P4\350=\303I\314<\037\025\332\276\010J\355=<$s=\247\307\201>\345S\351=g\236A>\027\377\367\275\\\003\r>\224\037\007>\337\202G\276C+\213\276\036\251!>\003\212<\2757\213\005\275\323\274\366= \002t\275Ea\'\274\200\013L\275*GR\276\210_\007=06\267\274\36139>\356\362\326\2752\246\t>\320\307\241\276\2432\223>\222O\002>\300\260\025=\240\036\202>\010X\372\275\306\221\253\276B\343/\275(\034\023>R3\343>\031\372\234\275\210\030\001=y=\260=\365\331\233>*\334S\276\277\2110\276\240S\232=\321{(\276m\271^\276\\:\276\275\320\010\234\273_\321\312\275\357\336W>\367\365\001>\221\007\006=dqD\274\3352\262\276\325\006\216=\253\341l>\335t0>\376\371i=,_a\276D\\\270=\361\257\236\276\037[\224\276\036\304D>\263 \273\275\\/\004>\020f\265>XYm\276uh\256\276\246\241l=V#\276<\3702\213\276qp|=i\017c>\304\276y=\233f\311=82V\275\221\250\305>\221\337;\276rI\216\274A.\267\276\215U-\276\215\263\257=\335\225\236=\33701>\207\252\262=g\034\004\275}\014\265\274\274\217\342=\315\256\247\275\r\257A\276\321\246?>^] =\205\363\355\275%\367L\276\251\264T>L\245b>\257\320\366=\245\334\020\275\240\227/=mi\244\2765\356\202\275\2479\267>>\305t<\365\244\240\276\370\337\203\275m/B;\034\027\366\275\010p\300\2753\256\204>W\225\336=c\354\023<\236\260Q>&\203o=]\247\226\275\254\362\242=\223g\372=\306Kk\276\013\337\257\275\324\310t=^Cr\275\251bj>\004\303%={\374\235=U\206\241\276\232)S=\211\001\002\275\262\265I\2765\257\r>\036XO>\312\3577=O\212\231\274tRP\276\234BX\276\217{\325=KYh=\364\211\324\275\274\345\241>lZr\276\237\233\r>\267ZN\272\313\304>\275\322u\224\275{\336O\276\2749\237=L\263\231\275\034\352\256>\223\323\224<jk\277\275\264\214`>\017\212\003>\t}\023=\022c0>&\242\334\274+\0257>\362\333q>C\331\036=\240\312\007\276\254\r\317\275\357Gt\276H\337\017\276\201\250\245>\216\310\365\275w\327\275\275C\247a>\177\261c\276\267\357\223\275\310\361P>\013\224\221>Js\222>\206mh\275\030\245\316=\'\275r=FR\223\275\257\335\301\275\205\371h>?\024m>.LX>\002xV=\004\310\020\276\260\316\215\276\341\207\274\276\232H\">^9w\274\036Y\237\2769\376U>\t\\\034<\007\213\022\275\005^\201=|V<=\335\3164<T\n\221=6\013\224\276\215\366\031>\032\332\270\275&\007\033>\275\2357\276\203\004g>/1l\275e\303\377>\225\227\314>\265~\271=\244w\377\275\2318\204\275\355\340\242\275*\2220>\2000\220\275\263J\242<0\372u<\273N\000>\025\344\202\274\275\277_=nFH=\004\233\305\275\213:\006\275(\215p>F\006\242\276\351\361\224\276\371\346E<f\244\220<\200*\207\274\2779\243\276\264@\244=K\ni\276B\021\361\275n\233\000>D\247\316<\032\246{\276>\036\314<\310I\217\275\353\220D>\031m\254=l\nD=\213\270\213\276\205vH=s8V\276\305p\211\275\026\315\252=\334\236\215\276\223\335\017\275=\016\207>%\246\021\275\\\333\222>\231\203+>\372|[\276\252q\357>\273\340\034\275j\205!\273\274\222\307\275\177\026X\275\357eZ\276R\262\204\275\303,\242\275\t\366J\275\036\265\213\275\310\354\332>\333\262\006\275S\353)\275\271\002\204\276\003\010#\276\341(\033\2768XW=s{\201>G\304i>\023\3520\275\006\204\266\275(\353b\273\223\265H\276Y\361\003\276b+\211\275\307\3709=\235\025\312\274X\275\004\275\030\324\034\276\341\027\337<\266\2375>\206V\212=5\333\310\275$c\303=\300|`\276k\315#\275\243\236t\276;\277\273\276\231\351\203>\313\232\177\276\264et>R\231\006\276*\344.\276\031\025&>\203\345\330\275\314H5>a=L\275\323\260c>\340\035\234>[\212_\2747\306\227>\375q\372\274\320`\232\275\332\234\353\274\345\353\251\274\336\314\303=\366/\024\276\013\355q>a\277\204>\227\214\272\273\020\032E>i\357\273\276\036\234\211=\200g\035\276\355\266\247=\274c\276>\'\215\221\276\005\240\004\275\025\032\246=h`@;\300\352s\276[\245\305>\030<\366\275\347;\223>\227\2777>q\244\t\276\223\\\024\275\033\307\277=G!\221>\236\030\255\276\302\353\033\276d\227\345=k\002s\276\347\223\007>\334\306\343\275\353\373\240>\r\263\370=\200\253\231>\250\006\270\276\243\324\010\276\000{,=K\246~>\031X\231=\373\203<\271\242\017+\276\260\326K\2761^\306=\031\004\300=\222\247\322=$V.>\317\216w\276=\332#\276\356\216\311\275\373\031\022=@\360\244\276\326{\271<\327\240\273=\213a\364<\0143\036>S\022n\275\357{\241\274\250\230\222>n\257v>5\3540\275Y\370n>_^I\274\317\030\342=\004\317a\275\254\334\316>4\325\037\276a\242@>\355\035\366=\343\n\252\274\236l\027>\3025\335\275\316K\031\275\360\317\313\275hJ\212\275\240]\207=\r:\216\275\326Q\306\275\255\027\367=w\203\013\276t|\217>t\003\242\276\270\034\210\276\2264\000\276\275\377\035\274<\361\026>\034,\266\275sR<=Z|\222\274\267v\261=\000\204\006>\304!\201\276\334\332/\27579\366>\355[\240=\332\276\361\272DMA>\300w\202<\tT\026>\200\331\001>\265\333}\276\230j\304=x\356\343=[Na\276\262m\010\276\365\037/\276\217\257\327;\336\032\227\275\323\264\024=c\336\357\275+$\212\276g\332\032>\034\342%\276;\216y\275\315\277\201\275O}\302<\315\014$>\273Uz\276\256\237\021>\252\037\222<|q\022>F\227\265>\215\215I\276Pub\276\324\371)=\3235\3458\365\240H\276\205\264\245>c\342\352\275\236a\372=\005\275\340:\270\372\376=Q\246\354;=_\010=G\2210=\264\rb\275\256\347\255=8\260\n\277e6\276\275\025\021\324\274%\261^>\010\034k>V\r\310=\351\275^\275\360w\030\274\013\2300>^\226H\276\353 S\276\212(\021\275DN?\276\026\\\037\276m=[>\264\340\275>\307\355`\276\267\tp\276N%\r\276 \316\204=\005\t\031>\352\223d\275h19\276\353O\200\276xg\204=;\247\030\276\323Sa\276\345\226\265<W}\207>Z\357\301\275\362v\332>AP<\273f;\251\276h\337\205=\306~8\274\367\004\210\275\214vK\276\002L5>^K\t\276\240\313X\276\212\312.\276\307\353\211\274]\330\031\276\207\033\342\273!\177\242\275>\342\302=\307\177V<>/\227\274Q\300\265<\270\013\237=\276HQ\275+\2773\276\036\357;\276I\255m\276\031\361*\276{\007\t?\316\223N=\301Z8>f\363\213\275\027;[>\021\334\371\275\271I+\276\322t\200>\005A\200=\230\376a\276L^!\2762c\031>\370e\245\274\231e\256<$\210\225\275/\332\036\276\204H\014\276\274(\t>z-v\276L\033\233=\322\t!>\323\377\n>\327\377&\276;&u\276\023\220\265>g\020Z\276\020\206;=>\000\003\276\377a\273\276s\321\217\275\357b9\276Pw\222>\037\256\021=\276\313k\275\016\260\212\276\330\237e<\263\022\210>\3123\007>\217\206\026>\337m]>\267LO\276\224\303\006\276\026\031\224>b\205\220=\370C!\276\216\341\261=S}\025\276\322\2652>\220\361;<8)d>NVd>\367\310%\275\231\302@=\361\021N>\'\301\247\275\375\216\237<\230r<\275r$\342\275D\210.=\330\333\\>\346T\034>\035m\357>-\026\014<,j\322:\2722l\276-N >\271\205\356\275\037\363\336\275\206\242\004>\310\\\326\275\211Lj>\377Yg;_\315\251=\211\372\370\274l\0258\276\254\353\332=a_l>\276M\207>\022b&>7\033\213=\324\033#\275\025\226>\276\364\214\262>=xJ>\326q6\276\336\030\246\275\245D\342=\371@\030=I\027n>\361\251\334\274p|\353\274\263\356]>\304\226\223\275\303[\265=\213n\302\275\207\255\265\276\241.>>\330-b\276\333V\200\276,yY>\367)\031>\270\274\207=\301\230\206>\024\324\226\275\301\023A=\t\271\207\275h\374\310=\367\225\352>\332J\260\275\037\014\'>\305\006\010><\274\260>K\314\002\275\273\216\345=\225\242\372\275\243\265\006\275\032s\n\276e\217\003\276\322b,>\267>\032\276A\232\365\275\235\207\310>THd>\260\377\201=\303n&=\246\n\267\275\252C\235\275\256\332N>\255\0238=\246\244!>`V\341=\377U\214=\264\212\216\276\316\234\302=\223\376\216\274\332\023\370=/\263\020\275V\217\027>\374\243\210\276\245sy>\255,\021\275\223`\343=\216j\242\276\346\352\241=\r|W>\310\254\"\276&\273\372=\002\362\027\274\257\267\272\275\361\217\000<\037vP\276@\264l\275\rv\273=BR_\276\377F\\\276\026b\334\275\241E\177=\272!\245>\262\230\267\275\350\242u\275\344\"\230\275\306\253\243=\257\207\212\276\310p,>3\200\322\275\037\202C=\376\276$>\017&v\276\032\376G\276C\027\314<%|\227>\344VE\276\006\264\317=\022\236\275\275Ran>\267\006B\276\3269m=\363O\337<\000>o>q%\247=\340\320~\275B$\212>\201\361\305\276\254\365\003\275%\003\214=@\220\223\275i\347\\=f\235E\276\373\301h\276n\3255\274es<\275\320\316>>F\027\357\275(\275\270>\365Qc>\353v5\276\237j5\275U\306@\275\202\331\204\2767\200\355\276\215{4>t\250\211>\000\312j<ox\201\275]l\035\275\334\217\230\276\3247?\274\235\\\265\276\370;|\2750<K\275\347\341\"\276\231Z\200>\217\0360>\350\214\307\275\225\207\331\2768\226\247\275\227\014a\275J8!\276\365\321\'>6\250w=\237\340\002\275\022\237\220\275\207{M\274\314Y:\276\034&\337\275\224\034~>\200\013\233=p\210\331\274R1\323=\361\241:\276\"\242o\276\201\305\330;\"\223;\276Q\357\020\275\005C#\276\346\377\331\274w\365\010\276i\202\336=jl\177>\306\245\t\276\351oY\275\331\004\224\275\022\352#\276\261a\212\275\327\222w\275\0172\030\276Q\243\317>\036\274D\276\000,\305<,X\r\276\235e\356=\232np\276\326\244V\276zXT>\232\207\225\276\227@\245>7\220\300\2759\347=\276\220\355\204\275a!\252>y\034\207\275o\204\236\275\222\235\007>3Z\025\276\222A8>\017\343\271>/\0024\276s\023Z\276j\207\300=\243\360$\275\014[\014\276\235\"\261=\317Y\261=\221\362;<](\237\276\031i\220\276Uz\302<\207\350\225\275\036\352\225>\356]\003\276\006\003\210\275\372\216;=\300\333\312<`w\030\2751\261\230\276\244\342t\275\370\275\274\275z\010\321>\034\352\375=\000\014\205=A\256\016>\350}\203>)\301/\276\267\301D>\276\357\310>\n\2411>\236B\262\276*\037W>\207\205\006\276@\003\007\274\202R\211>r\262\026>\234\007j>k\276\024>\330N4\2748\005l>\242\257v\276m\365-\276\000q;\276\230\320\010\276\356\275\322=\360\206\013\276\363\001\212>\367\356M\275D\361\007>\323\303\313\271\251)\025\276#\332\351\275[D$\274\026H\210\275\264\013:>\344<\344\275\036\255\307=(:U>Q\321\202>f\313\r\276?I\231\274\220\373W\276=\262\342\275\360\323)>)\026\236\275dfR>\274\r\301\275\276\376(\276\317\221\376\275O\311\270<\257\323\361\274\002t\314=\376\200\275;>\020<>\356I.\276\340oT=\276\232\255>k\237s<\336\312L\276\310\245\371\275\207\352\020;\350\265\211\274\365!\246\274<\343E\275\205\'\326\275\262\203\"\276\252\033\\>\242\242\360<\267\333\271>\302=\027\2761\344\031\276\263\277\372\275]a\365\274\353I\261=Y\355 =\227\'\014\277\\\003\207>k\013p\276\217\202V\276\302\034e\275L@\260\275\221\211\214=\211r\346\275\037\037\n?0\351E>\302\305k\276\240\217=\275\010!\226\276\313\013\007\275t$\271\275\257\300v\276\372\276H\276K\360!\276\364\355\207\275\254\336\020=\303\005\017<T\2269\275\3218t\276\333\337\373\275\267(\032>\375\275\211>@Q\223>\256\344_<E\353?=\213|=\276\313I\305\275\267I\021>hF\021>\t \212=W\351V<Hv\320=\313\304\r\275Y\373\306\275#\352>\276\343\322,>B\325F\276 \225\201>@j\315=d/\300=\004\356\321\276\261rs>n\221\352;\312\221_=\202\nL\275M\343\261\275\303\335X>\006\352N\2765zY=\242\342\033\275\332\370\007>\235t\202\276\033\276\267=A\343\r=B7\212\275\013\2745>v\367\357=;\272\266>-\265\034\277\250%\302\274\336s\310=\307\300\275<\332[\377\274C\354\235\276Q\311\313\274\031\0204>\310i\264\276\302[\352\275Yy,\2757L\3339W\367P\276^5\203\275\004dq\276D\3347=O\350\035\276\213[\t=w\010h\276\200\007@\275/l~;\"\3560>\271\223\030>\303\033q\274h\370S\276ra\322\274\270\371\256\275~\210#<2:v\275\302\031\262=\2740D\27603U\276\3211\t><i!\276,;^\276{\324\017\275\0304\361\275\272*+=[\035j>\321\3317>\313\325\322\275\220\336\214=\342\245\235\276\327\205;\275\227a\326>\334H\270\276\034\365\264\274w\344\271>\212~\341\274\251y\356=\356c\021\276\261\265\253\275\265z0\276\017\020\262=\277\350\303\275\323\035\263=\375\023C\275@Ym\276+\233\304>g\361\036=dG\n\274g\306\000=J\251\025>\021d\023>\022:\210>4\340-\276\376\226\016;\364\312\340=\004wn\276?\264!>\212\270\341=\362$\224\276\330\007z\275\036CN\2768X\200\276_n#\276\346\272\366=z4#\276\311gk>+\251\310\275A\334~=\010\340~>\241\033n>\351i)>\177\367\246=\315\353\316\275\267\tR>\202\350\030>\321a\217\276Ug\222\275\342\224\213\274\343\353\005\276N\251\230>\210\307\227\276P\233\210=\253Y\027<\365M0>-\244\204=\241np<O\354\213=\335\207&\2766\257&;\344y\245<M\204\301\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "y\020\277\276\211A\372\275\211\215L=L<&>\n\325r>\353,]=\343%X\276\302v\315\275\242(\213>w\237\326\275\257\236~=V=\213\275\270\212\263\275%1\335\275\256\372\031\277p\252H\275\226^\212\275\251\244\t\275U&\243\276\340J8=e,\315=\342<\207\274\343\204R=}\344\037\276\254\345\325=\344-/\276\267#\346\274\347\241[=8w\024\275.%w\276\266T\324\275\240(\210>\217E\000?\260F\026>/\304\357<JNB\276U\000\203\276\363\277\330\274\224\025\371\275\306\375b\275D)\250<\360\214\350\275T*G>B\213\211\273\032\364\376=\211\356\336\275\014\217+>v\310N>VJ:\275j\207g>}H\231=\376\302T\276kW2\276;0\340=1\\\213>\222\342\206\276a\343\332\275@m\332\275=\037\"\275/i\265=wk\003\276u\347\006> \252\204;tm_<\204\305\335\273\364\r\255\276C9.\276\313g\201>X\370\347=\240\273O\276k\260\200>N\322S\2750\311\231\276\3618\026;g+\213<\225\252\232=?\366:>\r\031\230\275\211g\213\275\035\363\206=7\'V\276~\256\024\276\375\203\033\2750r\034\272gV\276\276\207\267\251\274\221\035\304\276u)\327=fd\223=i\275\314\274w\200\223=p.N;\333\224\346<\344\205\212\276\024\275\310<G\333\216>\030\nw>\002\264\274\276Z=b\276\302\374\213\274\346\365\206>\254g2\276\355\202\205\275\301\361\227>\221_\351\275z\230\375\274\251\332f\276\353\210j=\264\024\263>\207Q\027\276\032\342\014\276\315\326\t\275\024a3>\330\246Z<\340\2624=\231\211\210\275\200\263\207\276\235\316L\276,F\232\276v\311I=\247tL\275\032CS=\313n\333=\243h\230\273\326\244\375=Q\206\025=1\232\r\275h\007{>\240J\210=\327\266\220\275\026\2347>\321\374d=\241\243\220=W\236\336\275\306\325^\276\217\030[>q\205\276=&\342\311\274\312\320p=T\370\331>}\177\256\275\200(\024<\276pf\276\213\347\226\275\023\233\005=C1\016>(XI\275)\203\350\275r\312\223\276\337\r\302\275\323\213r\276{\274\222\275\252\221\302\276}\203\346\275\006\207j>\213\243\237\274\356\253`\275K>\031\275:7h\2769\315\337=/\267A\276\315\362\331\275\233\350\236\276\363\246\335=\227\252\241\276\246t#=0@\215>\017\223\016>I*w\276\223\"\326=\372\350\331>\326\031\365=)\202\376\275Y\363\200\273\262%.\276=}\336\275`\005}\276\313\245\001>\3376>>\201\364\231=8\312\255=\022\235l\275]1A\276\213\224\214=\201\340\236>\270\204\">\240\336\236\276\355\341\312\275\372\034\313<k\276\236=\007\263(=\355\246W\276\002\"\016=XG\251=T\236\205\275\371\213D\276\ru%=\250Vw=[\001\367\276\234b\273<\027\232\326\275k\201\227\276\270\222}>\353\370|\276\320E\335=q\372\257;\337\242\024\276^E)>\341\342\361>\304\242?=\265l\022>\352\220Q\275-\267\345\2753\264\367<\260\'k=\263\353\231\275Qa\250\275\030\262?>\023\315B=\225$\353=\317\250\221\276\222M\023\2760Z$>kA`>\030\320p\276<\244\260<>\353\273=Z<\222>\027\010\277=.%O=O\376\275\276)\3177\273\363\031f=FV{=T\214\037>\004>-\275b\006s>K\"\221\276\215\355\366=+\357\224>\303v|>-\004\345=B\035\036\276\360b\231={\326Y\275\035ik\275\365\320\035\276\030h\246>\034m\272=\014}\316=IT\340\275\232\024\325\274\274~^=\016\215\332=\016t\214\276\013i\225=jG\024\276\344\242\343\275\216Vn>\235\350\253\275\252\222\207\273&T\346\276K\031\023>\205\003\214\275\332o-\275:B*>\007\334\305\276\220\n\010\276/\036\t\276}[\010\276\336\373\305\272l\177\025>\346\210%\276\222\266\034?\005\317\245\274\036\0008=9&\334=\024\027\317\275\252B\'>\004z\377=+)2<\233\3108\276G\356\217\276\270\203\365\275\251\236\020\276\336:\010>\302\371\214\276Y\0144\276\274\203\235<\266\034\236=M]\2339]\301\231>\004J^>\0138O<\200f\022\276\\v\r>\013\035t\275\241\257;>D\257O;\311K\265\275\016\355q>s\265i\276\256*\245<(;A>\304f\325\275Sz,>\003\303\001>\340\242M\275\350\254\243\274\354\203\n\276\275\3109=\022\310T>\316\257y>?\351\243\276\013S;\275\333ox=\271G\\=\353g\243=\352\247\211\275d\342\327\275\213k\204<!/s>\331\247(\276\2740E\276g\014|>8N\367\275\361\254m>\013Tp\274\027\002\253\276W&\262=\035\242 \275\302\240\"\276\333f\323\275\366\004\007>z\205%>\375\306\303=\257\243\202\275\204\001\265>\266\037\370\275D]\277\275\247\236\252\274\354;!\276ek\250=,\313{\276\375\200\324\275\212\241\350=>\2235=Y\203*>\320\304\254<S\304\231>Vky>\342\352~>\266\020\221>R\266N=\314\003\274\276\263\'a\276\034\267\234\276$\001\232=<P\233\275%6e\2751#\"\276g\375\247\275^\367\302>\t\270\310\275?BV\275\346\255\267=~\203F>X\362\334={%\034>\346\250\030\276\256\310B>\324\371\002\276K\371%>v\0219\276\366-f=\314p2>\303~\226\275\323\177\027>\001\002\371=vl5\276G0p=}\260:\276.\001j=\034\245\246>I&\n<\323\237\302<\273\3621=\032\325#>_\313&=\354.\333>\316\351\234\275$L\227>&\261~\275c\025U\276Y&\361\275\033W\333=!KY<\232\351\237>\177\261\204=\303\004\242=Q\267(\276q\220\036=\354\372\035>\366\016\306<\300\322%\275\253N\226\276\250\277i\275\241\020\211>\273\334\003=(%\302:+\354v\276\216Uz=C\346!\276>n\243>\364\000\n\275\252?\205=\211\236\203\275\t\'\351\274\037\363\034\276\007\266:\276\250\232A>\177\310\213\276v\301\313\275\340\343\333\275\'\014\234\274HY%>\2650{\273\304Ti>\010\334\333>.\230\234\275uY\022\274B+\371<l\377W\275\022\341\n>\010\243\305\275~n\267\276\207\211\201>\345sJ\275\240\265J>P\252W\276\213v\323=Q\233z>F\343\267\275fql<{\304\325\276\233ho\276\267\317\367\275-R\265\275\006\003\023>\336\036Q\276\225\306\n\276]U\347=\265\275\255\275\247~s=k\226l\275\2238\257\275\324\344\017>\010p\331;v\233\002\274#{\230<\003q\017>Vr\"\276\210\207D>\027\333\251>\240~\222=\275&\263\274GLM\276P&#\274\363[\235\275\032\332\215\274%v)>\206\306\224>\020\244o<\r\266\002>\215\225\000\276\036\323L\275\223\326\234>\3257\262\275\013[\253\275y\000\267\274\313\367\235>%@D\275\322]\250=\322\374F> {v=\251\350W>\320\224\034\276\025\004U=\001\363\027\276\310_\230>\030\244J>\332+\231\275\002\334\025\276*\273\227>\210W\020?*S\037={4^\275t#\351\273\300\263!>\330\234\317\273\243\316\\;\216\341#\275Ua\307\276R\210\215\276mmY\275\332\2005>\303\030\207\276\231\r,<mMa\275\257\245\250\276\223\224\203\276#.&\276G\222\274\275\237_\272=\301D\020\276\277\352\003<t\350\220>\343$\310\275\307e\375\274\037#G>G~\243\275CF\220=\264\007\016=\257R\332\275:\005\201\276\263p\004\276\306KU\276\317f\250\273\031\267H=\207\264\260\275{\261\037=FT\024>\254\226\214\276n\267\347\276\025\256F>!\3602>2\236F\276V=\303\275\335\376\006\276M\220\222>B\262\t?]K\337\275\223\342\237\275\304\035-\275\354C2=\227\035i\274\004!\201\275NOf>v\321g=\031ET\275B\006\261=\035\036\036\2764\323|\274Mw\273\274B\375\257\275Q\215\007>\035\350\221\276\211U.\276/\3171\275D\002\036\276MLY>~2\257:v\255K\276\022\023\026=\036\234\257=aZ\202=\003\n\246=8\360\264>d2\017\276B\3513=B\3540>\003\322\374>\322\031\326\275\004\242\034\276@\024\007\275\031\'D\276\352\200\202\275\312\272\233=q\337\006\275V\307p\276\210W}\275\177\336\215\276_\221\341\275\000:\213\276(\002\315\275\363\300\216\276\0333@\276\356\241\t>\013\207f\276\257\2618>HR@\276\364\357\355=\250\'\n>Uvy\275\241ny>W\003S\276\350\215}=\260\\g>\007\266\241>\252c`>E\333\222>\010C{\275\220\020y=#/1\274\270\253%>j[9>^9\000\275\t\222\270>Z\343\313=\334\354#=)\335X=\002\354\331\275;\222)\27684\233\276\224n\345<\354f\330\2759\215;\274e\244\267>\016\234\245\275\250LZ=\346\311\014\275\365Z\003\275\030\357L\276x\225\206\276h=&\275@\341\021>e\204#\276\326}}=^\346\257=\214n\034\276\2365@\276\261\026i\276\214\2053=\203\324\003=!aL\276\364\355}>4\230\260>W\363\371\275\t\3761>19W>\261\361_;\204\214\206\276\\\335\220\276F\321\322=2D\202\274j\\\036\276\251i\025=z\214\005>)}\276\276\226\332\261\2762\024\254=\360\335G\276QD\006=\266;\032\276\037\252\313\275_\305\024\277\302g1=8\312\314=\325\372[\274\203a\343\275\343\316g\275\205\365\263=\226%\222\275\275\343\'\276\252\326\221>b\211\003\275W1\312\275\036j\201;\007\006\270=\005\2238\275\357\032\214\275\243\"\311\275\312\342%\276\372y\200>&q\003>;\315\250<\265=O\275\274\027j>\227\300\313<\342=\245<\342\243\311<Y\337\232\275\272\312<\276\264}O>,\342\274\275\370l>\276J\217\266>\016R\311\275\201g\246\276\025\3167\274da\253=\374\307q=]\020\227>D\332\333\276\314\263\206;x\230=\275\322\205\360=\252\026\246=Lr\345\275\326[\2417\246[\201\276E\214\206\275\244\326\343=(|\340=nl\266\276*\010\275\275kc\306\2765S\261\273\363\235\031>F\273\001\275\351+\031>\363\341R>\241\361?=W\0076\276`\325\336=\2612D>\342\307Q>\301\337\347=[\026|>\232.\321<So\254\275#\305\262>\013=\250<\325C\027\276%\255X=\255\005v=\220\326N>S\357\036=V5\216>U\001=>\r\010\221<p\311\200>\256\2134\275,_W\276\256\351\254<Q\246q\276\346\271\304\2758\020$>\264\031\274\276\260I\355\274n|N\275\020H\304=*\352\027>\334\306\001>\3523\035\276\177\030k>\r\302_<\017\266\357\273N2\204\273q\234\363<\376\317\365\275\010\222\264=\314\013b<\363\206s=M!\305\276y\3743>\276:\303\276\201\037+>\027l,>\341\"\260\272\254a\233\276\343|\033=\014\354\253\276|3r\274\246@\207\274\264\'\026>b%L=w\215\374\275\263U\301\2746\205\311=sl\302\275\034\3576\276\021!#>o\310X\276\325\376\204\276<\024E>8\207r\276\300\262/\276\221\'\353\275\000\2719>JuP=\274\310\212\275\025x\322\275Xl\335\275\013m\006>\3323\260=\035\337\022=\201~w=\021\017\350\275\267n\350\274i\350X\274\2445\321\275Sl\261\275\302\263\314\276\324\341\340<\\\263\211\275\037\026P\2758%\312>KX\265\275\270\'\215\276\007K\227>\\D\261\276\373\253\363=\342=\342=\213\352\021=Mr\306>_\340\355=\253k\257\275\036\025[>\330\277r\276\2436x\276=l4\276\321\336\234>$x^>\320kz\275\315)\353=u\333\356=\364\242\003\276c\311\213\274%\367\035>\264=\032\276\r2l>pe\272=\277\357\205\276\023\266\212\275\003&\226>\374\007V\276\223X\206<\031\216\366=\206\')\276\036\251s\275x\2566=\021\004o>\274[\260=\326\335\215\275\2770\237\276\376q\031\276\235\242\005?4\023\351>\013\231\201\275{\225\201\276\252.A\276:\353\213=H&\244;t\254\004\2750A\260\275Hu4\275\226\216\002\276\010b#\276\2530\201\274t\340\004\276\342@\">\317l\302=X\"\230>\246\325\t=\244\226\231=<j\226=\304xn\275\022\367~>)S\247\275\362\201^;\325\375A;;\371\\\274\375\211\360=)G\027>\n\273\317\275\t@\220<`\326F>\316\214\277\275\372\"\004=\327\t?>\377g\002>y\326l\275[j\320\275ii\204>kb2\275r\000\027>\252\260\205\276h\237.\275\323S_>KR\301=\343S=>\225go\274\310\246o>a\236\364\275~p\207\275\233\302\023>\250\327\364<\014\r=>X\356\307\275\014\022\356\273\216\255\251>eN%=\237?\265\276N$\261;F\303\317\276TF\273\275c\t\010>\262tO>\226\203V=\t\243\240=\351\266\244\275>\3206\274S\302\353\275\036\3220\276\017@E\276\030\353n>\257\267\311=\375\216\265<\037\253&>\010r/>u\360-\276V\316\033>>Y\231\274\037R&\276y!l\276qm8>,\365c\274\005\021j=\263\260<\276\334\337\322<>fe\275R\372(\276\250\021\314\275\236\033x\273\351Y?\276x\266o\276I\355\220\274\362\364I<\027e\007\277O\013\213>wD\224>\211\031\254=\353sA\276p\247\030>\245m\210>F\357\022=\264\374\032>H,\272>\232\212\332\275\340h\335<\377\256\311>\350p\225=\256\320d\276\r\310T\275@\345\252=\177\362\215\276,\233\206\276\337/\225\274\253\2422\276!o\220>\353DP>k\003 \276Z4\305\275s\277\">\311#\350< (,\276\033\253\320\275^\347\210<g\322#>\367q\364\275\230\300\002=\300B\034=\332\333\302>\340\271A\276\034\026\204\274o\n\031=\350\030,\275\206\317`>U\n\207\276\200\250>\275\206\275\266\276\201\325#\276\000f\214\276\007\036t>o5\274=\241\345\030\276}5\374\275\306mF\275\017\262L\276\241`\351<l\320\203\276\216\036\223>\002\355\202\276\005\271\017\276\227\204,>~E\354=\204\244\225>^?=\276Xl\260><\263\307\275\220\203\271<\270[\225\273\340ST\276\257\025\225>J\305\000\276HE\366\275\304Kf=k\330\026>OR3>\033%\203\276\030q2\276\005\311\003\275\030`\014>V]\370=\020\3074\274\\\024\223\276f\225\230\274\303_\332=[\2458>\237\035\343=Y\212\256>\237w\013\273\300|-\276\"\237G\276\322\311A\275\277\311$\276\210\242\207\275/F\017\276x\376\004>\n7\033\276N\"\214;\'\006\021\276\274\374b=y\343Q>a\230X\276\276\371\264=\036\315f>\250\237g>#s\343=S\216\023>\346r\245>GLC\276 \333\006\276;3\314\275\213<6=\313\362\234\275\017MV>v\264N\276\334e6=4/\000=\323\205~\276\367t\001\275\"\251\267\275(\275\207\275\340!\214>]\240\355>;\325\223=fj7\275P\\N>\314\232\017>\277\345G=\354\304\231<\251\351K>E\322d\275\371\025d\276C:\032>\033~C\276\356\217\247\275u\320\244=+\014|>`\323\027\275d\210\230<\331\242\366<\202\244l<\331\2345>\372\273&>\221\tr\275A\034\333\275\024~\271\275\274D\030>\245p\277=a/\006=\307\337\031\276&\352h>\\O4>\031\334a>\'\235?<\364\270i>4\230\341\275\002\373\215<\332\2242\275\320\317\025>\262\222\323<\354\302\021>C\001,?\263\341\254\275T\346\275=\221R\r>\010\311\204\276j\241\300\275\256\242\346=GL\362\275\020I\310\274\007\353g=E\220\252=\204)e\276\370\303\203\275\3228\300\275\263\270\302=\242\237\211>\314iX\276\201\252V\276\300\243\233;\363(\202=\363\231\'\275\204-\371=C\'\236>\202*\203>\220\3353\276G\"P>WzO;\n\201{\276\234;6\276\207\230\\=\010\254\361=\247\317g\276\241\t\343\275\352Q\022<\237Pf\2743\034\n\276\265o\017=v\217_\275H\317\306=V\rN\276U\360\350\275\202DU>& \356=!\234\210\275>\016d>\223\310C=\365\321\204\276\207\037\324\275\353\232d\276\231\274J<\231\230l\275\221pu>\317\2325\275\252V\344\275!\243S\275\260\335\213>`\250\273>\007\364\270\275gBT\276N\224\357\275>\352\324\276\002\366\314\274\027\353v\276I\230\031\276^?\255\276%\301\207<\211r\315>P\363\246>\306\013\257>\330\223\231\276%\202\213\274\010_8>\302\276\205<\352\312\275\274Y\235\310\275z\267\311<\357\013\300>e\327\220=\200f\322<\277r\\\276\027\336\302\275O\274h\276d?5\275\267ZT=vw\255=\347\277\244\276m\315|\274\031\341&\276\217\300\205=\243Q\177>\275\223\006>\365\345u=O\234\353\275\306\010\005>\334q\375\275\3338\323\274\027 \340\275L:\020<\242\254\261\276\236}\236\275\032\'\214=_\252X>R\355\020\276\307h!\276[\357\003\276\023\276\005=\217\3252>\300\242\270\276\257\370\245\274\031*%\275\021@W<Gz\347>P\346*<\3702Z\275U\255]=je@\275nZ\311\275\273/\345\276\322\272\315\275H\222\210>\263\326$\276\344\374\201\276sm\364\275\005\265\337\275\223\354\356<w\"\223=\007\3526\276\346O\226\275\"r.>x\007i\2754y\221\275\344\274\r\2762q\274>\341\324\336\275\023\253\220=\035\346\361=\026u8\276#k\375\274:;v>\035-\346=\001\271y=Q\231?=\367Lu=\002\032.>i\344\251=A8D\2760D\r=@P&\276\317b\010\276NI\362=?AO>\\\205\304>\307\032\243=\312\036->\273\270$\276\263\361$>\245\360}>\213v\323=\351\036B\276\240=\274>\323H4\276\342t\242\276\217*\351\274\177\214\366\275\271A\366\275\267\264\025\274\2761\211\275,\203\351\275c~\316\275|j\213\276\342\363\257>k\2355>\357y\364=[_\312\275\304\217\034>\326\316\\>\374\361\033=@\255\354\275M\010&>\364\2409>3\372\020\276\224\271\336>[\251?>\233\2130>V%\331<\351\302`\274\341\247Q>=\025\275=\335\373\004>\206/\336\275\264\375\027\276~\006\311\275\247\342\207\276[T\346=\222\300&\275\213\336\037\275\366\271\264\275\214\022\361\274^\226\201\276\206\263\321<\342MT\276=\222\021\276\'\333\213\275\020\214\334\276r\204\361\274\010\'\256=\374\026\214\275\034\366\351\275+\241(\276\307\375\023>)Dt>\262d1\275X\314\312\276\206Bc>\014+^\276\222#\373<\276i\022\276}9\233>\257y\277>@0\'=\367\202\336\275\332q\021>\r\227\310\276\371.H\276\027\232\360\275\301\375\206\275\330a\030>emj<P\'\033>\262\273\242\275^1\034\276}\034\355\275\250Y\025>$\005\323=\266\327j>\214\303w\275\352\253e\276\377B\355:\226{\033>A\225\032\276K\251\212=\265;\023\276\223\335\257=,N\335\275W\225\177\276\364\345\026>\020\350s\276+\347-\276P\230\032=\360\240W>\271\310\226=\215\364\216\273\3219\207\275\273\275w\275\350\321\316\275{l\264\276\362\016\263=!s\202\276\345\326C\276\033\362P>\225\035\376\275/2\001>\014\r\240:\2238\267\275\277\222\211=\336\001Z=\353\274\344=\035\201\365\275\361\350Y\276\0053\206>\343\243\377\273\362\344o\276\204\310p<\204\312\006>\2038\002\276\322\025\003\276~Z(>\025\232\251\276\000\263\031>`\036\304=\313\035\347\275\340\341\234>of\034\276A\246\206\275\035\026\313\276\024H5=HD\303=Yc)>`\2345\274\343-\"\276\231\010*=\241\245\320\276\032\301\023>\033n/\275\205\301\210\276\246\314?=\224\344\030\276\354\270e\276Y0\316;8\206\202>\267\256\245<\302\017\201=\002\2631>\352I\343=(\342\010<,\216\346=\016\262\241\276(\000T>\363\216O\276\335\332\006>\3231D\276\"\313\331\276(\261\027=jk\r\276@z\314\275\223P\032\275X&\207;\354u\225\275\213\267r\275\272\017\277>\244\\>=M\325\214\276#\213\211\275#q\013>\226\216R=g\301\351\275X\342\226=\250\246\017\276\222\314\024>\311\035\302=D\322\321>[\262\n\275\347\364Y\275\031\332&\276z-,=C{B>\316\372\201\276|L\240\275\307\355*\275m\017\324<\227\321\213>F\006\357=C86\276\031\205;<FL\304\275\362e\264=\035\351\204\276\213v\017=\023\324\210>\215\022\246\274\022x\216\276\245\341\220>\031\001\212;\2102m>\370\373\330\274n\311P>7c\260\274\347\327\366=\227CM=\223\310f\276\004\001\021\276\331\010\311\274M$\211=\2575 >\204\036\t\276\r\304\264\275?\335C=\325(^\276\275\n^>\344\275\204\276Qw\373=H\007F=w\216\352=\232\347K\276re\001\277\'\372\364\275\036E-=e\0364\276)k;\275\323E\335>\264>\034\276\306\270\274\275\266\353K>\323\337[=\201-S>\016\277\207\276h\316\366=z&\337=\010S\274=\375\257\364=P\035\327<\333\177W>W8|>\317\244G\276+\343\206\273?\232\024>\030\247P<\246\323\364\275\242\255?>\325%\354=X\004\261=\371\003.;&\345\267<\017\020\035\276x\316\313>\220\250\267>w\004\271\275s\260\224\275\241\013M\276\221\212\224;\016\'\262\275\322\n\210>\307\263\361\275\327\252\305>\367\313\254=\276n\211\275\235\233\035\276\224il\276\366\016\254>X2\262\275\350\242v>\332\r\007>\312\223x>]\371\010>^e\334=K\t^=a&F>~\346\211\276ao\356\2757\236\010\276L\260\351=\272\350R\275/U|>\367\0059>\376Y\256<\026w\322=\235p\234\276^j\013=\337\240B>+E\034<\225\001\304\275\326\014\312=m\002\212\276x\306\004<\251\020\005\2768\272\313>_\341W>\'\367k=\246[\023\275x\362\006\276\200R\034>)\217/\276F_\262\276v\\\224\276W\002\354\275P@?\276\343-\307<S\\\262=M7Q>\\h\322<J\306c>DO\n\275\273b\200>H\214\306=Ep\271=\230S\224\276\251N\n>\277\263q>?X\021\275Z\214\025\276\204\236\302\274\022\275\207;\270\\*>\261\3442>\261V\254\276\025\375\017\276\305\267\373<\373\037U\276\214\232\356\274\252\366\216\276V\000\264>\315\374\367\275\323f\256>X\001\361=\212D\010>\003\307\243=:8^\275\320\242D>\265\023\016>K\236\231\275O\376V>\305H\213\271\242\361\257\273\342\376\000\276n\223\241>Tx\275\275o8N>B\205\344\274\261\210<\276-s >\353\376\373\273\003\213P\276\016\2003\273W\372\307=\210\327\001\276u\"\341\274\243\223.>j\365\320\275\036\227\250\275e\022|>_O\036\276\001\273\202=\301\252\022\276=AS=\273\300\336\276\356\215\025\276z\377\033\275\321\032\203\275\365*}>\025\033\335=7E\013\276\377nK>\371zg\274|@\346\275\226oU>\007\010\311=\013\222\210\276b\356\366=\205\026\224>\334\324\r;6Dx\275\351\334\321=7u\252\275\370\325\206=\301\315\225>5\356\345=M\005\303=21\230>\377C\023\276#*\217\275\205\312\322\275Y0,\276\344\027\n\276|\274\\\2765\010\034\276\007o\035\276`8A>U\204\204\276\276Pf\276\320\244\204\275\344\366\030<\307\322\210\274\316Y@<\243@\3229H\250\374\276\231\361\346\276\177\300\351\275\201\352\337\274\004\r\313\275)\220\260\275/\345R>v\363\177\274`\203->\315\376\223=\336m\013\276\322\243\332\275\343\345\347\273\002\265P\276\031\241a\275.\004\032\276\352ki\276:\317\356>\267\2539>\002\034p\275s\005\200>\237]\314\275\302L\240<\262\306\010>N~\177\2753OE\276\337\2675>\354\r\300=W\360\332\276\014\251\214>\026!0>`\007\254>\327\250\314\275D\244\024=!\r\005>\236u\314=\306\257b>\234\014\220>\347N\327\274\004\317\000\276>6\347\275\000\006\352\274R|\251=\226#.>9L\022<\256\227}\276\300\031\311\275{\017\000>\364\301)\275\237\247 \276\265\366)\273z1\204\275\232\251\215=&\311\200\276\300d\370\275Y\237\223\275\363\017\203\275\262\354\002=j\323A\276\010t\255>\340b\273\276\021\206T=F\335\220\276\21029=\007W\226\275b5\210:\234rl=\024\007\232\276\240\311\001\276\205\215\234\276m\300\276\275\353.e>n\t\257\2750\204N<\246\006\023>\232\021}>!\257\224=/\234\304<\007\220i\276\010`(;\032b\205=\207\020\203\275y\356\206\273\"\035\271\276\330\211\222\275\260/\256\274\307YE=.C\305\276N\310\245;\013\230\005\276|\353\023\276A\232\224\274<\335->)\021\203\276\345\272K\273iX\235<V&P>\001\366>=\231\363\313<b\333\'=\365\362\367\274y\204}\275!\3258>Sjr>\217\226\340>\r\360\216>\223\017\202>.\243\202\274\314y\340=\270J\345\275\230\243U\2751\304\376\275\036\347\200\275!\337\344=\260\273\313\275\357f\320>\361\202\005\277\244C\002>\341\035:\275c.\025\276\204\177X\275B\030\003>.?\215\274J}7>(\211?\275\006\'9\276[\230\006\276\255\026\t>\345\0169\276\370\\\352\274\370\355\033\276B\203q\275\211\305\341\275\270p\366<\276u\262\2764{{>\363\240\235\276\353\375\323>vKe=\034\022*\275\373\233\000=\330\346\276=B\225\"\2763^w>\016\365x=\026\353\240\275 \315\211=@\263%\276\274\016R\275\370\310\371\275\235h\r>\214B+>\nI\244\274v0\315>\364\373\356\275Y\004\237\274\303\346\214\274\030Z\224=HL\356=\266\223n\276\n\227\231=\241\321\002\272\276\232\230>MQ\220>\222;\326<\350\025\000\276\254\030\252\276\210B\231=\276\360X>\325\334>=\200\345\332:e\320\222\274\232\026\342\275\t.\177>\024\230v\275w\314\236\2750-*\276\375\'\201=\227\224\272<\003\353,\276)\325\310\275l\3300\275F\302X>\026\273\266\276n\220\342<\200\217\"=\2450\214\276\251\265\271\276\375\014\004\276_Y\003\276E\023\223\276\006\004\306\275\013\313\311;z\275e=T\\ =\274\035\211\276D\223\230=\326\245i\276\261aJ\276\231\3356>\354Zs>)\242\227\276\350\007\022=p\322\233\276\212\006\263>\332\317S\276\267X\375\275o\204R>\036K\330\274\243\215\277<C\217\200<\246L\266<=\256O=\304S?=\302\301\314\275\365u\221\273l\333m>\3428=>-\302l\276H\031\275=\266Z\220\275\232J\204\275\273\026\221\276\231\037\320\275sm\342\273\322\343\212\276\016\326\210>\265av\275KO\234=h\re>n\344\312=g\177\314=\036\377\337\275T\267\301\275\305\213\"\275\202-;\276p\267\342>z+\231>\371\306u\276\351^\370\274\005\310\205=\314K\021=p\316K>P=&>.;\260=[\r!\276\333\034\220\2757m\336=\3421p=\334\022\236<\265\257I>\237\273\246=\034\242m>\216\221)\276)\000e\276\003\226\244\275\327\r\262<B\222\246=\275PC\276\222\223\037=0\273\351=\243\033\303;\360\034\204>\335)\362\275\324k<<\213\200\033\275T\370\313>f\0320\274\333b\353=^3l>\036,(\276R\3424>\234n\337\275\336N\232\276\307\r\300>\3759\000\2768\220\177>r\3336>\252\217R>7{d\276\027\nq\275\000%G>K\212<>\267D\220;9w\240=\221\224f\275\326\242\036\274t[^\274#m\002=\205p\362=\017|\325=\356\263q\276\323\375\344\275\256\003\257>\247\345\016\276B\323+>m;L\275S\324B\275y\250\246<\342\022\013=\220@\031>\214\343\024\276jc;\275\326\243\330>\372*:;\275\277[>e\311\304\276{\364\260>\255 u>\254]\254\275\373\305\251\275A\263\205\275_z\023>u\264y>\235\'\007\276r\232\210=\013l\353\274\3214z>\312\242\260=v\277\014\276?Wn\274\222\361\222>~$\t=\214\330U> \233\005>\220\333\216\276\334\025O\276\240\327\004\276\205\207h\275\204\177^\276\304\032]>o\302G\276\215\252\205\275e \357\275\334E\020\275\215\314\026\275\314\344\377=m\321\027>o\'\257>4\207\243=\335-\275\276\256\342%\276\334I7=2\247\231>t\314\006<\367\303\362\275[\361\250>\323CH>\026A\246\275L\001\002>>J\245\275\266j\326\275\003%\'>[\256\332\275\326C\215\275\373\255\247>N\225\'>M\220(>\214\377\033>9\240X>>\207\334\274\346\337:\275\250\350\351=\215\017\315\276\016LB<\314U\255\275\353\317\273=\003\371\265=\017\207\324>\272\226\007\276\034s\204=\242nm\276\234\213L\275\010\267\270=C\021\003>\2737\021\274V\271G>\323\356]<\217\277C=LEn\275\343\007#>\3165\374<\271\241\000=w5\210\275\355I\263=\242\034\003>8 \305\276E@\354\275\224\tB>\0023K\276\210\343\277\275\n\366o\274t\372|=;To>\020\303\203>\221\234\t\275\367`N>;`\'=\345\376r\275\332\253\200\276\217\032\304\2762\365\203=\261C\316\276ty\331<<=\032\276\013zI\276%\266\367=r\374\204>\254\356\365=\347f\377\274\022\334\202>s\264\035>\250\362\005?\351>(>\242\206q\275v\263\016>\335K\337>\236JW\275\255\306\222\275\230{\376=oD\232\275MN\216\275V\245Y=\372s\363<z\3659\276F`1>*\004w=w\353\230>t\252[\273GAt>\340\031\002>\352\223\020\276\2218\275>++\033\276\375]\020\276*\317\331=T\377\037\276\366\250\257\276\302\226s<\373b\247\2743\276F\275\233\347\204>\3510\036>\256\316\013>\355\002\355\275\300\366\000\276y\314C\274\352\007f\275e\006\252\273}0\2659\321\371y=M\346\340;mtn=\365,\"\276\327\226\016\275\227\352\271=\026$:>z:\"\276\255Y\310<\201\342\036\275H\211\273\275u9\361\275H0\356\275\016\225\222\276\3402=>\017\007\304\276[k\345\274\263\030\355=\222\337\202=\321\227\300>\232|a\276(\315l\274@\323\031\276"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "[\360\212>\325Y\250\274%\376\206\275}\t\242=\274o\244=|p->\347\322)>N\320!<\366\035\235>\373\"c>=]z=\257\331\344=nZ\351\275w\242\000\276\031>\232\276,\344\223\276\314\354R\276\027\317\356=\302w\023>\234\336\307=\366\231t=O\226\374\275\245\270\317=\212\345\000\2756\322\263\276D\337}<o\344y>1\'\331\274[\036\264\276\361nk\276\0062\023>&\006e>\323=}\276SLg\276\"\024\344\274\016b\034>\233\021<=e@\213\276\010\\&>\004T\272=.\244\300\275`h\225\274\230\332l>\214\010\036\275\005\222\206\274\204\025)\275q\177\227\275\005\025\217>\022=\272\274\2322n=f&\017=\0028T>g\016\335=:p\202\276;\252\275>iT\201>\303\377\350\274\266\257\261\276Ax\335>\307\266\252=\261,\372=?\230\251\275\362\325<\2769\363\376=IOc\2761x1\276Zx\267\2756\250K\276\202\346\177>\353{\034>K7\224=\261\272\251\275\333\275\002>\264\035\302\275dB\311\275\233\255[\276\374`\353=\205\020!\2765r\035\276l\370\232= \324j>| \t\2756\3420>X\314/\276@\361s\275\214E\313>!6\306\2765\362\234=\271\215\340\275\302\342b\276\252\241\037\276\302\200\036\275\356E\264=3\010\022>r\207,\276\306\032\310=\303\363B\274\253\310@\276\325\275_\275\204M\021\276\022\030\332\276Q\375\243>^\212\'\275)Y\357\275\252;K\275C\336\253=,\335V\275\210\3745\276FL`\275\307b\233>K\214\007\276~\356\\=.N\201>\212\3040>\t\277\316=Hm\254=\027\014\333>\2474\213\275NX\362\274\266\255\237>\227B\337=\323\026\363=#\211\216\275\275\317\244=\342\247f>Z\026%\2758$s>\034J&\276\036\355\254\275<\332\r>\030a\342=\344Rh<\226\244\023\276\313hC=\020\354\324= \334x=\324Uz=R\247G\276\247D\235\276\021P,>v*\356\276I\334b\275\336@H;\375\247P<<1\013\276v\t6\275v[h>4\326^\276\254\363E=\204\256\035\276\005<C=\200\004N\276pC\222=\007\375Y>\332_\000\275)\374\303\275^\335\333<\200\245\204\276\003%\230\276\257\033<\276\216\363V\276\307\376j\2752s\221\275\021\244\307=\271\235Y\275\305<w\276\304\n\312\276\257\031X>Z\2023\276Z\355\"\276\021\336K>B7\224\274\200_\213\275\320\032b>P=\247\276\345\025\306\276ti\005\274\264\340^\274/Z\265\275jp\241\2763\275I=d\235H\276\246.\203>\346(T>\023\r\003>\017\006i>-\226\213\274\276\374G\276\204+Q\276\313\350\242=5\364\027\276S\213\017\275=^\322\275\212\227y>p\336\204\276\013F`\276s\351]=\\=\321=\375\177\310\275\340(\332=[\213E\275\372R\021\276){\366=\342@\t>\356\245\037>\223\223\257=\270s\220>\031\201E>*[*>\374\215\252>\0245\247=\252M\271=+\346\221>:rV=j\201.=P\265\014\276W\001\242\276\216\006^=82:<\366\003\215\275U\272\t>#\307\256=w\260\263\275p6\365>K\036u\275\300\376.>\347q\343=\2402\207>|\304->L>\277>\014fZ>e~\375\2752\221\216=\303=\267\276\205\016\311\275?\376\315\275\177lW>)\n\334\275^\305\025>\376\325\246;g%|\275\213\302\215>r\376\362\274\304\334\216\276J\000e>\005\014\225=t\212K>B\036K;\211\024\005=\254\216Q>\313\356P>\315\223\270\2757\021\317\275\331U\310<R\336\t\276\243%\357\275\rV\035\275.\024\203\276\026\024\243>b\r+\276f\331\245=Q\031\000\276\305~\360\275\023\251\244\274\350\374\023<.+\216\276\346\257S\275\370\027\205=\254o\307\275\331T}\275P\273\223>\273\315\026>^\376\037=\320\030\016\276\343\234\035>\0322\362=\353\323p<l\006\314\272\310\025\227=\367-\204\276\357To>r\261\351=\374\245\023>\tR\210=\357\177\215>p\304z>\201&\242\274\313\013\257\274\336\324\251>kGk=ht\217=\252\tj=\200J(>\3459\371=.C\302=~\221$\275\304\315&\276\326\362\303\275\021\\\321>\235\264\320\276\2607\034\276H\266\301=bW1\276\362\267\331=igE>\\\246\212<\363\026z\276R\025-\2768\332\234=\306h\230;c\254\206=4nF\275\007\220\030>\274\240 \276\274\362\206\276\307M\301=\230K\247\274\360MD\276\312\333\013\277\233\260\271>\345\303\326=e`\300>\322\340\236>\307\nc\276\2501\037\276\325\262c>\343\0369>I\202\264\276\364\003\311\275\210\n\306\274\021D\004>\306\203\026>\204_p\276\242F\206>mN\204;\237[\006>\240<\211=\341o\226\276\262P3=$\nP=\236\331X= \316(>\013\343d>\226`\n=\"Vm\276\331\307\037=\203\372\276=~\021\277\274\321\370\202\274\226R?>1\355\213\276^\272\247\275\262hz\276\340\212\335\2753\226\017\275~\\\242;d\255o\275\342\026\205=H\021\322\276\361\010\247=\033\351x>*\006E\276Tv\210\275\0033\232\275\361\321\251\276v\342\205>&\2626\276l\2168>\233Ad\275\347\375I\274\346\214\375\275@\270\037=\336\225\233\276*\237\270\274\223\206\036\276\303\227U=t\035\243\276\004<W>;hk>\035mg8\365\337\025\2760\366E=\027\n(\276\250v\014\276\212N=\275<\003\271\273D\200`>{\333L\276u\001\311>\226\200\261=\217\307#\276\007\340~=\031[S\275\t\t\214=\320\233\211=w\002<>\347N]=zg\320>\007\330\036\275+*\202\276\226`\000>U\016A\273$\033\353\274\234\371m\276\3344\013\276\252E\024=\024S\356=\"\277{>\224+?=!N\\\276\264\306\366\2759\210Z\276b\007\371>\210\376Q\276;\024j\275\347\306l\2762\201\206\275\271\240\177>\371\240\353\275\3202P\275\250\273\033>\260/\217=|\324\246\275PF8>5A\255=\262\0268=\260\275\024\274\305\202\366=\026\202{=\356\276\217>\022@\272\275V\264\264>{\177\226\276\001\234\234>\235$\213>\212\001w=\202DZ\276\001=]\276\325\247\263;\323\205\177>\031}G></\245<\334\3765\276\360wY\276\036\023\021\276\211\314\240=\016}\356\274\344^\333\275\331\353\204<\370\271\216=\344\363\366\275\276@\033\276\254*\203<\216!w>dU\275>C\3666=\307(X\276Y\264\251\274M1\223\27647\r>)\300\263\275\034 \210>\235\224p>\345\330\207\276\222\357\202; ,~\276\023\273B>\355\353@\275\034\006\023\275\321[\007\276:\346+>,\241\234>\3626$\275\226\323\272\275\362f\027>w~\010\276\0261)=\356\277z\276\ru\270\274\313\004\375=\306\310l\276\227\\\240>\217\316\232>3DS>\277\231\001>x\337y\276\362\241\313=U\240\254=1\210\264\276\337\252\246=&/\265\2757\346m=5\351+>=\030=>\271\033\324\274\216\016\201\276R\003\242\275\261\3713\275\204&\324\275\326\255\204\275\036\377\245>M\363\301\275}\024=\276Y\0243\275V\374Q\276\357-\203\274\222\337|>\254\255i><\035\364\275\006\213\222\273\033{]\274\243>\022\276\304\362\025\276\205R\216\276\350\344\333\274{\225\211\276\025\315\333=Oo\312\275\324TR>\3352\370=\337\244F\276#*\033\276:\361`\276\324\016\213\275\264\261\254\275M\307\300\276\"\2008\274\353\300-=\036j\210\276R+\275<o\266\350=(\365Z\275S\357\025>)\247\006\276~}\272\275\026-\024>\210nm>omj\276\311_\205\275\233\240\215\276\013\343@>\354\240\310=\325\326u\276\373\252E\276\352\006\205>\031^\320\275\364KG\276T\313\r;\222\203|>\0369\315=\247\035\261<\361\306\371=\375\037\354>M\020<>\263\273\034>\363l\370=k\253Z>`\033\314\275\261&\267>\371\373\002>]\325\">\020\362\315\276\336\016\204\276\221u\006\276x\314\254>\024\234\254\276\237\016\306<\376\370\023>\265V\'>|M\267>\254\210z\275\030p\231=J\264\222\275\361\225R<\342\035\321=\367\261\007\276n^\255>:#A=_iC>\"\013\372=k`\013\276>{\353\276\325\340m>f\006\323=\334\214^=\3259\375<#\003H=:\243$>^\342\205=\205\3042>\304\251\325<`\263\253=7S\326=\327\230\310\275\210\364\301=\245v\245=\224p0\276/KW<\306\223.\276Y\017(>\370j6=\177J\036>\257\305C>\314\230\237\275\331id>\337\271\030>p\310\315\275\323\222q=\342\276\316\275\264?#>g+F\276\216\3150\276\245\251O>z\267<\276\005\006\331=\247\275\312>\237oP>\205\326\270\275\010\247(>\300\232J=\004\235\377\275\001\200\331\275\335\271\177\274S\177\030<S\214|>\275yD<\240]\226\275}\037\334\275\031\276\201\276b\255\270=h\234\267>$\036\032\275|B\035\2768\307\332=\225h\315=\002\3239>\004]v==\313\206\274\262\301H<\252\233\250\274\2170\025\274\253>\r\276\313D#\276\254\013\323>\236(\304\275\233\216W\276\216\032\372<\204\0172=\n\003\264\275A\t7\275 \244\275>\272K\022>\231\253\302=`\177\003\275R\022E=~1\300\274\r;1>\037\360\370\275\247\216)>\213\361N\276Q\363==O\276\234>Y\037\326=o\350\031\275\377\313\205\276\306T\312\275}\224_\276as\230\276\327DJ\275~\252\306<p.\326=j\266\355\276\312\006`\276\001u\312>\314\037\346\27660\372=\374\212[\276\372\326\351\275\3753\232<\005S\325\275@%9>\262o\327\275\352\326\036\275\024j\244\275\351\310\010\2769\262\005>\206tb\275%&\027\276:\004P<\353!\340\2759\321\030\276w3\240=\276\273\242\275%a\215\276\307\0103\275\235\021\337\275\277\370\225>\036\021\016\277q\005\246;\361\007;\275;\t\346\275\235*\242=\235\225\235=\261a\026>y\272\027>7e\347\272\257\260;\276\351>\211>\205-\">G\342\324<\320R\025\276G\025\241\276\016\225\346\275\034hB> \330?\276\2459\302\276\'\204\007\275\342\234\333\275\307H\001>$[\316<\273>#>E\257*>\244Y\214>\225\243|\2767\367,\276\212\312\377\275\367;%\275\346\2535\276\263J\317=\231\'K>\361\333\241>\004\\\201\276\027\0100<\303\313\013>\037\231\353\2748k\221=\r@+=\3416Q\275?\306[\275?.\326\275\017\300#>\310|f\275\202P\372<0z\001=\276\032\214\276%\206\225<\220\004d\276\332\322\207\275\244L\235\276\243s\003>}\304\n=\\\">\274\357\325\345\275Iv\227=\246{I<?,\013\276\370\267\007\275n\222\305\275`\353\035>9\020\320\276\322w2>\371\001\316<\333]]>\325\r\003?S&\213=\010\035\227>\216\021O>Bx\"\275d\362\231\273O\375\005\276\'i;\276)`Q\276\032\333m=\245\001)\275S\"\374\276\212\024\233\276\226\255\355\275\357$\221>\251vS=\323\005y>l\004\205=\243z\310=0^\023>q\365o<\326bX\275\366p\325;n\220P=\017?\201\276C\020\232=\325\303\314\275\364\244y\273\331\372\200\276\271\3432\274\017\327\211\275[]\377=\220i>>l-\355=\024p\372\276\341|\036\276\362\204\222<\r\010\023=p\025\203=4o\237\276L\276\205<[\221\031>\204\020g\273\240\232\362;\340\277j>Ep0\276\025TG>\256\273Z=\364W8>\302c:\276o\353&>\342\027->m\177J\276\277\001\224\276\203\232\330=\203_h\276\376\003\210\276o\332\202>\213d\234;\016#\223\276M\341\016\276\270\342n<XQ\256;H\030\233\275\032Q6\276\242N\017>\010\024@>&\242\324=\274\177?<\013\357\355\275\221\3069\275\337!\016>\307\016/\275\3472k\276\337u\200>\254\t\273\275\016\r\304=\027\200\324\275q\370\005=\260N\t\276\\g\205>\326@c=J\244\305\276\316\035\327\2765\213\202\274\371\261\250>!\350.>\373N\347\275\014\271\271\275\301\270\325=%\210W\276\363t?>\010l,\275\035\271^>b\315\031\276iqE\276 5B=\331\021\007\276\241\257\250=I\307^=;z\252=2\342\333< \035\026>\022\236\233\276\311\031\230=\356S\021<\030\\\234=3./>\236\263\261\276S\306\354=J\244\022<~\371j\274-\234&\276\314\201G\275\322-\224\275\267\301\303\275G\013\263\276D,V\276w\377#=\370\313\321\275`c\230=\256B\237\276\306\322r>S\254\236>l\271\014\276\252o,>\036\222M>fO\003\276\355\355\224=\360\220\014>`m\231<\221\024\377\275e\026\224\276\221N\234=\377\351\005\276\325\3304>H8\226\276S\237&\276\247}\264\276\t4]=\265.\'>\315\212u>:E\\>\377\340\314\275\353\253P=\241\247%;\2510D>\t!\365=s\016\262\275kK8>\"\312\317=\200\0328\2768\271\020=\377\343\215\274\2074\333>\335o\241=\372\313\024\276\333\217N>\036\243\211\275\341\001\312=-\203\266\276\260\025\257\276X\"\206=\371Z\206\275G\006g=\241\323\354\275r\310Z=w\010\237\275To\273\274\331\316E\274B\205\007\276\261\351G>\241\265\313\275s\201A>:\2272\275\201\205B\275\022\254z=\021\363\212>\323\'\262>\355\360\240=\322\362\262\2757n\355\2753\243\233\274Fvr>\374\245|\275<\217\024<\026\277\277<\'r\032\276\004\252\371;\263\236\246>\034t\002\276\376\371\332\275\214\213Q>6\273\233=)\302\240\275\2165T>\206\2028>Oh\233=\276\036=\276+\212\217>5}9\275H\204\273=~L\230\274g\311\332\275\330\254\254\275\347\326t>\347\225\270\275\374\337`>l\320\314<\'TZ=\001\214\230=\213\016\202=\3460\244\276\260\376\264\276\326\223m>\355\203\340\273\250=H\275\305^\310\275\321\021}\276\314\261H\276\\+\003>p\207\035=q\2764=$\236 \276\237O\327=\327[\213\272\217\203\202>\246\350\240\276\'@\304>\001\232B>5\317\265>\232\361\276\275\361\270\341\274\337\303\274\275!\007\233\276G+\260\2767\027\247=u\034F>\276\251\216=\\h\347\276\220a\022\276e\240\223=\307uD\276\261\364\203\276\350\212\213=Mi\230=\200\331\265\275\224\3110\276R-\310\275Fv\251>_x-=\250\004\023\274\262\204\033\275\362\316/\276S\3440\275\253 \204\274\232\001\273;I\374\251>\220\332B\275\016E\227\276h\337\304\275\006\361\247<3\354J\276\207\340H\275S\325f=\252\357\276=\273n\204>\316\016\366=\374\336K\276E\254\357\274\357\203\201\276\025\035\025\275\375d\037=\373\270\226>!\321\240>~\360\201\276?K\004=/\332d=\002\300$\276\374C\014\276?\356\177=\206q\254\275\350\306f\275??9>\244\344\253=\267\030\276=~\355]\274}*\021>\214x*=\362;\327\275\202\030\212>\367\267.\274z7\'\276\266!\365\274}K\216=\313\326e>\2130\226>\3045\374>K\033\214\275\347\352\264\275\334\373\023\276\344\363\214\275\225%\220=\2472\235\276\317\034)>B\304b\276\317.I=\231\346y\276\276\371\241=\234\334\021\272$\210\323=\375\247\351\275\030\203H>\3557\335\275\023\251\253>\347\246.\275\007\232\232=oJ\340=:\355\232=\323\237V\276\321\231&\276.\333_=\201\351d\276e\323\237>x\303\275>\311\311\364\275\373Rl\276\203\2052\276Fj\206>\032\'$>!7\031\2745\356\277=q\305\332\275V\006P>\201\321\241\275\032a\201\276\204\002\255\274Zq\014\276\213(^>\214\026V\275\177\354\366\275\250\336\023>Y\237\322\275\3710\014<N\214\021>{\321\025=\220\250\207\275\264y\024\276\202^\030=\006\315\241\276\031\312s=\335r\254\275\264\323\007>\203kg>\343\373\004> \026\020<\033\177\305<\250\271\032>\246\343/\276z\t\017>\\\347\312=u\233e\276\251\217\264<\235\204\266;\364W\344=5V0\276\221n]\275Z\374\207\276\352\002/\276\316\204\245>e\3027>\363\202\323=\247Pq>\"\260\215\276\335\264\210<\266\205\254\276\245\2114\276\317I\r\274u\225\247<\245\215\231>0\177\\\276\321\230\327\275\214\207\262\275\367:\010>\0015\251\276th\022<u\324\324\275\336\205\360\272N\263\202>i/\213>\024zu=\237\005e\276\362]\032\276p\241\216=\017\333l>#\r\233\275\246C\024>\364\251\252\276\321\266\277>\313\373\250=q\3332=\350j\026\276*(\t\276<4\215\274\361\276\243:\\BR>ze\365=\305\2157\275\324\220M>\376\344t\276\026\n\316=Tb\253=kjX=\301\224\367=\026\002\310\275j\036y>>\230\003\276\3718\020>KH\304\274d\277!\273\301\264\026\276/2\035\276\330\307\'\275\2029\025\276N\224\243\275\017c,\276\350\177>\275j\'\310=s\0170\276\002;\243>\213\356\204\273\037z>>\374H4\275\\Y\205\275\376P\301\275\334\211l>ln\\\276\312\026c\276\010\243\305>J\2158\275\272\t\377=\253\217+>\014\025\\>\243\2371>\304\243\314=\032\361\352=\035\271\330<!\221\370=\331\222\343\274\200\354\211>\204c\234\276Ym\373\275\207\274\334\275\025wO>Ku\204\276\010\303\004\276L\374:\276\206\222V>\013\226:>g\272p\275\335\236\275=]J\304=\360\355V\276\364\201}\274./\321>}\005\332<f/6>\254\3628\2738V\267\275\\(\224>\365\256\267=\032\330B=\210\266\200\274\355\202c\276^|\302\275\260\001\330\274\tz\323\276\017\323e=q\327\277\275\351z\273=\032\376\250\274\261\245S\276\314\n3=/\347+\276+\255j\275Z\004\372=\334\307\215=^[\232>\276\200\247\275\024\335\220=\233\2223>F\301\350=\231\251\324<\350\344l>\355!\222\275\0377\343\275\326\227\235\274\377\031\026\276\037q\226=l\356\252=\307i\257\275[X->/3\236>\205\271\327\275\375\340\343;\211\305?>\343b\372\275\351\344I\276Zw\320\274\357\177<\274\36781\276\031\262.>;\224\177\276\220Tf\276\300\373~\276\312D\262=_{#\276\005\017C>\235B\221>%o\020\275z\227\023\273\214\210~\275\000\002\006\2765h2=&7\301\274\235\303\205\276\325\313\252\276\306\371\022\275/\323\010\272\220\361L\275+\234g\276\3042\355>\354,X\275:o]>\307t\003\275l\260\335\275\247P\232\276o\362\254\276g\311\006\2768\351\352\275\207M\244>\302\252z\273\361s\275\275\336\373\321\275\366\363\366=,gC\276A\334\275\2747$\264=\356\245\322=\377\347\261\276\244\241\177>pH]>b\t =^s\241>^>v</]I\276\226+r\274\211t\222=_R\014<\362D\016>d\236!\276\212:8\276\r\376#\276p\351\276>U\021\255\276\224\2227>\035\276D\275\"j\006\276%\026\325>\013\376\342=[6\265=\267D\275\273\315[\026=\n\334\374=BW\322\275\211\231\003>\265T\016\275\200c\347\275q\326\244=\275\210\006\276\314j\310\275\032\367\270;Y\363\237\275\031\306\032\276kC\241\275\236\202p\274Y^\026=\364\026\246=T\213\264\275\233\331\251\276\277W\363\274\233\007\227>4\\1\275\314\200@\276\367^\023>\261\365\351<\313._=\351\355\263\275\363\264\236>\355\002h\275Jk\235\275\300(\210>\3543>>L\255\304\276\234&%\275\341\256\014\276M^\201=\200\341\006\274\221\266j<x\301z\276\034\375\202>\273%G\275e3O\276\357\234J>u\030|\276P:6<\026nw>\257\233\321\274\2028\270\274M\261\035>z\014:>\200\257\375\274\235\376\350\275;\000\037\276\262/\\=\371/\237\276u<\n\275tya>\216d\361\273\214\314\033\276\n}\277\274\370\303\036\275\010\3726>\304\272\224<\340V>\276\004\247U=\337%<\276\3066\"\276\256\356\\\275r?\372\276\347%\207\276\221\217\363:d,\260\275\320X\261\275\\\341\312\275\314\235\217\275+W\010\276\001=\214=\376\341l=\001u\261\274\007\233`\276\261\310\210=\247\365L\276@\223\002>\246\274\305>H\365B\276\211\340\212<\230\346\241\275\360\2648\274\314\017\227=\245\373*\276\222\370\345>\313\267>>w\241\276>\303\220|\274\242\305\355=\241\272\267\276\235(\240=(\275\216=\303 <\275d\370\202\274\341G\345\275\231\255\022\275k`4\276\020$u>\340\230\252\276\201\373\307\273\237\210\230=7u\355:lw\334>\"\201p\276\211@\016>~\022\245\2754\3761\276k\261\224\276\342\001\263\273\227\336_>B/\376=\2350A\276\002,[\276/\242\236\275\314\237\033=R\216\232<f\203\016\276st\254\275\023r\251=>\256<\276\346\306^=\311B\004\276}Y\202>\317\024\004=\\\2007\276\244\377\203\276N\235B\276B\2549=\363\272 \276\373\025\256=\205Z\353>\003\352\000\276\000\361\006\276\264)5\276K\324\224=\247\344\246=\321\246\263\276}\345J<\372\312U>j\026\010\276\254j:>\271m\363=Q\325A\276\3507\222=\276#+\276\353a\035>c4\253=\245p7\276\262b{>\371J\265<\324V\323\276\256\320\345\276\230\257\307\275O\343+>H\202b\275me9\2747\005o\275Y\247\367\275\356w\346\274\264\246A>P\276\353=&I\354<\215\353+\275\314A\n>>\013\325\275\273\317\277\275\222\027\227>Y\326\023?\362u/<\324&\212>\200\"&=J\245\205>\017k\361=\255\220\246>\355\271\373=B\245u>\327\301\255;V1\206\275\276\270\340=^\361\r>-x\177\275)\202\240>+\003\253\275\214\333\021\276i`#\276\325e\376<+E?=\247J\276\274\023\307\374;\2016E\276\r\235\235=\230%\246>\265-\224>m\304\236=P\264\t\276P\232\344\275\214r\202\276\212\213\227>\257\217\364\273EJF\275\214\247\235;\312w\006\276\303Ya=u\273\254\276\270\277\342<\3332\250>t1-\276\207\324\257>\267\266\n>\365\372\037=\206\006\210=c\001\322>Q\002\202\275K\236I>\037\033r\276e\023A\275\341\333\232\275\251h\010<1 \321=\321\200\341=\261\301\035>\032\321`>\037\307\361\275g\250\020\276h2%\2768Nf>\3619:\276a\300\227\275\350\177\366<U\030n<\375\375g\275\231\303>>\351W\211>\232\374\234=;\271y\273[\3210\276\374Y\335\275\361\206\335\275\355\010A\2759\200q>\221\373\202<\254\217t<\311\036\001\276\3646\236=\252\374\372=\005\347t\276B\206\330\276\244=\270>\004\232\200>\323\350&\276\030\310G\276\323e\017\276\030fI>\027\265W\275\360\003\202<H\215\205\275b\326i<\231\001\271\275\227\250\t\276eA\013\276\243\016\222>s\341!\275\320\376\367\275\206M1>\354\270\200>\215f6\276\020s\217=\265L\317=/\n\027\276\204\341\341<K\356\204\276\211\246_\276\252\214\253\275\367=\352=\357>\004=\3369:=B\201r>\254\312\247>e\024[\274j_0\275\262\260\024\274\345\236\027=/\347\363<@\314\333>{u\265=k\361)>\375U>:\007\205X>~\217\206\275K\325\236\275\007\0367<\345\210\264\275\267P\r\275uA\350\275\177l\262\275\244\261)>\262Qj>C\024\231\276!\351\264=$~\n\277\200\222\314=w\254\312\275\031\220j>\346\331\035=B\373t\2757~!=\213\203\237\275\307\325\207>\233\307a=\342o\243\275M[\016>%\266\217\276\352n&=\241\303\346\275\265\270\315\274\177D\376\275\216\021\314\274\321\302\031\276\035\2675>BC\204\276\320\204B<B\330s\276\343W[=\264P\017<\326\365\006\276\374\201\000=~A\240=\0320\231=MRD\276\034TB\276,F_=\013\0009<\340\303a\275r\355\221\276\275\177W>k\252@\275\347\246\214\276\307a[>A8\343<A-\031>M\277\265>?|\236>\355\355\311\274\243\246H>\375\370J=\374\r\032\276P\031\236<\273\246`\276@\373\022>\326\252\233>\332\230\013\276\026\033\013\275\262#\035>n1\217\276\313\251\226>)\325\205=\347!i\276\200\006\277<\204\325_\275\3303\'\276@<a>\"&\005\276Q\344\332>O\342\321=K\252?\276 \315!>\210>\035<\n\234\020>\345]\206=\345j\212\275\030T\226\276\3524\033\276)L\210=\"[\324\275}\037H>\350\344\327\274Z\3579>\177X\206=~\340\033>;\261C\276n}#\276\300\241\270>\262\\ \276\374\300\r=@)\257<\0022\256\274\"t\344\275\254\233\205>_4\024>\264\212P<\000v\353\275&\341$\276\211,\370=}~\212\275\241\242\217>\333\213\241:]~o>8\256\333=0\260$>\005I\241=Z\254\013\277\306\272\257\273iiC\276l\272\257>\335\0208\276\"\205U\275\370\224R\276\224\007M\276\337D<>iE\000=.\252\n=\301\024\034>\202\351\363=\223 \305\275\336\247\001<\346p\263=2L(=lGY>)\302}=\322\240\356<n\360\273\276\261{U\274\236V\310\275\272\277\320;;\262\240\274\222\262\303=F%c>U\335\203\2753a\027\276h\353]>\313[\257<\310\034P<;\245\205=\370\265D;\314a=>e8\014>q\364\363=\365\207\304=\300;\027\276Q\376\256=U7\212\276\2447\203\276w\032\007=\334\224L\276L\r\231\276\021\3517\276\007\346\225\276\340\026;\275\272\220\031\274\225R\226<M>z<\3314\221\275\017\330|>\341\260\216\2759\347\n\2762\343\267<\001\nv\275\341\216+\276\377g(\276\004\n\245\276a\216\272\275\274\004\341\276\372\031\327\275\224P,?n\212Z\275?0\220\2762.\016\275{\246\363\275\311|y\274\303\256\221>\337\371\257\274r\n\276<n\013\364=\"\2653>C*\315=\203\227\222>\211\366\031\276\t\0279\276O\335\252=\'8\022>\004a0\272\327\020\373=E\034\255=\\98= \276\262\276AMk\276`&\356<\032\227\332\275\300a\005>8\314\032<\344\010\367=\347L\020\275\022\257\301\274v\226O\275\303\2224=\014\340\376\274<\361\202<`\267O\276\213\0309\275}{\357\275\363\311\243=\005dn<\333\364\214\276\3237u\276\353L\377<\334\375\261<t\277\326=\003\214\304<<\031]>m\275z>\r69>]\236\177\276\346L?\274\230p\217=\246|\247>\t| >b\007\206\275\346\212\330\275\027\352$\276\335\363\'>\264\232&>x%y<\361\333\306\275\222\253~>\356P\354=\243\n\271\274\306p\177\276\236!\336\275(\311\245\275\004*\205>\"8\030>\245\325\030>_\207\265;\307ws\275&\302r>\322$\271\274\270\247\253>KQ\314>\342\252\220>\236\315\r\275U\250\321=T\303\304\276P\234 =3[\007>\276`\275\276\r\r\216=s\n\233\274\3061d\274\024\361\333=X\363_\276\031h\233\273\330\375B\276\341D\246=-\'\231\276*\335\372=\372\002\004\276\022\317\003\276;lE\274\000Y\243\275i\202\227\275\244\274\200>\342\000\252=[ZL<ed7\274\303\222\332\275\360\340H>\032\351\t\276\223]T>\363\372\265\274\004\335\201=\320(\362=\324\275\273\275\0208\307=5\002/=\030\202\232\276^\221\320>\377\n\252\276}\033\237\276\240\240E\276\361\344\220\276a\331<>^I\271=\001?d\274S\345y>>\300\304\274\343t\273=g\306\203\276\rL\256\275<\345\267;\310jr\274\216\224c=\250\342\014=\246\356\003\275\262)\361=\304\234\005>\213\340\035\276S\2363\272\355\3747\275\230a8>;\365\323=\204NX>\376]\231=\300\352\350>P\240\324\275\372\275\373=\236\217\244\273J\322\262\276:\373\320\275\016\022)>\307#\277>g, =g\005a>b\365\214\275u\024\327\273\216\001<=\253Z\221>\034%\201\276\331\347\n>\010\220\036\274a\314\203=\tS\031\276\353\316$>\250\3176>\365\200\177>\340\202\006\276N\177\316\275$\274\001\275q\256\312<\272?\376;\331\373\212\276\243E\250>\342\267\216\275\340^M<\235\222\215>\200\235\207\276\265\343\231\274\364\017\002?\341\024\260=wc\311=L\272\254=\243.M\276\342\252H\276.\2016\276\330\263\004>L\310\216>\005\235\246\275N\375\321\274\r2R<\025w\277\275\001\337\t\2762#.>\362\022\272\275\271\207\345\275\006\271\030>\377\376\213=\310\305Z\275\344\217\220=\372\177U=\220s\037\276\305\277~\276Yz\036<\370\267\377=\213\\\355\2753\365\207>W\302k\274\324\246\236\275b\257\267\275S\020\t\276\207+\n=/y\305\275\372\234\207>O\033|\276\310\036:>\365`\224>R\240\220\2741\206\314\274\261\2373\276\213\311\314\2769\2707\276\004\311\035=\365\230\246\275\235\254t=v\255,\276\032\341\034\276\014\262j\276\027\246M>C\373\342\275l\333\336<\032\r{\276\300\225.\274\232$\227>\000\000\214<\251\r\342\275%\243p\276\300[m\276\375\013W>u,\352\274\243\206\262=\213\242\307=I\340\264>\356\217\377\275z\\A>\233\347\212<M\024\n\275F\363+\276(yT\275w/*\276\364o\225>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "*^\213\275\346w\031=-\264`\275\227\026\007>\341z\321\275\006\006\352<\022\006E\276P\027\324=\032\246\322\275\233\273\225>\342Y8\275\376\220-\272\217\225\247\276O\177j\275\251\307\201\2761\3401\276\206 \322\275>\322\262>\354\377\200\276Gq0<\017\3621\276\3047p\275\235\206C=\300\232H\276\342\257\031\276`\020\004\277\314\322\204<N/\005=[\220\316<\232W\r>\"^\205>\344\200w\275\275s\222\275\241\273$>\021\302\357\275\344L\255=>\301\027>#\266a>\246$\302\276W\372\275=-\023o\276\305\002\211=\307\254\255<\322\222\221\275\204\332Y>\304\220\363\275\365\002\250>\262h\257\276$\301\207\276\276;@\275$\321\022>\234\274\3409!\274\211=Sk\317\276\0067d=\341`\220\276\325\333\354=\240\003\031<\322\177v\276HJ]>\260\261G\275\343q \276,d3>\366\300>\275\277S\023\276\224\304\034\276\275]\356\275\213Z7\2765! >E\035\236=\357\214\224\274\'<\004>\326\220\252>\372)\020\276+3\275\275\247\031\203\276<w,>]J0\276s=,\276\306\334\245>P)\256:(A\256\276|*\265=8G\260\276\274u\031\275ec\233\275\335;\247>\355\352\303=y\347N\276?R\032>]\026\203=\255\342\203>7\327\264\275J`\310\276\317\000\354=\017\352,<_(r\276\301R\326>\245?\215\2752dt\275\026\224\362<\315\336F=\212\272\177\275\343\314$\276\370\277\240\275.\236\246\276\354cE>\262%\265\274\211Z\024=\257\245\271=\360^\346\275=\'\232\275D\241\207\275\035\242e\2765\363}\276+\223\225>U\235\007\276\303\261v=\223$#\275:ct\276\274YT>\365\033\307=\'\321\267=\204\036\030\276\272\233q\275!\253\374\275\030\206\343\275\246j@>\240=\222=\3438\021\276\251\325\236\275\264\302\006><\205\014>rw~>\374\002\207>\360\311\251\276A\037\314;\345\263\277\275\214c\"\2760\271\275=\232\264\246\276\323\177\201>\225\177\257\275\253)\210<V\315\232\275\251_G>6;I>bK\224>\034\224\272>\261\320\034\276\354T)\276]\245{>\374\377\277\274\':k>\341O\314=\235\026S>\304R\307=U\274\272=c\026\307=\202\235\241\274]+\202<\262u-\276/\333F>\245T%>b\201\352>\332\356\314\275a\006\241<A\227\340=$\354\200=\336\237\262<L\365\n\276h\316\232\275y\035\303\275\340@\233>\374\255q\276\t\036\350=u\345L\275\361\033m\276\231S8>Nm\377=-Cm<\224\314\204\275^\005\255>\334\272\222\276\240\317\225>QL\260=\222\201\037\276\260uC<\254\032\216>8\240\323>o\035\266\276\346D\n\275y/\031\276\"\360\217\274\202\300\261>\261+!\276J\221\232=\230\326N>\3107\327\275\006\001^>C)R\276\323\350*>M\255$>\032%\305\276\211Q\005>7\275G\275\034\365\255<\344\367\334\275N\356\004>\321\252\256=#\370\003>#n8\275x$\331\274$~\032=?\034\251\2759\315\356\274t\314 <]|q>vj\216=\004\237\266\275\322z\226>\352\350\002=0\3200\276\010s\210=\253\322\027\276*)\207<\331\021\200\2753vE>\203[\025\274\024\324\307\274\201G*\276\234\245\321>i\032!>\211\370\014\275\243\265\214>^\354\340\275;_\215\276Oa\242<Q\033\222<\205`I\276j\345X>\335y\352\274\004\311\213>\314\035\273=?\002c>\224F\177=\261\266\245<\3276\031=T\221\200\276\330\323\225>)V\006\276\023\\\277\276\023Ju>\020K;\276\267\221\217=\316V\252>(\216\030>\340\255\000\276w6\245<\234#\033=\333v\325=\234\304\247>\257%\325\275\332\r\200>><\305>!n\361=\270\337\037>\276\267\311\275\217}\025<h-\334=\0377\246>\373v\022\276\304\0264>.\207!\276\307(\014\276\010JM\275\212\244\372\274eZ\226\275i\021\323\274\2641\006\2762\216.</92=d\276\007\276B\317B>\257\266\255=\206\021?<\242\334\225>\2701I\275\347\007\340\275\016\341\001=\272c:=\026m\017\276@j`=|\014[>x7S\274k.\245\276\301 ->\362\215\331\275\202h\244=\271j\215\276\351M\226>\232\264\372\275\202\315\256>$\3161>?6:>\037yx>\3148\366\275\316\202\022\276\273\227p=oq#\276\313\266Z>X\"u>\026\335\347<\014g\205\276\343\345!\275\202Wn=I\024\024>\360;g>\331\316x\276\330.\222=9\233 \275\347\270\235>\210\n\304>C*\016\276<V\027>H\261/=WKn>ZL^=\3110\307=\270L\032>\245\202\324<\316\372q\276\247\265\235\276(\312\014\275Q\3069>\211\2245=\226\036\007>C\340A\276w\'\271=\307\373\372\275\360o\355\275E\200\223\276\267\332\361\275\220\r\337\274\014\315\021\275q\252\240\275\227\305\027>F\027\301=\313\272a\276\007U\212=\013;\371\275\233\363\307\276\301=\213\275\204\244g\276\316\263\312\272;\252Q\276\314\'\221\276\275\026\226=\247\365v=\026i\203=\333u(\275\252\230\177\274D\356\n>\242\037\202\276y\016\257\275/QJ=\207\233\345\275>\267\324\276\370Ci\276\n\030\242\2751\237\000>\214R\026\276\032~W\275\010?b>9\377\t>H%\247>\243GY\275\007\240\010=\275a\301\276\271\322\266=\220\317\014\276\376\000\226>\304\263/>\234\215$\276{s\024;\3113\265=\255\275\312\276\t\236F\276#0\002\275H?4\275\"\375o\276U\276\025=7\343\272\274L\301\221=\367\3613\276?\233\351\275\266\263\212>\310MT\275\2247+\276v\273\006<4\t\304=\365\376\325\275\337\302\177\273\251\245\261>\321\204@>,\256\316\276\357\3466\275\377\r\025>\340\203E>j\222\330\275w|H:\276\203O=\362\3746\2751\220H\276\202\000\306<\n\270\316\275P4(>\333^d=\354RD\275p\335\261\274\035\000\014>\335\346\034\275\234\365Q>\357\231)\275\307\313\251=p;\035\276\366\340\020\275\241\205\254>?\205j=\027\251)\276[\207V\275\326\231\260\276\205\200Q>K\003B\276m\013\036\275\032\344\251\276\214\302I>*\271\002<\355\376\010=\336\252\322=#E\340=\023\202\271<\'\377$\276\277w%\276\314w\024>\376 \001\276\367\0161\276\345\"\247\273\031>p\276q\252\312\274\031\n\203>i\315\006>\242\325\222\276p7\202<\210\241\216\275\320\370)\276\r\262>>\254}$>B\236\240\275\260o\302=\306\336\244\274\034Gz>\300\377\236=\344\036\031>\204\242\203\276\331:*>\003-\023=\243iQ=\254m#>\037%J>\315\277\355>Z\220\245\274\245a\340<B\016<>\312@\326\276\340\212\036\276\373\236M\276L\251\000\276\350Z\013;\316\005\252\276S\\\375=8\374S\275\207\025\242>\342\223i>\333\233\017>\245\316\366=\334\376!>N\316\003>\236\020\211=\036\234\301<\350\234/\276-\204=\276\037\251G>\350 \221=8\231\007=\251Jj\276\331\2273\276\355\200\346\275\264\376\323\276\307\371\305=pgw\275&\365\253\275\010!)>\335O\337\274\255s\271\274\"6\034>\303c\212>\276\235\226\275y\247\337\276\324i\324=Hx\367=\251\205~\275\206\226\225\276_\204\022=\323\367,>\310;v\276FCk\276\021\003\025\276\034\360\213<\226\265\335>J\277\250\275\240\342B=\265\031\266\275FqY<\026\224+>-\010\227>\035l?>dpH=%\016@>\033\242#>s\025X<\205b\007>U\201\253=\010Cx\275\247\037\216;L\371a\275\365\347\220\275\215\304\020\276\341\322\002\276$G\350<XE\217=^\224q\274:`H\276%\330|>mA\360=25\006>[\357\214\276(\037d=\211\244T\275\355P,\276t\367t\275\215\000s\276w\220x>\307?\022\276Y\267\212\276z\237A\274Q\272\006>] \367=\\\314\321=\226o`\275\311\272\326=\003m\020>Tt3>]\326\214\276|\202\272\275\204:d>\302_I>nw\020\277\323\262\254\275\262\313k\275\031m\n>i\240+\2767\247\016>\272;\334\275\371\252\224<b\350k\276]\232U>\2141w=\311\3654\2765(\207=\376\243\226\276@\311q>\346\327\356=\276\221x\275\003\320\265=xx\337\275\007\232\216\276\307B1\276\014I\014\276\247T\306>\276\252|=`?\245=I\353\373\272d\265\002\275\032\310_>\230l\025\276I\351d>\013\251\300\275\230t\364\276\366w\352\2758;\345\274}\264\006\276\240\315\022\276~\203\364\275\0254\206\276=Y\006\2766%\025>\021\013\013>Z\3649\276\277\231\256\276\\\243\001<\331b\246>\352l\315<g\330\323=\360! >\267\346\200=\036\356\207\271e?\031\275[h\"=Z\226\021>\321\205\322=\006\353\355<\300Z\213>\334rz=\346)\306\275O\007\212<\n\245\250\273\023.\256\276\373\222\022=@k\030\276\241\333\234\276\321\023\003>\351h{>\311|\033\275Jr\245=F\203\225\276\343a\215>?\245\361\275\235D\261\274\350\341\235\276F\240\355=R6\351\275rGO>V\242\005\275+g9\276\021X\020>\336\206\215\275a\265\003\276$\277=\276\221d\020\276\337\200\325;\351\203\211=VoK<\346\261t>\260\340\371=\026\247$>\316\271\320<o\322\220\275\022\333\034=\000Mg>U\343\210>g\2670\275-\271\254>\230\323\025\276z/\323=\214\233J>\237\212\203>\226N\207<\024\277\342=\021N\201\276\325+\217>\202C\220=\250]\330<\276\2706\2768\203\251<\355\275\n>\362\364X=!H(\276\357\363\316\275\360\365\234\276\210\007\216\276\242\327N=\253\203\325\273=dY=\324\276\317\274\205\2022>\362\313u\276\332\261\220\275\313\016(>>>M\276\354>,\276p\301\207\276v\270T\276:\021\020\276\236\364*=\274\371f\276N\224\000\2765W\313=p{f\276}\000\302=\224\220\243=\006\327p\275\313zM=e\234\032\276$\340\206\276\017$P>\224z\226<\240\327\303=E=x\276 \326:=\367i\235\276\210\002\014\276\022b9>\364~V\276$\247\341=(>\267=\345\270\204\276\343\354\230\275\357#\326=\232\031\325\274\227\032\264>\342=\020\276_W\016\275\360|\205\275M\237\026>\203\006\024\275\334p\374=mR\362\273\377\254c>n\032\'\276\201L4>\020\222\221=\375y\237\276\312\025`>\311\026\274\273\203:\265\276\207:\274=\223\311\366\275\212\001o=gS\232>C\020\274\275\315\201\247;k \035>\237\032o\275\254<\217>\357\247\203=js\277<\301n\247\275o\242\t>u\357\017\276\275t\340\275\306q\324\276A\210\357\2756SX\276\347\261\224>H/\036=2\223<=\321\270B\276\0328\330\275\377\022\212\275t\226\364=\337tj\276\376\270\343>\354>y\275&\220\372<7\243\214\276\275\304\002\276\250\310H=\220el:P\016\303=%Y\226>y\374\216=\\\033\204=X\2715>\366\247\366\274\327\370\220=\275O\374=\026\225f=u\360\343\274\203C\210>\352i`>el\273>\017\226}\276\321\317c\276\371\322\027>\323\273\023>\344\320\027\274\373\'b\275f/\204\275\347\032i\275\225X\t\2766\232\210< .,>\212\243\275\275\027\216\r\274\364D\333\275fGY\276\261D\365=>\206\027=S\347M>\254\016\337\275\265d;\276\017\375\230>\222\214\357\275\205\210\271=L\200\302=<z\217\276/&\354\275\245\020\330;V\367}\274?\244c\276\2125B\274\261\243\020\276e\373\253=\003\2731\275\317\353#\276\215\274\232\276L\013\335=G\307\032\276\204\002\205\276\250\370{>\016\234b==\013\033\276&\204\240\276S\234\217\275R&\314\275\360a1\274X3R>\201\303\373<\213\273[\276\224\333\361\275\245%\262>\025$L=\235A%=)\331a\275\332o@>\231&\214\275\315\215\270={\264\364=3M\262\274SH\027>{\'@\276I\320\336=?2\321\275\360L&\276\t\013\210>su\361\274\335 N>\327(\264\275\201\375\032\276\304h\240\276T_\325\275\207\257\364\275\305n\004\276\017\2179=\207\326\321=p2\317\276/\270\217\275gd\234<\200n\021\275\250?5=9\353\227=3\320\342\275\276\305\014=\235\312\304:\221\036\211=\027\374\262>c\317\341=Q\334i>\\\3677\276\010i\202\276\312\353\342\275\271\273\262=\007\005\232\276\307H\302\276\022\362e> \004\013\276\242\007$\276\377 \211>\003$\217\276\241\013\242=I\265\203\275\271\370\013\275\005&,>\325\006\244>Iv\'\275\210W\023>\236s\227>RZ\255\276\260<\215\275\"\010\026\276\226Qr\2758\330!\276\365\303>\276\252\223O\276s\340\035\274 \305\024\276\205\215\377\275#\212\317\275\227\314\032\276\342 \031>c\206R<\2630p\2750^\355\275_\035\355\276\245\307C<g\324\347\274\236\354\177\276&\204\246\276J!\240=\372\204[>|\301\340\274\315\354]\276\335tK\275 9\r\2766\202!\276d6\233=\320\331\262=\006\276\215=:\305X<\331\356o;\013\r;\276l\371\">\363\331\214\276\231RO>/FB\276\013\376\036\276\2539\\\276u\307)\276\210\373\244<\344\246\251\275j\320+>\273\252\257>\317\276\321=BS\020=J\372\353\275m\034>>\2632c\276\234\344\205>\325Cg\276\032\357p\275\021\262:\276\325G\013\2762wK=3\346;\276\321\010\306>%m\214\276\257\021z>#j\026\276sF\217=\203\237\031\276\346k\232=\311\255\257\275\276\220\264\274*\235\216\275j~\371\275_\020\355\275m!\262\276\234U\207\276\216\242\220=\324\244K>\td\243\276V\307\300\275\232\224\017>\037\222\204=\314_A>\266\335\222\275\344\362)>\331fC\276\234\240\004\276\336\337!>\002\302\023\275m\355\377\275c\2313=0\265\263\2752sN\276\202\234\241>\317H\005=\334}\254\276\202\276\254=\001\361\001\275[\003@\276\203\202\013\2759y7<i=\321\275\301\231\022>x\003)\276eq\214=$\370R\274\232\303\333\275\375\204\246=s\325\232\276CU\240\276\252U\273\276\213\374\201\275\344\351\230=\221\262\367=\335\026\\>\205\251\215\276\316\033M\276(\254<=IJ\n?\350\010\222\276|\207J\275\3203\212\275@\376\200\273|\325\303;\177+J>\244\033\221=\336i\261\276\223?4>\235\005\220=\206\362\335\2753v\342=\2736\241\275\203Q3>\252jM>\374\301\033\276>\341v>\037i\304\275t\275\224\275&A\225=\351\000\031=\354\363E>\244F\213<\321i\265\276-5p>\243\302\207\276\305\347\334\275\'\210\255=\342:9\274\237\202\221\276%\026\375\275b\017\213\276\365\004^>\331\321\027\275\262\340\231>\314\001\022\275V\261\001\276P\024\216\276\336\034\256=P\366@\276\024x\236>\301mP>\301\177\273\275\250\370\246<\350Q\243\274J\221\325\275\245\014\022\276c\000\226\276\265o\033\276]q\254\276,\255\332<\372\224\023=\316,\024<N\010~\276H\312\376\275\243\350\017\275\201\212\036\274o<\210\275`\003\322\2752\352\277\276\263[\253>\355\315\334;|\351\261>\021hX>\026\366\213\276o\303\262=\271\202a>s\n\301\275\344\275Q>G\213\202\276\244\t\252\276\2731!\275\2532*\276T\237\255=\013\310\003\276D\361\036;\364^\217\275.\342\033\275\334\033\276=\235V\366\275y<\234\276\201\301\227<\200\"\004>\023\031X\274\"\251u=\3540\021>\033\362\007\275R\363\313\275k\002->\261\273d>k\347\306=\304\030\200\275@\333B\276\350\215\003\276\270\344$>q\304\316=\314@\\>\263\335\334\275R\220A>W\310\177>O\245E\276\332\274\245\275\007\314\205>\362\0141=\rm\225\275p\\\225\275G\377\"\276*\213\034>\1777_\274\017\013\206=\261\276\310\275\323t\212\276\315\324\370\273V#\340=V&\026\276\321\355\207\276\311\210\377=\257\r\340=\321B9\276\036{\215\276\036\301\316\276\206u\376\276\356Pb>\235\232\037\276\347\214\351=\252K\276=2}L>U-\316=\036\213\210\275Y\032\224\275\367\340k\276\241m\231>\013\237\273=\363\374\325\276\224*A>\301q\026>\005\355\201\276jP\254=1\310\266=\004p\323=\352i\027>\371\320S\275+=\222>\020\275\010>9\322\207>\253\351u\276\375\273\223\276X\240|\273\217\256$\276\204E\254\275\356\021\010<F\207\304\275\200z\213>\026\253j\275\330\201\217>\352\003\302=\223\312\206>\323_y=\262\312K\276\203\303%>@\323\020=i\253\243>\316 \223=\245\350/\276\035\206\000\276v\365d>\265\2561>\0042K>\300\274\023>\2174\013>J%5>\025\246C=\320d\001\276\330l\360\275;\002\003>\007\200\264\2750\007@\276>;\215\275\'\033\212\276\016@\177\276\t\025\246<F\005\201\276\311\370`=9.\257\2763\307\210>\215k\026\276\374\'O\274\301\376\201\276Y\r\356<\257)\320\274 \246\340=\034\374$\2764m\215>\211\261y\275\276\275\363=\235\032\205=\213hR>\366\343\311>\374\330\226\2768\214\257\275\355\261\201\276\343\315\244=|n\376\274~S\230\275\0362D\276\023\311\370\275\032\226!>\2019\004\275\357\225y\274\375%!\276\022\326*\276\241\306\000\2766\")>04\022<ze\026\275\225,\276>q\251\270<#\335\022\275\246\247\263>=l2>\250\340O\275\275\000\252\274+\360g\275\254*e=/\227;\2769\371\014\276!!{\275\340\006\036<\346H\220\276R\253\343=$\362\013=O\243d\276jn3\276#\364\247\275b\356\232>)\215\256=\217@Y==\232\333\275\264\214\000=\223\217\311\276\007\346\206\276\272\r\210\276\360 \370=\356\031\036<\2005\034>\024\360Z=R\347k>\0243J\275\"\322\016;2\237\250\276A\237\233:\006\307->\370\020\215\276RA\306\275\264V7>S\323\351=\"\324l>\266\215\353\274\211\345\323=\307c\241=2\335\303\276g\224\036\275)T\232\276\242\032\030>\327\354`>\201\301\323\275\332\032\354=?\264{=oEW\276\247\225+\275J\022\030\276\265\257\000=\225\320\202=\235_|\275+\230\001\276C\000\315\274<W\303\276z\203B\27692\234=\242\022\t\276=\222\226\276\2416U>\022o!>{\327M\275{-\233\275\254\242\332>A[H\275Ir\240\274RJe=\351\352f>\223\206\265=:]\">\0267\237\275\010&\375=\362s\275\276\311\365\301\276\336\337\237=\363\025O>\310H\277=n\177\320=jm\021>\325\320@>\ra\212\276NX\274\276\276\"\t\274\247Z\363=\010\262\323\275:^\213=w\367\230\276F\276\021\276\251\016\026>\273\n\230\276\372v\305=?\252\010<\0109\253\274\231}\020>\345\355Z\276\177\227\201>+e\037>\377\337\214\276\270\220\026\275\372\253x>8\230\345\275\316I\343\276\323d<\276\032\201+>\324\330\247\274\337\220\255>\363j\013\275\267\352\324\274\345{\265\274\312\332\374\275\201\321\251>\013U\014\275F\372\253>\346\354Z\2760~\353=s\330G\276\324\"\010>>\324\n>\240\013o>S\200\014>\022\225\007?*\371\036\276Y\255\214\274\004^\206\275,\237\336={R\202\276\010x\277\274\254\230\213\275{\355\265\276\351p\033\276\302\247\247\275\202\344s\276\017\360\n>\366?\274\275d\320?=b\276\177\273\310\217\032>\010Zb\276\377\313\313\275\303K%\276\313y\327=5\357\372=\215\353\023=}\277\020=\260\302\331=d\274\340<\032xF\275\335\343\031\276pn\251\276\362\242V>j\035\206=\357V\321>\\/\346=tE\350=\346\301\017;\255\201K\276\016Dv>\210y\273\276.g<\276\"\350A\276\313\246\215>\025\2402>t[\340=\253,\021\276\354\254H>T0\025>\017VI\276!\366\344\273\030\351#=;\245\374=\237\212\276\275\232\333\323=\337\307\215>^\210B\276_\216w\275[K\212>\207\372\370=\237\273H=\"\355\026\276\240\036=>\331\342\237>\377\334P\275\331\331x>l@\217\276\367.\352<\025\357\334=VC\254=\320\304X>\324;1\276\315\366\225=s\223f>w\333\207=z\n\307\2759U\211=\200\337\237=nqA\276\347\217\034\276^\266\016\276_\220T\276\300(o\276\306Zt\2764\3747\275<\002\265\2745\022\025\276\235\271\235=K\303K>\332\210\254>\021\0160>\240\347\346>\330\237A=\370\241E=\276\330*>\016m\225<kT\324\276\367\266\215\274\025\311\324;\247\005\026\274\236\177W\276\025|\362\275\230<\342=q\311\253>\253\343\255\274q\323\014\275\246\177y\276\035\375\223<\245\211\264=\036\321\255\275\034\370\376\274\035\237\316\275;O\323=B\341F>\233k\206\275\352J\333:\024;g>\031?f>\235T6>\016\277\307\276\206\315\260\276\322\223B>\361\276\321;\032\022\374\275\370\343\362=\272\267\"\276\351^\251\275\260^B\276\210\263\370\274WE\247=\251tt>\375e\236>\006\265#=\027\016\200=\000\262\262>]\035\t\274\341\336\277\276\200>\014=\344\212L>\215\243\212\275;F\233>0\001\376=@\250\354\276\245\240\322<\342\251\315\275\236\0311>>*\302=>\366\237=\266\236V>\317J\n= \301p=[\262\354>HXl=\230\023\331\274\210x\373\275fO\267;.\260/\276:\004\031=<\010\260\275\25741\276\\\212C=\377\336\257\275\224\216\t\2762\240\035<\027\021<=\373\3173\276Q\267d=\"\373\003>B\205\305>\320\016X>\302\030\235\275\356\'\342<\033\266\236>\340((>\307\374a>\n\032G>;d\307=\316\374\014>\304?\203=\361\332\225=\277\033\034\276\030\214\326\276@\352\362\275\260)l>\344L>>\300\233\311\274\2149D\2759G\336<\203\0160=\n\037V\276\0040\016\276\3252I>\3021\305\274h\030\244<\005\010\351<\016\326\306=B\311w=\353\244\333<\032O\277\275\305\352\245=\215C\021=\312\355\261>\374\314\246=\025\005>\276\203\200r\276=\233f\275\304Y\"\275~\025\023\276\r\270\023>\246\322\377<\027\215d\275gu\315=Ju\004\274\327\356\300=C\367h>7\367\242\276\333\2038=\304\367\233\274\275\305\265\274)`\254>HX\234\276\361\3262\276\321\273\355>t\024\t>2\373c\276\244\334^\275\206\347#\275\r\332\031=\331\325\211\275N\004\241\274\330\376\021=\202x >.\2106\276\373\207\264\276\\\225\026>`\236\354=\251\264\260\276\352\333j\276\372_i\276\302cG\276O\004\274=\274J\223=\273\374\312=\333\231\177\275H\233\204<\273\355!=\302\276=\275\254K\007\276\241^\277>.\241\275\276~m\203>\322\r\256>\355+\"\275\322VS\276\202\037\206\275\026\355\211=\232\221~\275]\034\227>\240y$\276#\370\226\275#\313\311=j\335\256\2745\211\354\275p\256B>\234\007h\276\017_\026\275\377aK>A\314.\276aw\265;KP\031\276z\013b>R0\267=\207\202o\275\220\307\035\276;{\034\275\345)\221\276\244\224\372=\271\363\242\2752b\206\276\014\212\267\273\022\t\237\276\001^\001\276$#\332\274\023\235:\276\337,\240>;\332\206>U\357\035\276?\013\237<\001q\322=\377\331h>\034\345l\276\243c\263>s|\205>\005\317i\276\233\372\004>=\356\201\274\215\227\016>+\356\002\276,\324\375\274i\000\313=\234\263/>/ k>\353Y\344=B\375\204=#t\270=\272\277\235=\263\360\371<\362\325\247\275|\0333;0\033\270=0g\371=\357\230z\276\350a\236\274*:1>\251\202(>\247\215Z>\313\333\333<\257C\322\275\330(\343\276\273\026\270\275\226Y,=\301z\315\274\303\305\022\275Pxs>\020*\201>\277\221\240>\242\223\212\276a9\324\274`Hn\275>\336\206=\214\006[\276\311K@>\342\240X>\320\326\361=\263r?\275\206\352\267\276\376eM\275\271\275+\276v-\240\274U\224>\2766\320I\276\376\226\003\275\t\233g=^\010\006\273\230R\t\276\221\2567=\317\217\025>\277\272l<4/\207=\356\2212=e\2623\276\361u/>\311S\350<\364!\212>H\3303>3y\234>\231\262`\276\264\346\361\274\261\034\027>\r\005\023\276n[\r<\021\232\035\276vjr\276g\307^>\241\377\315=EEg\275,\352e\275\023WV\276.\302\274\276\232\324\205=\223\272\235\275K\365\302<=J\343\273\237\2534\276T\343\232=\353\004\2358,bA\271\331\023E\276!\365M\276]\020\252=h\2605>\263Q<\276\331\371]>r\3435>\246N^>\352\003\341\276\032\026\r=p@\201>\351\326\251=\005 \n\275}\347m\275\314\366\200=Yc\377\275[\006\201\276\254I\000\275nl\230\275\023\332\237>#\250\032>\262\276C>\006\237\t\276$|)\275:J\">\016\254->n\257\352<\000\264\352\274\010j\347=h\351\037\275XAO\276B\265Y>\313\031\014<Dw&\276\321\233\272=$\356t> ;\214\275\017\2630>l\374B\276\327\222\264\276\273K*\276S\031\322\274\341\3650\275\255G\351=\027D\213\275\315\212\274\274\243\342\320\275o}\034>\357f\310\275Xu\226\275\355\010f\276\007\367\245\274u0\304\274MFK\275c\\.\275\241F6\275\001\317\346=G<\n=\256\277\207\276}u\363:\326\324\036=T\221n\276\367\235\021\275\271\024\335\276\270\334\246<a{N>\260\311l>0\375\366<\026%\247\276\333\362D\276\215!a\276\351\210\"=\017\334_\276dV\r>%\215\303=c\377\t\275=\211\t\275\3757\311\2759\202\376=S\262\324=\271\035\231=Q\344\007\276$gS\276\226\n\212>\002\375\350\275\216\025\372=e\241\254=\233\n\302\275\302\213\211=\361\337\241\275\312: >\001FZ>_S\357\273\323\241?\276L9l\274\253\317\214>\205+\013>P\345\314>\377\365#\276ao\271\275\225I\341=\340T\345=\344m\324\275\024F\006\276\036\303y=\204G\311=\242\270\320>\027\322\321=_Z^\275#\306G\276R\355\t>\335\006\355>A\267\207=\034\266\363=\005\362\207=eP\035\276\337K\202\276f`I\276\363\024<>\276\357\256=\034g\032>%\n\255\274\325\264d\2764\323\210>\\\274\214=\215G\316=\002\351\207;\254\020_>\265\314F>?\262\355\275\242:\346\275\001\330\t\275\006h\375=\250+<=\270\327\334=\215\033\223=\325d\374<\3070\010\276.\230\224\274N\343\013\275\337O\017\276\355\030\276\2757\251\244>\235\254A\276\030\375\242>\202\027\357\275?\t\202=\315\326\256\273\317\341\341>u\353\006=\002c\215\276\240\231\237\274\261\037T>\332\220>\274\335\323v\275\030\204D=u`\263>d:,\276\244\246\220=\245\331\025\276J\375R>}?7\276\005\351\013\276f\310\246\276\017%\207\275\261\212\031\275U\273\024\275\320\376u:#\300\203>\334c#>1\024\205=\257\335\023\276\312y\205\275K\t\256\276\313\341\321;\351\024\374=\372\356\032\275\356\031Z>\305\352K>0\007r\275\r\316z>\343\r\224>^\245]\276\343\227n<\305\303\332\274\201N\207=2\305b\275\302\276\366\274}l\204\275F&e\276\363\037\202>\302\321\330\275\352{\327\274]a\035\276X\230\014>\275\277\257\275C\213\256\275\n\031r>\270\032\216\276dZ\017=\207h\000\276\336B >\036\004[\276\275\303\r\276\337\376W\276\204$\">\360\0378\276\305\217\324\274\246\004\231>\313\311\327\274\256\253O\274h\372\230\274\024\226\031\276\304k\257\276i\240\227=\341\202\315\275\242\201\351\276\377\377!>\032I6>[&E>\367\356%<-\001\361\275\204\2234>\221\350n\276k\210\017>\221\017,\276\223\267{=\204\376\004>rNx\276\245\210P\275\r F\276x\033\360\274@\254\200\275Jz~=\375D\232\276\340\247r\275(\034\033\276c\216\372\274\254\235\303=\305`!>#\023\000>\023\374\035\276\241^G\274z\006\334<%\314|=\207\317\001\275En\031=zm\363\276\331\363C=\250\355\020\275\272\377\315\2754\022\\\276+\206\014\274\0201\274>U\212r>\345\265\243>$s$\276\341(\232\276\370\207\021\276~\235\345=\255R\301\275M\361]=\274_(\276\307Ek>\3119\237>\312\206F\2759Bc\276;\025g>c\034\351<[\314k>\345=\330>K\244\271<\300J1:\3219\375<\255oY=\323\247U\276\316\035^=K\251\311\274\213\364\030>v\242\"\274i\340\022\275\257#c\275\205\003\200\275\371\361\004>=\345\222>!g\226\276Y\336o\275\214\212}>1\300!\276\271SC<\305Z)>\220\026`>\342\366\351\274}w\013>\"\227c\276v\252\225>\203\230\221=\260\307\211<\237i\357\275\343\207\000\275\326\222\336\275\206d]>\215e <(\310J\276\305\202\000\276v\275}\276\235J6\276+y\322\275*\227\334>=\255_=d\336A>\264@\216>!\275\220=\370\276\355\275\207\nB\276\252\212\326=:\2736\275n\345\260\275\006\014\255>\2569\'=\254\230\246=_z\223=\335\351\033>\346\313m\275k\341u>:\260\252>4\037G=\0321[>\367\032r=\227\344 >"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\217(\204>\223\265k>,\371\360\273\250o\373<\375\306Q=\017\021>\276H\314\205>k\272\374\275J\303w\276S\301\207\274\211c\253=c\026\003\276dB\370=V\320T\275\265.\032>2?\204\276(7\035>\274\225e=\300\027\207\274\315\244\331\2741*\377\275j\346\014>\214y\'>\240\255\377=\021\354O\276`\335i==\212\244\275Q\204\261>\371\007\204>*A\366=\305\223\313>\223jp\276"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\330\325\272:\302\366f:\201\002\332\271\235\346\220\272:\270\024:\330\307\037\272\272$d:\262f\306:\201\352\035\273\005\013_;\233\321\204:\325\035\335\272\271\246R:S\262=:\001\017\200:ji&9\346\332\006\273\336Gn:\345\275\211\273\240{\334:\206\265\347\271\331\246\317:\0335\221\272\263\"%;\275\343\2139\\\356\226:\007@-;`\270\335\271\213\234\243:p\351\177\2734?%;,\314\207:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\014\317\224\272\rI@\273\245TK\273\277\373\321:\306\331\211;msy:\264\364\274:\303C\211:\205(\0358y)\013;\204\304\210:\251\310\320\272\226\361\r;5n\305:\220\010\035;\037\272\276\272\241:\3739\335\333\251\272\307\355j:\032\301\027:\372\001\";\366\370\207\272\227R\235\272\257\234\010\273\313M\036\271\311\305)\272Yi\024\273\273\215\033;\225\260\315::\223!\272\344\246\3348\373\262\346:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.01
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.001
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.2
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_2101c655c52046feb1da211eb3ce2bd1/part"
          }
        }
      }
    }
    node {
      name: "save_2/StringJoin"
      op: "StringJoin"
      input: "save_2/Const"
      input: "save_2/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_2/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_2/ShardedFilename"
      op: "ShardedFilename"
      input: "save_2/StringJoin"
      input: "save_2/ShardedFilename/shard"
      input: "save_2/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/ShardedFilename"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/ShardedFilename"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_2/ShardedFilename"
      input: "^save_2/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_2/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_2/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_2/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Identity"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/MergeV2Checkpoints"
      input: "^save_2/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_shard"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_2/Const:0"
    save_tensor_name: "save_2/Identity:0"
    restore_op_name: "save_2/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
